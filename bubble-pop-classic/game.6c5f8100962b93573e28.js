(function() {
	var e = {
			16977: function() {
				HTMLCanvasElement.prototype.toBlob || Object.defineProperty(HTMLCanvasElement.prototype, "toBlob", {
					value: function(e, t, i) {
						for (var n = atob(this.toDataURL(t, i).split(",")[1]), a = n.length, s = a >> 2, o = new Uint8Array(a), r = new Uint32Array(o.buffer, 0, s), l = 0, c = 0; l < s; l++) r[l] = n.charCodeAt(c++) | n.charCodeAt(c++) << 8 | n.charCodeAt(c++) << 16 | n.charCodeAt(c++) << 24;
						for (var h = 3 & a; h--;) o[c] = n.charCodeAt(c++);
						e(new Blob([o], {
							type: t || "image/png"
						}))
					}
				})
			},
			61154: function(e, t, i) {
				"use strict";
				i.d(t, {
					J: function() {
						return g
					}
				});
				var n = i(33938),
					a = i(78580),
					s = i.n(a),
					o = i(59340),
					r = i.n(o),
					l = i(63109),
					c = i.n(l),
					h = i(71944),
					u = i(46352),
					d = i(39482),
					p = GameCore.Configs.Notification,
					m = p.GameTitle,
					f = p.GameImage,
					g = function() {
						function e() {}
						var t = e.prototype;
						return t.createAsync = function() {
							var e = (0, n.Z)(c().mark((function e(t) {
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, GameSDK.tournament.createAsync(t);
										case 2:
											return e.abrupt("return", e.sent);
										case 3:
										case "end":
											return e.stop()
									}
								}), e)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), t.shareAsync = function() {
							var e = (0, n.Z)(c().mark((function e(t) {
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, GameSDK.tournament.shareAsync(t);
										case 2:
										case "end":
											return e.stop()
									}
								}), e)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), t.joinAsync = function() {
							var e = (0, n.Z)(c().mark((function e(t) {
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, GameSDK.tournament.joinAsync(t);
										case 2:
											return e.abrupt("return", e.sent);
										case 3:
										case "end":
											return e.stop()
									}
								}), e)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), t.postScoreAsync = function() {
							var e = (0, n.Z)(c().mark((function e(t) {
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, GameSDK.tournament.postScoreAsync(t);
										case 2:
										case "end":
											return e.stop()
									}
								}), e)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), t.getTournamentsAsync = function() {
							var e = (0, n.Z)(c().mark((function e() {
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, GameSDK.tournament.getTournamentsAsync();
										case 2:
											return e.abrupt("return", e.sent);
										case 3:
										case "end":
											return e.stop()
									}
								}), e)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), e
					}(),
					v = function() {
						function e(e) {
							var t = this;
							this.facebook = void 0, this.isCalledSubscribeBot = !1, this.isCalledCreateShortcut = !1, this.requestTournamentAsync = function() {
								var e = (0, n.Z)(c().mark((function e(i) {
									var n;
									return c().wrap((function(e) {
										for (;;) switch (e.prev = e.next) {
											case 0:
												return e.prev = 0, e.next = 3, t.facebook.getTournamentAsync();
											case 3:
												return e.next = 5, t.facebook.tournament.shareAsync({
													score: i
												});
											case 5:
												e.next = 12;
												break;
											case 7:
												return e.prev = 7, e.t0 = e.catch(0), n = GameSDK.player.getName(), e.next = 12, t.facebook.tournament.createAsync({
													initialScore: i,
													config: {
														tournamentTitle: n + "'s Tournament"
													}
												});
											case 12:
											case "end":
												return e.stop()
										}
									}), e, null, [
										[0, 7]
									])
								})));
								return function(t) {
									return e.apply(this, arguments)
								}
							}(), this.facebook = e
						}
						var t = e.prototype;
						return t.switchAsync = function() {
							var e = (0, n.Z)(c().mark((function e(t) {
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, GameCore.Utils.Valid.isValueChangeAsync(window.__fbGameReady, !0);
										case 2:
											return e.next = 4, GameSDK.context.switchAsync(t);
										case 4:
										case "end":
											return e.stop()
									}
								}), e)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), t.chooseAsync = function() {
							var e = (0, n.Z)(c().mark((function e() {
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.prev = 0, e.next = 3, GameCore.Utils.Valid.isValueChangeAsync(window.__fbGameReady, !0);
										case 3:
											return e.next = 5, GameSDK.context.chooseAsync({
												filters: ["INCLUDE_EXISTING_CHALLENGES"],
												minSize: 2,
												maxSize: 2
											});
										case 5:
										case 15:
											return e.abrupt("return", GameSDK.context.getID());
										case 8:
											if (e.prev = 8, e.t0 = e.catch(0), !(e.t0 instanceof Object && GameCore.Utils.Object.hasOwn(e.t0, "code"))) {
												e.next = 16;
												break
											}
											e.t1 = e.t0.code, e.next = "USER_INPUT" === e.t1 ? 14 : "SAME_CONTEXT" === e.t1 ? 15 : 16;
											break;
										case 14:
											return e.abrupt("return", !1);
										case 16:
											return e.abrupt("return", null);
										case 17:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[0, 8]
								])
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), t.createAsync = function() {
							var e = (0, n.Z)(c().mark((function e(t) {
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.prev = 0, e.next = 3, GameCore.Utils.Valid.isValueChangeAsync(window.__fbGameReady, !0);
										case 3:
											return e.next = 5, GameSDK.context.createAsync("" + t);
										case 5:
										case 15:
											return e.abrupt("return", GameSDK.context.getID());
										case 8:
											if (e.prev = 8, e.t0 = e.catch(0), !(e.t0 instanceof Object && GameCore.Utils.Object.hasOwn(e.t0, "code"))) {
												e.next = 16;
												break
											}
											e.t1 = e.t0.code, e.next = "USER_INPUT" === e.t1 ? 14 : "SAME_CONTEXT" === e.t1 ? 15 : 16;
											break;
										case 14:
											return e.abrupt("return", !1);
										case 16:
											return e.abrupt("return", null);
										case 17:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[0, 8]
								])
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), t.getPlayerToken = function() {
							var e = (0, n.Z)(c().mark((function e() {
								var t;
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, GameSDK.player.getSignedPlayerInfoAsync();
										case 2:
											return t = e.sent, e.abrupt("return", t.getSignature());
										case 4:
										case "end":
											return e.stop()
									}
								}), e)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), t.getContextPlayers = function() {
							var e = (0, n.Z)(c().mark((function e(t) {
								var i, n;
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.prev = 0, e.next = 3, GameSDK.context.getPlayersAsync();
										case 3:
											return i = e.sent, n = [], i.forEach((function(e) {
												var i = e.getID();
												if (i !== t) {
													var a = e.getName();
													if (a) {
														var s = e.getPhoto();
														n.push(new u.Z(i, a, s).toObject())
													}
												}
											})), e.abrupt("return", GameCore.Utils.Array.unique(n));
										case 9:
											return e.prev = 9, e.t0 = e.catch(0), e.abrupt("return", []);
										case 13:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[0, 9]
								])
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), t.shareAsync = function() {
							var e = (0, n.Z)(c().mark((function e(t) {
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, GameSDK.shareAsync(t);
										case 2:
										case "end":
											return e.stop()
									}
								}), e)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), t.sendMessage = function() {
							var e = (0, n.Z)(c().mark((function e(t) {
								var i, n, a, s, o, r;
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return i = t.data, n = t.image, a = t.template, s = t.cta, o = t.text, r = {
												data: i,
												image: n,
												action: "CUSTOM",
												template: a,
												cta: s,
												text: o,
												strategy: "IMMEDIATE",
												notification: "PUSH"
											}, e.next = 4, GameSDK.updateAsync(r);
										case 4:
										case "end":
											return e.stop()
									}
								}), e)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), t.inviteAsync = function() {
							var e = (0, n.Z)(c().mark((function e(t) {
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, GameSDK.inviteAsync(t);
										case 2:
										case "end":
											return e.stop()
									}
								}), e)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), t.postSessionScoreAsync = function() {
							var e = (0, n.Z)(c().mark((function e(t) {
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, GameSDK.postSessionScoreAsync(t);
										case 2:
										case "end":
											return e.stop()
									}
								}), e)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), t.getRewardedVideoAsync = function() {
							var e = (0, n.Z)(c().mark((function e(t) {
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, GameSDK.getRewardedVideoAsync(t);
										case 2:
											return e.abrupt("return", e.sent);
										case 3:
										case "end":
											return e.stop()
									}
								}), e)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), t.getInterstitialAdAsync = function() {
							var e = (0, n.Z)(c().mark((function e(t) {
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, GameSDK.getInterstitialAdAsync(t);
										case 2:
											return e.abrupt("return", e.sent);
										case 3:
										case "end":
											return e.stop()
									}
								}), e)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), t.getContextID = function() {
							return GameSDK.context.getID()
						}, t.attemptToAddShortcut = function() {
							var e = (0, n.Z)(c().mark((function e() {
								var t, i, n, a, o, r;
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (!this.isCalledCreateShortcut) {
												e.next = 2;
												break
											}
											return e.abrupt("return", !1);
										case 2:
											if (e.prev = 2, "ANDROID" !== GameSDK.getPlatform()) {
												e.next = 6;
												break
											}
											return e.abrupt("return", !1);
										case 6:
											return e.next = 8, GameSDK.player.getDataAsync(["lastCallCreateShortcut"]);
										case 8:
											if (e.t0 = e.sent, e.t0) {
												e.next = 11;
												break
											}
											e.t0 = {};
										case 11:
											if (i = e.t0, !(n = i.lastCallCreateShortcut) || !(0, d.Gm)(+n)) {
												e.next = 15;
												break
											}
											return e.abrupt("return", !1);
										case 15:
											if (a = Date.now(), GameSDK.player.setDataAsync({
													lastCallCreateShortcut: a
												}), s()(t = GameSDK.getSupportedAPIs()).call(t, "canCreateShortcutAsync")) {
												e.next = 20;
												break
											}
											return e.abrupt("return", !1);
										case 20:
											return e.next = 22, GameSDK.canCreateShortcutAsync();
										case 22:
											if (!e.sent) {
												e.next = 40;
												break
											}
											return o = h._.SHORTCUT_CREATE, r = h._.SHORTCUT_CREATE_POPUP, this.isCalledCreateShortcut = !0, window.game.analytics.event(r), e.prev = 27, e.next = 30, GameCore.Utils.Valid.isValueChangeAsync(window.__fbGameReady, !0);
										case 30:
											return e.next = 32, GameSDK.createShortcutAsync();
										case 32:
											return window.game.analytics.event(o, {
												success: !0
											}), e.abrupt("return", !0);
										case 36:
											return e.prev = 36, e.t1 = e.catch(27), window.game.analytics.event(o, {
												success: !1
											}), e.abrupt("return", !1);
										case 40:
											return e.abrupt("return", !1);
										case 43:
											return e.prev = 43, e.t2 = e.catch(2), e.abrupt("return", !1);
										case 46:
										case "end":
											return e.stop()
									}
								}), e, this, [
									[2, 43],
									[27, 36]
								])
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), t.attemptToSubscribeBot = function() {
							var e = (0, n.Z)(c().mark((function e() {
								var t, i, n, a, o, r;
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (!this.isCalledSubscribeBot) {
												e.next = 2;
												break
											}
											return e.abrupt("return", !1);
										case 2:
											if (e.prev = 2, s()(t = GameSDK.getSupportedAPIs()).call(t, "player.canSubscribeBotAsync")) {
												e.next = 6;
												break
											}
											return e.abrupt("return", !1);
										case 6:
											return e.next = 8, GameSDK.player.canSubscribeBotAsync();
										case 8:
											if (!e.sent) {
												e.next = 37;
												break
											}
											return e.next = 12, GameSDK.player.getDataAsync(["lastCallSubscribeBot"]);
										case 12:
											if (e.t0 = e.sent, e.t0) {
												e.next = 15;
												break
											}
											e.t0 = {};
										case 15:
											if (i = e.t0, !(n = i.lastCallSubscribeBot) || !(0, d.Gm)(+n)) {
												e.next = 19;
												break
											}
											return e.abrupt("return", !1);
										case 19:
											return a = Date.now(), GameSDK.player.setDataAsync({
												lastCallSubscribeBot: a
											}), o = h._.BOT_SUBSCRIBE, r = h._.BOT_SUBSCRIBE_POPUP, this.isCalledSubscribeBot = !0, window.game.analytics.event(r), e.prev = 24, e.next = 27, GameCore.Utils.Valid.isValueChangeAsync(window.__fbGameReady, !0);
										case 27:
											return e.next = 29, GameSDK.player.subscribeBotAsync();
										case 29:
											return window.game.analytics.event(o, {
												success: !0
											}), e.abrupt("return", !0);
										case 33:
											return e.prev = 33, e.t1 = e.catch(24), window.game.analytics.event(o, {
												success: !1
											}), e.abrupt("return", !1);
										case 37:
											return e.abrupt("return", !1);
										case 40:
											return e.prev = 40, e.t2 = e.catch(2), e.abrupt("return", !1);
										case 43:
										case "end":
											return e.stop()
									}
								}), e, this, [
									[2, 40],
									[24, 33]
								])
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), t.matchPlayerAsync = function() {
							var e = (0, n.Z)(c().mark((function e(t, i, n) {
								var a;
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (e.prev = 0, s()(a = GameSDK.getSupportedAPIs()).call(a, "checkCanPlayerMatchAsync")) {
												e.next = 4;
												break
											}
											return e.abrupt("return", !1);
										case 4:
											return e.next = 6, GameSDK.checkCanPlayerMatchAsync();
										case 6:
											if (e.sent) {
												e.next = 9;
												break
											}
											return e.abrupt("return", !1);
										case 9:
											return e.next = 11, GameSDK.matchPlayerAsync(t, i, n);
										case 11:
											return e.abrupt("return", !0);
										case 14:
											return e.prev = 14, e.t0 = e.catch(0), e.abrupt("return", !1);
										case 17:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[0, 14]
								])
							})));
							return function(t, i, n) {
								return e.apply(this, arguments)
							}
						}(), t.setLoadingProgress = function(e) {
							GameSDK.setLoadingProgress(e)
						}, t.getLocale = function() {
							return GameSDK.getLocale() || "en"
						}, t.injectTournament = function() {
							var e = (0, n.Z)(c().mark((function e() {
								var t;
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (!GameCore.Configs.Tournament.UseMock) {
												e.next = 8;
												break
											}
											return e.next = 4, i.e(357).then(i.bind(i, 19357));
										case 4:
											t = e.sent.default, this.facebook.tournament = new t, e.next = 9;
											break;
										case 8:
											this.facebook.tournament = new g;
										case 9:
											this.facebook.getTournamentAsync = this.getTournamentAsync, this.facebook.requestTournamentAsync = this.requestTournamentAsync;
										case 11:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), t.getTournamentAsync = function() {
							var e = (0, n.Z)(c().mark((function e() {
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, GameSDK.getTournamentAsync();
										case 2:
											return e.abrupt("return", e.sent);
										case 3:
										case "end":
											return e.stop()
									}
								}), e)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), t.sendNotificationAsync = function() {
							var e = (0, n.Z)(c().mark((function e(t) {
								var i, n;
								return c().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.prev = 0, i = t.message, n = t.delayTime, e.next = 5, FBInstant.graphApi.requestAsync("/me/notifications", "POST", {
												message: r()({
													title: m,
													body: i,
													media_url: f
												}),
												schedule_interval: n
											});
										case 5:
											e.next = 10;
											break;
										case 7:
											e.prev = 7, e.t0 = e.catch(0);
										case 10:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[0, 7]
								])
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), e
					}();
				t.Z = v
			},
			47136: function(e, t, i) {
				"use strict";
				var n = i(66419),
					a = i.n(n),
					s = i(3649),
					o = i.n(s),
					r = function(e, t) {
						return void 0 === t && (t = 1), a()({
							length: Math.ceil(e.length / t)
						}, (function(i, n) {
							return o()(e).call(e, n * t, n * t + t)
						}))
					},
					l = i(20116),
					c = i.n(l),
					h = i(78580),
					u = i.n(h),
					d = function(e, t) {
						return c()(e).call(e, (function(e) {
							return !u()(t).call(t, e)
						}))
					},
					p = function(e) {
						for (var t = e.length - 1; t > 0; t--) {
							var i = Math.floor(Math.random() * (t + 1)),
								n = [e[i], e[t]];
							e[t] = n[0], e[i] = n[1]
						}
					},
					m = i(81643),
					f = i.n(m),
					g = function(e, t, i) {
						return f()(i).call(i, e) === t && null !== e && void 0 !== e
					},
					v = function(e) {
						return c()(e).call(e, g)
					},
					y = {
						chunk: r,
						difference: d,
						shuffle: p,
						unique: v
					},
					b = i(44494),
					E = i.n(b),
					T = i(42568),
					A = i.n(T),
					S = A()((function(e, t) {
						if ("string" === typeof e) {
							var i = t[e.toLowerCase()];
							if ("string" === typeof i) return i
						}
						return "?"
					})),
					_ = A()((function(e) {
						for (var t = null, i = [], n = /:([A-Z0-9?]+)/gm; null !== (t = n.exec(e));) i.push(t[1]);
						return i
					})),
					C = A()((function(e) {
						for (var t = null, i = [], n = /([0-9]+[A-Z?]{1}|[A-Z?]{1})/gm; null !== (t = n.exec(e));) {
							var a = t[0];
							if (a.length >= 2) {
								var s, r = a.length,
									l = o()(a).call(a, 0, r - 1),
									c = a[r - 1],
									h = E()(s = new Array(+l)).call(s, c);
								i.push.apply(i, h)
							} else i.push(a)
						}
						return i
					})),
					w = function(e, t) {
						var i = e,
							n = GameCore.Utils.Object.invert(t),
							a = {},
							s = 0,
							o = 0;
						return _(i).forEach((function(e) {
							s = 0, o++, a[o] || (a[o] = {}), C(e).forEach((function(e) {
								s++, a[o][s] = S(e, n)
							}))
						})), a
					},
					B = A()((function(e, t) {
						var i = t[e];
						return "string" === typeof i ? "" + i.toUpperCase() : "?"
					})),
					I = function e(t, i, n) {
						void 0 === n && (n = !1);
						var a = "";
						if (!GameCore.Utils.Valid.isObject(t)) return a;
						var s = "",
							r = 1;
						for (var l in t)
							if (GameCore.Utils.Object.hasOwn(t, l)) {
								var c = t[l];
								if (GameCore.Utils.Valid.isObject(c)) a += ":" + e(c, i, !0);
								else if (GameCore.Utils.Valid.isString(c)) {
									var h = B(c, i);
									h === s ? (r++, a = o()(a).call(a, 0, -2)) : r = 1, a += "" + r + h, s = h
								}
							} return a = a.replace(/1([A-Z])/g, "$1")
					},
					P = function(e) {
						try {
							return atob(e)
						} catch (t) {
							return ""
						}
					},
					x = {
						decodeMap: w,
						encodeMap: I,
						hashToString: P,
						stringToHash: function(e) {
							try {
								return btoa(e)
							} catch (t) {
								return ""
							}
						}
					},
					O = function(e) {
						try {
							return JSON.parse(e)
						} catch (t) {
							return null
						}
					},
					k = i(59340),
					R = i.n(k),
					M = function(e) {
						try {
							return R()(e, null, 0)
						} catch (t) {
							return ""
						}
					},
					L = function(e) {
						return O(M(e))
					},
					G = {
						clone: L,
						decode: O,
						encode: M
					},
					D = function(e) {
						var t = "object" === typeof e || "function" === typeof e,
							i = Array.isArray(e);
						return null !== e && t && !i
					},
					F = function(e) {
						return void 0 === e || null === e
					},
					N = function e(t) {
						if (!D(t)) return t;
						for (var i in t) {
							F(t[i]) && delete t[i];
							var n = t[i];
							D(n) && (t[i] = e(n))
						}
						return t
					},
					Z = function(e, t) {
						return Object.prototype.hasOwnProperty.call(e, t)
					},
					U = i(86902),
					j = i.n(U),
					Y = function(e) {
						var t = {};
						return j()(e).forEach((function(i) {
							if (Z(e, i)) {
								var n = e[i];
								"string" === typeof n && (t[n] = i)
							}
						})), t
					},
					W = function(e, t) {
						if (!Array.isArray(e)) return {};
						var i = {};
						return e.forEach((function(e) {
							if (Z(e, t)) {
								var n = e[t];
								"string" === typeof n && (i[n] = e)
							}
						})), i
					},
					K = {
						clear: N,
						hasOwn: Z,
						invert: Y,
						keyBy: W
					},
					H = function(e) {
						return e ? e[0].toUpperCase() + o()(e).call(e, 1) : e
					},
					z = function(e) {
						var t = 0;
						if (0 == e.length) return t;
						for (var i = 0; i < e.length; i++) {
							t = (t << 5) - t + e.charCodeAt(i), t &= t
						}
						return t
					},
					X = i(32366),
					V = i.n(X),
					J = function(e) {
						var t;
						return V()(t = j()(e)).call(t, (function(t, i) {
							var n = e[i];
							return void 0 !== n && t.push(i + "=" + n), t
						}), []).join("&")
					},
					q = function(e) {
						void 0 === e && (e = "0x");
						for (var t = e, i = 0; i < 6; i++) t += "0123456789ABCDEF" [Math.floor(16 * Math.random())];
						return t
					},
					Q = function(e, t) {
						var i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789*#%&!",
							n = "",
							a = e;
						void 0 != t && (a -= t.length, n += t);
						for (var s = 0; s < a; s++) {
							var o = Math.floor(Math.random() * i.length);
							n += i.charAt(o)
						}
						return n
					},
					$ = function(e) {
						return e.normalize("NFD").replace(/[\u0300-\u036f]/g, "").replace(/[\u0111\u0110]/g, (function(e) {
							return "\u0111" === e ? "d" : "D"
						}))
					},
					ee = i(77766),
					te = i.n(ee),
					ie = i(23054),
					ne = i.n(ie),
					ae = {
						capitalize: H,
						hashCode: z,
						params: J,
						toCamelCase: function(e) {
							var t = e.replace(/[-_\s.]+(.)?/g, (function(e, t) {
								return t ? t.toUpperCase() : ""
							}));
							return t.substr(0, 1).toLowerCase() + t.substr(1)
						},
						toUpperCamelCase: function(e) {
							var t = e.replace(/[-_\s.]+(.)?/g, (function(e, t) {
								return t ? t.toUpperCase() : ""
							}));
							return t.substr(0, 1).toUpperCase() + t.substr(1)
						},
						randomColor: q,
						random: Q,
						removeDiacritics: $,
						getShortName: function(e, t) {
							var i, n = e.split(" "),
								a = (n.length <= 1 ? te()(i = []).call(i, n) : [n[0], n.pop()]).join(" "),
								s = ne()(a).call(a, " ") || 0,
								o = s >= 0 ? s : t;
							return (a.length > t ? a.substring(0, o) : a).substring(0, t)
						}
					},
					se = function(e) {
						return "boolean" === typeof e
					},
					oe = function() {
						return false
					},
					re = function(e) {
						return "function" === typeof e
					},
					le = function(e) {
						return "number" === typeof e
					},
					ce = function(e) {
						var t;
						return f()(t = ["string", "number", "symbol"]).call(t, typeof e) > -1
					},
					he = function(e) {
						return "string" === typeof e
					},
					ue = i(93476),
					de = i.n(ue),
					pe = function(e, t, i) {
						var n = i || {},
							a = n.timeout,
							s = void 0 === a ? 1e3 : a,
							o = n.checkInterval,
							r = void 0 === o ? 100 : o;
						return new(de())((function(i) {
							var n = setInterval((function() {
								("function" === typeof e ? e() : e) === ("function" === typeof t ? t() : t) && (clearInterval(n), i(!0))
							}), r);
							s > 0 && setTimeout((function() {
								clearInterval(n), i(!1)
							}), s)
						}))
					},
					me = function(e) {
						if (f()(e).call(e, ".") < 0) return e;
						for (var t = e.length - 1; t >= 0; t--) {
							if ("." == e[t]) return e.substring(0, t);
							if ("0" != e[t]) return e.substring(0, t + 1)
						}
						return e
					},
					fe = function(e, t) {
						var i = t || {},
							n = i.fractionalDigits,
							a = void 0 === n ? 0 : n,
							s = i.startAbbreviate,
							o = void 0 === s ? 1e3 : s,
							r = i.abbreviateStep,
							l = void 0 === r ? 3 : r,
							c = i.maxLength,
							h = void 0 === c ? -1 : c,
							u = i.removeLastZero,
							d = void 0 === u || u,
							p = i.suffixes,
							m = void 0 === p ? ["", "k", "m", "b", "t", "q"] : p,
							f = -1 === h ? 99999999 : h;
						if (e >= o) {
							var g = Math.floor(e / Math.pow(10, l)),
								v = Math.floor((g.toString().length - 1) / l) + 1,
								y = (e / Math.pow(Math.pow(10, l), v)).toFixed(a),
								b = f - m[v].length,
								E = y.substring(0, b);
							return (d ? me(E) : E) + m[v]
						}
						var T = e.toFixed(a),
							A = f - m[0].length,
							S = T.substring(0, A);
						return d ? me(S) : S + m[0]
					},
					ge = {
						Array: y,
						Hash: x,
						Json: G,
						Object: K,
						String: ae,
						Valid: {
							isBoolean: se,
							isDebugger: oe,
							isFunction: re,
							isNumber: le,
							isObject: D,
							isPropertyKey: ce,
							isString: he,
							isValueChangeAsync: pe
						},
						Image: {
							drawCircle: function(e) {
								var t = e.scene,
									i = e.key,
									n = e.newKey,
									a = t.textures.get(i).getSourceImage();
								if (!a) return !1;
								var s = Math.min(a.width, a.height);
								n || t.textures.removeKey(i);
								var o = t.textures.createCanvas(n || i, s, s),
									r = o.context;
								return r.beginPath(), r.arc(s / 2, s / 2, s / 2, 0, 2 * Math.PI, !1), r.clip(), o.draw((a.width - s) / 2, (a.height - s) / 2, a), !0
							},
							drawBorder: function(e) {
								var t = e.scene,
									i = e.key,
									n = e.newKey,
									a = e.radius,
									s = e.width,
									o = e.height,
									r = t.textures.get(i).getSourceImage();
								if (!r) return !1;
								s || (s = r.width), o || (o = r.height), n || t.textures.removeKey(i);
								var l = t.textures.createCanvas(n || i, s, o),
									c = l.context,
									h = Math.min(s, o) / 100 * a / 2;
								return c.beginPath(), c.moveTo(0 + h, 0), c.lineTo(0 + s - h, 0), c.quadraticCurveTo(0 + s, 0, 0 + s, 0 + h), c.lineTo(0 + s, 0 + o - h), c.quadraticCurveTo(0 + s, 0 + o, 0 + s - h, 0 + o), c.lineTo(0 + h, 0 + o), c.quadraticCurveTo(0, 0 + o, 0, 0 + o - h), c.lineTo(0, 0 + h), c.quadraticCurveTo(0, 0, 0 + h, 0), c.closePath(), c.clip(), l.draw(0, 0, r), !0
							},
							drawOctagon: function(e) {
								var t = e.scene,
									i = e.key,
									n = e.newKey,
									a = e.octagon,
									s = t.textures.get(i).getSourceImage();
								if (!s) return !1;
								var o = Math.min(s.width, s.height);
								n || t.textures.removeKey(i);
								var r = t.textures.createCanvas(n || i, o, o),
									l = r.context,
									c = o * a,
									h = o - 2 * c;
								return l.beginPath(), l.moveTo(0 + c, 0), l.lineTo(0 + c + h, 0), l.lineTo(0 + o, 0 + c), l.lineTo(0 + o, 0 + c + h), l.lineTo(0 + c + h, 0 + o), l.lineTo(0 + c, 0 + o), l.lineTo(0, 0 + c + h), l.lineTo(0, 0 + c), l.lineTo(0 + c, 0), l.closePath(), l.clip(), r.draw(0, 0, s), r.draw((s.width - o) / 2, (s.height - o) / 2, s), !0
							}
						},
						Number: {
							toAbbreviatedString: fe,
							padStart: function(e, t, i) {
								void 0 === i && (i = "0");
								for (var n = e.toString(), a = n.length, s = 0; s < t - a; s++) n = i + n;
								return n
							},
							padEnd: function(e, t, i) {
								void 0 === i && (i = "0");
								for (var n = e.toString(), a = n.length, s = 0; s < t - a; s++) n += i;
								return n
							},
							numberWithCommas: function(e) {
								return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
							}
						},
						Device: {
							isDesktop: function() {
								var e = navigator.userAgent;
								return /Windows|Mac OS/i.test(e) && !/like Mac OS/.test(e)
							},
							isMobile: function() {
								var e = navigator.userAgent;
								return /Android|iP[ao]d|iPhone/i.test(e)
							},
							isAndroid: function() {
								return "ANDROID" === FBInstant.getPlatform()
							},
							isIOS: function() {
								return "IOS" === FBInstant.getPlatform()
							},
							isMobileWeb: function() {
								return "MOBILE_WEB" === FBInstant.getPlatform()
							},
							pixelRatio: function() {
								return Math.round(window.devicePixelRatio) || 1
							}
						}
					},
					ve = i(73126),
					ye = i(15177),
					be = {
						AppId: "783952692931685",
						ApiHost: "https://fbig-singleplay-apps.citigo.site",
						OtherHost: "https://fbig-leaderboards.citigo.site",
						PlayerDataStoreUsingApi: !1,
						Statistics: {
							ShowFPSInGame: !1
						},
						Ads: {
							Enabled: !0,
							Mockup: {
								Enable: !1
							},
							InterstitialAdOptions: {
								pID: "123",
								showWhenStartGame: !0,
								secondsFirstTime: 0,
								secondsBetweenAds: 0
							},
							RewardAdOptions: {
								pID: "456",
								secondsFirstTime: 0,
								secondsBetweenAds: 0
							}
						},
						ComebackBonus: {
							maxBonus: 7
						},
						LeadersBoard: {
							LeaderboardId: ""
						},
						Payment: {
							enable: !1,
							showMock: !1
						}
					},
					Ee = {
						ENV: "production",
						ApiHost: "https://fbig-singleplay-apps.citigo.site",
						OtherHost: "https://fbig-leaderboards.citigo.site",
						LeadersBoard: {
							Prefix: "leaderboards"
						},
						Debugger: {
							ShowConsole: !1,
							ShowInspector: !1,
							ShowMonitoring: !1
						},
						Statistics: {
							Enable: !1,
							ShowFPSInGame: !1,
							ShowMemoryInGame: !1
						},
						Tournament: {
							RequestTournamentBeforeInterstitialAd: !1
						},
						ProfilerPlugin: {
							Enable: !1
						}
					},
					Te = {
						ENV: "development",
						AppId: "866232217659780",
						ApiHost: "https://fbig-singleplay-apps-dev.sunstudio.io",
						OtherHost: "https://leaderboards-dev.sunstudio.io",
						PlayerDataStoreUsingApi: !0,
						Level: {
							url: "./assets/levels/",
							urlEditLevel: "./assets/levels/",
							alwaysLoadNew: !1
						},
						Notification: {
							Enable: !1,
							ApiUrl: "https://notifications.sunstudio.io",
							GameTitle: "Bubble Pop Classic",
							GameImage: "https://static-tt.citigo.site/bubble_pop_classic.jpg"
						},
						PlayerMock: {
							id: "",
							signature: ""
						},
						OpponentMock: {
							id: "",
							signature: ""
						},
						MatchMockFailRate: 5,
						Gameplay: {
							AwardCoins: 50,
							MockScoreDifficult: 1,
							MaxRescueCount: 3,
							RescueGamePopupTimeout: 15,
							ForceNewUser: !1,
							AlwayShowBestScore: !1,
							ItemConfig: {
								giftTime: 3e5
							},
							RescueBulletByAd: [5, 7, 9],
							RescueByCoin: [{
								coin: 75,
								bullet: 5
							}, {
								coin: 125,
								bullet: 7
							}, {
								coin: 200,
								bullet: 9
							}],
							ItemPrice: {
								BombBulletItem: {
									price: 60,
									amount: 1
								},
								ElectricBulletBallItem: {
									price: 70,
									amount: 1
								},
								RainbowBulletBallItem: {
									price: 50,
									amount: 1
								},
								RocketBulletItem: {
									price: 80,
									amount: 1
								}
							},
							SkipStartAnimation: !1,
							MaxCombo: 30
						},
						GameOver: {
							ShowClock: !1
						},
						PlayerDataStore: "playerData_BubblePopClassic",
						Game: {
							AutoResize: !0,
							PortraitRatio: 375 / 667,
							PortraitWidth: 375,
							PortraitHeight: 667,
							LandscapeRatio: 375 / 667,
							LandscapeWidth: 375,
							LandscapeHeight: 667,
							ForcePixelRatio: 0,
							DisableLandscape: !1,
							FullSizeOnLandscape: !1
						},
						Debugger: {
							ShowInspector: !1,
							ShowMonitoring: !1,
							ShowConsole: !1,
							Expanded: !0,
							AutoRefresh: !0,
							InspectorAutoUpdate: !0,
							Opacity: .8
						},
						Statistics: {
							Enable: !1,
							DisplayMode: 0,
							FPS: !0,
							MS: !0,
							MB: !0,
							Opacity: .8,
							ShowFPSInGame: !0,
							ShowMemoryInGame: !1
						},
						ParticleEditor: {
							Enable: !1,
							Opacity: .8,
							Expanded: !0
						},
						ProfilerPlugin: {
							Enable: !1
						},
						Match: {
							ContinueSingleMatchEnabled: !1,
							SingleMatchStore: "singleMatch",
							LocalSingleMatchDefault: {
								_id: "12345678890",
								status: "open",
								playerId: "",
								score: 0,
								level: 1,
								startedAt: 0,
								updateAt: 0,
								finishAt: 0,
								data: {}
							}
						},
						DailyRewards: {
							MaxDays: 7,
							MockTime: 0,
							CheckInterrupt: !0
						},
						DailyTasks: {
							Duration: 86400
						},
						Tournament: {
							UseMock: !1,
							UseGlobalTournament: !1,
							RequestTournamentBeforeInterstitialAd: !1,
							GlobalTournaments: [],
							ForcePlay: !1,
							UseLeaderboard: !1,
							TournamentContextIds: []
						},
						Tutorial: {
							ForceUseTutorial: !1
						},
						LeadersBoard: {
							Name: null,
							UseMock: !1,
							Prefix: "leaderboards",
							LeaderboardId: "",
							Limit: 50
						},
						LanguageSupport: {
							en: "en"
						},
						EnableEffectSceneTransition: !1,
						DefaultTheme: "default",
						ThemeSupport: {
							default: "default"
						},
						Ads: {
							Enabled: !0,
							CalculateSafeAreaBottom: !0,
							EnableRewardVideoResetInterstitial: !1,
							Mockup: {
								Enable: !1,
								ErrorRate: 5,
								GiphyApiKey: ""
							},
							InterstitialAdOptions: {
								pID: "",
								showWhenStartGame: !0,
								secondsFirstTime: 0,
								secondsBetweenAds: 0
							},
							MinLevelToShow: 2,
							RewardAdOptions: {
								pID: "",
								secondsFirstTime: 0,
								secondsBetweenAds: 0
							},
							BannerAdOptions: [{
								placementId: "desktop-right",
								position: "right",
								bannerWidth: 120,
								bannerHeight: 600,
								secondsReload: 60,
								platform: "DESKTOP"
							}, {
								placementId: "mobile-bottom",
								position: "bottom",
								bannerHeight: 50,
								secondsReload: 60,
								platform: "MOBILE"
							}]
						},
						Network: {
							MaximumRequest: 6,
							Timeout: 15e3,
							Retries: 3
						},
						Analytics: {
							GoogleAnalytics: {
								consoleLog: !1
							},
							FacebookAnalytics: {
								prefix: "fba",
								consoleLog: !1
							}
						},
						Sentry: {
							errorCodes: {
								accepted: [],
								ignored: ["USER_INPUT", "NETWORK_FAILURE", "TOURNAMENT_NOT_FOUND", "INVALID_OPERATION", "CLIENT_UNSUPPORTED_OPERATION"]
							},
							errorMessages: {
								accepted: [],
								ignored: ["Load image failed", "Invalid context ID", "Failed to fetch"]
							}
						},
						FillBulletItem: {
							DropObject: 20,
							Combo: 7
						},
						LevelScroller: {
							limitLevelButtonInContainer: 12
						},
						DailySpin: {
							forceSpin: !1
						},
						ComebackBonus: {
							maxBonus: 7,
							mockTimeOff: 0
						},
						Payment: {
							enable: !1,
							showMock: !1,
							mockProducts: [],
							nonConsumableProductID: []
						},
						Rollbar: {
							Enable: !1,
							UseMockup: !1,
							FilterError: {
								Codes: {
									accepted: [],
									ignored: ["USER_INPUT", "NETWORK_FAILURE"]
								},
								Messages: {
									accepted: [],
									ignored: ["Load image failed", "Request failed to be processed"]
								}
							},
							ListPlayerDevIds: []
						},
						Performance: {
							Enable: !1,
							trackingSceneKeys: ["DASHBOARD_SCENE", "GAME_SCENE"],
							minQuality: 1,
							maxQuality: 2,
							fpsThreshold: 48,
							checkInterval: 2e3,
							qualityAdjustStep: .1,
							autoUpgradeQuality: !0,
							onlyUpdateWhenSwitchScene: !0
						},
						SpecialEvent: {
							Enable: !0,
							Type: "BlackFriday",
							Title: "Black Friday",
							WatchAdsTimes: 1,
							StartAt: new Date(2022, 10, 20).getTime(),
							FinishAt: new Date(2022, 10, 30).getTime(),
							Treasure: {
								BombBulletItem: 1,
								RainbowBulletBallItem: 1,
								ElectricBulletBallItem: 1,
								RocketBulletItem: 1,
								Coin: 100
							},
							bonusDurationMins: 120,
							MinLevelToShow: 1
						}
					};
				Te = (0, ye.TS)((0, ve.Z)({}, Te), Ee);
				var Ae = Te = (0, ye.TS)((0, ve.Z)({}, Te), be),
					Se = function(e) {
						return function(t) {
							try {
								var i = window.game,
									n = t.module;
								if (i.scene.getScenes(!0)[0].scene.key !== e) return;
								var a = n.default;
								i.scene.remove(e), i.scene.add(e, a, !0), i.scene.bringToTop(i.globalScene)
							} catch (o) {
								var s;
								null == (s = void 0) || s.invalidate()
							}
						}
					},
					_e = i(37804),
					Ce = i.n(_e),
					we = i(62734),
					Be = i.n(we),
					Ie = i(9705),
					Pe = i.n(Ie),
					xe = i(2938),
					Oe = !1,
					ke = function e(t, i, n) {
						i.forEach((function(i) {
							if (i.name) {
								var a = null;
								if (a = n ? n.getByName(i.name) : t.children.getByName(i.name)) {
									if ("Container" === i.type) {
										var s = a,
											o = i.getAll();
										if (e(t, o, s), !s.hotContainer) return
									}
									var r = Ce()(i),
										l = ["_events", "_sysEvents", "input", "localTransform", "list", "displayList"],
										h = c()(r).call(r, (function(e) {
											if ("string" !== typeof e) return !1;
											if (f()(l).call(l, e) >= 0) return !1;
											if (!a) return !1;
											var t = Be()(i, e);
											return !(t instanceof Function) && (!(t instanceof Phaser.Scene) && (!(t instanceof Phaser.GameObjects.Group) && (!(t instanceof Phaser.GameObjects.GameObject) && t === Be()(a, e))))
										}));
									h.length < 1 || h.forEach((function(e) {
										if (a) {
											var t = Be()(i, e);
											Be()(a, e), Pe()(a, e, t)
										}
									}))
								}
							}
						}))
					},
					Re = {
						Configs: Ae,
						Utils: ge,
						LiveUpdate: {
							Scene: Se,
							SceneObjects: function(e, t) {
								return void 0 === t && (t = Oe),
									function(i) {
										try {
											var n = window.game,
												a = i.module,
												s = n.scene.getScenes(!0)[0];
											if (s.scene.key !== e) return;
											Oe = t;
											var o = a.default,
												r = e + "-draft";
											n.scene.remove(r);
											var l = n.scene.add(r, o);
											s = n.scene.getScene(e), l.events.once(Phaser.Scenes.Events.RENDER, (0, xe.D)((function() {
												var e = l.children.getAll();
												ke(s, e), n.scene.remove(r)
											})), 50), n.scene.run(r), n.scene.bringToTop(s), n.scene.bringToTop(n.globalScene)
										} catch (c) {}
									}
							}
						}
					};
				window.GameCore = Re
			},
			1998: function(e, t, i) {
				"use strict";
				var n = i(33938),
					a = i(41819),
					s = i(63109),
					o = i.n(s),
					r = i(53891),
					l = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).instance = void 0, n.placementId = void 0, n.instance = null, n.placementId = i, n
						}(0, a.Z)(t, e), t.setGame = function(e) {
							self.game = e
						};
						var i = t.prototype;
						return i.loadAsync = function() {
							var e = (0, n.Z)(o().mark((function e() {
								return o().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (this.status === GameCore.Ads.Status.IDLE) {
												e.next = 2;
												break
											}
											return e.abrupt("return");
										case 2:
											return e.prev = 2, this.status = GameCore.Ads.Status.LOADING, e.next = 6, this.createInstanceByType(this.type);
										case 6:
											if (this.instance = e.sent, null !== this.instance) {
												e.next = 9;
												break
											}
											throw new GameCore.Ads.AdError("AD_INSTANCE_NOT_INITIATED", "Ad instance didn't initiated.");
										case 9:
											return e.next = 11, this.instance.loadAsync();
										case 11:
											this.status = GameCore.Ads.Status.FILLED, e.next = 19;
											break;
										case 14:
											throw e.prev = 14, e.t0 = e.catch(2), this.status = GameCore.Ads.Status.IDLE, this.instance = null, e.t0;
										case 19:
										case "end":
											return e.stop()
									}
								}), e, this, [
									[2, 14]
								])
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.showAsync = function() {
							var e = (0, n.Z)(o().mark((function e() {
								var t, i;
								return o().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (e.prev = 0, this.status === GameCore.Ads.Status.FILLED) {
												e.next = 3;
												break
											}
											throw new GameCore.Ads.AdError("AD_NOT_FILLED", "Ads no fill.");
										case 3:
											if (this.status = GameCore.Ads.Status.SHOWING, null !== this.instance) {
												e.next = 6;
												break
											}
											throw new GameCore.Ads.AdError("AD_INSTANCE_NOT_INITIATED", "Ad instance didn't initiated.");
										case 6:
											return t = this.getSceneName(), this.type === GameCore.Ads.Types.PRE_ROLL && self.game.analytics.showInterstitialAd(t), this.type === GameCore.Ads.Types.MID_ROLL && self.game.analytics.showInterstitialAd(t), this.type === GameCore.Ads.Types.REWARDED && self.game.analytics.showRewardedVideoAd(t), e.next = 12, this.instance.showAsync();
										case 12:
											this.status = GameCore.Ads.Status.IDLE, this.instance = null, e.next = 22;
											break;
										case 16:
											throw e.prev = 16, e.t0 = e.catch(0), e.t0 instanceof Object && GameCore.Utils.Object.hasOwn(e.t0, "code") && "ADS_NOT_LOADED" === e.t0.code ? this.status = GameCore.Ads.Status.FILLED : (this.status = GameCore.Ads.Status.IDLE, this.instance = null), i = this.getSceneName(), self.game.analytics.showAdFail(this.type, i, e.t0), e.t0;
										case 22:
										case "end":
											return e.stop()
									}
								}), e, this, [
									[0, 16]
								])
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.getStatus = function() {
							return this.status
						}, i.createInstanceByType = function() {
							var e = (0, n.Z)(o().mark((function e(t) {
								var i;
								return o().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											i = self.game.facebook, e.t0 = t, e.next = e.t0 === GameCore.Ads.Types.MID_ROLL || e.t0 === GameCore.Ads.Types.PRE_ROLL ? 4 : e.t0 === GameCore.Ads.Types.REWARDED ? 7 : 10;
											break;
										case 4:
											return e.next = 6, i.getInterstitialAdAsync(this.placementId);
										case 6:
										case 9:
											return e.abrupt("return", e.sent);
										case 7:
											return e.next = 9, i.getRewardedVideoAsync(this.placementId);
										case 10:
											return e.abrupt("return", null);
										case 11:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), i.getSceneName = function() {
							try {
								var e = self.game.globalScene;
								return e instanceof r.Z ? e.getCurrentScene().scene.getSceneName() : "unknown"
							} catch (t) {
								return "unknown"
							}
						}, t
					}(GameCore.Ads.AdInstance);
				t.Z = l
			},
			32926: function(e, t, i) {
				"use strict";
				i.d(t, {
					U: function() {
						return T
					},
					v: function() {
						return A
					}
				});
				var n = i(73126),
					a = i(33938),
					s = i(63109),
					o = i.n(s),
					r = i(59340),
					l = i.n(r),
					c = i(41819),
					h = i(53082),
					u = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).name = "BadRequest", n.message = t || "This request is bad", n.payload = i, n
						}
						return (0, c.Z)(t, e), t
					}((0, h.Z)(Error)),
					d = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).name = "RequestTimeout", n.message = t || "This request is timeout", n.payload = i, n
						}
						return (0, c.Z)(t, e), t
					}((0, h.Z)(Error)),
					p = i(39482),
					m = GameCore.Configs,
					f = m.AppId,
					g = m.Network,
					v = function(e) {
						if (!e.ok) throw new u(null, {
							response: e
						})
					},
					y = function() {
						var e = window.game.auth.getToken();
						return {
							token: e,
							timeout: g.Timeout,
							headers: {
								Authorization: "Bearer " + e,
								"Content-Type": "application/json"
							}
						}
					},
					b = function(e, t, i, n) {
						return (0, a.Z)(o().mark((function a() {
							var s, r, c, h, p;
							return o().wrap((function(a) {
								for (;;) switch (a.prev = a.next) {
									case 0:
										return a.prev = 0, s = e + "/apps/" + f + "/" + t, r = new AbortController, i.signal = r.signal, c = setTimeout((function() {
											r.abort()
										}), i.timeout), GameCore.Utils.Valid.isObject(n) && (i.body = l()(n)), a.next = 8, fetch(s, i);
									case 8:
										return h = a.sent, clearTimeout(c), v(h), a.next = 13, h.json();
									case 13:
										if (a.t0 = a.sent, a.t0) {
											a.next = 16;
											break
										}
										a.t0 = {};
									case 16:
										return p = a.t0, a.abrupt("return", p);
									case 20:
										if (a.prev = 20, a.t1 = a.catch(0), !(a.t1 instanceof u)) {
											a.next = 24;
											break
										}
										return a.abrupt("return", null);
									case 24:
										if (!(a.t1 instanceof Object && GameCore.Utils.Object.hasOwn(a.t1, "name"))) {
											a.next = 27;
											break
										}
										if ("AbortError" !== a.t1.name) {
											a.next = 27;
											break
										}
										throw new d(null);
									case 27:
										throw a.t1;
									case 28:
									case "end":
										return a.stop()
								}
							}), a, null, [
								[0, 20]
							])
						})))
					},
					E = function() {
						var e = (0, a.Z)(o().mark((function e(t, i) {
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return e.prev = 0, e.abrupt("return", t());
									case 4:
										if (e.prev = 4, e.t0 = e.catch(0), !(e.t0 instanceof d && i > 0)) {
											e.next = 18;
											break
										}
										return e.prev = 7, e.next = 10, (0, p.qZ)(600);
									case 10:
										return e.next = 12, E(t, i - 1);
									case 12:
										return e.abrupt("return", e.sent);
									case 15:
										return e.prev = 15, e.t1 = e.catch(7), e.abrupt("return", {});
									case 18:
										if (!(e.t0 instanceof d)) {
											e.next = 20;
											break
										}
										return e.abrupt("return", {});
									case 20:
										return e.abrupt("return", {});
									case 22:
									case "end":
										return e.stop()
								}
							}), e, null, [
								[0, 4],
								[7, 15]
							])
						})));
						return function(t, i) {
							return e.apply(this, arguments)
						}
					}(),
					T = function() {
						var e = (0, a.Z)(o().mark((function e(t, i, a, s) {
							var r, l;
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return void 0 === i && (i = {}), void 0 === s && (s = g.Retries), e.prev = 2, r = (0, n.Z)({}, y(), i, {
											method: "GET"
										}), l = b(a, t, r), e.next = 7, E(l, s);
									case 7:
										return e.abrupt("return", e.sent);
									case 10:
										return e.prev = 10, e.t0 = e.catch(2), e.abrupt("return", {});
									case 14:
									case "end":
										return e.stop()
								}
							}), e, null, [
								[2, 10]
							])
						})));
						return function(t, i, n, a) {
							return e.apply(this, arguments)
						}
					}(),
					A = function() {
						var e = (0, a.Z)(o().mark((function e(t, i, a, s, r) {
							var l, c;
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return void 0 === a && (a = {}), void 0 === r && (r = g.Retries), e.prev = 2, l = (0, n.Z)({}, y(), a, {
											method: "POST"
										}), c = b(s, t, l, i), e.next = 7, E(c, r);
									case 7:
										return e.abrupt("return", e.sent);
									case 10:
										return e.prev = 10, e.t0 = e.catch(2), e.abrupt("return", {});
									case 14:
									case "end":
										return e.stop()
								}
							}), e, null, [
								[2, 10]
							])
						})));
						return function(t, i, n, a, s) {
							return e.apply(this, arguments)
						}
					}()
			},
			98297: function(e, t, i) {
				"use strict";
				i.d(t, {
					kL: function() {
						return n
					},
					fJ: function() {
						return a
					},
					EH: function() {
						return s
					},
					qj: function() {
						return o
					},
					rh: function() {
						return r
					},
					DW: function() {
						return l
					},
					x2: function() {
						return c
					}
				});
				var n = "CONTEXT_RECEIVED",
					a = "CONTEXT_PROCESSED",
					s = "CONTEXT_GAME_MODE_DETECTED",
					o = "MESSAGES_SENT_UPDATE",
					r = "MESSAGES_SENT_REMOVE",
					l = "SCENE_KEY_UPDATE",
					c = "CHALLENGE_RANDOM_FRIEND"
			},
			20494: function(e, t, i) {
				"use strict";
				i.d(t, {
					W6: function() {
						return n
					},
					nx: function() {
						return a
					},
					Sb: function() {
						return s
					},
					lB: function() {
						return o
					}
				});
				var n = "share_invite",
					a = "tournament",
					s = "challenge_friend_match",
					o = "matching_group_match"
			},
			28936: function(e, t, i) {
				"use strict";
				i.d(t, {
					U: function() {
						return s
					}
				});
				var n = i(46352),
					a = i(90143),
					s = new n.Z("10", "Your Friend", a.Z.AVATAR.FILE).toObject()
			},
			47909: function(e, t, i) {
				"use strict";
				var n = i(41819),
					a = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).name = "WideFrameRenderFail", n.message = t || "Wide frame render fail", n.payload = i, n
						}
						return (0, n.Z)(t, e), t
					}((0, i(53082).Z)(Error));
				t.Z = a
			},
			62187: function(e, t, i) {
				"use strict";
				var n = i(15177),
					a = function() {
						function e(e, t) {
							if (this.scene = void 0, this.config = void 0, this.isStarted = void 0, this.tween = void 0, !(t.targets.length < 1)) {
								this.buildConfig(e, t);
								var i = this.config.targets[0].scene;
								i && (this.scene = i, this.isStarted = !1, this.tween = i.tweens.create(this.config))
							}
						}
						var t = e.prototype;
						return t.buildConfig = function(e, t) {
							this.config = (0, n.TS)(e, t)
						}, t.play = function() {
							this.tween && (this.isStarted && this.tween.hasStarted ? this.restart() : (this.tween.play(), this.isStarted = !0))
						}, t.restart = function() {
							var e;
							null == (e = this.tween) || e.restart()
						}, t.stop = function() {
							var e;
							null == (e = this.tween) || e.stop()
						}, t.remove = function() {
							var e;
							null == (e = this.tween) || e.remove()
						}, t.next = function(e) {
							return this.tween ? (this.tween.off(Phaser.Tweens.Events.TWEEN_COMPLETE, e), this.tween.once(Phaser.Tweens.Events.TWEEN_COMPLETE, e), this.tween) : null
						}, e
					}();
				t.Z = a
			},
			51743: function(e, t, i) {
				"use strict";
				var n = i(5281),
					a = i(41819),
					s = i(62187),
					o = {
						targets: [],
						repeat: -1,
						yoyo: !0,
						duration: 33,
						ease: Phaser.Math.Easing.Sine.InOut,
						props: {
							x: 5
						}
					},
					r = function(e) {
						function t(t) {
							var i, a, s;
							return (s = e.call(this, o, t) || this).posX = void 0, s.handleSwitchPosition = function() {
								var e;
								s.posX = -s.posX, null == (e = s.tween) || e.updateTo("x", -s.posX)
							}, null != (i = s.config) && i.props ? (s.posX = s.config.props.x, null == (a = s.tween) || a.on(Phaser.Tweens.Events.TWEEN_REPEAT, s.handleSwitchPosition), s) : (0, n.Z)(s)
						}
						return (0, a.Z)(t, e), t
					}(s.Z);
				t.Z = r
			},
			53270: function(e, t, i) {
				"use strict";
				var n = i(41819),
					a = i(62187),
					s = {
						targets: [],
						duration: 600,
						ease: Phaser.Math.Easing.Linear,
						props: {
							angle: {
								from: 0,
								to: 360
							}
						}
					},
					o = function(e) {
						function t(t) {
							return e.call(this, s, t) || this
						}
						return (0, n.Z)(t, e), t
					}(a.Z);
				t.Z = o
			},
			87922: function(e, t, i) {
				"use strict";
				var n = i(41819),
					a = i(62187),
					s = {
						targets: [],
						duration: 400,
						ease: i(97308).Z,
						props: {
							scale: "+=0.1"
						}
					},
					o = function(e) {
						function t(t) {
							return e.call(this, s, t) || this
						}
						return (0, n.Z)(t, e), t
					}(a.Z);
				t.Z = o
			},
			97308: function(e, t, i) {
				"use strict";
				var n = i(73431),
					a = i.n(n)()(.48, 1.57, .6, .83);
				t.Z = a
			},
			20746: function(e, t, i) {
				"use strict";
				var n = i(41819),
					a = i(62187),
					s = {
						targets: [],
						duration: 600,
						ease: Phaser.Math.Easing.Cubic.Out,
						props: {
							alpha: {
								start: 0,
								from: 0,
								to: 1
							}
						}
					},
					o = function(e) {
						function t(t) {
							return e.call(this, s, t) || this
						}
						return (0, n.Z)(t, e), t
					}(a.Z);
				t.Z = o
			},
			55791: function(e, t, i) {
				"use strict";
				var n = i(41819),
					a = i(62187),
					s = {
						targets: [],
						duration: 600,
						ease: Phaser.Math.Easing.Back.Out,
						props: {
							y: {
								from: 500,
								to: 0
							}
						}
					},
					o = function(e) {
						function t(t) {
							return e.call(this, s, t) || this
						}
						return (0, n.Z)(t, e), t
					}(a.Z);
				t.Z = o
			},
			77087: function(e, t, i) {
				"use strict";
				var n = i(41819),
					a = i(62187),
					s = {
						targets: [],
						duration: 600,
						ease: Phaser.Math.Easing.Quadratic.Out,
						props: {
							alpha: {
								start: 1,
								from: 1,
								to: 0
							}
						}
					},
					o = function(e) {
						function t(t) {
							return e.call(this, s, t) || this
						}
						return (0, n.Z)(t, e), t
					}(a.Z);
				t.Z = o
			},
			62698: function(e, t, i) {
				"use strict";
				var n = i(41819),
					a = i(62187),
					s = {
						targets: [],
						duration: 300,
						ease: i(97308).Z,
						props: {
							scale: {
								from: 1.2,
								to: 1
							}
						}
					},
					o = function(e) {
						function t(t) {
							return e.call(this, s, t) || this
						}
						return (0, n.Z)(t, e), t
					}(a.Z);
				t.Z = o
			},
			2828: function(e, t, i) {
				"use strict";
				var n = i(5281),
					a = i(41819),
					s = i(62187),
					o = {
						targets: [],
						duration: 1e3,
						ease: Phaser.Math.Easing.Quadratic.InOut,
						props: {
							scale: .2
						}
					},
					r = function(e) {
						function t(t) {
							var i, a;
							(a = e.call(this, o, t) || this).spline = void 0, a.createCounter = function(e, t) {
								var i = a.config.onCurveUpdate,
									n = "function" === typeof i ? i : null;
								t.forEach((function(t, i) {
									if (a.scene) {
										var s = e.data[i],
											o = s.duration,
											r = s.delay,
											l = new Phaser.Math.Vector2;
										a.scene.tweens.addCounter({
											delay: r,
											duration: o,
											ease: Phaser.Math.Easing.Quadratic.InOut,
											onUpdate: function(e) {
												a.spline.getPoint(e.getValue(), l), t.x = l.x, t.y = l.y, n && n(t)
											}
										})
									}
								}))
							};
							var s = a.config.curve;
							return s ? (a.spline = new Phaser.Curves.Spline(s), null == (i = a.tween) || i.on(Phaser.Tweens.Events.TWEEN_START, a.createCounter), a) : (0, n.Z)(a)
						}
						return (0, a.Z)(t, e), t
					}(s.Z);
				t.Z = r
			},
			99873: function(e, t, i) {
				"use strict";
				var n = i(41819),
					a = i(62187),
					s = {
						targets: [],
						duration: 600,
						ease: Phaser.Math.Easing.Back.Out,
						props: {
							y: {
								from: 250,
								to: 0
							},
							scale: {
								from: .9,
								to: 1
							},
							alpha: {
								start: 0,
								from: 0,
								to: 1
							}
						}
					},
					o = function(e) {
						function t(t) {
							return e.call(this, s, t) || this
						}
						return (0, n.Z)(t, e), t
					}(a.Z);
				t.Z = o
			},
			34094: function(e, t, i) {
				"use strict";
				i.d(t, {
					Z: function() {
						return p
					}
				});
				var n = i(27344),
					a = i(5281),
					s = i(41819),
					o = i(71944),
					r = i(62187),
					l = {
						targets: [],
						duration: 400,
						ease: i(97308).Z,
						props: {
							scale: "-=0.1"
						}
					},
					c = function(e) {
						function t(t) {
							return e.call(this, l, t) || this
						}
						return (0, s.Z)(t, e), t
					}(r.Z),
					h = i(20468),
					u = i(4396),
					d = i(93397),
					p = function(e) {
						function t(t, i, n, s, o, r) {
							var l;
							return void 0 === r && (r = !1), (l = e.call(this, t) || this).useSound = !0, l.isClicked = !1, l.scaleUp = -1, l.scaleDown = -1, l.button = void 0, l.upAnimation = void 0, l.downAnimation = void 0, l.isUsePixelPerfect = !1, l.hitArea = void 0, l.hitZone = void 0, l.scaleDownPress = void 0, l.parentName = void 0, l.handelObjectDestroy = function() {
								l.scene && l.scene.events.off(Phaser.Scenes.Events.SLEEP, l.handleSceneSleep)
							}, l.handleSceneSleep = function() {
								l.scene && l.scene.tweens.killTweensOf((0, a.Z)(l))
							}, l.handlePointerDown = function() {
								var e, t;
								l.isClicked || null != (e = l.upAnimation) && null != (t = e.tween) && t.isPlaying() || (l.isClicked = !0, l.runDownAnimation())
							}, l.handleOnClick = function(e) {
								return function() {
									var t, i;
									l.isClicked && (null != (t = l.upAnimation) && null != (i = t.tween) && i.isPlaying() || (l.isClicked = !1, l.runUpAnimation(), l.processCallback(e), l.logButtonEvent(), l.addDebugData()))
								}
							}, l.handlePointerOut = function() {
								var e, t;
								l.isClicked && (null != (e = l.upAnimation) && null != (t = e.tween) && t.isPlaying() || (l.isClicked = !1, l.runUpAnimation()))
							}, l.runDownAnimation = function() {
								var e; - 1 === l.scaleDown && (l.scaleUp = l.scale, l.scaleDown = l.scaleDownPress), l.useSound && l.scene.audio.playSound(u.Z.BUTTON), null == (e = l.downAnimation) || e.remove(), l.downAnimation = new c({
									targets: [(0, a.Z)(l)],
									duration: 150,
									props: {
										scale: l.scaleDown
									},
									onUpdate: function() {
										l.hitZone.scale = 1 / l.scale
									}
								}), l.downAnimation.play()
							}, l.runUpAnimation = function() {
								var e; - 1 !== l.scaleUp && (null == (e = l.upAnimation) || e.remove(), l.upAnimation = new c({
									targets: [(0, a.Z)(l)],
									duration: 150,
									props: {
										scale: l.scaleUp
									},
									onUpdate: function() {
										l.hitZone.scale = 1 / l.scale
									}
								}), l.upAnimation.play())
							}, l.isUsePixelPerfect = r, l.setDepth(h.Z.BUTTON), l.createButton(i, n, s, o), l.updateSize(), l.listenEvents(), l.scene.add.existing((0, a.Z)(l)), l
						}(0, s.Z)(t, e);
						var i = t.prototype;
						return i.listenEvents = function() {
							this.scene.events.on(Phaser.Scenes.Events.SLEEP, this.handleSceneSleep), this.once(Phaser.GameObjects.Events.DESTROY, this.handelObjectDestroy)
						}, i.processCallback = function(e) {
							var t;
							null == (t = this.downAnimation) || t.stop(), e()
						}, i.setDisabled = function(e) {
							var t, i;
							e ? (this.setAlpha(.5), null == (t = this.hitArea) || t.disableInteractive()) : (this.setAlpha(1), null == (i = this.hitArea) || i.setInteractive())
						}, i.createButton = function(e, t, i, n) {
							this.button = this.scene.add.image(0, 0, e, t), i && n && this.button.setWorldSize(i, n), this.scaleDownPress = this.scale - .1;
							var a = this.button,
								s = a.displayWidth,
								o = a.displayHeight;
							this.hitZone = this.scene.make.zone({
								displayWidth: s,
								displayHeight: o
							}), this.add([this.button, this.hitZone])
						}, i.updateSize = function() {
							var e = this.button,
								t = e.width,
								i = e.height,
								n = t / 100 * 10,
								a = i / 100 * 10,
								s = n < 10 ? n : 10,
								o = a < 10 ? a : 10;
							this.setSize(t + s, i + o), this.hitZone.setSize(t + s, i + o)
						}, i.addDebugData = function() {
							var e = this.getParentName(),
								t = this.name;
							(0, d.sw)("ui-click", e + ":" + t)
						}, i.logButtonEvent = function() {
							var e = this.getParentName(),
								t = this.name;
							this.scene.analytics.event(o._.BUTTON_CLICK, {
								button_name: t,
								screen_name: e
							})
						}, i.getParentName = function() {
							if (this.parentName) return this.parentName;
							for (var e = this.parentContainer; e;) {
								if (e instanceof GameCore.Screen) {
									var t = e;
									return this.parentName = t.getScreenName(), this.parentName
								}
								e = e.parentContainer
							}
							return this.parentName = this.scene.getSceneName(), this.parentName
						}, (0, n.Z)(t, [{
							key: "onClick",
							set: function(e) {
								this.isUsePixelPerfect ? (this.hitArea = this.button, this.hitArea.setInteractive({
									useHandCursor: !0,
									pixelPerfect: !0
								})) : (this.hitArea = this.hitZone, this.updateSize(), this.hitArea.setInteractive({
									useHandCursor: !0
								})), this.hitArea.off(Phaser.Input.Events.GAMEOBJECT_POINTER_DOWN, this.handlePointerDown), this.hitArea.off(Phaser.Input.Events.GAMEOBJECT_POINTER_UP), this.hitArea.off(Phaser.Input.Events.GAMEOBJECT_POINTER_OUT, this.handlePointerOut), this.hitArea.on(Phaser.Input.Events.GAMEOBJECT_POINTER_DOWN, this.handlePointerDown), this.hitArea.on(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, this.handleOnClick(e)), this.hitArea.on(Phaser.Input.Events.GAMEOBJECT_POINTER_OUT, this.handlePointerOut)
							}
						}, {
							key: "isUsePixelPerFect",
							get: function() {
								return this.isUsePixelPerfect
							}
						}]), t
					}(Phaser.GameObjects.Container)
			},
			82414: function(e, t, i) {
				"use strict";
				var n = i(41819),
					a = function(e) {
						function t(t, i) {
							var n, a = i.key,
								s = i.frame,
								o = i.width,
								r = i.height,
								l = i.usePixelPerfect;
							(n = e.call(this, t, a, s, o, r, l) || this).paddingZone = void 0, n.showDebugZone = void 0, n.debugZone = void 0;
							var c = i.paddingZone,
								h = void 0 === c ? 0 : c,
								u = i.showDebugZone,
								d = void 0 !== u && u;
							return n.paddingZone = h, n.showDebugZone = d, n
						}
						return (0, n.Z)(t, e), t.prototype.updateSize = function() {
							e.prototype.updateSize.call(this);
							var t, i = this.width,
								n = this.height,
								a = i + this.paddingZone,
								s = n + this.paddingZone;
							(this.setSize(a, s), this.hitZone.setSize(a, s), this.showDebugZone) && (null == (t = this.debugZone) || t.destroy(), this.debugZone = this.hitZone.drawDebugBox(10699282, .5), this.add(this.debugZone))
						}, t
					}(i(34094).Z);
				t.Z = a
			},
			56688: function(e, t, i) {
				"use strict";
				var n = i(41819),
					a = i(54255),
					s = i(93985),
					o = i(92439),
					r = a.Z.DEFAULT,
					l = r.KEY,
					c = r.FRAME,
					h = a.Z.THEME.FRAME,
					u = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.blocksByKey = {}, i.blocks = [], i.treasure = void 0, i.bullets = void 0, i.scene = t, i.createBombBlock(), i.createRainbowBlock(), i.createElectricBlock(), i.createRocketBlock(), i.createCoinBlock(), i.add(i.blocks), i
						}(0, n.Z)(t, e);
						var i = t.prototype;
						return i.createBombBlock = function() {
							var e = new s.Z(this.scene, l, {
								background: {
									key: a.Z.THEME.DEFAULT.KEY,
									frame: h.BG_VALUE_BAR
								},
								icon: c.BUY_ITEM_BOMB_BIG
							});
							e.getBackground().setWorldSize(121.5, 48.5), e.getIcon().setWorldSize(23.1875, 24.5), e.getText().setFontSize(this.scene.fontSize(18)), e.alignObject(), this.blocksByKey.BombBulletItem = e, this.blocks.push(e)
						}, i.createRocketBlock = function() {
							var e = new s.Z(this.scene, l, {
								background: {
									key: a.Z.THEME.DEFAULT.KEY,
									frame: h.BG_VALUE_BAR
								},
								icon: c.BUY_ITEM_ROCKET_BIG
							});
							e.getBackground().setWorldSize(121.5, 48.5), e.getIcon().setWorldSize(23.52, 24.5), e.getText().setFontSize(this.scene.fontSize(18)), e.alignObject(), this.blocksByKey.RocketBulletItem = e, this.blocks.push(e)
						}, i.createCoinBlock = function() {
							var e = new s.Z(this.scene, l, {
								background: {
									key: a.Z.THEME.DEFAULT.KEY,
									frame: h.BG_VALUE_BAR
								},
								icon: c.ICON_COIN
							});
							e.getBackground().setWorldSize(121.5, 48.5), e.getIcon().setWorldSize(24, 24.5), e.getText().setFontSize(this.scene.fontSize(18)), e.alignObject(), this.blocksByKey.Coin = e, this.blocks.push(e)
						}, i.createRainbowBlock = function() {
							var e = new s.Z(this.scene, l, {
								background: {
									key: a.Z.THEME.DEFAULT.KEY,
									frame: h.BG_VALUE_BAR
								},
								icon: c.BUY_ITEM_RAINBOW_BIG
							});
							e.getBackground().setWorldSize(121.5, 48.5), e.getIcon().setWorldSize(23.52, 24.5), e.getText().setFontSize(this.scene.fontSize(18)), e.alignObject(), this.blocksByKey.RainbowBulletBallItem = e, this.blocks.push(e)
						}, i.createElectricBlock = function() {
							var e = new s.Z(this.scene, l, {
								background: {
									key: a.Z.THEME.DEFAULT.KEY,
									frame: h.BG_VALUE_BAR
								},
								icon: c.BUY_ITEM_ELECTRIC_BIG
							});
							e.getBackground().setWorldSize(121.5, 48.5), e.getIcon().setWorldSize(24.5, 24.5), e.getText().setFontSize(this.scene.fontSize(18)), e.alignObject(), this.blocksByKey.ElectricBulletBallItem = e, this.blocks.push(e)
						}, i.alignGrid = function(e) {
							void 0 === e && (e = []);
							var t = [
								[-60, 30],
								[-190, 30],
								[-60, 80],
								[-190, 80],
								[-130, 130]
							];
							e.forEach((function(e, i) {
								var n = t[i];
								e.setPosition(n[0], n[1])
							}))
						}, i.updateUI = function(e) {
							var t = this,
								i = [];
							this.bullets = this.scene.player.getBullets(), this.treasure = e, this.blocks.forEach((function(e) {
								return e.kill()
							})), o.Z.forEach((function(n) {
								if (e[n]) {
									var a = t.blocksByKey[n];
									a && (a.revive(), "Coin" === n ? a.setValue(t.scene.player.getCoins()) : a.setValue(t.bullets[n] || 0), i.push(a))
								}
							})), this.alignGrid(i)
						}, i.updateTexts = function() {
							var e = this;
							o.Z.forEach((function(t) {
								var i = e.treasure[t];
								if (i) {
									var n = e.blocksByKey[t];
									if (n) {
										var a = 0;
										a = "Coin" === t ? e.scene.player.getCoins() : e.bullets[t] || 0, a += i, n.setValue(a)
									}
								}
							}))
						}, i.updateTextBlock = function(e, t) {
							var i = this.blocksByKey[e];
							i && i.setValue(t)
						}, i.getIconBlockPosition = function(e) {
							var t = this.blocksByKey[e];
							if (t) return t.getIcon().getWorldPosition()
						}, t
					}(Phaser.GameObjects.Container);
				t.Z = u
			},
			37047: function(e, t, i) {
				"use strict";
				var n = i(81643),
					a = i.n(n),
					s = i(27033),
					o = i(41038),
					r = function() {
						function e() {}
						return e.addText = function(e, t, i) {
							var n;
							void 0 === i && (i = !1);
							var r, l = t.maxWidth,
								c = void 0 === l ? Phaser.Math.MAX_SAFE_INTEGER : l,
								h = t.maxHeight,
								u = void 0 === h ? Phaser.Math.MAX_SAFE_INTEGER : h,
								d = t.align,
								p = void 0 === d ? "center" : d;
							if (i) {
								var m = t.font || s.Z.PRIMARY.KEY,
									f = t.size || 0;
								r = new o.Z(e, {
									font: m,
									size: f,
									text: t.text
								})
							} else r = e.make.bitmapText(t);
							for ("center" === p ? r.setCenterAlign() : "left" === p ? r.setLeftAlign() : "right" === p && r.setRightAlign(), a()(n = t.text || "").call(n, " ") >= 0 && r.setMaxWidth(c); r.width > c || r.height >= u;) r.setFontSize(.95 * r.fontSize);
							return r
						}, e.setFontSize = function(e, t, i) {
							var n, s = t || Phaser.Math.MAX_SAFE_INTEGER,
								o = i || Phaser.Math.MAX_SAFE_INTEGER;
							for (a()(n = e.text || "").call(n, " ") >= 0 && e.setMaxWidth(s); e.width > s || e.height >= o;) e.setFontSize(.95 * e.fontSize)
						}, e
					}();
				t.Z = r
			},
			20402: function(e, t, i) {
				"use strict";
				var n = i(5281),
					a = i(41819),
					s = i(54255),
					o = i(53270),
					r = s.Z.DEFAULT,
					l = r.KEY,
					c = r.FRAME,
					h = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, 0, 0, l, c.PRELOADER) || this).anim = void 0, i.runAnimation(), i.setWorldSize(50, 50), i.scene.add.existing((0, n.Z)(i)), i
						}(0, a.Z)(t, e);
						var i = t.prototype;
						return i.runAnimation = function() {
							var e;
							null == (e = this.anim) || e.remove(), this.anim = new o.Z({
								targets: [this],
								repeat: -1,
								duration: 1200
							}), this.anim.play()
						}, i.setVisible = function(t) {
							return e.prototype.setVisible.call(this, t), t ? this.runAnimation() : this.anim.stop(), this
						}, t
					}(Phaser.GameObjects.Image);
				t.Z = h
			},
			26108: function(e, t, i) {
				"use strict";
				var n = i(73126),
					a = i(27344),
					s = i(5281),
					o = i(41819),
					r = i(2991),
					l = i.n(r),
					c = i(32366),
					h = i.n(c),
					u = i(44494),
					d = i.n(u),
					p = i(20116),
					m = i.n(p),
					f = i(3649),
					g = i.n(f),
					v = i(66419),
					y = i.n(v),
					b = i(65420),
					E = i.n(b),
					T = i(19996),
					A = i.n(T),
					S = i(20468),
					_ = i(2938);

				function C(e, t) {
					var i = "undefined" !== typeof E() && A()(e) || e["@@iterator"];
					if (i) return (i = i.call(e)).next.bind(i);
					if (Array.isArray(e) || (i = function(e, t) {
							var i;
							if (!e) return;
							if ("string" === typeof e) return w(e, t);
							var n = g()(i = Object.prototype.toString.call(e)).call(i, 8, -1);
							"Object" === n && e.constructor && (n = e.constructor.name);
							if ("Map" === n || "Set" === n) return y()(e);
							if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return w(e, t)
						}(e)) || t && e && "number" === typeof e.length) {
						i && (e = i);
						var n = 0;
						return function() {
							return n >= e.length ? {
								done: !0
							} : {
								done: !1,
								value: e[n++]
							}
						}
					}
					throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
				}

				function w(e, t) {
					(null == t || t > e.length) && (t = e.length);
					for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
					return n
				}
				var B = function(e) {
					function t(t, i) {
						var a, o;
						(o = e.call(this, t) || this).config = void 0, o.isEnable = void 0, o.minValue = void 0, o.maxValue = void 0, o.isScrolling = void 0, o.boundTop = void 0, o.boundBottom = void 0, o.maskGraphics = void 0, o.objects = void 0, o._value = 0, o.velocity = 0, o.isScrollingSmooth = void 0, o.lastScrollY = void 0, o.isScrollingBack = void 0, o.scrollingBackTo = void 0, o.lastScrollYCount = 0, o.hitArea = void 0, o.onScrollEvents = [], o.updateObjectVisible = (0, _.D)((function() {
							for (var e = o.objects.getChildren(), t = 0; t < e.length; t++) {
								var i = e[t];
								i.y + i.height < -o.height || i.y - i.height > o.height ? i.setVisible(!1) : i.active && i.setVisible(!0)
							}
						}), 100, {
							maxWait: 100
						}), o.update = function(e, t) {
							o.isScrollingSmooth && o.velocity && o.scrollingSmooth(t), o.isScrollingBack && o.scrollingBack(t)
						}, o.checkReachBound = function() {
							return o.isReachTop() || o.isReachBottom()
						}, o.onMouseScroll = (0, _.D)((function(e, t, i) {
							if (o.isEnable) {
								var n;
								if (o.isScrolling = !0, o.checkReachBound()) return o.lastScrollY = l()(n = o.lastScrollY).call(n, (function() {
									return 0
								})), void(o.isScrolling = !1);
								o.stopScrollingBack(), o.startScrollSmooth(-i * o.scrollSmooth / 15)
							}
						}), 100, {
							isImmediate: !0,
							maxWait: 100
						}), o.onTouchScroll = function(e) {
							if (o.isEnable) {
								o.velocity && o.stopScrollSmooth(), o.stopScrollingBack(), o.isScrolling = !0;
								var t = o.scene.game.world.getZoomRatio(),
									i = e.position,
									n = e.prevPosition,
									a = (i.y - n.y) / t,
									s = o.height * o.maxScrollOver,
									r = 1;
								if (o.lastScrollY[++o.lastScrollYCount % o.lastScrollY.length] = a, o.isReachTop() && a >= 0) {
									var l = (s + (-o.minValue - o.value)) / s;
									r = Math.min(r, l)
								}
								if (o.isReachBottom() && a <= 0) {
									var c = (s - (-o.maxValue - o.value)) / s;
									r = Math.min(r, c)
								}
								var h = a * r,
									u = o.maxScrollOver * o.height;
								o.value + h > -o.minValue + u ? o.value = -o.minValue + u : o.value + h < -o.maxValue - u ? o.value = -o.maxValue - u : o.value += h, o.callOnScrollEvents(o.value, h)
							}
						}, o.onTouchDown = function() {
							o.isEnable && (o.velocity && o.stopScrollSmooth(), o.stopScrollingBack())
						}, o.onTouchEnd = function() {
							var e, t;
							if (o.input.enabled && (o.isReachTop() && (o.startScrollingBack(-o.minValue), o.stopScrollSmooth()), o.isReachBottom() && (o.startScrollingBack(-o.maxValue), o.stopScrollSmooth()), o.isScrolling)) {
								var i = h()(e = o.lastScrollY).call(e, (function(e, t) {
									return e + t
								})) / o.lastScrollY.length;
								o.startScrollSmooth(i * o.scrollSmooth), o.lastScrollY = l()(t = o.lastScrollY).call(t, (function() {
									return 0
								}))
							}
						}, o.config = (0, n.Z)({
							marginTop: 0,
							marginBottom: 0,
							maxScrollOver: .15,
							acceleration: .05,
							scrollSmooth: 45,
							scrollingBackRate: 5
						}, i);
						var r = i.width,
							c = i.height;
						return o.isEnable = !1, o.minValue = 0, o.maxValue = 0, o.lastScrollY = d()(a = new Array(3)).call(a, 0), o.setSize(r, c), o.createGroup(), o.createInput(), o.createEvents(), o.scene.add.existing((0, s.Z)(o)), o
					}(0, o.Z)(t, e);
					var i = t.prototype;
					return i.onScroll = function(e) {
						this.onScrollEvents.push(e)
					}, i.gotoTop = function() {
						this.value = this.config.marginTop
					}, i.reset = function() {
						this.minValue = 0, this.maxValue = 0, this.isScrolling = !1, this.isScrollingBack = !1, this.isScrollingSmooth = !1, this.gotoTop(), this.setEnable(!1)
					}, i.createDebug = function() {
						this.drawDebugBox(16711680, .8)
					}, i.setEnable = function(e) {
						this.isEnable = e, e ? this.setInteractive({
							draggable: !0,
							useHandCursor: !0
						}) : this.disableInteractive()
					}, i.addItem = function(e) {
						this.addAt(e), this.objects.add(e);
						var t = e.y,
							i = e.height,
							n = t - i / 2 - this.marginTop + this.height / 2,
							a = t + i / 2 + this.marginBottom - this.height / 2;
						this.minValue = Math.min(this.minValue, n, 0), this.maxValue = Math.max(this.maxValue, a, 0), this.updateObjectVisible()
					}, i.addItems = function(e) {
						var t = this;
						this.addAt(e), this.objects.addMultiple(e);
						var i = l()(e).call(e, (function(e) {
								return e.y - e.height / 2 - t.marginBottom + t.height / 2
							})),
							n = l()(e).call(e, (function(e) {
								return e.y + e.height / 2 + t.marginBottom - t.height / 2
							}));
						this.minValue = Math.min(this.minValue, Math.max.apply(Math, i), 0), this.maxValue = Math.max(this.maxValue, Math.max.apply(Math, n), 0), this.updateObjectVisible()
					}, i.clearItem = function() {
						this.objects.clear(!0, !0), this.reset()
					}, i.getChildren = function() {
						var e;
						return m()(e = this.objects.getChildren()).call(e, (function(e) {
							return e.active
						}))
					}, i.createBound = function(e, t, i, n) {
						this.boundTop = this.scene.make.image({
							key: e,
							frame: t
						}), this.boundBottom = this.scene.make.image({
							key: e,
							frame: t
						}), this.boundTop.setTint(n), this.boundBottom.setTint(n), this.boundTop.setAlpha(1, 1, 0, 0), this.boundBottom.setAlpha(0, 0, 1, 1), this.boundTop.setDepth(S.Z.PRIORITY), this.boundBottom.setDepth(S.Z.PRIORITY);
						var a = this.width,
							s = i,
							o = this.getWorldPosition(),
							r = o.x,
							l = o.y;
						this.boundTop.setDisplaySize(a, s), this.boundBottom.setDisplaySize(a, s), this.boundTop.setY(-this.displayHeight / 2 + s / 2 + l - this.y - 1), this.boundBottom.setY(this.displayHeight / 2 - s / 2 + l - this.y + 1), this.boundTop.setX(r - this.x), this.boundBottom.setX(r - this.x), this.add([this.boundTop, this.boundBottom])
					}, i.createMask = function() {
						var e;
						null == (e = this.maskGraphics) || e.destroy(), this.maskGraphics = this.scene.make.graphics({
							fillStyle: {
								color: 255,
								alpha: 1
							},
							visible: !0
						}), this.maskGraphics.setName("MaskGraphics");
						var t = this.width,
							i = this.height;
						this.maskGraphics.fillRoundedRect(0 - t / 2, 0 - i / 2, t, i, 0), this.setMask(this.maskGraphics.createGeometryMask()), this.scene.events.off(Phaser.Scenes.Events.UPDATE, this.updateMask, this), this.scene.events.on(Phaser.Scenes.Events.UPDATE, this.updateMask, this)
					}, i.updateMask = function() {
						var e = this.getWorldPosition(),
							t = e.x,
							i = e.y;
						this.maskGraphics.setPosition(t, i)
					}, i.createGroup = function() {
						this.objects = this.scene.make.group({})
					}, i.updateObject = function(e) {
						this.objects.incY(e), this.updateObjectVisible()
					}, i.createInput = function() {
						this.setInteractive({
							draggable: !0,
							useHandCursor: !0
						}), this.on(Phaser.Input.Events.POINTER_WHEEL, this.onMouseScroll), this.on(Phaser.Input.Events.GAMEOBJECT_DRAG, this.onTouchScroll), this.on(Phaser.Input.Events.GAMEOBJECT_POINTER_DOWN, this.onTouchDown), this.scene.input.on(Phaser.Input.Events.POINTER_UP, this.onTouchEnd, this)
					}, i.createEvents = function() {
						this.scene.events.on(Phaser.Scenes.Events.UPDATE, this.update)
					}, i.callOnScrollEvents = function(e, t) {
						for (var i, n = C(this.onScrollEvents); !(i = n()).done;) {
							(0, i.value)(this, e, t)
						}
					}, i.scrollingBack = function(e) {
						var t = (this.scrollingBackTo - this.value) * e * this.scrollingBackRate / 1e3;
						this.value += t, Math.abs(this.scrollingBackTo - this.value) < .5 && (this.value = this.scrollingBackTo, this.stopScrollingBack()), this.callOnScrollEvents(this.value, t)
					}, i.startScrollingBack = function(e) {
						this.isScrollingBack = !0, this.scrollingBackTo = e
					}, i.stopScrollingBack = function() {
						this.isScrollingBack = !1
					}, i.scrollingSmooth = function(e) {
						var t = this.velocity * e / 1e3;
						this.value += t;
						var i = Math.abs(this.velocity) / this.velocity;
						this.isReachTop() && (this.startScrollingBack(-this.minValue), this.stopScrollSmooth()), this.isReachBottom() && (this.startScrollingBack(-this.maxValue), this.stopScrollSmooth()), this.callOnScrollEvents(this.value, t), Math.abs(this.velocity) < 1 ? this.stopScrollSmooth() : this.velocity -= Math.abs(this.velocity) * this.acceleration * i
					}, i.startScrollSmooth = function(e) {
						this.isScrollingSmooth = !0, e && (e * this.velocity > 0 ? this.velocity += e : this.velocity = e)
					}, i.stopScrollSmooth = function() {
						this.isScrollingSmooth = !1, this.isScrolling = !1, this.velocity = 0, this.callOnScrollEvents(this.value, 0)
					}, i.isReachTop = function() {
						return this.value > -this.minValue
					}, i.isReachBottom = function() {
						return -this.value > this.maxValue
					}, (0, a.Z)(t, [{
						key: "marginTop",
						get: function() {
							return this.config.marginTop
						}
					}, {
						key: "marginBottom",
						get: function() {
							return this.config.marginBottom
						}
					}, {
						key: "acceleration",
						get: function() {
							return this.config.acceleration
						}
					}, {
						key: "maxScrollOver",
						get: function() {
							return this.config.maxScrollOver
						}
					}, {
						key: "scrollSmooth",
						get: function() {
							return this.config.scrollSmooth
						}
					}, {
						key: "scrollingBackRate",
						get: function() {
							return this.config.scrollingBackRate
						}
					}, {
						key: "value",
						get: function() {
							return this._value
						},
						set: function(e) {
							var t = e - this._value;
							this._value = e, this.updateObject(t)
						}
					}]), t
				}(Phaser.GameObjects.Container);
				t.Z = B
			},
			41038: function(e, t, i) {
				"use strict";
				i.d(t, {
					Z: function() {
						return o
					}
				});
				var n = i(5281),
					a = i(41819),
					s = i(54255).Z.THEME.KEY,
					o = function(e) {
						function t(t, i) {
							var a;
							return (a = e.call(this, t, 0, 0, i.font, i.text, i.size) || this).init(), a.scene.add.existing((0, n.Z)(a)), a
						}
						return (0, a.Z)(t, e), t.prototype.init = function() {
							var e, t = this,
								i = this.scene.theme,
								n = (null == (e = this.scene.theme.getCurrentTheme(s).params) ? void 0 : e.color) || 16777215;
							this.setTint(n);
							var a = i.EVENTS;
							i.events.on(a.THEME_CHANGE + "-" + s, (function() {
								var e, n = (null == (e = i.getCurrentTheme(s).params) ? void 0 : e.color) || 16777215;
								t.setTint(n)
							}))
						}, t
					}(Phaser.GameObjects.BitmapText)
			},
			93985: function(e, t, i) {
				"use strict";
				var n = i(27344),
					a = i(5281),
					s = i(41819),
					o = i(71944),
					r = i(27033),
					l = i(4396),
					c = i(37047),
					h = function(e) {
						function t(t, i, n) {
							var s;
							return (s = e.call(this, t) || this).startAbbreviate = void 0, s.fractionalDigits = void 0, s.key = void 0, s.frames = void 0, s.bar = void 0, s.icon = void 0, s.button = void 0, s.value = void 0, s.key = i, s.frames = {
								background: s.convertFrameOption(n.background),
								icon: s.convertFrameOption(n.icon),
								button: n.button ? s.convertFrameOption(n.button) : void 0
							}, s.startAbbreviate = 99999, s.fractionalDigits = 2, s.createBar(), s.createValue(), s.createIcon(), s.createButton(), s.alignObject(), s.scene.add.existing((0, a.Z)(s)), s
						}(0, s.Z)(t, e);
						var i = t.prototype;
						return i.setValue = function(e) {
							var t = GameCore.Utils.Number.numberWithCommas(e);
							this.value.setText(t)
						}, i.getText = function() {
							return this.value
						}, i.getIcon = function() {
							return this.icon
						}, i.getBackground = function() {
							return this.bar
						}, i.alignObject = function() {
							var e = this.bar,
								t = e.width,
								i = e.height;
							this.setSize(t, i), Phaser.Display.Align.In.Center(this.value, this.bar, 7.5, -3), Phaser.Display.Align.In.LeftCenter(this.icon, this.bar, -12.5, -2.5), this.button && Phaser.Display.Align.In.RightCenter(this.button, this.bar)
						}, i.createBar = function() {
							this.bar = this.scene.add.image(0, 0, this.frames.background.key, this.frames.background.frame), this.bar.setY(4), this.add(this.bar)
						}, i.createValue = function() {
							this.value = c.Z.addText(this.scene, {
								font: r.Z.PRIMARY.KEY,
								size: this.scene.fontSize(20),
								origin: {
									x: .5,
									y: .5
								}
							}), this.setValue(0), this.add(this.value)
						}, i.createIcon = function() {
							this.icon = this.scene.add.image(0, 0, this.frames.icon.key, this.frames.icon.frame), this.add(this.icon)
						}, i.createButton = function() {
							this.frames.button && this.scene.ads.enabled && (this.button = this.scene.add.image(0, 0, this.frames.button.key, this.frames.button.frame), this.add(this.button))
						}, i.logButtonEvent = function() {
							var e = this.getParentName(),
								t = this.name;
							this.scene.analytics.event(o._.BUTTON_CLICK, {
								button_name: t,
								screen_name: e
							})
						}, i.getParentName = function() {
							for (var e = this.parentContainer; e;) {
								if (e instanceof GameCore.Screen) return e.getScreenName();
								e = e.parentContainer
							}
							return this.scene.getSceneName()
						}, i.convertFrameOption = function(e) {
							return "string" === typeof e ? {
								key: this.key,
								frame: e
							} : {
								key: e.key,
								frame: e.frame
							}
						}, (0, n.Z)(t, [{
							key: "onClick",
							set: function(e) {
								var t = this;
								this.scene.ads.enabled && (this.setInteractive({
									useHandCursor: !0
								}), this.on(Phaser.Input.Events.GAMEOBJECT_POINTER_DOWN, (function() {
									t.logButtonEvent(), e(), t.scene.audio.playSound(l.Z.BUTTON)
								})))
							}
						}]), t
					}(Phaser.GameObjects.Container);
				t.Z = h
			},
			97686: function(e, t, i) {
				"use strict";
				i.d(t, {
					Z: function() {
						return f
					}
				});
				var n = i(41819),
					a = i(54255),
					s = i(5281),
					o = i(27033),
					r = i(37047),
					l = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t) || this).icon = void 0, a.text = void 0, a.createIcon(i, n), a.createText(), t.add.existing((0, s.Z)(a)), a
						}(0, n.Z)(t, e);
						var i = t.prototype;
						return i.getIcon = function() {
							return this.icon
						}, i.getText = function() {
							return this.text
						}, i.setValue = function(e) {
							this.text.setText("" + e)
						}, i.createIcon = function(e, t) {
							this.icon = this.scene.make.image({
								key: e,
								frame: t
							}), this.add(this.icon)
						}, i.createText = function() {
							this.text = r.Z.addText(this.scene, {
								font: o.Z.PRIMARY.KEY,
								size: this.scene.fontSize(20),
								origin: {
									x: .5,
									y: .5
								},
								text: "0",
								x: 0,
								y: 5
							}), this.add(this.text)
						}, t
					}(Phaser.GameObjects.Container),
					c = i(92439),
					h = i(73431),
					u = i.n(h)()(.32, 1.48, .53, 1.56),
					d = a.Z.DEFAULT,
					p = d.KEY,
					m = d.FRAME,
					f = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).blocksByKey = {}, i.blocks = [], i.showedBlocks = [], i.createBlocks(), i.add(i.blocks), i
						}(0, n.Z)(t, e);
						var i = t.prototype;
						return i.createBlocks = function() {
							this.createBombBlock(), this.createRainbowBlock(), this.createElectricBlock(), this.createRocketBlock(), this.createCoinBlock()
						}, i.createBombBlock = function() {
							var e = new l(this.scene, p, m.BUY_ITEM_BOMB_BIG);
							e.getIcon().setWorldSize(61.5, 64.5), this.blocksByKey.BombBulletItem = e, this.blocks.push(e)
						}, i.createRainbowBlock = function() {
							var e = new l(this.scene, p, m.BUY_ITEM_RAINBOW_BIG);
							e.getIcon().setWorldSize(56.25, 57.75), this.blocksByKey.RainbowBulletBallItem = e, this.blocks.push(e)
						}, i.createElectricBlock = function() {
							var e = new l(this.scene, p, m.BUY_ITEM_ELECTRIC_BIG);
							e.getIcon().setWorldSize(57.75, 57.75), this.blocksByKey.ElectricBulletBallItem = e, this.blocks.push(e)
						}, i.createRocketBlock = function() {
							var e = new l(this.scene, p, m.BUY_ITEM_ROCKET_BIG);
							e.getIcon().setWorldSize(55.5, 57.75), this.blocksByKey.RocketBulletItem = e, this.blocks.push(e)
						}, i.createCoinBlock = function() {
							var e = new l(this.scene, p, m.ICON_WHEEL_COIN_10);
							e.getIcon().setWorldSize(57, 42.75), this.blocksByKey.Coin = e, this.blocks.push(e)
						}, i.align = function() {
							var e = this;
							c.Z.forEach((function(t) {
								var i = e.blocksByKey[t];
								if (i) {
									var n = i.getIcon(),
										a = i.getText();
									Phaser.Display.Align.In.BottomRight(a, n, -5)
								}
							}))
						}, i.playAnimation = function() {
							for (var e = this.showedBlocks, t = [
									[
										[0, -120]
									],
									[
										[-50, -100],
										[50, -100]
									],
									[
										[-100, -80],
										[0, -120],
										[100, -80]
									],
									[
										[-125, -40],
										[-50, -100],
										[50, -100],
										[125, -40]
									],
									[
										[-140, 0],
										[-100, -80],
										[0, -120],
										[100, -80],
										[140, 0]
									]
								], i = e.length, n = 0; n < i; n++) e[n].setPosition(0, 0), e[n].setScale(0);
							this.scene.tweens.add({
								targets: e,
								duration: 500,
								props: {
									x: {
										getStart: function() {
											return 0
										},
										getEnd: function(e, n, a, s) {
											return t[i - 1][s][0]
										},
										ease: Phaser.Math.Easing.Sine.Out
									},
									y: {
										getStart: function() {
											return 0
										},
										getEnd: function(e, n, a, s) {
											return t[i - 1][s][1]
										},
										ease: Phaser.Math.Easing.Sine.Out
									},
									scale: {
										from: 0,
										to: 1,
										ease: u
									}
								},
								delay: this.scene.tweens.stagger(100, {})
							})
						}, i.updateUI = function(e) {
							var t = this,
								i = [];
							this.blocks.forEach((function(e) {
								return e.kill()
							})), c.Z.forEach((function(n) {
								var a = e[n];
								if (a) {
									var s = t.blocksByKey[n];
									s && (s.revive(), s.setValue(a), i.push(s))
								}
							})), this.showedBlocks = i, this.align()
						}, i.getBlockPosition = function(e) {
							var t;
							return null == (t = this.blocksByKey[e]) ? void 0 : t.getWorldPosition()
						}, i.getBlock = function(e) {
							return this.blocksByKey[e]
						}, t
					}(Phaser.GameObjects.Container)
			},
			10515: function(e, t, i) {
				"use strict";
				var n = i(54255).Z.EFFECTS,
					a = n.KEY,
					s = n.FRAME,
					o = {
						CONFETTI_HEXAGON: {
							KEY: "confetti-hexagon-animation",
							TEXTURE: a,
							PREFIX: s.FX_CONFETTI_HEXAGON,
							FRAME_RATE: 8,
							END: 5,
							ZERO_PAD: 0
						},
						CONFETTI_STAR_X: {
							KEY: "confetti-star-x",
							TEXTURE: a,
							PREFIX: s.ANIMATION_STAR_X,
							FRAME_RATE: 4,
							END: 4,
							ZERO_PAD: 0
						},
						CONFETTI_STAR_Y: {
							KEY: "confetti-star-y",
							TEXTURE: a,
							PREFIX: s.ANIMATION_STAR_Y,
							FRAME_RATE: 4,
							END: 4,
							ZERO_PAD: 0
						},
						RIBBON_A: {
							KEY: "animation-ribbon-a",
							TEXTURE: a,
							PREFIX: s.PREFIX_ANIMATION_RIBBON_CONFETTI_A,
							FRAME_RATE: 16,
							END: 3,
							ZERO_PAD: 0
						},
						RIBBON_B: {
							KEY: "animation-ribbon-b",
							TEXTURE: a,
							PREFIX: s.PREFIX_ANIMATION_RIBBON_CONFETTI_B,
							FRAME_RATE: 16,
							END: 4,
							ZERO_PAD: 0
						},
						RIBBON_C: {
							KEY: "animation-ribbon-c",
							TEXTURE: a,
							PREFIX: s.PREFIX_ANIMATION_RIBBON_CONFETTI_C,
							FRAME_RATE: 16,
							END: 4,
							ZERO_PAD: 0
						},
						RIBBON_D: {
							KEY: "animation-ribbon-d",
							TEXTURE: a,
							PREFIX: s.PREFIX_ANIMATION_RIBBON_CONFETTI_D,
							FRAME_RATE: 16,
							END: 4,
							ZERO_PAD: 0
						}
					};
				t.Z = o
			},
			20468: function(e, t, i) {
				"use strict";
				i.d(t, {
					X: function() {
						return n
					}
				});
				var n = {
					ROTATOR: -4,
					LAVA_BALL_BACKGROUND: -3,
					LAVA_PARTICLE: -2,
					TAIL: -1,
					ELECTRIC_RING: -1,
					ELECTRIC_GROW: -1,
					LAVA: -1,
					LAMP_GROW: -1,
					THREE_THUNDERS_THUNDER: -1,
					KEY_IDLE: -1,
					GEM: -1,
					QUESTION_MARK_TRANSPARENT: 1,
					THUNDER: 1,
					SUB_COLOR: 1,
					CANDLE_CONTAINER: 5,
					BLACK_HOLE_SPARKLE: 5.5,
					IRON_SHELL: 6,
					MUD: 7,
					BAT: 7.5,
					SPIDER_WEB: 8,
					ELECTRIC_SPARKLE: 9,
					LEAVES: 10,
					SPIDER: 11,
					LADYBIRD: 11,
					SHINE: 13,
					HEXAGON_WIRE: 16,
					IRON_BOARD: 20
				};
				t.Z = {
					BACKGROUND: 1,
					SPRITES: 2,
					SHOOT_GUIDE: 17,
					BALL: 20,
					BALL_EXPLODE: 40,
					SIMULATOR: 60,
					EXPLODE: 61,
					ITEM: 62,
					LOGO: 63,
					BUTTON: 64,
					BAT_FLY_UP: 80,
					BALL_ORPHAN: 100,
					SHOOTER: 123,
					BULLET: 124,
					TILE: 125,
					TEXT: 130,
					ENCOURAGING: 131,
					TUTORIAL_HAND: 131,
					EFFECT: 132,
					EFFECT_HIGH: 133,
					SCORE: 135,
					PROGRESS_STAR: 135.5,
					MESSAGE: 136,
					UI: 137,
					LEADERBOARD: 138,
					POPUP: 140,
					PRIORITY: 150,
					GUIDE_MASK_BACKGROUND: 600,
					GUIDE_MASK_INPUT: 601,
					GUIDE_POPUP: 602,
					GUIDE_ARROW: 603,
					GUIDE_HAND: 604,
					DEBUG: 800,
					ON_TOP: 1e4
				}
			},
			27033: function(e, t) {
				"use strict";
				t.Z = {
					PRIMARY: {
						KEY: "mikado-bold",
						TEXTURE: "./assets/fonts/mikado-bold.png",
						DATA: "./assets/fonts/mikado-bold.xml",
						DE_TEXTURE: "./assets/fonts/de.png",
						DE_DATA: "./assets/fonts/de.xml",
						ES_TEXTURE: "./assets/fonts/es.png",
						ES_DATA: "./assets/fonts/es.xml",
						FR_TEXTURE: "./assets/fonts/fr.png",
						FR_DATA: "./assets/fonts/fr.xml",
						HI_TEXTURE: "./assets/fonts/hi.png",
						HI_DATA: "./assets/fonts/hi.xml",
						ID_TEXTURE: "./assets/fonts/id.png",
						ID_DATA: "./assets/fonts/id.xml",
						IT_TEXTURE: "./assets/fonts/it.png",
						IT_DATA: "./assets/fonts/it.xml",
						JA_TEXTURE: "./assets/fonts/ja.png",
						JA_DATA: "./assets/fonts/ja.xml",
						PT_TEXTURE: "./assets/fonts/pt.png",
						PT_DATA: "./assets/fonts/pt.xml",
						RU_TEXTURE: "./assets/fonts/ru.png",
						RU_DATA: "./assets/fonts/ru.xml",
						ZH_TEXTURE: "./assets/fonts/zh.png",
						ZH_DATA: "./assets/fonts/zh.xml",
						TR_TEXTURE: "./assets/fonts/tr.png",
						TR_DATA: "./assets/fonts/tr.xml"
					},
					NORMAL: {
						KEY: "mikado-bold-normal",
						TEXTURE: "./assets/fonts/mikado-bold-normal.png",
						DATA: "./assets/fonts/mikado-bold-normal.xml",
						DE_TEXTURE: "./assets/fonts/de-normal.png",
						DE_DATA: "./assets/fonts/de-normal.xml",
						ES_TEXTURE: "./assets/fonts/es-normal.png",
						ES_DATA: "./assets/fonts/es-normal.xml",
						FR_TEXTURE: "./assets/fonts/fr-normal.png",
						FR_DATA: "./assets/fonts/fr-normal.xml",
						HI_TEXTURE: "./assets/fonts/hi-normal.png",
						HI_DATA: "./assets/fonts/hi-normal.xml",
						ID_TEXTURE: "./assets/fonts/id-normal.png",
						ID_DATA: "./assets/fonts/id-normal.xml",
						IT_TEXTURE: "./assets/fonts/it-normal.png",
						IT_DATA: "./assets/fonts/it-normal.xml",
						JA_TEXTURE: "./assets/fonts/ja-normal.png",
						JA_DATA: "./assets/fonts/ja-normal.xml",
						PT_TEXTURE: "./assets/fonts/pt-normal.png",
						PT_DATA: "./assets/fonts/pt-normal.xml",
						RU_TEXTURE: "./assets/fonts/ru-normal.png",
						RU_DATA: "./assets/fonts/ru-normal.xml",
						ZH_TEXTURE: "./assets/fonts/zh-normal.png",
						ZH_DATA: "./assets/fonts/zh-normal.xml",
						TR_TEXTURE: "./assets/fonts/tr-normal.png",
						TR_DATA: "./assets/fonts/tr-normal.xml"
					},
					NUMBERS_SYMBOLS: {
						KEY: "numbers-symbols",
						FRAME: "numbers-symbols/numbers-symbols",
						TEXTURE: "./assets/fonts/numbers-symbols.png",
						DATA: "./assets/fonts/numbers-symbols.xml"
					},
					FONT_FAMILY: "MikadoBold"
				}
			},
			90143: function(e, t, i) {
				"use strict";
				var n = (0, i(97325).t)(),
					a = {
						AVATAR: {
							KEY: "avatar",
							FILE: "./assets/images/others/avatar.jpg",
							CONFIG: {}
						},
						ICON_EARTH: {
							KEY: "icon-earth",
							FILE: "./assets/images/others/icon-earth.png",
							CONFIG: {}
						},
						BACKGROUND: {
							KEY: "bg",
							FILE: "./assets/images/" + n + "x/bg.jpg",
							CONFIG: {}
						},
						GAME_BACKGROUND_THEME: {
							KEY: "bg-game-theme",
							DEFAULT: {
								KEY: "bg-game-default",
								FILE: "./assets/images/" + n + "x/bg_game.jpg"
							},
							HARD: {
								KEY: "bg-game-hard",
								FILE: "./assets/images/" + n + "x/bg_game_hard.jpg"
							}
						},
						OTHER_BACKGROUND: {
							KEY: "bg-other",
							FILE: "./assets/images/" + n + "x/bg-other.jpg",
							CONFIG: {}
						}
					};
				t.Z = a
			},
			54255: function(e, t, i) {
				"use strict";
				var n = i(73126),
					a = (0, i(97325).t)(),
					s = {
						DEFAULT: {
							KEY: "default-resources",
							TEXTURE: "./assets/textures/8bit/" + a + "x/default-resources.png",
							JSON: "./assets/textures/8bit/" + a + "x/default-resources.json",
							FRAME: {
								BLANK: "blank",
								LINE_HOR: "other/line-hor",
								LINE_VER: "other/line-ver",
								TOP_PANEL: "other/top-panel",
								PRELOADER: "preloader/dual-ring",
								DASHBOARD_FOOTER_BLOCK: "dashboard/footer-block",
								LEADERBOARD_TAB_ON: "leaderboards/tab-on",
								LEADERBOARD_TAB_OFF: "leaderboards/tab-off",
								LEADERBOARD_BG_DARK: "leaderboards/bg-dark",
								LEADERBOARD_BG_LIGHT: "leaderboards/bg-light",
								MISSION_BLOCK_BG: "daily-mission/bg-block",
								DAILY_DAY_BOX: "daily-rewards/day_box",
								DAILY_DAY_CLAIM_BOX: "daily-rewards/day_claim_box",
								DAILY_DAY_BG_BOX: "daily-rewards/bg_box",
								DAILY_DAY_BG_BOX_LONG: "daily-rewards/bg_box_long",
								DAILY_DAY_BOX_LONG: "daily-rewards/day_box_long",
								DAILY_DAY_BOX_CLAIM_LONG: "daily-rewards/day_claim_box_long",
								RIBBON_RED: "ribbon/red",
								RIBBON_PINK: "ribbon/pink",
								RIBBON_ORANGE: "ribbon/orange",
								RIBBON_VIOLET: "ribbon/violet",
								AVATAR_BG: "avatar/bg",
								AVATAR_BG_BIG: "avatar/bg-big",
								AVATAR_FRAME_BLUE_BIG: "avatar/blue-frame-big",
								AVATAR_FRAME_PURPLE: "avatar/purple-frame",
								AVATAR_FRAME_PURPLE_BIG: "avatar/purple-frame-big",
								AVATAR_LEVEL_BG: "avatar/bg_level",
								AVATAR_LEVEL_BG_MASK: "avatar/bg_level_mask",
								ICON_HAND: "icons/hand",
								ICON_DOT: "icons/dot",
								ICON_GIFT: "icons/gift",
								ICON_SETTING: "icons/setting",
								ICON_INVITE: "icons/invite_icon",
								ICON_HOME: "icons/home",
								ICON_CROWN: "icons/crown",
								ICON_DIAMOND: "icons/diamond",
								ICON_COIN: "icons/coin",
								ICON_EGGS: "icons/egg",
								ICON_ARROW_BIG: "icons/arrow-big",
								ICON_FRIENDS: "icons/friends",
								ICON_GREEN_ARROW: "icons/green-arrow",
								ICON_BONUS_BUBBLES: "icons/bonus_bubbles",
								ICON_WHEEL_COIN_10: "icons/wheel_coin_10",
								ICON_WHEEL_COIN_25: "icons/wheel_coin_25",
								ICON_WHEEL_COIN_50: "icons/wheel_coin_50",
								ICON_WHEEL_COIN_100: "icons/wheel_coin_100",
								ICON_CLOSE: "icons/close",
								ICON_STAR_1: "icons/star_1",
								ICON_STAR_2: "icons/star_2",
								ICON_STAR_3: "icons/star_3",
								ICON_STAR_EMPTY_1: "icons/star_empty_1",
								ICON_STAR_EMPTY_2: "icons/star_empty_2",
								ICON_STAR_EMPTY_3: "icons/star_empty_3",
								ICON_SKULLCAP: "icons/skullcap",
								ICON_HEART: "icons/heart",
								ICON_NOTIFICATION: "icons/notification",
								ICON_PLUS: "icons/icon_+",
								ICON_TREASURE: "icons/treasure",
								ICON_MISSION_BALLS_BIG: "icons/mission_balls_icon_big",
								ICON_MISSION_GEMS_BIG: "icons/mission_gems_icon_big",
								ICON_MUSIC_ON: "icons/icon_music_on",
								ICON_MUSIC_OFF: "icons/icon_music_off",
								ICON_SOUND_ON: "icons/icon_sound_on",
								ICON_SOUND_OFF: "icons/icon_sound_off",
								ICON_VIBRATE_ON: "icons/icon_vibrate_on",
								ICON_VIBRATE_OFF: "icons/icon_vibrate_off",
								ICON_CHECK_2: "icons/check_2",
								ICON_STORE_COIN_SMALL: "icons/store_coin_small",
								ICON_STORE_COIN_BIG: "icons/store_coin_big",
								ICON_STORE_BUNDLE: "icons/store_bundle",
								SWITCH_ON: "switch/on",
								SWITCH_OFF: "switch/off",
								SWITCH_PANEL: "switch/panel",
								SWITCH_PANEL_ON: "switch/panel_on",
								SWITCH_PANEL_OFF: "switch/panel_off",
								SWITCH_BUTTON_ON: "switch/button_on",
								SWITCH_BUTTON_OFF: "switch/button_off",
								BUTTON_LEVEL_BG: "buttons/level_btn",
								BUTTON_LEVEL_BG_HARD: "buttons/level_btn_hard",
								BUTTON_LEVEL_BOX: "buttons/level_box",
								BUTTON_GREEN_SHORT: "buttons/btn_green_short",
								BUTTON_GREEN_LONG: "buttons/btn_green_long",
								BUTTON_GREEN: "buttons/btn_green",
								BUTTON_BLUE_LONG: "buttons/btn_blue_long",
								BUTTON_GREEN_CIRCLE: "buttons/btn_green_circle",
								BUTTON_BLUE: "buttons/btn_blue",
								BUTTON_GREEN_SPIN: "buttons/btn_green_spin",
								BUTTON_LEVEL_BASE: "buttons/level_base",
								BUTTON_LEVEL_BASE_HARD: "buttons/level_base_hard",
								BUTTON_LEVEL_GREEN: "buttons/level_green",
								BUTTON_LEVEL_ORANGE: "buttons/level_orange",
								BUTTON_LEVEL_GRAY: "buttons/level_gray",
								BUTTON_LEVEL_PINK: "buttons/level_pink",
								BUTTON_LEVEL_PURPLE: "buttons/level_purple",
								BUTTON_LEVEL_BLUE: "buttons/level_blue",
								BUTTON_LEVEL_SKY_BLUE: "buttons/level_skyblue",
								BUTTON_LEVEL_YELLOW: "buttons/level_yellow",
								BUTTON_LEVEL_GREY: "buttons/level_grey",
								BUTTON_BLUE_CIRCLE: "buttons/btn_blue_circle",
								BUTTON_STORE: "buttons/shop",
								BUTTON_WHEEL: "buttons/wheel",
								BUTTON_DAILY_REWARD: "buttons/daily_reward",
								BUTTON_INVITE_FRIEND: "buttons/invite_friend",
								BUTTON_GREEN_CIRCLE_SMALL: "buttons/btn_green_circle_small",
								BUTTON_GREEN_SMALL: "buttons/btn_green_small",
								BUTTON_BLACK_FRIDAY: "buttons/black_friday",
								BUTTON_FAST_SCROLL: "buttons/fast_scroll",
								TOURNAMENT_TITLE_LOGO: "tournament/title-logo",
								TOURNAMENT_GREEN_BUTTON: "tournament/green-button",
								HORIZONTAL_LUCKY_BAR: "lucky-bar/horizontal-lucky-bar",
								HORIZONTAL_ARROW: "lucky-bar/horizontal-arrow",
								ARC_LUCKY_BAR: "lucky-bar/arc-lucky-bar",
								ARC_ARROW: "lucky-bar/arc-arrow",
								RESCUE_ICON_FAIL: "screens/rescue/icon_fail",
								RESCUE_ICON_AD: "screens/rescue/watch_ads",
								BUY_ITEM_GLOW: "screens/buy-item/item_glow",
								BUY_ITEM_ROCKET_BIG: "screens/buy-item/item_rocket_big",
								BUY_ITEM_RAINBOW_BIG: "screens/buy-item/item_rainbow_big",
								BUY_ITEM_BOMB_BIG: "screens/buy-item/item_bomb_big",
								BUY_ITEM_ELECTRIC_BIG: "screens/buy-item/item_electric_big",
								SETTING_BOX: "screens/pause/popup_setting_box",
								ICON_ADS: "screens/remove-ads/icon_ADS",
								ICON_TICK: "screens/remove-ads/icon_tick_small",
								TICK_BOX: "screens/remove-ads/tick_box",
								FX_ADS_GLOW: "screens/remove-ads/fx_ads_glow_small",
								POPUP: "background/popup",
								POPUP_RIBBON: "background/popup_ribbon",
								BG_TIME_BOX_SMALL: "background/time_box_small",
								POPUP_MISSION: "background/popup_mission",
								POPUP_BOX: "background/popup_box",
								BG_POPUP_STORE: "background/popup_store",
								BG_POPUP_STORE_SPECIAL: "background/popup_store_special",
								BG_POPUP_STORE_BOX: "background/popup_store_box",
								BG_STORE_TITTLE: "background/bg_store_title",
								MAP_BG_UI: "maps/bg_UI",
								MAP_LEVEL_FX_ROUND_1: "maps/level_fx_round_1",
								MAP_LEVEL_FX_ROUND_2: "maps/level_fx_round_2",
								MAP_PATH: "maps/path",
								TREASURE_CLOSE: "treasure/treasure_close",
								TREASURE_OPEN: "treasure/treasure_open",
								DAILY_SPIN_WHEEL_BASE: "daily-spin/wheel_base",
								DAILY_SPIN_WHEEL_CENTER: "daily-spin/wheel_center",
								DAILY_SPIN_WHEEL_CLAIM: "daily-spin/wheel_claim",
								DAILY_SPIN_WHEEL_POINT: "daily-spin/wheel_point",
								DAILY_SPIN_WHEEL_SPIN: "daily-spin/wheel_spin",
								SPECIAL_EVENT_BADGE: "screens/special-event/badge",
								SPECIAL_EVENT_HEADER: "screens/special-event/header",
								SPECIAL_EVENT_POPUP: "screens/special-event/popup",
								SPECIAL_EVENT_SPEAKER: "screens/special-event/speaker"
							}
						},
						EFFECTS: {
							KEY: "effects-resources",
							TEXTURE: "./assets/textures/8bit/" + a + "x/effects-resources.png",
							JSON: "./assets/textures/8bit/" + a + "x/effects-resources.json",
							FRAME: {
								BLANK: "blank",
								COIN: "coin",
								FX_COMET: "comet",
								FX_SPARK: "spark",
								FX_CIRCLE: "circle",
								FX_GLOW_LIGHT: "glow-light",
								FX_STAR_WHITE: "star-white",
								FX_STAR_YELLOW: "star-yellow",
								FX_STORE_GLOW: "store_glow",
								FX_SPARKLE_SMALL: "fx_sparkle_small",
								FX_SPIN_GLOW_BIG: "fx_spin_glow_big",
								FX_SPARKLE: "fx_sparkle",
								FX_BOX_DAILY_REWARD: "fx_spin_glow_big",
								FX_CONFETTI_SMALL_1: "confetti/small-1",
								FX_CONFETTI_SMALL_2: "confetti/small-2",
								FX_CONFETTI_SMALL_3: "confetti/small-3",
								FX_CONFETTI_SMALL_4: "confetti/small-4",
								FX_CONFETTI_HEXAGON: "confetti/hexagon-",
								ANIMATION_STAR_X: "star-x/star-",
								ANIMATION_STAR_Y: "star-y/star-",
								FX_CONFETTI_RIBBON: "ribbon/ribbon",
								PREFIX_ANIMATION_RIBBON_CONFETTI_A: "ribbon/falling-confetti/confetti-a/confetti-a-",
								PREFIX_ANIMATION_RIBBON_CONFETTI_B: "ribbon/falling-confetti/confetti-b/confetti-b-",
								PREFIX_ANIMATION_RIBBON_CONFETTI_C: "ribbon/falling-confetti/confetti-c/confetti-c-",
								PREFIX_ANIMATION_RIBBON_CONFETTI_D: "ribbon/falling-confetti/confetti-d/confetti-d-",
								CONFETTI_PARTICLE_1: "confetti/confetti-1",
								CONFETTI_PARTICLE_2: "confetti/confetti-2",
								CONFETTI_PARTICLE_3: "confetti/confetti-3",
								CONFETTI_PARTICLE_4: "confetti/confetti-4",
								CONFETTI_PARTICLE_5: "confetti/confetti-5",
								CONFETTI_PARTICLE_6: "confetti/confetti-6",
								CONFETTI_PARTICLE_7: "confetti/confetti-7",
								RIBBON_PARTICLE_1: "ribbon/ribbon-1",
								RIBBON_PARTICLE_2: "ribbon/ribbon-2",
								RIBBON_PARTICLE_3: "ribbon/ribbon-3",
								RIBBON_PARTICLE_4: "ribbon/ribbon-4",
								RIBBON_PARTICLE_5: "ribbon/ribbon-5",
								RIBBON_PARTICLE_6: "ribbon/ribbon-6"
							}
						},
						ANIMATION_SCENE: {
							KEY: "animation-scene-resources",
							PATH: "./assets/textures/8bit/" + a + "x/",
							JSON: "./assets/textures/8bit/" + a + "x/animation-scene-resources.json",
							FRAME: {
								BLANK: "blank",
								FX_CIRCLE_LIGHT: "circle-light",
								ANIMATION_STAR_X: "star-x/star-",
								ANIMATION_STAR_Y: "star-y/star-",
								FX_CONFETTI_RIBBON: "ribbon/ribbon",
								PREFIX_ANIMATION_RIBBON_CONFETTI_A: "ribbon/falling-confetti/confetti-a/confetti-a-",
								PREFIX_ANIMATION_RIBBON_CONFETTI_B: "ribbon/falling-confetti/confetti-b/confetti-b-",
								PREFIX_ANIMATION_RIBBON_CONFETTI_C: "ribbon/falling-confetti/confetti-c/confetti-c-",
								PREFIX_ANIMATION_RIBBON_CONFETTI_D: "ribbon/falling-confetti/confetti-d/confetti-d-"
							}
						},
						GAMEPLAY: {
							GAMEPLAY_TEXTURES: {
								KEY: "gameplay-texture",
								TEXTURE: "./assets/textures/8bit/" + a + "x/gameplay-textures.png",
								JSON: "./assets/textures/8bit/" + a + "x/gameplay-textures.json",
								FRAME: {
									BLANK: "blank",
									BULLET_ITEM_BOMB: "bullet-items/item_bomb",
									BULLET_ITEM_BOMB_DISABLED: "bullet-items/item_bomb_disable",
									BULLET_ITEM_ROCKET: "bullet-items/item_rocket",
									BULLET_ITEM_ROCKET_DISABLED: "bullet-items/item_rocket_disable",
									BULLET_ITEM_LIGHTNING: "bullet-items/item_electric",
									BULLET_ITEM_LIGHTNING_DISABLED: "bullet-items/item_electric_disable",
									BULLET_ITEM_RAINBOW: "bullet-items/item_rainbow",
									BULLET_ITEM_RAINBOW_DISABLED: "bullet-items/item_rainbow_disable",
									ICON_UNLIMITED: "bullet-items/unlimited",
									ICON_MISSION_BALLS: "icons/mission-balls-icon",
									ICON_MISSION_GEMS: "icons/mission-gems-icon",
									ICON_COUNT: "icons/icon_count",
									GLOW_3: "glow03",
									RING_EFFECT: "ring"
								}
							},
							GAME_OBJECTS: {
								KEY: "gameplay-main-objects",
								TEXTURE: "./assets/textures/8bit/" + a + "x/gameplay-main-objects.png",
								JSON: "./assets/textures/8bit/" + a + "x/gameplay-main-objects.json",
								FRAME: {
									BLANK: "blank",
									TWO_COLORS_RED: "2-colors-ball/duo_color_red",
									TWO_COLORS_BLUE: "2-colors-ball/duo_color_blue",
									TWO_COLORS_GREEN: "2-colors-ball/duo_color_green",
									TWO_COLORS_PINK: "2-colors-ball/duo_color_pink",
									TWO_COLORS_VIOLET: "2-colors-ball/duo_color_purple",
									TWO_COLORS_ORANGE: "2-colors-ball/duo_color_orange",
									TWO_COLORS_YELLOW: "2-colors-ball/duo_color_yellow",
									TWO_COLORS_CYAN: "2-colors-ball/duo_color_cyan",
									TWO_COLORS_RANDOM: "2-colors-ball/2_colors_random",
									THREE_THUNDERS_BALL: "3-thunders-ball/3_thunders_ball",
									THREE_THUNDERS_BALL_THUNDER: "3-thunders-ball/thunder",
									BAT: "bat-ball/bat",
									BAT_HEAD: "bat-ball/bat-head",
									BAT_RIGHT_WING_CLOSED: "bat-ball/bat-wing-close-right",
									BAT_LEFT_WING_CLOSED: "bat-ball/bat-wing-close-left",
									BLACK_HOLE: "black-hole/black-hole",
									PARTICLE_CIRCLE_2: "black-hole/circle-2",
									SWITCH_BLACK_HOLE: "black-hole/switch-black-hole",
									BALL_WHITE: "bubbles/ball_copy",
									CANDLE_BODY: "candle/candle_body",
									CANDLE_HEAD: "candle/candle_head",
									CANDLE_WAX: "candle/candle_wax",
									CANDLE_FIRE: "candle/candle_fire",
									COLOR_BOMB: "color-bomb/color_bomb",
									EARTHEN_POT: "earthen-pot/earthen-pot",
									ELECTRIC_BALL: "electric-ball/electric-ball",
									ELECTRIC_A_PREFIX: "electric-ball/electric_A/electric_A_0",
									ELECTRIC_B_PREFIX: "electric-ball/electric_B/electric_B_0",
									ELECTRIC_C_PREFIX: "electric-ball/electric_C/electric_C_0",
									ELECTRIC_D_PREFIX: "electric-ball/electric_D/electric_D_0",
									ELECTRIC_E_PREFIX: "electric-ball/electric_E/electric_E_0",
									EMPTY_BALL: "empty-ball/empty-ball",
									KEY: "key/key",
									LAMP: "lamp/lamp",
									LAMP_GLOW: "lamp/lamp_glow",
									LAMP_SMOKE_PARTICLE: "lamp/lamp_smoke",
									LAMP_EXPLODE_PARTICLE_1: "lamp/lamp_1",
									LAMP_EXPLODE_PARTICLE_2: "lamp/lamp_2",
									LAMP_EXPLODE_PARTICLE_3: "lamp/lamp_3",
									LAMP_EXPLODE_PARTICLE_4: "lamp/lamp_4",
									FIREFLY_CAP: "lava-ball/firefly_cap",
									FIREFLY_EMPTY_BOTTLE: "lava-ball/firefly_empty_bottle",
									FIREFLY_PREFIX: "lava-ball/lava/firefly_",
									LUCKY_POUCH: "lucky-pouch/lucky_pouch",
									BALL_MIRROR: "mirror-ball/mirror",
									MIRROR_OVERLAY: "mirror-ball/mirror_layer",
									MOVE_ROTATION_BALL: "move-rotation-ball/rotation_ball",
									ROTATOR: "move-rotation-ball/rotator",
									MUD_FULL: "mud/mud_full",
									MUD_HALF: "mud/mud_half",
									MUMMY_FULL: "mummy/stone-normal",
									MUMMY_LOW: "mummy/stone-crack",
									PLUS_BALL: "plus-minus-ball/+1-ball",
									MINUS_BALL: "plus-minus-ball/-1-ball",
									PLUS_BALL_EXPLOSION: "plus-minus-ball/plus-ball-explosion",
									MINUS_BALL_EXPLOSION: "plus-minus-ball/minus-ball-explosion",
									BALL_QUESTION_MARK: "question-mark-ball/question_mark_ball",
									COMPASS: "random-direction-electric-ball/compass",
									COMPASS_NEEDLE: "random-direction-electric-ball/compass_needle",
									COMPASS_HIGHLIGHT: "random-direction-electric-ball/compass_highlight",
									RELIC_MASK_BLUE: "relic-mask/mask_blue",
									RELIC_MASK_GREEN: "relic-mask/mask_green",
									RELIC_MASK_ORANGE: "relic-mask/mask_orange",
									RELIC_MASK_PINK: "relic-mask/mask_pink",
									RELIC_MASK_PURPLE: "relic-mask/mask_purple",
									RELIC_MASK_RED: "relic-mask/mask_red",
									RELIC_MASK_SKY_BLUE: "relic-mask/mask_sky_blue",
									RELIC_MASK_YELLOW: "relic-mask/mask_yellow",
									RELIC_MASK_RANDOM: "relic-mask/mask_random",
									SLATE_STONE: "slate-stone/slate_stone",
									STONE: "stone/metal-ball",
									PREFIX_IRON_SHELL: "sub-grid-objects/cover_ball_",
									HEXAGON_WIRE: "sub-grid-objects/hexagon-wire",
									IRON_BOARD: "sub-grid-objects/ironboard",
									IRON_BOARD_LOCK: "sub-grid-objects/ironboard_lock",
									LADYBIRD: "sub-grid-objects/ladybird",
									LEAVES: "sub-grid-objects/leaves",
									SPIDER: "sub-grid-objects/spider",
									SPIDER_WEB: "sub-grid-objects/spider_web",
									PARTICLE_STAR: "star"
								}
							},
							EFFECTS: {
								KEY: "gameplay-effects",
								TEXTURE: "./assets/textures/8bit/" + a + "x/gameplay-effects-resources.png",
								JSON: "./assets/textures/8bit/" + a + "x/gameplay-effects-resources.json",
								DE_TEXTURE: "./assets/textures/8bit/" + a + "x/gameplay-effects-de-resources.png",
								DE_JSON: "./assets/textures/8bit/" + a + "x/gameplay-effects-de-resources.json",
								ES_TEXTURE: "./assets/textures/8bit/" + a + "x/gameplay-effects-es-resources.png",
								ES_JSON: "./assets/textures/8bit/" + a + "x/gameplay-effects-es-resources.json",
								FR_TEXTURE: "./assets/textures/8bit/" + a + "x/gameplay-effects-fr-resources.png",
								FR_JSON: "./assets/textures/8bit/" + a + "x/gameplay-effects-fr-resources.json",
								HI_TEXTURE: "./assets/textures/8bit/" + a + "x/gameplay-effects-hi-resources.png",
								HI_JSON: "./assets/textures/8bit/" + a + "x/gameplay-effects-hi-resources.json",
								ID_TEXTURE: "./assets/textures/8bit/" + a + "x/gameplay-effects-id-resources.png",
								ID_JSON: "./assets/textures/8bit/" + a + "x/gameplay-effects-id-resources.json",
								IT_TEXTURE: "./assets/textures/8bit/" + a + "x/gameplay-effects-it-resources.png",
								IT_JSON: "./assets/textures/8bit/" + a + "x/gameplay-effects-it-resources.json",
								JA_TEXTURE: "./assets/textures/8bit/" + a + "x/gameplay-effects-ja-resources.png",
								JA_JSON: "./assets/textures/8bit/" + a + "x/gameplay-effects-ja-resources.json",
								PT_TEXTURE: "./assets/textures/8bit/" + a + "x/gameplay-effects-pt-resources.png",
								PT_JSON: "./assets/textures/8bit/" + a + "x/gameplay-effects-pt-resources.json",
								RU_TEXTURE: "./assets/textures/8bit/" + a + "x/gameplay-effects-ru-resources.png",
								RU_JSON: "./assets/textures/8bit/" + a + "x/gameplay-effects-ru-resources.json",
								TR_TEXTURE: "./assets/textures/8bit/" + a + "x/gameplay-effects-tr-resources.png",
								TR_JSON: "./assets/textures/8bit/" + a + "x/gameplay-effects-tr-resources.json",
								ZH_TEXTURE: "./assets/textures/8bit/" + a + "x/gameplay-effects-zh-resources.png",
								ZH_JSON: "./assets/textures/8bit/" + a + "x/gameplay-effects-zh-resources.json",
								FRAME: {
									BLANK: "blank",
									BAT_FLYING_PREFIX: "animations/bat/fly_",
									COLOR_BALL_EXPLOSIVE: "animations/color-ball/explosive_grey_",
									COLOR_BALL_EXPLOSIVE_BOMB: "animations/color-ball/explosive_bomb_",
									BOMB_DRUG_EXPLOSION: "animations/bomb/bomb-drug-explosion",
									PREFIX_COMEBACK_BALL: "animations/comeback-ball/tile_",
									PREFIX_SHINE: "animations/color-bomb/shine_",
									LUCKY_POUCH_PREFIX: "animations/lucky-pouch/lucky_pouch_",
									MUD_SPLASH_01: "animations/mud/mud_splash_01",
									MUD_SPLASH_02: "animations/mud/mud_splash_02",
									MUD_SPLASH_03: "animations/mud/mud_splash_03",
									MUD_SPLASH_04: "animations/mud/mud_splash_04",
									BOMB_DRUG_EXPLOSION_PARTICLES: "particles/bomb/bomb-drug-explosion",
									CANDLE_EXPLODE_PARTICLE_1: "particles/candle/candle_1",
									CANDLE_EXPLODE_PARTICLE_2: "particles/candle/candle_2",
									CANDLE_EXPLODE_PARTICLE_3: "particles/candle/candle_3",
									CANDLE_EXPLODE_PARTICLE_4: "particles/candle/candle_4",
									CANDLE_WAX_EXPLODE_PARTICLE: "particles/candle/candle_wax_explode",
									CANDLE_DROP: "particles/candle/candle_drop",
									EARTHEN_POT_PIECE: "particles/earthen-pot/earthen_pot_piece",
									MIRROR_PIECE_0: "particles/mirror-piece/piece_0",
									MIRROR_PIECE_1: "particles/mirror-piece/piece_1",
									MIRROR_PIECE_2: "particles/mirror-piece/piece_2",
									MIRROR_PIECE_3: "particles/mirror-piece/piece_3",
									ROTATE_PIECE_0: "particles/move-rotation-ball/piece_0",
									ROTATE_PIECE_1: "particles/move-rotation-ball/piece_1",
									ROTATE_PIECE_2: "particles/move-rotation-ball/piece_2",
									ROTATE_PIECE_3: "particles/move-rotation-ball/piece_3",
									STONE_PIECE_1: "particles/mummy/stone_piece_1",
									STONE_PIECE_2: "particles/mummy/stone_piece_2",
									RELIC_MASK_BLUE_PARTICLE_PREFIX: "particles/relic-mask/blue/particle_0",
									RELIC_MASK_GREEN_PARTICLE_PREFIX: "particles/relic-mask/green/particle_0",
									RELIC_MASK_ORANGE_PARTICLE_PREFIX: "particles/relic-mask/orange/particle_0",
									RELIC_MASK_PINK_PARTICLE_PREFIX: "particles/relic-mask/pink/particle_0",
									RELIC_MASK_PURPLE_PARTICLE_PREFIX: "particles/relic-mask/purple/particle_0",
									RELIC_MASK_RED_PARTICLE_PREFIX: "particles/relic-mask/red/particle_0",
									RELIC_MASK_SKY_BLUE_PARTICLE_PREFIX: "particles/relic-mask/sky_blue/particle_0",
									RELIC_MASK_YELLOW_PARTICLE_PREFIX: "particles/relic-mask/yellow/particle_0",
									SPIDER_WEB_PARTICLE_1: "particles/spider-web/spider_web_1",
									SPIDER_WEB_PARTICLE_2: "particles/spider-web/spider_web_2",
									SPIDER_WEB_PARTICLE_3: "particles/spider-web/spider_web_3",
									SPIDER_WEB_PARTICLE_4: "particles/spider-web/spider_web_4",
									PARTICLE_DUST_01: "particles/others/dust-01",
									PARTICLE_DUST_02: "particles/others/dust-02",
									PARTICLE_CIRCLE_1: "particles/others/circle-1",
									PARTICLE_CIRCLE_2: "particles/others/circle-2",
									PARTICLE_STAR: "particles/others/star",
									PARTICLE_STARS: "particles/others/stars",
									PARTICLE_LEAF: "particles/others/leaf",
									GLOW_3: "others/glow03",
									GLOW_4: "others/glow04",
									GLOW_7: "others/glow07",
									TAIL: "others/tail",
									RING_EFFECT: "others/ring",
									RING31: "others/ring31",
									TEXT_BOMB: "others/bomb-text",
									TEXT_ROCKET: "others/rocket-text",
									RAINBOW_EFFECT: "others/rainbow",
									FX_ELECTRIC: "others/fx_electric",
									TEXT_LEVEL_COMPLETED: "level-completed"
								}
							}
						},
						FIRST_10_LEVELS_GAME_OBJECTS: {
							KEY: "first-10-levels-game-objects",
							TEXTURE: "./assets/textures/32bit/" + a + "x/first-10-levels-game-objects-resources.png",
							JSON: "./assets/textures/32bit/" + a + "x/first-10-levels-game-objects-resources.json",
							FRAME: {
								SHOOTER: "shooter",
								CURVE_ARROW: "curve-arrow",
								HIGHLIGHT_CIRCLE: "highlight-circle",
								BOMB_DRUG: "bomb-drug/bomb-drug",
								ELECTRIC_EXPLODE: "shot-guide/electric/straight",
								BALL_BLUE: "bubbles/ball_blue",
								BALL_CYAN: "bubbles/ball_cyan",
								BALL_GREEN: "bubbles/ball_green",
								BALL_PINK: "bubbles/ball_pink",
								BALL_RED: "bubbles/ball_red",
								BALL_VIOLET: "bubbles/ball_violet",
								BALL_YELLOW: "bubbles/ball_yellow",
								BALL_ORANGE: "bubbles/ball_orange",
								THUNDER_BALL_GLOW: "bubbles/thunder-ball-glow",
								BALL_TRANSPARENT: "bubbles/ball_transparent",
								THUNDER2_BLUE: "thunder/thunder_blue",
								THUNDER2_GREEN: "thunder/thunder_green",
								THUNDER2_ORANGE: "thunder/thunder_orange",
								THUNDER2_PINK: "thunder/thunder_pink",
								THUNDER2_PURPLE: "thunder/thunder_purple",
								THUNDER2_RED: "thunder/thunder_red",
								THUNDER2_SKY_BLUE: "thunder/thunder_skyblue",
								THUNDER2_YELLOW: "thunder/thunder_yellow",
								THUNDER_GLOW: "thunder/thunder_glow",
								GEM_BLUE: "gem-ball/gem_blue",
								GEM_CYAN: "gem-ball/gem_cyan",
								GEM_GREEN: "gem-ball/gem_green",
								GEM_PINK: "gem-ball/gem_pink",
								GEM_RED: "gem-ball/gem_red",
								GEM_PURPLE: "gem-ball/gem_purple",
								GEM_YELLOW: "gem-ball/gem_yellow",
								GEM_ORANGE: "gem-ball/gem_orange",
								SHOT_GUIDE_CURVE: "shot-guide/curve",
								SHOT_GUIDE_BOMB_STRAIGHT: "shot-guide/bomb/straight",
								SHOT_GUIDE_BOMB_BG_POINT: "shot-guide/bomb/bg_point",
								SHOT_GUIDE_BLUE_STRAIGHT: "shot-guide/blue/straight",
								SHOT_GUIDE_BLUE_BG_POINT: "shot-guide/blue/bg_point",
								SHOT_GUIDE_GREEN_STRAIGHT: "shot-guide/green/straight",
								SHOT_GUIDE_GREEN_BG_POINT: "shot-guide/green/bg_point",
								SHOT_GUIDE_ELECTRIC_STRAIGHT: "shot-guide/electric/straight",
								SHOT_GUIDE_ELECTRIC_BG_POINT: "shot-guide/electric/bg_point",
								SHOT_GUIDE_ORANGE_STRAIGHT: "shot-guide/orange/straight",
								SHOT_GUIDE_ORANGE_BG_POINT: "shot-guide/orange/bg_point",
								SHOT_GUIDE_PINK_STRAIGHT: "shot-guide/pink/straight",
								SHOT_GUIDE_PINK_BG_POINT: "shot-guide/pink/bg_point",
								SHOT_GUIDE_VIOLET_STRAIGHT: "shot-guide/violet/straight",
								SHOT_GUIDE_VIOLET_BG_POINT: "shot-guide/violet/bg_point",
								SHOT_GUIDE_RAINBOW_STRAIGHT: "shot-guide/rainbow/straight",
								SHOT_GUIDE_RAINBOW_BG_POINT: "shot-guide/rainbow/bg_point",
								SHOT_GUIDE_RED_STRAIGHT: "shot-guide/red/straight",
								SHOT_GUIDE_RED_BG_POINT: "shot-guide/red/bg_point",
								SHOT_GUIDE_ROCKET_STRAIGHT: "shot-guide/rocket/straight",
								SHOT_GUIDE_ROCKET_BG_POINT: "shot-guide/rocket/bg_point",
								SHOT_GUIDE_CYAN_STRAIGHT: "shot-guide/cyan/straight",
								SHOT_GUIDE_CYAN_BG_POINT: "shot-guide/cyan/bg_point",
								SHOT_GUIDE_YELLOW_STRAIGHT: "shot-guide/yellow/straight",
								SHOT_GUIDE_YELLOW_BG_POINT: "shot-guide/yellow/bg_point",
								BULLET_ITEM_SIMULATOR: "shot-guide/bullet-item-simulator"
							}
						},
						EDITOR: {
							KEY: "editor",
							TEXTURE: "./assets/textures/8bit/" + a + "x/editor.png",
							JSON: "./assets/textures/8bit/" + a + "x/editor.json",
							FRAME: {
								BLANK: "blank",
								BACKGROUND: "Background",
								BUBBLE_TRANSPARENT: "bubble-transparent",
								BUBBLE_HOVER: "bubble-hover",
								BUBBLE_SELECTED: "bubble-selected",
								GENERATE_BUTTON: "main_panel/generate_button",
								ADD_BUTTON: "small_button_add",
								REMOVE_BUTTON: "small_button_remove",
								EDIT_BUTTON: "small_button_edit",
								FILL_BUTTON: "small_button_fill",
								POPUP: "items_popover_back",
								BUTTON_NEXT_LEVEL: "main_panel/button_next_level",
								BUTTON_PREV_LEVEL: "main_panel/button_prev_level",
								EXIT_ICON: "main_panel/exit_icon",
								PLAY_ICON: "main_panel/play_icon",
								SAVE_ICON: "main_panel/save_icon",
								CREATE_ICON: "main_panel/create_icon_2",
								REMOVE_ICON: "main_panel/remove_icon",
								SWAP_ICON: "main_panel/swap_button",
								PANEL_SEPARATOR: "main_panel/panel_separator"
							}
						},
						DEMO_SPINE: {
							KEY: "demo-spine",
							jsonPATH: "./assets/spines/demo/demo.json",
							atlasPATH: "./assets/spines/demo/demo.atlas"
						},
						GUIDE: {
							KEY: "guide",
							URL: "./assets/textures/8bit/" + a + "x/",
							JSON: "./assets/textures/8bit/" + a + "x/guide.json",
							FRAME: {
								BLANK: "blank",
								CIRCLE: "circle",
								GUIDE_WHITE_BALL: "guide-white-ball",
								GUIDE_BAT_BALL: "guide-bat-ball",
								GUIDE_EARTHEN_POT: "guide-earthen-pot",
								GUIDE_ELECTRIC_BALL: "guide-electric-ball",
								GUIDE_THUNDER_BALL: "guide-thunder-ball",
								GUIDE_DRUG_BOMB: "guide-drug-bomb",
								GUIDE_HEXAGON_WIRE: "guide-hexagon-wire",
								GUIDE_STONE: "guide-stone",
								GUIDE_BLACK_HOLE: "guide-black-hole",
								GUIDE_PLUS_MINUS_BALL: "guide-plus-minus-ball",
								GUIDE_RELIC_MASK: "guide-relic-mask",
								GUIDE_BEETLE: "guide-beetle",
								GUIDE_CANDLE: "guide-candle",
								GUIDE_COLOR_BOMB: "guide-color-bomb",
								GUIDE_ELECTRIC_BULLET: "guide-electric-bullet",
								GUIDE_EMPTY_BALL: "guide-empty-ball",
								GUIDE_IRON_SHELL: "guide-iron-shell",
								GUIDE_KEY: "guide-key",
								GUIDE_LAMP: "guide-lamp",
								GUIDE_LAVA_BALL: "guide-lava-ball",
								GUIDE_LEAVES: "guide-leaves",
								GUIDE_LUCKY_POUCH: "guide-lucky-pouch",
								GUIDE_MIRROR: "guide-mirror",
								GUIDE_MUD: "guide-mud",
								GUIDE_MUMMY: "guide-mummy",
								GUIDE_QUESTION_MARK_BALL: "guide-question-mark-ball",
								GUIDE_RAINBOW_BULLET: "guide-rainbow-bullet",
								GUIDE_RDE_BALL: "guide-rde-ball",
								GUIDE_ROTATION_WHEEL: "guide-rotation-wheel",
								GUIDE_SLATE_STONE: "guide-slate-stone",
								GUIDE_SPIDER_WEB: "guide-spider-web",
								GUIDE_SPIDER: "guide-spider",
								GUIDE_SWITCH_BLACK_HOLE: "guide-switch-black-hole",
								GUIDE_THREE_THUNDERS_BALL: "guide-three-thunders-ball",
								GUIDE_TWO_COLORS_BALL: "guide-two-colors-ball"
							}
						},
						THEME: {
							DEFAULT: {
								KEY: "theme-default",
								TEXTURE: "./assets/textures/8bit/" + a + "x/theme-default-resources.png",
								JSON: "./assets/textures/8bit/" + a + "x/theme-default-resources.json",
								COLOR: 4864544
							},
							HARD: {
								KEY: "theme-hard",
								TEXTURE: "./assets/textures/8bit/" + a + "x/theme-hard-resources.png",
								JSON: "./assets/textures/8bit/" + a + "x/theme-hard-resources.json",
								COLOR: 4599372
							},
							KEY: "theme",
							FRAME: {
								BG_VALUE_BAR: "background/heart_box",
								POPUP_HEADER: "background/popup_header",
								POPUP_MISSION: "background/popup_mission",
								BUTTON_BLUE_CIRCLE: "buttons/btn_blue_circle",
								BUTTON_CLOSE: "buttons/btn_close",
								BUTTON_RED_CIRCLE: "buttons/btn_red_circle",
								BUTTON_PLAY: "buttons/btn_play",
								POPUP_TOP_LEFT: "popup/top-left",
								POPUP_TOP_MID: "popup/top-middle",
								POPUP_TOP_RIGHT: "popup/top-right",
								POPUP_MID_LEFT: "popup/middle-left",
								POPUP_MID_MID: "popup/middle-middle",
								POPUP_MID_RIGHT: "popup/middle-right",
								POPUP_BOTTOM_LEFT: "popup/bottom-left",
								POPUP_BOTTOM_MID: "popup/bottom-middle",
								POPUP_BOTTOM_RIGHT: "popup/bottom-right",
								POPUP_BOARD_BOTTOM: "popup/board-bottom",
								SETTING_BOX: "popup/popup_setting_box",
								ICON_HEADER: "icons/icon_header",
								ICON_STAR_EMPTY: "icons/star_empty_large",
								ICON_STAR: "icons/star_large",
								PROGRESS_BG: "progress/progress_bg",
								PROGRESS_BAR: "progress/progress_bar"
							}
						},
						THEME_GAMEPLAY: {
							DEFAULT: {
								KEY: "theme-gameplay-default",
								TEXTURE: "./assets/textures/8bit/" + a + "x/theme-gameplay-default-resources.png",
								JSON: "./assets/textures/8bit/" + a + "x/theme-gameplay-default-resources.json",
								COLOR: 4864544
							},
							HARD: {
								KEY: "theme-gameplay-hard",
								TEXTURE: "./assets/textures/8bit/" + a + "x/theme-gameplay-hard-resources.png",
								JSON: "./assets/textures/8bit/" + a + "x/theme-gameplay-hard-resources.json",
								COLOR: 4599372
							},
							KEY: "theme-gameplay",
							FRAME: {
								BG_BAR_TOP: "background/bg_progress_bar",
								BG_MISSION_BAR: "background/mission_box",
								BG_TOP: "background/bg_top",
								BUTTON_BG: "buttons/button_bg",
								BUTTON_RED_CIRCLE: "buttons/btn_red_circle",
								BUTTON_PLAY: "buttons/btn_play",
								BUTTON_GRAY: "buttons/item_box_disable",
								BUTTON_NAVY: "buttons/item_box",
								BUTTON_ORANGE: "buttons/item_box_full",
								PROGRESS_BG: "progress/progress_bg",
								PROGRESS_BAR: "progress/progress_bar",
								STAR_EMPTY: "progress/star-empty",
								STAR_FULL: "progress/star-full",
								TOP_LINE: "top-line",
								ICON_PAUSE: "icon_pause"
							}
						}
					};
				GameCore.Utils.Valid.isDebugger() && (s.EFFECTS.FRAME = (0, n.Z)({}, s.ANIMATION_SCENE.FRAME, s.EFFECTS.FRAME)), t.Z = s
			},
			58123: function(e, t, i) {
				"use strict";
				i.d(t, {
					C: function() {
						return a
					},
					K: function() {
						return s
					}
				});
				var n = i(65420),
					a = {
						BOOT_SCENE: "BOOT_SCENE",
						LOAD_SCENE: "LOAD_SCENE",
						GAME_SCENE: "GAME_SCENE",
						GLOBAL_SCENE: "GLOBAL_SCENE",
						DASHBOARD_SCENE: "DASHBOARD_SCENE",
						GAME_OVER_SCENE: "GAME_OVER_SCENE",
						LEADERBOARD_SCENE: "LEADERBOARD_SCENE",
						TOURNAMENT_SCENE: "TOURNAMENT_SCENE",
						RESULT_MATCH_SCENE: "RESULT_MATCH_SCENE",
						RESULT_ONLINE_SCENE: "RESULT_ONLINE_SCENE",
						ERROR_SCENE: "ERROR_SCENE",
						LEVEL_EDITOR_SCENE: "LEVEL_EDITOR",
						TEST_SCENE: "TEST_SCENE",
						ANIMATIONS_SCENE: "ANIMATIONS_SCENE"
					},
					s = {
						SWITCH: i.n(n)()("SWITCH")
					}
			},
			58644: function(e, t, i) {
				"use strict";
				i.d(t, {
					o4: function() {
						return n
					},
					Ks: function() {
						return a
					}
				});
				var n = {
						READY_SCREEN: "READY_SCREEN",
						GUIDE_SCREEN: "GUIDE_SCREEN",
						PAUSE_SCREEN: "PAUSE_SCREEN",
						RESCUE_SCREEN: "RESCUE_SCREEN",
						NOT_ENOUGH_COINS_SCREEN: "NOT_ENOUGH_COINS_SCREEN",
						GAME_OVER_SCREEN: "GAME_OVER_SCREEN",
						NEXT_LEVEL_SCREEN: "NEXT_LEVEL_SCREEN",
						REWARD_TREASURE_SCREEN: "REWARD_TREASURE_SCREEN",
						PRODUCT_RECEIVE_SCREEN: "PRODUCT_RECEIVE_SCREEN",
						BUY_ITEM_SCREEN: "BUY_ITEM_SCREEN",
						NOTIFY_SCREEN: "NOTIFY_SCREEN",
						REWARD_SCREEN: "REWARD_SCREEN",
						SETTINGS_SCREEN: "SETTINGS_SCREEN",
						BEST_SCORE_SCREEN: "BEST_SCORE_SCREEN",
						DAILY_REWARD_SCREEN: "DAILY_REWARD_SCREEN",
						OFFLINE_REWARD_SCREEN: "OFFLINE_REWARD_SCREEN",
						DAILY_MISSIONS_SCREEN: "DAILY_MISSIONS_SCREEN",
						LUCKY_REWARD_SCREEN: "LUCKY_REWARD_SCREEN",
						STORE_SCREEN: "STORE_SCREEN",
						DAILY_SPIN_SCREEN: "DAILY_SPIN_SCREEN",
						REWARD_SPIN_ITEM_SCREEN: "REWARD_SPIN_ITEM_SCREEN",
						INTRO_LEVEL_SCREEN: "INTRO_LEVEL_SCREEN",
						REMOVE_ADS_SCREEN: "REMOVE_ADS_SCREEN",
						REWARD_DAILY_ITEM_SCREEN: "REWARD_DAILY_ITEM_SCREEN",
						SPECIAL_EVENT_SCREEN: "SPECIAL_EVENT_SCREEN",
						SPECIAL_EVENT_REWARDS_SCREEN: "SPECIAL_EVENT_REWARDS_SCREEN"
					},
					a = {
						SCREEN: 200,
						POPUP: 300,
						PRIORITY: 999
					}
			},
			4396: function(e, t) {
				"use strict";
				t.Z = {
					CONGRATULATION: "congratulation",
					DAILY_REWARD: "daily_reward",
					DIAMONDS_EAT: "diamonds_eat",
					GAME_OVER_SCENE: "game_over_scene",
					GIFT_CHARGE: "gift_charge",
					GIFT_EXPLODE: "gift_explode",
					GIFT_REVEAL: "gift_reveal",
					GIFT_RECEIVED: "gift_received",
					CHEERING: "cheering",
					START_GAME: "start_game",
					YOU_WIN: "you_win",
					YOU_LOSE: "you_lose",
					BUBBLE_IN_THE_HOLE: "bubble_in_the_hole",
					BUBBLE_POP: "bubble_pop",
					BUTTON: "button",
					GEM_EXPLODE: "gem_explode",
					NO_CLEAR_BUBBLE: "no_clear_bubble",
					POPUP_IN: "popup_in",
					POPUP_OUT: "popup_out",
					SHOOT_BUBBLE: "shoot_bubble",
					BOMB_ITEM_EXPLODE: "bomb_item_explode",
					RAINBOW_ITEM_EXPLODE: "rainbow_item_explode",
					ROCKET_ITEM_EXPLODE: "rocket_item_explode",
					LEAVES_EXPLODE: "leaves_explode",
					SPIDER_WEB_EXPLODE: "spider_web_explode",
					BLACK_HOLE: "black_hole",
					ELECTRIC_EXPLODE: "electric_explode",
					MIRROR_BREAK: "mirror_break",
					COPY_BALL_EXPLODE: "copy_ball_explode",
					POT_BREAK: "pot_break",
					SWITCH_BALL: "switch_ball",
					COLOR_BOMB_EXPLODE: "color_bomb_explode",
					BOMB_EXPLODE: "bomb_explode",
					COMPASS_EXPLODE: "compass_explode",
					FIREFLIES_EXPLODE: "fireflies_explode",
					STAR_PROGRESS: "star_progress",
					STAR_PROGRESS_1: "star_progress_1",
					STAR_PROGRESS_2: "star_progress_2",
					STAR_PROGRESS_3: "star_progress_3",
					STONE_EXPLODE_1: "stone_explode_1",
					STONE_EXPLODE_2: "stone_explode_2",
					THUNDER_BALL_EXPLODE: "thunder_ball_explode",
					COMBO_REACH: "combo_reached",
					TING: "ting",
					DAILY_SPIN: "daily_spin",
					BAT_FLYING: "bat_flying",
					GOAL_PROGRESS: "goal_progress",
					BUBBLE_BOUNCE: "bubble_bounce",
					FIREFLIES: "fireflies",
					CONFETTI: "confetti"
				}
			},
			52714: function(e, t, i) {
				"use strict";
				var n, a = i(54255).Z.DEFAULT,
					s = a.KEY,
					o = a.FRAME,
					r = {
						STARTER_BUNDLE: "starter_bundle",
						COIN_150: "coin_150",
						COIN_300: "coin_300",
						COIN_250: "coin_250",
						COIN_500: "coin_500",
						COIN_1000: "coin_1000",
						COIN_1500: "coin_1500",
						REMOVE_AD_30: "remove_ad_30",
						EXPERT_BUNDLE: "expert_bundle",
						BAG_COIN_COMBO: "bag_coin_combo",
						CHEST_COIN_COMBO: "chest_coin_combo",
						CASTLE_COIN_COMBO: "castle_coin_combo",
						KINGDOM_COMBO: "kingdom_combo"
					},
					l = {
						PRODUCTS: ((n = {})[r.STARTER_BUNDLE] = {
							itemsDataByKey: {
								Coin: 250,
								RainbowBulletBallItem: 1,
								ElectricBulletBallItem: 1,
								RocketBulletItem: 1
							},
							type: "Bundle",
							background: {
								key: s,
								frame: o.BG_POPUP_STORE_SPECIAL,
								width: 349.5,
								height: 157
							},
							title: "Starter Bundle",
							storeBundle: {
								key: s,
								frame: o.ICON_STORE_BUNDLE,
								width: 105.5,
								height: 79.5
							}
						}, n[r.EXPERT_BUNDLE] = {
							itemsDataByKey: {
								Coin: 500,
								RainbowBulletBallItem: 1,
								ElectricBulletBallItem: 3
							},
							type: "Bundle",
							background: {
								key: s,
								frame: o.BG_POPUP_STORE_SPECIAL,
								width: 349.5,
								height: 157
							},
							title: "Expert Bundle",
							storeBundle: {
								key: s,
								frame: o.ICON_STORE_BUNDLE,
								width: 105.5,
								height: 79.5
							}
						}, n[r.REMOVE_AD_30] = {
							itemsDataByKey: {},
							type: "RemoveAds",
							background: {
								key: s,
								frame: o.BG_POPUP_STORE,
								width: 349.5,
								height: 74.5
							},
							icon: {
								key: s,
								frame: o.ICON_ADS,
								worldWidth: 55.6,
								worldHeight: 58
							},
							removeAdDays: 30
						}, n[r.COIN_250] = {
							itemsDataByKey: {
								Coin: 250
							},
							type: "Normal",
							background: {
								key: s,
								frame: o.BG_POPUP_STORE,
								width: 349.5,
								height: 74.5
							},
							icon: {
								key: s,
								frame: o.ICON_STORE_COIN_SMALL,
								worldWidth: 55.5,
								worldHeight: 46.5
							}
						}, n[r.BAG_COIN_COMBO] = {
							itemsDataByKey: {
								Coin: 450,
								BombBulletItem: 1
							},
							type: "Combo",
							background: {
								key: s,
								frame: o.BG_POPUP_STORE,
								width: 349.5,
								height: 90
							},
							title: "A Bag Of Coins",
							icon: {
								key: s,
								frame: o.ICON_WHEEL_COIN_25,
								worldWidth: 42.5,
								worldHeight: 44
							}
						}, n[r.CHEST_COIN_COMBO] = {
							itemsDataByKey: {
								Coin: 1e3,
								RainbowBulletBallItem: 1
							},
							type: "Combo",
							background: {
								key: s,
								frame: o.BG_POPUP_STORE,
								width: 349.5,
								height: 90
							},
							title: "A Chest Of Coins",
							icon: {
								key: s,
								frame: o.ICON_STORE_COIN_SMALL,
								worldWidth: 55.5,
								worldHeight: 46.5
							}
						}, n[r.CASTLE_COIN_COMBO] = {
							itemsDataByKey: {
								Coin: 1500,
								ElectricBulletBallItem: 1,
								RocketBulletItem: 1
							},
							type: "Combo",
							background: {
								key: s,
								frame: o.BG_POPUP_STORE,
								width: 349.5,
								height: 90
							},
							title: "A Castle Of Coins",
							icon: {
								key: s,
								frame: o.ICON_WHEEL_COIN_100,
								worldWidth: 59.5,
								worldHeight: 63
							}
						}, n[r.KINGDOM_COMBO] = {
							itemsDataByKey: {
								Coin: 2750,
								RainbowBulletBallItem: 1,
								ElectricBulletBallItem: 1,
								BombBulletItem: 1,
								RocketBulletItem: 1
							},
							type: "Combo",
							background: {
								key: s,
								frame: o.BG_POPUP_STORE,
								width: 349.5,
								height: 90
							},
							title: "A Kingdom Of Coins",
							icon: {
								key: s,
								frame: o.ICON_STORE_COIN_BIG,
								worldWidth: 87.5,
								worldHeight: 56.5
							}
						}, n),
						SHOW_LESS_PRODUCTS: [r.STARTER_BUNDLE, r.COIN_250, r.BAG_COIN_COMBO, r.CHEST_COIN_COMBO],
						ID: r
					};
				t.Z = l
			},
			92439: function(e, t, i) {
				"use strict";
				i.d(t, {
					H: function() {
						return n
					}
				});
				var n = ["ElectricBulletBallItem", "RainbowBulletBallItem", "RocketBulletItem", "Coin", "Coin10", "Coin25", "Coin50", "Coin100", "BombBulletItem"];
				t.Z = ["BombBulletItem", "ElectricBulletBallItem", "RainbowBulletBallItem", "RocketBulletItem", "Coin"]
			},
			45576: function(e, t, i) {
				"use strict";
				var n = i(5281),
					a = i(41819),
					s = i(54255).Z.EFFECTS,
					o = s.KEY,
					r = s.FRAME,
					l = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).halo = void 0, i.star = void 0, i.createStar(), i.createHalo(), i.scene.add.existing((0, n.Z)(i)), i
						}(0, a.Z)(t, e);
						var i = t.prototype;
						return i.run = function() {
							this.runStarAnimation(), this.runHaloAnimation()
						}, i.createStar = function() {
							this.star = this.scene.make.image({
								key: o,
								frame: r.FX_STAR_YELLOW,
								visible: !1
							}), this.star.setWorldSize(35, 35), this.add(this.star)
						}, i.createHalo = function() {
							this.halo = this.scene.make.image({
								key: o,
								frame: r.FX_CIRCLE,
								visible: !1
							}), this.halo.setWorldSize(162, 162), this.add(this.halo)
						}, i.runStarAnimation = function() {
							this.scene.tweens.killTweensOf(this.star), this.star.setVisible(!0);
							var e = 1 / this.scene.world.getPixelRatio();
							this.scene.tweens.add({
								targets: [this.star],
								duration: 400,
								ease: Phaser.Math.Easing.Quintic.Out,
								props: {
									scaleX: {
										start: 16 * e,
										to: 0
									},
									scaleY: {
										start: 10 * e,
										to: 0
									}
								},
								onComplete: function() {}
							})
						}, i.runHaloAnimation = function() {
							this.scene.tweens.killTweensOf(this.halo);
							var e = 1 / this.scene.world.getPixelRatio();
							this.halo.setScale(e), this.halo.setVisible(!0), this.scene.tweens.add({
								targets: [this.halo],
								duration: 200,
								ease: Phaser.Math.Easing.Cubic.Out,
								props: {
									scale: {
										from: e,
										to: 5 * e
									},
									alpha: {
										from: 1,
										to: 0
									}
								},
								onComplete: function() {}
							})
						}, t
					}(Phaser.GameObjects.Container);
				t.Z = l
			},
			25465: function(e, t, i) {
				"use strict";
				var n = i(5281),
					a = i(41819),
					s = i(54255),
					o = i(59906),
					r = i(20468),
					l = i(97261),
					c = i(4396),
					h = s.Z.EFFECTS,
					u = h.KEY,
					d = h.FRAME,
					p = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).coinGroup = void 0, i.containerGroup = void 0, i.startsExplosive = void 0, i.startsExplosiveSmall = void 0, i.startsExplosiveSmallTimer = void 0, i.gravity = 300, i.setVisible(!0), i.coinGroup = i.scene.add.group({
								defaultKey: u,
								defaultFrame: d.COIN
							}), i.containerGroup = i.scene.add.group({
								classType: Phaser.GameObjects.Container
							}), i.startsExplosive = new o.Z(t), i.startsExplosive.setDepth(r.Z.ON_TOP + 1), i.startsExplosiveSmall = new l.Z(t), i.startsExplosiveSmall.setDepth(r.Z.ON_TOP + 1), i.scene.add.existing((0, n.Z)(i)), i
						}(0, a.Z)(t, e);
						var i = t.prototype;
						return i.createConfigOne = function(e, t, i) {
							var n = this,
								a = e / 300,
								s = new Phaser.Math.Vector2(0, 0),
								o = new Phaser.Math.Vector2(0, -e),
								r = i ? -1 : 1,
								l = Phaser.Math.RND.between(-90, 90),
								h = (l + 90) / 180 * 180 * (l < 0 ? 1 : (300 - Math.abs(l)) / 300) * a,
								u = Phaser.Math.RND.between(20, h + 20),
								d = new Phaser.Math.Vector2(1, 0);
							d.setAngle(l * Math.PI / 180);
							var p = Phaser.Math.RND.between(-Math.abs(l) - 15, 15 - Math.abs(l)),
								m = u * (100 - Math.abs(l)) / 100 * a,
								f = Phaser.Math.RND.between(.2 * m, m),
								g = new Phaser.Math.Vector2(1, 0);
							g.setAngle(p * Math.PI / 180);
							var v = r * d.x * u,
								y = d.y * u,
								b = r * g.x * f,
								E = g.y * f - e,
								T = new Phaser.Math.Vector2(v, y),
								A = new Phaser.Math.Vector2(b, E),
								S = new Phaser.Curves.CubicBezier(s, T, A, o),
								_ = Phaser.Math.RND.between(1500 + 3 * u, 2e3 + 3 * u),
								C = this.coinGroup.get(0, 0);
							return C.revive(), C.setRotation(-t.rotation), C.setWorldSize(24, 22), t.add(C), {
								from: 0,
								to: 1,
								duration: _,
								ease: "Sine.In",
								onUpdate: function(e) {
									var t = S.getPointAt(e.getValue());
									C.setPosition(t.x, t.y)
								},
								onComplete: function(e) {
									if (C.kill(), !(e.totalProgress < 1) && (n.scene.audio.playSound(c.Z.TING), !n.startsExplosiveSmallTimer || n.startsExplosiveSmallTimer.hasDispatched)) {
										n.startsExplosiveSmallTimer = n.scene.time.delayedCall(100, (function() {
											return null
										}));
										var t = C.getWorldPosition();
										n.startsExplosiveSmall.explode(10, t.x, t.y)
									}
								}
							}
						}, i.explode = function(e, t, i, n, a) {
							var s, o = this;
							if (e <= 0) return [];
							this.startsExplosive.explode(30, t, i);
							var r = new Phaser.Math.Vector2(n - t, a - i),
								l = r.length(),
								c = this.containerGroup.get(t, i);
							c.setRotation(r.angle() + Math.PI / 2), c.revive(), this.add(c);
							for (var h = void 0, u = 0, d = [], p = 0; p < e; p++) {
								var m = this.createConfigOne(l, c, p % 2 === 0),
									f = this.scene.tweens.addCounter(m);
								d.push(f), m.duration > u && (u = m.duration, h = f)
							}
							var g = function() {
								var e, t;
								d.forEach((function(e) {
									e.complete()
								})), null == (e = o.startsExplosive.emitters.getAt(0)) || e.killAll(), null == (t = o.startsExplosiveSmall.emitters.getAt(0)) || t.killAll(), c.kill()
							};
							return null == (s = h) || s.once(Phaser.Tweens.Events.TWEEN_COMPLETE, (function() {
								c.kill(), o.scene.events.off("sleep", g)
							})), this.scene.events.once("sleep", g), d
						}, t
					}(Phaser.GameObjects.Container);
				t.Z = p
			},
			352: function(e, t, i) {
				"use strict";
				var n = i(5281),
					a = i(41819),
					s = i(54255).Z.EFFECTS,
					o = s.KEY,
					r = s.FRAME,
					l = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, o, r.FX_STAR_YELLOW) || this).emitZone = void 0, i.emitter = void 0, i.createEmitZone(), i.scene.add.existing((0, n.Z)(i)), i
						}(0, a.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Rectangle
						}, i.createEmitters = function() {
							var e = 1 / this.scene.world.getPixelRatio();
							this.emitter = this.createEmitter({
								on: !1,
								frame: r.FX_COMET,
								emitZone: {
									source: this.emitZone,
									type: "random"
								},
								speed: 20,
								timeScale: 1,
								frequency: 100,
								alpha: {
									start: 1,
									end: 0,
									ease: Phaser.Math.Easing.Expo.Out
								},
								scale: {
									start: 2 * e,
									end: .1 * e,
									ease: Phaser.Math.Easing.Expo.Out
								},
								lifespan: 2666
							})
						}, i.run = function(e, t, i, n, a) {
							this.stop(), this.reset(), this.emitZone.setSize(n, a), this.emitZone.setPosition(t - n / 2, i - a / 2), this.emitter.setQuantity(e), this.emitter.start()
						}, i.explode = function(e, t, i) {
							this.emitter || this.reset(), this.emitter.explode(e, t, i)
						}, i.stop = function() {
							var e, t;
							null == (e = this.emitter) || e.killAll(), null == (t = this.emitter) || t.stop()
						}, i.reset = function() {
							this.createEmitters()
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager);
				t.Z = l
			},
			62157: function(e, t, i) {
				"use strict";
				var n = i(5281),
					a = i(41819),
					s = i(54255),
					o = i(15177),
					r = s.Z.EFFECTS,
					l = r.KEY,
					c = r.FRAME,
					h = function(e) {
						function t(t, i) {
							var a;
							return (a = e.call(this, t, l, c.BLANK) || this).config = void 0, a.emitter = void 0, a.config = i || {}, a.scene.add.existing((0, n.Z)(a)), a
						}(0, a.Z)(t, e);
						var i = t.prototype;
						return i.createEmitters = function() {
							var e = c.FX_CONFETTI_SMALL_1,
								t = c.FX_CONFETTI_SMALL_2,
								i = c.FX_CONFETTI_SMALL_3,
								n = c.FX_CONFETTI_SMALL_4,
								a = 1 / this.scene.world.getPixelRatio(),
								s = {
									on: !1,
									particleBringToTop: !0,
									frame: [e, t, i, n],
									tint: [14223402, 1021804, 5420529, 16702052],
									timeScale: 1,
									frequency: 300,
									maxParticles: 120,
									gravityY: -10,
									speedX: {
										min: -100,
										max: 100
									},
									speedY: {
										min: 80,
										max: 250
									},
									alpha: {
										start: 1,
										end: .8
									},
									rotate: {
										start: 0,
										end: 1080
									},
									scale: {
										min: .8 * a,
										max: a
									},
									angle: {
										min: 20,
										max: 160
									},
									lifespan: {
										min: 8e3,
										max: 12e3
									}
								},
								r = (0, o.TS)(s, this.config);
							this.emitter = this.createEmitter(r)
						}, i.run = function(e, t, i) {
							this.stop(), this.emitter.setQuantity(e), this.emitter.setPosition(t, i), this.emitter.start()
						}, i.explode = function(e, t, i) {
							this.emitter || this.createEmitters(), this.emitter.explode(e, t, i)
						}, i.stop = function() {
							var e, t, i;
							null == (e = this.emitter) || e.killAll(), null == (t = this.emitter) || t.stop(), null == (i = this.emitter) || i.remove(), this.createEmitters()
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager);
				t.Z = h
			},
			75102: function(e, t, i) {
				"use strict";
				var n = i(5281),
					a = i(41819),
					s = i(54255),
					o = i(15177),
					r = s.Z.EFFECTS,
					l = r.KEY,
					c = r.FRAME,
					h = function(e) {
						function t(t, i) {
							var a;
							return (a = e.call(this, t, l, c.BLANK) || this).config = void 0, a.emitter = void 0, a.config = i || {}, a.scene.add.existing((0, n.Z)(a)), a
						}(0, a.Z)(t, e);
						var i = t.prototype;
						return i.createEmitters = function() {
							var e = c.FX_CONFETTI_SMALL_1,
								t = c.FX_CONFETTI_SMALL_2,
								i = c.FX_CONFETTI_SMALL_3,
								n = c.FX_CONFETTI_SMALL_4,
								a = 1 / this.scene.world.getPixelRatio(),
								s = {
									on: !1,
									particleBringToTop: !0,
									frame: [e, t, i, n],
									tint: [14223402, 1021804, 5420529, 16702052],
									timeScale: 1,
									frequency: 300,
									maxParticles: 120,
									alpha: {
										start: 1,
										end: .8
									},
									scale: {
										min: .6 * a,
										max: 1 * a
									},
									lifespan: {
										min: 2e3,
										max: 3e3
									},
									speedX: {
										min: -100,
										max: 100
									},
									speedY: {
										min: -20,
										max: -40
									},
									gravityY: 50,
									rotate: {
										start: -1080,
										end: 0
									},
									angle: {
										min: 110,
										max: 145
									}
								},
								r = (0, o.TS)(s, this.config);
							this.emitter = this.createEmitter(r)
						}, i.run = function(e, t, i) {
							this.stop(), this.emitter.setQuantity(e), this.emitter.setPosition(t, i), this.emitter.start()
						}, i.explode = function(e, t, i) {
							this.emitter || this.createEmitters(), this.emitter.explode(e, t, i)
						}, i.stop = function() {
							var e, t, i;
							null == (e = this.emitter) || e.killAll(), null == (t = this.emitter) || t.stop(), null == (i = this.emitter) || i.remove(), this.createEmitters()
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager);
				t.Z = h
			},
			45353: function(e, t, i) {
				"use strict";
				i.d(t, {
					Z: function() {
						return Te
					}
				});
				var n = i(73126),
					a = i(5281),
					s = i(41819),
					o = i(54255),
					r = i(10515),
					l = r.Z.RIBBON_A,
					c = l.KEY,
					h = l.TEXTURE,
					u = l.FRAME_RATE,
					d = l.END,
					p = l.PREFIX,
					m = l.ZERO_PAD,
					f = function(e) {
						function t(t) {
							var i = {
								repeat: -1,
								frameRate: u,
								frames: t.generateFrameNames(h, {
									prefix: p,
									end: d,
									zeroPad: m,
									start: 1
								}),
								yoyo: !0,
								showOnStart: !0
							};
							return e.call(this, t, c, i) || this
						}
						return (0, s.Z)(t, e), t
					}(Phaser.Animations.Animation),
					g = r.Z.RIBBON_B,
					v = g.KEY,
					y = g.TEXTURE,
					b = g.FRAME_RATE,
					E = g.END,
					T = g.PREFIX,
					A = g.ZERO_PAD,
					S = function(e) {
						function t(t) {
							var i = {
								repeat: -1,
								frameRate: b,
								frames: t.generateFrameNames(y, {
									prefix: T,
									end: E,
									zeroPad: A,
									start: 1
								}),
								yoyo: !0,
								showOnStart: !0
							};
							return e.call(this, t, v, i) || this
						}
						return (0, s.Z)(t, e), t
					}(Phaser.Animations.Animation),
					_ = r.Z.RIBBON_C,
					C = _.KEY,
					w = _.TEXTURE,
					B = _.FRAME_RATE,
					I = _.END,
					P = _.PREFIX,
					x = _.ZERO_PAD,
					O = function(e) {
						function t(t) {
							var i = {
								repeat: -1,
								frameRate: B,
								frames: t.generateFrameNames(w, {
									prefix: P,
									end: I,
									zeroPad: x,
									start: 1
								}),
								yoyo: !0,
								showOnStart: !0
							};
							return e.call(this, t, C, i) || this
						}
						return (0, s.Z)(t, e), t
					}(Phaser.Animations.Animation),
					k = r.Z.RIBBON_D,
					R = k.KEY,
					M = k.TEXTURE,
					L = k.FRAME_RATE,
					G = k.END,
					D = k.PREFIX,
					F = k.ZERO_PAD,
					N = function(e) {
						function t(t) {
							var i = {
								repeat: -1,
								frameRate: L,
								frames: t.generateFrameNames(M, {
									prefix: D,
									end: G,
									zeroPad: F,
									start: 1
								}),
								yoyo: !0,
								showOnStart: !0
							};
							return e.call(this, t, R, i) || this
						}
						return (0, s.Z)(t, e), t
					}(Phaser.Animations.Animation),
					Z = r.Z.CONFETTI_STAR_X,
					U = Z.KEY,
					j = Z.TEXTURE,
					Y = Z.FRAME_RATE,
					W = Z.END,
					K = Z.PREFIX,
					H = Z.ZERO_PAD,
					z = function(e) {
						function t(t) {
							var i = {
								repeat: -1,
								frameRate: Y,
								frames: t.generateFrameNames(j, {
									prefix: K,
									end: W,
									zeroPad: H,
									start: 1
								}),
								yoyo: !0,
								showOnStart: !0
							};
							return e.call(this, t, U, i) || this
						}
						return (0, s.Z)(t, e), t
					}(Phaser.Animations.Animation),
					X = r.Z.CONFETTI_STAR_Y,
					V = X.KEY,
					J = X.TEXTURE,
					q = X.FRAME_RATE,
					Q = X.END,
					$ = X.PREFIX,
					ee = X.ZERO_PAD,
					te = function(e) {
						function t(t) {
							var i = {
								repeat: -1,
								frameRate: q,
								frames: t.generateFrameNames(J, {
									prefix: $,
									end: Q,
									zeroPad: ee,
									start: 1
								}),
								showOnStart: !0
							};
							return e.call(this, t, V, i) || this
						}
						return (0, s.Z)(t, e), t
					}(Phaser.Animations.Animation),
					ie = i(2991),
					ne = i.n(ie),
					ae = i(44494),
					se = i.n(ae),
					oe = i(3649),
					re = i.n(oe),
					le = i(66419),
					ce = i.n(le),
					he = i(65420),
					ue = i.n(he),
					de = i(19996),
					pe = i.n(de);

				function me(e, t) {
					var i = "undefined" !== typeof ue() && pe()(e) || e["@@iterator"];
					if (i) return (i = i.call(e)).next.bind(i);
					if (Array.isArray(e) || (i = function(e, t) {
							var i;
							if (!e) return;
							if ("string" === typeof e) return fe(e, t);
							var n = re()(i = Object.prototype.toString.call(e)).call(i, 8, -1);
							"Object" === n && e.constructor && (n = e.constructor.name);
							if ("Map" === n || "Set" === n) return ce()(e);
							if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return fe(e, t)
						}(e)) || t && e && "number" === typeof e.length) {
						i && (e = i);
						var n = 0;
						return function() {
							return n >= e.length ? {
								done: !0
							} : {
								done: !1,
								value: e[n++]
							}
						}
					}
					throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
				}

				function fe(e, t) {
					(null == t || t > e.length) && (t = e.length);
					for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
					return n
				}
				var ge = function(e) {
						function t(t) {
							var i, n, a;
							return (a = e.call(this, t) || this).scene = void 0, a.ribbon = void 0, a.graphics = void 0, a.colorUse = void 0, a.lastChange = void 0, a.currentFrame = void 0, a.isYoyo = void 0, a.isGravityChanged = void 0, a.points = void 0, a.scene = t.manager.scene, a.points = ne()(i = se()(n = new Array(10)).call(n, null)).call(i, (function() {
								return {
									x: 0,
									y: 0
								}
							})), a.isYoyo = !1, a.isGravityChanged = !1, a.lastChange = 0, a.currentFrame = -1, a.createGraphics(), a.randomRibbonUsedWhenFall(), a
						}(0, s.Z)(t, e);
						var i = t.prototype;
						return i.randomRibbonUsedWhenFall = function() {
							switch (Phaser.Math.Between(0, 3)) {
								default:
									this.ribbon = this.scene.anims.get(r.Z.RIBBON_A.KEY);
									break;
								case 1:
									this.ribbon = this.scene.anims.get(r.Z.RIBBON_B.KEY);
									break;
								case 2:
									this.ribbon = this.scene.anims.get(r.Z.RIBBON_C.KEY);
									break;
								case 3:
									this.ribbon = this.scene.anims.get(r.Z.RIBBON_D.KEY)
							}
						}, i.setRibbonPosition = function(e, t) {
							var i;
							ne()(i = this.points).call(i, (function(i) {
								i.x = e, i.y = t
							}))
						}, i.createGraphics = function() {
							var e = [8443204, 2928867, 12013036, 16376097, 15285798];
							this.colorUse = e[Phaser.Math.Between(0, e.length - 1)], this.graphics = this.scene.add.graphics({
								lineStyle: {
									width: 3,
									color: this.colorUse
								}
							});
							var t = this.emitter.manager,
								i = t.x,
								n = t.y,
								a = t.depth;
							this.graphics.setDepth(a), this.graphics.setPosition(i, n)
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.updateFrames(t), this.updatePoints(), this.updateGraphics(), this.updateGravity(), this.updateVelocity(), this.updateColor(), a
						}, i.updateFrames = function(e) {
							this.lastChange += e, this.lastChange >= this.ribbon.msPerFrame && (this.isYoyo ? this.currentFrame-- : this.currentFrame++, this.currentFrame < 0 && (this.isYoyo = !1, this.currentFrame = 1), this.currentFrame >= this.ribbon.frames.length && (this.isYoyo = !0, this.currentFrame -= 1), this.frame = this.ribbon.frames[this.currentFrame].frame, this.lastChange -= this.ribbon.msPerFrame)
						}, i.updatePoints = function() {
							this.graphics.visible && (this.points.shift(), this.points.push({
								x: this.x,
								y: this.y
							}))
						}, i.updateGraphics = function() {
							if (this.graphics.visible) {
								for (var e, t = me(this.points); !(e = t()).done;) {
									if (0 === e.value.y) return
								}
								this.graphics.clear(), this.graphics.strokePoints(this.points)
							}
						}, i.updateGravity = function() {
							this.lifeCurrent > this.life - 2e3 || this.isGravityChanged || (this.isGravityChanged = !0, this.graphics.destroy(), this.emitter.setVisible(!0), this.emitter.setGravityY(45))
						}, i.updateVelocity = function() {
							this.graphics.visible && (this.lifeCurrent > this.life - 1800 ? this.velocityX += Phaser.Math.Between(-12, 12) : this.velocityX > 0 ? this.velocityX += Phaser.Math.Between(-10, 6) : this.velocityX += Phaser.Math.Between(-6, 10))
						}, i.updateColor = function() {
							this.graphics.visible || (this.tint = this.colorUse)
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					ve = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.isYoyo = void 0, i.isGravityChanged = void 0, i.lastChange = void 0, i.currentFrame = void 0, i.star = void 0, i.starX = void 0, i.starY = void 0, i.isYoyo = !1, i.isGravityChanged = !1, i.lastChange = 0, i.currentFrame = -1, i.scene = t.manager.scene, i.starX = i.scene.anims.get(r.Z.CONFETTI_STAR_X.KEY), i.starY = i.scene.anims.get(r.Z.CONFETTI_STAR_Y.KEY), i.star = i.starX, i
						}(0, s.Z)(t, e);
						var i = t.prototype;
						return i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.updateGravity(), this.updateVelocity(), this.updateFrameRate(), this.updateFrames(t), a
						}, i.updateGravity = function() {
							this.lifeCurrent > this.life - 2e3 || this.isGravityChanged || (this.isGravityChanged = !0, this.emitter.setGravityY(15), this.emitter.setSpeedX(0))
						}, i.updateVelocity = function() {
							this.lifeCurrent > this.life - 2e3 || (this.velocityX > 0 ? this.velocityX += Phaser.Math.Between(-6, 3) : this.velocityX += Phaser.Math.Between(-3, 6))
						}, i.updateFrames = function(e) {
							if (this.lastChange += e, this.lastChange >= this.star.msPerFrame) {
								var t = Phaser.Math.RND.between(0, 1);
								this.star = t > 0 ? this.starX : this.starY, this.isYoyo ? this.currentFrame-- : this.currentFrame++, this.currentFrame < 0 && (this.isYoyo = !1, this.currentFrame = 1, this.emitter.setAlpha(1)), this.currentFrame >= this.star.frames.length && (this.isYoyo = !0, this.currentFrame -= 1, this.emitter.setAlpha(.8)), this.frame = this.star.frames[this.currentFrame].frame, this.lastChange -= this.star.msPerFrame
							}
						}, i.updateFrameRate = function() {
							this.lifeCurrent < this.life - 2e3 ? this.star.msPerFrame = 150 : this.star.msPerFrame = Phaser.Math.RND.between(300, 600)
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					ye = o.Z.EFFECTS,
					be = ye.KEY,
					Ee = ye.FRAME,
					Te = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, be, Ee.BLANK) || this).emitterConfetti = void 0, i.emitterRibbons = void 0, i.ribbonConfig = void 0, i.confettiConfig = void 0, i.width = void 0, i.height = void 0, i.emitterRibbons = [], i.emitterConfetti = [], i.createConfigs(), i.createAnimations(), i.scene.add.existing((0, a.Z)(i)), i
						}(0, s.Z)(t, e);
						var i = t.prototype;
						return i.createConfigs = function() {
							var e = 1 / this.scene.world.getPixelRatio();
							this.ribbonConfig = {
								on: !1,
								visible: !1,
								timeScale: 1.5,
								frame: Ee.BLANK,
								particleBringToTop: !0,
								speedY: {
									min: -480,
									max: -560
								},
								gravityY: 290,
								lifespan: {
									min: 4e3,
									max: 6e3
								},
								rotate: {
									start: 0,
									end: 1800,
									random: !0
								},
								scale: {
									min: .6 * e,
									max: e
								},
								particleClass: ge
							}, this.confettiConfig = {
								on: !1,
								delay: 200,
								timeScale: 2,
								tint: [8443204, 2928867, 12013036, 16376097, 15285798],
								particleBringToTop: !0,
								frame: Ee.PREFIX_ANIMATION_RIBBON_CONFETTI_A + "1",
								speedY: {
									min: -460,
									max: -580
								},
								gravityY: 280,
								lifespan: {
									min: 5e3,
									max: 8e3
								},
								rotate: {
									start: 0,
									end: 1080
								},
								scale: {
									min: .6 * e,
									max: e
								},
								particleClass: ve
							}
						}, i.createAnimations = function() {
							if (!this.scene.anims.get(r.Z.CONFETTI_STAR_X.KEY)) {
								var e = new z(this.scene.anims);
								this.scene.anims.add(r.Z.CONFETTI_STAR_X.KEY, e)
							}
							if (!this.scene.anims.get(r.Z.CONFETTI_STAR_Y.KEY)) {
								var t = new te(this.scene.anims);
								this.scene.anims.add(r.Z.CONFETTI_STAR_Y.KEY, t)
							}
							if (!this.scene.anims.get(r.Z.RIBBON_A.KEY)) {
								var i = new f(this.scene.anims);
								this.scene.anims.add(r.Z.RIBBON_A.KEY, i)
							}
							if (!this.scene.anims.get(r.Z.RIBBON_B.KEY)) {
								var n = new S(this.scene.anims);
								this.scene.anims.add(r.Z.RIBBON_B.KEY, n)
							}
							if (!this.scene.anims.get(r.Z.RIBBON_C.KEY)) {
								var a = new O(this.scene.anims);
								this.scene.anims.add(r.Z.RIBBON_C.KEY, a)
							}
							if (!this.scene.anims.get(r.Z.RIBBON_D.KEY)) {
								var s = new N(this.scene.anims);
								this.scene.anims.add(r.Z.RIBBON_D.KEY, s)
							}
						}, i.run = function(e, t, i, n) {
							this.setPosition(e, t), this.width = i, this.height = n, this.createEmitters(), this.emitterConfetti.forEach((function(e) {
								e.emitParticle(25)
							})), this.emitterRibbons.forEach((function(e) {
								e.emitParticle(20)
							}))
						}, i.stop = function() {
							this.emitterConfetti.forEach((function(e) {
								e.killAll()
							})), this.emitterRibbons.forEach((function(e) {
								e.killAll()
							})), this.kill()
						}, i.createEmitters = function() {
							this.emitterRibbons = [], this.emitterConfetti = [], this.createConfettiLeftEmitter(), this.createConfettiRightEmitter(), this.createRibbonLeftEmitter(), this.createRibbonRightEmitter()
						}, i.createConfettiLeftEmitter = function() {
							var e = (0, n.Z)({}, this.confettiConfig, {
									speedX: {
										min: 5,
										max: 90
									}
								}),
								t = this.createEmitter(e);
							this.emitterConfetti.push(t)
						}, i.createConfettiRightEmitter = function() {
							var e = this.width,
								t = (0, n.Z)({}, this.confettiConfig, {
									x: e,
									speedX: {
										min: -5,
										max: -90
									}
								}),
								i = this.createEmitter(t);
							this.emitterConfetti.push(i)
						}, i.createRibbonLeftEmitter = function() {
							var e = (0, n.Z)({}, this.ribbonConfig, {
									speedX: {
										min: 20,
										max: 80
									},
									emitCallback: function(e) {
										e.setRibbonPosition(0, 0)
									}
								}),
								t = this.createEmitter(e);
							this.emitterRibbons.push(t)
						}, i.createRibbonRightEmitter = function() {
							var e = this.width,
								t = (0, n.Z)({}, this.ribbonConfig, {
									x: e,
									speedX: {
										min: -20,
										max: -80
									},
									emitCallback: function(t) {
										t.setRibbonPosition(e, 0)
									}
								}),
								i = this.createEmitter(t);
							this.emitterRibbons.push(i)
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager)
			},
			27989: function(e, t, i) {
				"use strict";
				var n = i(5281),
					a = i(41819),
					s = i(54255).Z.EFFECTS,
					o = s.KEY,
					r = s.FRAME,
					l = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, o, r.FX_COMET) || this).emitZone = void 0, i.emitter = void 0, i.createEmitZone(), i.createEmitters(), i.scene.add.existing((0, n.Z)(i)), i
						}(0, a.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Rectangle
						}, i.createEmitters = function() {
							var e = 1 / this.scene.world.getPixelRatio();
							this.emitter = this.createEmitter({
								on: !1,
								frame: r.FX_COMET,
								emitZone: {
									source: this.emitZone,
									type: "random"
								},
								deathZone: {
									source: this.emitZone,
									type: "onLeave"
								},
								timeScale: 1,
								frequency: 150,
								speedY: {
									min: -20,
									max: -60
								},
								alpha: {
									start: 1,
									end: 0,
									ease: Phaser.Math.Easing.Cubic.Out
								},
								scale: {
									start: 1 * e,
									end: 0,
									ease: Phaser.Math.Easing.Cubic.Out
								},
								lifespan: {
									min: 1500,
									max: 2500
								}
							})
						}, i.run = function(e, t, i, n, a) {
							this.stop(), this.emitZone.setSize(n, a), this.emitZone.setPosition(t - n / 2, i - a / 2), this.emitter.setQuantity(e), this.emitter.start()
						}, i.stop = function() {
							var e, t;
							null == (e = this.emitter) || e.killAll(), null == (t = this.emitter) || t.stop()
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager);
				t.Z = l
			},
			59906: function(e, t, i) {
				"use strict";
				var n = i(5281),
					a = i(41819),
					s = i(54255).Z.EFFECTS,
					o = s.KEY,
					r = s.FRAME,
					l = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, o, r.FX_COMET) || this).emitter = void 0, i.scene = t, i.createEmitters(), i.kill(), i.scene.add.existing((0, n.Z)(i)), i
						}(0, a.Z)(t, e);
						var i = t.prototype;
						return i.createEmitters = function() {
							var e = 1 / this.scene.world.getPixelRatio();
							this.emitter = this.createEmitter({
								on: !1,
								frame: r.FX_COMET,
								alpha: {
									start: .8,
									end: .5
								},
								speed: {
									min: 60,
									max: 120
								},
								scale: {
									start: .4 * e,
									end: e
								},
								lifespan: {
									min: 700,
									max: 1200
								}
							})
						}, i.explode = function(e, t, i) {
							this.revive(), this.emitter.explode(e, t, i)
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager);
				t.Z = l
			},
			97261: function(e, t, i) {
				"use strict";
				var n = i(5281),
					a = i(41819),
					s = i(54255).Z.EFFECTS,
					o = s.KEY,
					r = s.FRAME,
					l = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, o, r.FX_COMET) || this).emitter = void 0, i.scene = t, i.createEmitters(), i.kill(), i.scene.add.existing((0, n.Z)(i)), i
						}(0, a.Z)(t, e);
						var i = t.prototype;
						return i.createEmitters = function() {
							var e = 1 / this.scene.world.getPixelRatio();
							this.emitter = this.createEmitter({
								on: !1,
								frame: r.FX_COMET,
								alpha: {
									start: 1,
									end: .8
								},
								speed: {
									min: 40,
									max: 80
								},
								scale: {
									start: .4 * e,
									end: .7 * e
								},
								lifespan: {
									min: 400,
									max: 600
								}
							})
						}, i.explode = function(e, t, i) {
							this.revive(), this.emitter.explode(e, t, i)
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager);
				t.Z = l
			},
			36033: function(e, t, i) {
				"use strict";
				var n = i(5281),
					a = i(41819),
					s = i(54255),
					o = i(59906),
					r = i(20468),
					l = i(97261),
					c = i(4396),
					h = s.Z.EFFECTS,
					u = h.KEY,
					d = h.FRAME,
					p = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).treasureGroup = void 0, i.containerGroup = void 0, i.startsExplosive = void 0, i.startsExplosiveSmall = void 0, i.startsExplosiveSmallTimer = void 0, i.widthIcon = 0, i.heightIcon = 0, i.endScaleIcon = 1, i.setVisible(!0), i.treasureGroup = i.scene.add.group({
								defaultKey: u,
								defaultFrame: d.COIN
							}), i.containerGroup = i.scene.add.group({
								classType: Phaser.GameObjects.Container
							}), i.startsExplosive = new o.Z(t), i.startsExplosive.setDepth(r.Z.ON_TOP + 1), i.startsExplosiveSmall = new l.Z(t), i.startsExplosiveSmall.setDepth(r.Z.ON_TOP + 1), i.scene.add.existing((0, n.Z)(i)), i
						}(0, a.Z)(t, e);
						var i = t.prototype;
						return i.createConfigOne = function(e, t, i) {
							var n = this,
								a = e / 300,
								s = new Phaser.Math.Vector2(0, 0),
								o = new Phaser.Math.Vector2(0, -e),
								r = i ? -1 : 1,
								l = Phaser.Math.RND.between(-90, 90),
								h = (l + 90) / 180 * 180 * (l < 0 ? 1 : (300 - Math.abs(l)) / 300) * a,
								u = Phaser.Math.RND.between(20, h + 20),
								d = new Phaser.Math.Vector2(1, 0);
							d.setAngle(l * Math.PI / 180);
							var p = Phaser.Math.RND.between(-Math.abs(l) - 15, 15 - Math.abs(l)),
								m = u * (100 - Math.abs(l)) / 100 * a,
								f = Phaser.Math.RND.between(.2 * m, m),
								g = new Phaser.Math.Vector2(1, 0);
							g.setAngle(p * Math.PI / 180);
							var v = r * d.x * u,
								y = d.y * u,
								b = r * g.x * f,
								E = g.y * f - e,
								T = new Phaser.Math.Vector2(v, y),
								A = new Phaser.Math.Vector2(b, E),
								S = new Phaser.Curves.CubicBezier(s, T, A, o),
								_ = 750 + 3 * u,
								C = this.treasureGroup.get(0, 0);
							C.revive(), C.setRotation(-t.rotation), C.setWorldSize(this.widthIcon, this.heightIcon), t.add(C);
							var w = C.scale,
								B = this.scene.world.getPixelRatio(),
								I = this.endScaleIcon / B;
							return {
								from: 0,
								to: 1,
								duration: _,
								ease: "Sine.In",
								onUpdate: function(e) {
									var t = e.getValue(),
										i = S.getPointAt(t);
									C.setPosition(i.x, i.y);
									var n = (1 - t) * (w - I) + I;
									C.setScale(n)
								},
								onComplete: function(e) {
									if (C.setScale(I), C.kill(), !(e.totalProgress < 1) && (n.scene.audio.playSound(c.Z.TING), !n.startsExplosiveSmallTimer || n.startsExplosiveSmallTimer.hasDispatched)) {
										n.startsExplosiveSmallTimer = n.scene.time.delayedCall(100, (function() {
											return null
										}));
										var t = C.getWorldPosition();
										n.startsExplosiveSmall.explode(10, t.x, t.y)
									}
								}
							}
						}, i.explode = function(e, t, i, n, a) {
							var s = this;
							this.startsExplosive.explode(30, t, i);
							var o = new Phaser.Math.Vector2(n - t, a - i),
								r = o.length(),
								l = this.containerGroup.get(t, i);
							l.setRotation(o.angle() + Math.PI / 2), l.revive(), this.add(l);
							for (var c = void 0, h = 0, u = [], d = 0; d < e; d++) {
								var p = this.createConfigOne(r, l, d % 2 === 0),
									m = this.scene.tweens.addCounter(p);
								u.push(m), p.duration > h && (h = p.duration, c = m)
							}
							void 0 === c && (c = u[0]);
							var f = function() {
								var e, t;
								u.forEach((function(e) {
									e.complete()
								})), null == (e = s.startsExplosive.emitters.getAt(0)) || e.killAll(), null == (t = s.startsExplosiveSmall.emitters.getAt(0)) || t.killAll(), l.kill()
							};
							return c.once(Phaser.Tweens.Events.TWEEN_COMPLETE, (function() {
								l.kill(), s.scene.events.off("sleep", f)
							})), this.scene.events.once("sleep", f), {
								allTweens: u,
								longestTween: c
							}
						}, i.setTreasureGroup = function(e) {
							var t;
							switch (this.treasureGroup.destroy(), e) {
								case "BombSpinItem":
								case "BombBulletItem":
									t = s.Z.DEFAULT.FRAME.BUY_ITEM_BOMB_BIG, this.widthIcon = 107.5, this.heightIcon = 109.5, this.endScaleIcon = 40.6 / 109.5;
									break;
								case "ElectricSpinItem":
								case "ElectricBulletBallItem":
									t = s.Z.DEFAULT.FRAME.BUY_ITEM_ELECTRIC_BIG, this.widthIcon = 98.5, this.heightIcon = 98.5, this.endScaleIcon = 40 / 98.5;
									break;
								case "RocketSpinItem":
								case "RocketBulletItem":
									t = s.Z.DEFAULT.FRAME.BUY_ITEM_ROCKET_BIG, this.widthIcon = 93, this.heightIcon = 93, this.endScaleIcon = 40 / 93;
									break;
								case "RainbowSpinItem":
								case "RainbowBulletBallItem":
									t = s.Z.DEFAULT.FRAME.BUY_ITEM_RAINBOW_BIG, this.widthIcon = 98.5, this.heightIcon = 98.5, this.endScaleIcon = 40 / 98.5;
									break;
								case "Coin10SpinItem":
								case "Coin10":
									t = s.Z.DEFAULT.FRAME.ICON_WHEEL_COIN_10, this.widthIcon = 38, this.heightIcon = 28.5, this.endScaleIcon = 24.5 / 38;
									break;
								case "Coin25SpinItem":
								case "Coin25":
									t = s.Z.DEFAULT.FRAME.ICON_WHEEL_COIN_25, this.widthIcon = 42.5, this.heightIcon = 44, this.endScaleIcon = .6125;
									break;
								case "Coin50SpinItem":
								case "Coin50":
									t = s.Z.DEFAULT.FRAME.ICON_WHEEL_COIN_50, this.widthIcon = 54.5, this.heightIcon = 48.5, this.endScaleIcon = 24.5 / 48.5;
									break;
								case "Coin100SpinItem":
								case "Coin100":
									t = s.Z.DEFAULT.FRAME.ICON_WHEEL_COIN_100, this.widthIcon = 59.5, this.heightIcon = 63, this.endScaleIcon = 24.5 * 1.1 / 63;
									break;
								default:
									this.widthIcon = 24, this.heightIcon = 24.5, t = s.Z.DEFAULT.FRAME.ICON_COIN, this.endScaleIcon = 1 / this.scene.world.getPixelRatio()
							}
							this.treasureGroup = this.scene.add.group({
								defaultKey: s.Z.DEFAULT.KEY,
								defaultFrame: t
							})
						}, i.setSizeIcon = function(e, t) {
							this.widthIcon = e, this.heightIcon = t
						}, t
					}(Phaser.GameObjects.Container);
				t.Z = p
			},
			79033: function(e, t, i) {
				"use strict";
				var n = i(5281),
					a = i(41819),
					s = i(54255),
					o = i(15177),
					r = s.Z.EFFECTS,
					l = r.KEY,
					c = r.FRAME,
					h = function(e) {
						function t(t, i) {
							var a;
							return (a = e.call(this, t, l, c.BLANK) || this).config = void 0, a.emitZone = void 0, a.emitter = void 0, a.config = i || {}, a.createEmitZone(), a.createEmitters(), a.scene.add.existing((0, n.Z)(a)), a
						}(0, a.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Rectangle
						}, i.createEmitters = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									on: !1,
									frame: c.FX_SPARKLE,
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									timeScale: 1,
									frequency: 150,
									speedY: {
										min: -20,
										max: -60
									},
									alpha: {
										start: 1,
										end: 0,
										ease: Phaser.Math.Easing.Cubic.Out
									},
									scale: {
										start: 1 * e,
										end: 0,
										ease: Phaser.Math.Easing.Cubic.Out
									},
									lifespan: {
										min: 1500,
										max: 2500
									}
								},
								i = (0, o.TS)(t, this.config);
							this.emitter = this.createEmitter(i)
						}, i.run = function(e, t, i, n, a) {
							this.stop(), this.emitZone.setSize(n, a), this.emitZone.setPosition(t - n / 2, i - a / 2), this.emitter.setQuantity(e), this.emitter.start()
						}, i.stop = function() {
							var e, t;
							null == (e = this.emitter) || e.killAll(), null == (t = this.emitter) || t.stop()
						}, i.explode = function() {
							this.emitter.explode(100, 0, 0)
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager);
				t.Z = h
			},
			14665: function(e, t, i) {
				"use strict";
				i.d(t, {
					o: function() {
						return n
					},
					s: function() {
						return a
					}
				});
				var n = {
						AIM: "aim",
						SWITCH: "switch",
						INFORMATION: "information",
						BOMB_ITEM: "BombBulletItem",
						ROCKET_ITEM: "RocketBulletItem",
						RAINBOW_ITEM: "RainbowBulletBallItem",
						ELECTRIC_ITEM: "ElectricBulletBallItem"
					},
					a = {
						GET_FREE_ITEM: "get_free_item",
						USE_FREE_ITEM: "use_free_item",
						ITEM_REMINDER: "item_reminder",
						CLOSE_GUIDE: "close_guide",
						CLOSE_DYNAMIC_GUIDE: "close_dynamic_guide"
					}
			},
			48911: function(e, t, i) {
				"use strict";
				var n;
				i.d(t, {
						I: function() {
							return n
						}
					}),
					function(e) {
						e[e.Red = 16530738] = "Red", e[e.Blue = 158691] = "Blue", e[e.Green = 57396] = "Green", e[e.Yellow = 16763392] = "Yellow", e[e.Gray = 11250603] = "Gray", e[e.Black = 6052699] = "Black", e[e.Pink = 16711935] = "Pink", e[e.Violet = 9703300] = "Violet", e[e.Cyan = 834032] = "Cyan", e[e.White = 16777215] = "White", e[e.Orange = 15757844] = "Orange", e[e.Bomb = 8078765] = "Bomb", e[e.Rainbow = 5667325] = "Rainbow", e[e.Electric = 6796766] = "Electric", e[e.Rocket = 15158350] = "Rocket", e[e.Any = -1] = "Any"
					}(n || (n = {}))
			},
			40131: function(e, t) {
				"use strict";
				var i;
				! function(e) {
					e[e.Left = 0] = "Left", e[e.UpLeft = Math.PI / 3] = "UpLeft", e[e.Right = Math.PI] = "Right", e[e.UpRight = 2 * Math.PI / 3] = "UpRight"
				}(i || (i = {})), t.Z = i
			},
			75742: function(e, t, i) {
				"use strict";
				i.d(t, {
					Z: function() {
						return l
					}
				});
				var n = i(41819),
					a = i(3649),
					s = i.n(a),
					o = i(71944),
					r = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, 0, 0, i, n) || this).setOrigin(0, 0), a
						}
						return (0, n.Z)(t, e), t
					}(Phaser.GameObjects.Zone),
					l = function(e) {
						function t() {
							var t;
							return (t = e.call(this, {
								visible: !1
							}) || this).unsubscribeList = void 0, t.gameZone = void 0, t.background = void 0, t.handleOpenScene = function() {
								t.logPageviewOnOpen(), t.logEventOpen()
							}, t.removeStateChange = function() {
								t.unsubscribeList.forEach((function(e) {
									return e()
								}))
							}, t
						}(0, n.Z)(t, e);
						var i = t.prototype;
						return i.create = function() {
							this.events.on("wake", this.handleOpenScene), this.events.on("resume", this.handleOpenScene), this.events.on("create", this.handleOpenScene), this.scaleGame(), this.createGameZone()
						}, i.scaleGame = function() {
							var e = this.getCamera("main"),
								t = this.world.getZoomRatio(),
								i = this.world.getWorldSize(),
								n = i.width,
								a = i.height;
							e.setZoom(t), e.centerOn(n / 2, a / 2)
						}, i.createGameZone = function() {
							var e = this.world.getWorldSize(),
								t = e.width,
								i = e.height;
							this.gameZone = new r(this, t, i)
						}, i.getCamera = function(e) {
							return "main" === e ? this.cameras.main : this.cameras.getCamera(e)
						}, i.createMask = function(e) {
							void 0 === e && (e = 1), this.getCamera("main").setBackgroundColor("rgba(0, 0, 0, " + e + ")")
						}, i.fontSize = function(e) {
							return e / 1
						}, i.createBackground = function(e, t, i, n) {
							this.background ? (this.background.setTexture(e), t && this.background.setFrame(t)) : this.background = this.make.image({
								key: e,
								frame: t
							}), this.background.setName(e);
							var a = this.gameZone,
								s = a.displayWidth,
								o = a.displayHeight;
							this.background.setDisplaySize(s, o), GameCore.Utils.Valid.isNumber(i) && this.background.setAlpha(i), GameCore.Utils.Valid.isNumber(n) && this.background.setTint(n), Phaser.Display.Align.In.Center(this.background, this.gameZone), GameCore.Utils.Device.isDesktop() && this.background.setVisible(!1)
						}, i.handleStateChange = function(e) {
							var t = this;
							this.unsubscribeList = [], e.forEach((function(e) {
								var i = e.selector,
									n = e.callback,
									a = t.storage.watch(i, n);
								t.unsubscribeList.push(a)
							})), this.events.once("sleep", this.removeStateChange), this.events.once("destroy", this.removeStateChange), this.events.once("shutdown", this.removeStateChange)
						}, i.logPageviewOnOpen = function() {
							this.analytics.pageview(this.scene.key)
						}, i.logEventOpen = function() {
							this.analytics.event(o._.SCREEN_OPEN, {
								screen_name: this.getSceneName()
							})
						}, i.getSceneName = function() {
							return GameCore.Utils.String.toUpperCamelCase(this.scene.key.toLowerCase())
						}, i.showScreens = function(e) {
							0 !== e.length && this.showScreenRecursive(e[0], s()(e).call(e, 1))
						}, i.showScreenRecursive = function(e, t) {
							var i = this,
								n = this.screen.get(e),
								a = function() {
									0 !== t.length && i.showScreenRecursive(t[0], s()(t).call(t, 1))
								};
							n ? (this.screen.open(e), n.visible ? n.once(GameCore.Screens.Events.CLOSE, a) : a()) : a()
						}, t
					}(Phaser.Scene)
			},
			32422: function(e, t, i) {
				"use strict";
				var n = i(41819),
					a = i(93985),
					s = i(54255),
					o = s.Z.DEFAULT,
					r = o.KEY,
					l = o.FRAME,
					c = s.Z.THEME,
					h = (c.KEY, c.FRAME),
					u = c.DEFAULT,
					d = function(e) {
						function t(t) {
							var i, n;
							return (n = e.call(this, t, r, {
								background: {
									key: u.KEY,
									frame: h.BG_VALUE_BAR
								},
								icon: l.ICON_COIN,
								button: l.BUTTON_GREEN_CIRCLE_SMALL
							}) || this).iconPlusButton = void 0, n.setName("CoinBar"), n.startAbbreviate = 1e3, n.fractionalDigits = 0, n.bar.setWorldSize(121.5, 48.5), n.icon.setWorldSize(24, 24.5), null == (i = n.button) || i.setWorldSize(20.5, 21.5), n.value.setFontSize(n.scene.fontSize(18)), n.createIconPlusButton(), n.alignObject(), Phaser.Display.Align.In.Center(n.value, n.bar, 7.5, -3), Phaser.Display.Align.In.LeftCenter(n.icon, n.bar, -12.5, -2.5), n.button ? (n.iconPlusButton.revive(), Phaser.Display.Align.In.RightCenter(n.button, n.bar, 4, -2), Phaser.Display.Align.In.Center(n.iconPlusButton, n.button, .25, -1)) : n.iconPlusButton.kill(), n
						}(0, n.Z)(t, e);
						var i = t.prototype;
						return i.getCoinIconPosition = function() {
							return this.icon.getWorldPosition()
						}, i.createIconPlusButton = function() {
							this.iconPlusButton = this.scene.make.image({
								key: r,
								frame: l.ICON_PLUS
							}), this.iconPlusButton.setWorldSize(11.5, 12.5), this.add(this.iconPlusButton)
						}, i.setVisiblePlusButton = function(e) {
							var t;
							null == (t = this.button) || t.setVisible(e), this.iconPlusButton.setVisible(e)
						}, t
					}(a.Z);
				t.Z = d
			},
			53891: function(e, t, i) {
				"use strict";
				i.d(t, {
					Z: function() {
						return qe
					}
				});
				var n = i(33938),
					a = i(27344),
					s = i(41819),
					o = i(63109),
					r = i.n(o),
					l = i(77766),
					c = i.n(l),
					h = i(93476),
					u = i.n(h),
					d = i(2991),
					p = i.n(d),
					m = i(20746),
					f = i(77087),
					g = i(54255),
					v = i(58123),
					y = i(58644),
					b = i(52714),
					E = i(55481),
					T = (0, i(20573).P1)([function(e) {
						return e.scene.currentSceneKey
					}], (function(e) {
						return e
					})),
					A = i(93397),
					S = i(75742),
					_ = i(5281),
					C = i(27033),
					w = i(20468),
					B = g.Z.DEFAULT,
					I = (B.KEY, B.FRAME, function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, 0, 0) || this).fps = 0, i.fpsString = "%1", i.fpsText = void 0, i.lastUpdate = void 0, i.update = function(e) {
								if (!(e - i.lastUpdate < 800)) {
									i.lastUpdate = e;
									var t = Math.floor(i.scene.game.loop.actualFps);
									i.setFps(t)
								}
							}, i.createFps(), i.setDepth(w.Z.DEBUG), i.scene.add.existing((0, _.Z)(i)), i.scene.events.on(Phaser.Scenes.Events.UPDATE, i.update), i
						}(0, s.Z)(t, e);
						var i = t.prototype;
						return i.setFps = function(e) {
							this.fps = e;
							var t = "" + e;
							this.fpsText.setText(t)
						}, i.createFps = function() {
							this.fpsText = this.scene.make.bitmapText({
								size: this.scene.fontSize(14),
								text: this.fpsString,
								font: C.Z.NUMBERS_SYMBOLS.KEY,
								origin: {
									x: .5,
									y: .5
								}
							}), this.fpsText.setName("FPS Meter"), this.fpsText.setPosition(20, 20), this.setFps(0)
						}, t
					}(Phaser.GameObjects.Container)),
					P = I,
					x = function(e) {
						function t(t) {
							var i;
							if ((i = e.call(this, t, 0, 0) || this).performance = void 0, i.memory = 0, i.maxMemoryLimit = void 0, i.maxPercentThreshold = void 0, i.normalColor = 3459162, i.warningColor = 16768343, i.alarmColor = 15812200, i.memoryString = "Memory: %1MB / %2MB", i.memoryText = void 0, i.lastUpdate = void 0, i.update = function(e) {
									if (!(e - i.lastUpdate < 1e3)) {
										i.lastUpdate = e;
										var t = i.performance.memory.usedJSHeapSize,
											n = 1048576 * i.maxMemoryLimit,
											a = Math.round(t / 1048576);
										i.setMemory(a), i.memoryText.setTint(i.normalColor), t > i.maxPercentThreshold / 100 * n && i.memoryText.setTint(i.warningColor), t > n && i.memoryText.setTint(i.alarmColor)
									}
								}, i.performance = window.performance, i.createMemory(), i.setDepth(w.Z.DEBUG), i.scene.add.existing((0, _.Z)(i)), !i.isSupport()) return i.memoryText.setText("Memory: not supported!"), (0, _.Z)(i);
							var n = i.performance.memory.jsHeapSizeLimit;
							return i.maxPercentThreshold = 90, i.setMaxMemory(n / 1048576), i.scene.events.on(Phaser.Scenes.Events.UPDATE, i.update), i
						}(0, s.Z)(t, e);
						var i = t.prototype;
						return i.isSupport = function() {
							var e;
							return this.performance && !(null == (e = this.performance) || !e.memory)
						}, i.setMaxMemory = function(e) {
							this.maxMemoryLimit = Math.round(e)
						}, i.setMemory = function(e) {
							this.memory = e;
							var t = Phaser.Utils.String.Format(this.memoryString, [e, this.maxMemoryLimit]);
							this.memoryText.setText(t)
						}, i.createMemory = function() {
							this.memoryText = this.scene.make.bitmapText({
								size: this.scene.fontSize(14),
								text: this.memoryString,
								font: C.Z.PRIMARY.KEY,
								depth: 2e3
							}), this.memoryText.setName("Memory Meter"), this.add(this.memoryText), this.setMemory(0)
						}, t
					}(Phaser.GameObjects.Container),
					O = x,
					k = i(17063),
					R = i(73126),
					M = i(86902),
					L = i.n(M),
					G = i(71944),
					D = i(34094),
					F = i(56688),
					N = i(37047),
					Z = i(97686),
					U = i(4396),
					j = i(92439),
					Y = i(36033),
					W = g.Z.DEFAULT,
					K = W.KEY,
					H = W.FRAME,
					z = function(e) {
						function t(t, i, a, s) {
							var o;
							return (o = e.call(this, t, i, a, s) || this).claimButton = void 0, o.popupFadeOutAnimation = void 0, o.nameTreasures = [], o.treasure = void 0, o.header = void 0, o.main = void 0, o.treasureExplosiveTimer = void 0, o.treasureItemExplosivesByKey = {}, o.iconRemoveAds = void 0, o.bulletFrom = {}, o.bulletsTo = {}, o.coinFrom = void 0, o.coinTo = void 0, o.text = void 0, o.open = function(t) {
								e.prototype.open.call((0, _.Z)(o)), o.setAlpha(1), o.nameTreasures = [], t && (o.nameTreasures = L()(t), o.treasure = t), 0 !== o.nameTreasures.length ? (t && o.updateUI(t), o.runOpenAnimation(), o.claimTreasureData()) : o.closePopup()
							}, o.handleClosePopup = function() {
								o.scene.audio.playSound(U.Z.POPUP_OUT), o.popupFadeOutAnimation.next((function() {
									o.scene.screen.close(o.name), o.scene.scene.switch(v.C.DASHBOARD_SCENE)
								}))
							}, o.closePopup = function() {
								o.scene.audio.playSound(U.Z.POPUP_OUT), o.scene.screen.close(o.name)
							}, o.handleClaim = function() {
								o.header.revive(), o.header.setAlpha(0), o.scene.audio.playSound(U.Z.GIFT_RECEIVED), o.scene.tweens.add({
									targets: o.header,
									duration: 200,
									props: {
										alpha: {
											start: 0,
											from: 0,
											to: 1
										}
									}
								}), o.claimButton.kill();
								var e = o.bulletFrom,
									t = {},
									i = (o.coinFrom, []);
								j.Z.forEach((function(n) {
									var a, s = o.treasure[n];
									if (s) {
										var r = o.main.getBlock(n),
											l = o.header.getIconBlockPosition(n);
										if (r && l) {
											r.kill();
											var c = r.getIcon(),
												h = c.getWorldPosition();
											null == (a = o.treasureItemExplosivesByKey[n]) || a.setSizeIcon(c.width, c.height);
											var u = o.runTreasuresExplodeEffect(h, l, n, s);
											if (i.push(u), "Coin" !== n) {
												var d = e[n] || 0;
												d += s, t[n] = d
											} else s
										}
									}
								})), u().all(i).then((function() {
									var e;
									null == (e = o.treasureExplosiveTimer) || e.remove(), o.treasureExplosiveTimer = o.scene.time.delayedCall(700, (function() {
										o.setDepth(y.Ks.POPUP), o.runCloseAnimation()
									}))
								}))
							}, o.runTreasuresExplodeEffect = function() {
								var e = (0, n.Z)(r().mark((function e(t, i, n, a) {
									var s, l, c, h, d, p, m;
									return r().wrap((function(e) {
										for (;;) switch (e.prev = e.next) {
											case 0:
												if (s = 1, l = o.treasureItemExplosivesByKey[n]) {
													e.next = 4;
													break
												}
												return e.abrupt("return");
											case 4:
												return c = l.explode(s, t.x, t.y, i.x, i.y), h = c.allTweens, d = c.longestTween, p = o.bulletFrom, m = o.coinFrom, o.setDepth(w.Z.ON_TOP), h.forEach((function(e) {
													e.on(Phaser.Tweens.Events.TWEEN_COMPLETE, (function() {
														if ("Coin" === n) return m += a / s, void o.updateCurrentQuantityTreasure(n, m);
														var e = p[n] || 0;
														e += a / s, o.updateCurrentQuantityTreasure(n, e)
													}))
												})), e.abrupt("return", new(u())((function(e) {
													d.on(Phaser.Tweens.Events.TWEEN_COMPLETE, e)
												})));
											case 10:
											case "end":
												return e.stop()
										}
									}), e)
								})));
								return function(t, i, n, a) {
									return e.apply(this, arguments)
								}
							}(), o.scene = t, o.setDepth(y.Ks.POPUP), o.createText(), o.createClaimButton(), o.createMain(), o.createIconRemoveAds(), o.createHeader(), o.createEffect(), o.add([o.claimButton, o.main, o.iconRemoveAds, o.header]), o
						}(0, s.Z)(t, e);
						var i = t.prototype;
						return i.claimTreasureData = function() {
							var e = this,
								t = this.scene.player.getBullets(),
								i = {},
								n = this.scene.player.getCoins();
							this.bulletFrom = t, this.coinFrom = n, j.Z.forEach((function(a) {
								var s = e.treasure[a];
								if (s) {
									var o = e.main.getBlockPosition(a),
										r = e.header.getIconBlockPosition(a);
									if (o && r) {
										if ("Coin" === a) return n += s, void e.logEarnVirtualCurrency(s);
										var l = t[a] || 0;
										l += s, i[a] = l, e.logEarnItem(s, a)
									}
								}
							})), this.scene.player.updateCustomFields({
								bullets: i,
								coin: n
							}), this.bulletsTo = (0, R.Z)({}, i), this.coinTo = n
						}, i.setDepth = function(t) {
							for (var i in e.prototype.setDepth.call(this, t), this.treasureItemExplosivesByKey) {
								var n, a = i;
								null == (n = this.treasureItemExplosivesByKey[a]) || n.setDepth(t + 1)
							}
							return this
						}, i.createText = function() {
							var e = this.scene.gameZone.width;
							this.text = N.Z.addText(this.scene, {
								font: C.Z.PRIMARY.KEY,
								text: this.scene.lang.getText("you_have_received"),
								size: this.scene.fontSize(26),
								origin: {
									x: .5,
									y: .5
								},
								maxWidth: .9 * e
							}), this.add(this.text), this.text.setPosition(0, -160)
						}, i.createClaimButton = function() {
							this.claimButton = new D.Z(this.scene, K, H.BUTTON_GREEN, 134.5, 51), this.claimButton.setName("Claim");
							var e = N.Z.addText(this.scene, {
								font: C.Z.PRIMARY.KEY,
								text: this.scene.lang.getText("claim"),
								size: this.scene.fontSize(25),
								origin: {
									x: .5,
									y: .5
								},
								y: -3,
								maxWidth: 120
							});
							this.claimButton.add(e), this.claimButton.onClick = this.handleClaim
						}, i.createIconRemoveAds = function() {
							this.iconRemoveAds = this.scene.add.image(0, 0, K, H.ICON_ADS), this.iconRemoveAds.setWorldSize(69.5, 72.5), this.iconRemoveAds.setPosition(0, 30), this.iconRemoveAds.kill()
						}, i.align = function() {
							this.main.setPosition(0, 60), Phaser.Display.Align.In.Center(this.claimButton, this.main, 0, 120), Phaser.Display.Align.In.TopRight(this.header, this.zone, -22, -4)
						}, i.logEarnVirtualCurrency = function(e) {
							this.scene.analytics.event(G._.EARN_VIRTUAL_CURRENCY, {
								value: e,
								virtual_currency_name: "coin",
								earn_from: "LevelTreasure"
							})
						}, i.logEarnItem = function(e, t) {
							this.scene.analytics.event(G._.EARN_ITEM, {
								value: e,
								item_name: t,
								earn_from: "LevelTreasure"
							})
						}, i.runOpenAnimation = function() {
							this.scene.audio.playSound(U.Z.POPUP_IN), this.fadeInBackground(), this.main.playAnimation(), this.main.revive(), this.claimButton.revive()
						}, i.updateUI = function(e) {
							this.main.updateUI(e), this.header.updateUI(e), e.RemoveAd ? this.iconRemoveAds.revive() : this.iconRemoveAds.kill(), this.align()
						}, i.createMain = function() {
							this.main = new Z.Z(this.scene)
						}, i.createHeader = function() {
							this.header = new F.Z(this.scene), this.header.kill(), this.header.setAlpha(0)
						}, i.createEffect = function() {
							this.createTreasureExplosivesByKey()
						}, i.createTreasureExplosivesByKey = function() {
							var e = this;
							j.Z.forEach((function(t) {
								var i = new Y.Z(e.scene);
								"Coin" === t ? i.setTreasureGroup("Coin10") : i.setTreasureGroup(t), e.treasureItemExplosivesByKey[t] = i, i.setDepth(w.Z.PRIORITY)
							}))
						}, i.updateCurrentQuantityTreasure = function(e, t) {
							this.header.updateTextBlock(e, t)
						}, i.runCloseAnimation = function(e) {
							var t = this;
							this.emit(GameCore.Screens.Events.RUN_CLOSE_ANIMATION), this.scene.tweens.add({
								targets: [this],
								duration: 150,
								props: {
									alpha: {
										start: 1,
										from: 1,
										to: 0
									}
								},
								onComplete: function() {
									t.header.kill(), t.closePopup(), e && e()
								}
							})
						}, i.fadeInBackground = function() {
							this.background.setAlpha(0), this.scene.tweens.add({
								targets: this.background,
								duration: 200,
								props: {
									alpha: {
										start: 0,
										from: 0,
										to: .8
									}
								}
							})
						}, t
					}(GameCore.Screen),
					X = z,
					V = i(20116),
					J = i.n(V),
					q = i(62462),
					Q = i.n(q),
					$ = g.Z.DEFAULT,
					ee = $.KEY,
					te = $.FRAME,
					ie = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).showMoreBtn = void 0, i.showLessBtn = void 0, i.handleOnShowMore = function() {
								i.showLessBtn.revive(), i.showMoreBtn.kill()
							}, i.handleOnShowLess = function() {
								i.showMoreBtn.revive(), i.showLessBtn.kill()
							}, i.setSize(375, 100), i.createUI(), i.align(), i
						}(0, s.Z)(t, e);
						var i = t.prototype;
						return i.createUI = function() {
							this.createShowMoreButton(), this.createShowLessButton(), this.add([this.showLessBtn, this.showMoreBtn]), this.showMoreBtn.onClick = this.handleOnShowMore, this.showLessBtn.onClick = this.handleOnShowLess
						}, i.createShowMoreButton = function() {
							var e = N.Z.addText(this.scene, {
								font: C.Z.PRIMARY.KEY,
								size: this.scene.fontSize(17),
								text: this.scene.lang.getText("show_more"),
								maxWidth: 90,
								maxHeight: 34
							});
							this.showMoreBtn = new D.Z(this.scene, ee, te.BUTTON_GREEN_SMALL, 100.5, 38.5), this.showMoreBtn.add(e), Phaser.Display.Align.In.Center(e, this.showMoreBtn, 0, -3), this.showMoreBtn.setName("ShowMore")
						}, i.createShowLessButton = function() {
							var e = N.Z.addText(this.scene, {
								font: C.Z.PRIMARY.KEY,
								size: this.scene.fontSize(17),
								text: this.scene.lang.getText("show_less"),
								maxWidth: 90,
								maxHeight: 34
							});
							this.showLessBtn = new D.Z(this.scene, ee, te.BUTTON_GREEN_SMALL, 100.5, 38.5), this.showLessBtn.add(e), this.showLessBtn.kill(), Phaser.Display.Align.In.Center(e, this.showLessBtn, 0, -3), this.showLessBtn.setName("ShowLess")
						}, i.align = function() {
							Phaser.Display.Align.In.BottomCenter(this.showMoreBtn, this, 0, 0), Phaser.Display.Align.In.Center(this.showLessBtn, this.showMoreBtn)
						}, t
					}(Phaser.GameObjects.Container),
					ne = i(32422),
					ae = g.Z.DEFAULT,
					se = ae.KEY,
					oe = ae.FRAME,
					re = g.Z.THEME,
					le = re.FRAME,
					ce = re.DEFAULT,
					he = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).closeButton = void 0, i.coinBar = void 0, i.background = void 0, i.text = void 0, i.createUI(), i.align(), i.setSize(i.background.width, i.background.height), i
						}(0, s.Z)(t, e);
						var i = t.prototype;
						return i.createUI = function() {
							this.createBg(), this.createText(), this.createCoinBar(), this.createCloseButton(), this.add([this.background, this.text, this.coinBar, this.closeButton])
						}, i.createCloseButton = function() {
							this.closeButton = new D.Z(this.scene, ce.KEY, le.BUTTON_CLOSE, 37.5, 39), this.closeButton.setName("Close")
						}, i.createBg = function() {
							this.background = this.scene.make.image({
								key: se,
								frame: oe.BG_STORE_TITTLE
							}), this.background.setWorldSize(375, 68.5)
						}, i.createText = function() {
							this.text = N.Z.addText(this.scene, {
								font: C.Z.PRIMARY.KEY,
								size: this.scene.fontSize(26),
								text: this.scene.lang.getText("store"),
								maxWidth: 90
							})
						}, i.createCoinBar = function() {
							this.coinBar = new ne.Z(this.scene), this.coinBar.setVisiblePlusButton(!1)
						}, i.align = function() {
							Phaser.Display.Align.In.LeftCenter(this.closeButton, this.background, -15), Phaser.Display.Align.In.Center(this.text, this.background), Phaser.Display.Align.In.RightCenter(this.coinBar, this.background, -22)
						}, t
					}(Phaser.GameObjects.Container),
					ue = i(81643),
					de = i.n(ue),
					pe = i(94473),
					me = i.n(pe),
					fe = i(78580),
					ge = i.n(fe),
					ve = g.Z.DEFAULT,
					ye = ve.KEY,
					be = ve.FRAME,
					Ee = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, ye, be.BUTTON_GREEN_SMALL, 100.5, 38.5) || this).text = void 0, i.setName("Buy"), i.createText(), i
						}(0, s.Z)(t, e);
						var i = t.prototype;
						return i.createText = function() {
							this.text = N.Z.addText(this.scene, {
								font: C.Z.PRIMARY.KEY,
								size: this.scene.fontSize(14),
								text: "VND 49,000"
							}), Phaser.Display.Align.In.Center(this.text, this.button, 0, -2), this.add(this.text)
						}, i.updateText = function(e) {
							this.text.setText(e), Phaser.Display.Align.In.Center(this.text, this.button, 0, -2)
						}, t
					}(D.Z),
					Te = function(e) {
						function t(t, i, n, a, s) {
							var o;
							return (o = e.call(this, t) || this).value = void 0, o.icon = void 0, o.icon = o.scene.make.image({
								key: i,
								frame: n
							}), o.icon.setWorldSize(a, s), o.createValue(), o.add([o.icon, o.value]), o
						}(0, s.Z)(t, e);
						var i = t.prototype;
						return i.createValue = function() {
							this.value = N.Z.addText(this.scene, {
								font: C.Z.PRIMARY.KEY,
								size: this.scene.fontSize(20)
							}), this.value.setOrigin(0, .5), Phaser.Display.Align.In.Center(this.value, this.icon, 20), this.setValue(0)
						}, i.setValue = function(e) {
							var t = GameCore.Utils.Number.numberWithCommas(e);
							this.value.setText(t)
						}, t
					}(Phaser.GameObjects.Container),
					Ae = g.Z.DEFAULT,
					Se = Ae.KEY,
					_e = Ae.FRAME,
					Ce = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).blocksByKey = void 0, n.background = void 0, n.itemsDataByKey = void 0, n.blocksByKey = {}, n.itemsDataByKey = i, n.createBackground(), n.createBlocks(), n.setSize(n.background.width, n.background.height), n.updateUI(), n
						}(0, s.Z)(t, e);
						var i = t.prototype;
						return i.createBlocks = function() {
							this.createCoinBlock(), this.createRainbowBlock(), this.createElectricBlock(), this.createBombBlock(), this.createRocketBlock()
						}, i.createBackground = function() {
							this.background = this.scene.make.image({
								key: Se,
								frame: _e.BG_POPUP_STORE_BOX
							}), this.background.setWorldSize(136, 95.5), this.add(this.background)
						}, i.createCoinBlock = function() {
							var e = new Te(this.scene, Se, _e.ICON_COIN, 24, 24.5);
							e.kill(), e.setSize(136, 27), this.add(e), this.blocksByKey.Coin = e
						}, i.createRainbowBlock = function() {
							var e = new Te(this.scene, Se, _e.BUY_ITEM_RAINBOW_BIG, 24, 25);
							e.kill(), this.add(e), this.blocksByKey.RainbowBulletBallItem = e
						}, i.createElectricBlock = function() {
							var e = new Te(this.scene, Se, _e.BUY_ITEM_ELECTRIC_BIG, 25, 25);
							e.kill(), this.add(e), this.blocksByKey.ElectricBulletBallItem = e
						}, i.createBombBlock = function() {
							var e = new Te(this.scene, Se, _e.BUY_ITEM_BOMB_BIG, 26.5, 28);
							e.kill(), this.add(e), this.blocksByKey.BombBulletItem = e
						}, i.createRocketBlock = function() {
							var e = new Te(this.scene, Se, _e.BUY_ITEM_ROCKET_BIG, 24, 25);
							e.kill(), this.add(e), this.blocksByKey.RocketBulletItem = e
						}, i.updateUI = function() {
							var e = this,
								t = [];
							j.Z.forEach((function(i) {
								var n = e.itemsDataByKey[i],
									a = e.blocksByKey[i];
								a && (void 0 !== n ? (a.revive(), a.setValue(n), "Coin" !== i ? t.push(a) : Phaser.Display.Align.In.TopCenter(a, e.background, -25, -5)) : a.kill())
							})), Phaser.Actions.GridAlign(t, {
								cellHeight: 30,
								cellWidth: 60,
								width: 2,
								height: 3,
								y: 13,
								x: -13
							})
						}, t
					}(Phaser.GameObjects.Container),
					we = i(79033),
					Be = i(53270),
					Ie = i(99873),
					Pe = function(e) {
						function t(t, i, n, a, s) {
							var o;
							return (o = e.call(this, t) || this).value = void 0, o.icon = void 0, o.icon = o.scene.make.image({
								key: i,
								frame: n
							}), o.icon.setWorldSize(a, s), o.createValue(), o.add([o.icon, o.value]), o
						}(0, s.Z)(t, e);
						var i = t.prototype;
						return i.createValue = function() {
							this.value = N.Z.addText(this.scene, {
								font: C.Z.PRIMARY.KEY,
								size: this.scene.fontSize(18)
							}), this.value.setOrigin(0, .5), Phaser.Display.Align.In.Center(this.value, this.icon, 45), this.setValue(0)
						}, i.setValue = function(e) {
							var t = GameCore.Utils.Number.numberWithCommas(e);
							this.value.setText(t)
						}, i.hideText = function() {
							this.value.setVisible(!1)
						}, t
					}(Phaser.GameObjects.Container),
					xe = g.Z.DEFAULT,
					Oe = xe.KEY,
					ke = xe.FRAME,
					Re = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t) || this).blocksByKey = void 0, a.background = void 0, a.itemsDataByKey = void 0, a.coinIconData = void 0, a.blocksByKey = {}, a.itemsDataByKey = i, a.coinIconData = n, a.createBackground(), a.createBlocks(), a.setSize(a.background.width, a.background.height), a.updateUI(), a
						}(0, s.Z)(t, e);
						var i = t.prototype;
						return i.createBlocks = function() {
							this.createCoinBlock(), this.createRainbowBlock(), this.createElectricBlock(), this.createBombBlock(), this.createRocketBlock()
						}, i.createBackground = function() {
							this.background = this.scene.make.image({
								key: Oe,
								frame: ke.BG_POPUP_STORE_BOX
							}), this.background.setWorldSize(136, 95.5), this.add(this.background)
						}, i.createCoinBlock = function() {
							var e = new Pe(this.scene, this.coinIconData.key, this.coinIconData.frame, this.coinIconData.worldWidth, this.coinIconData.worldHeight);
							e.kill(), e.setSize(this.coinIconData.worldHeight, this.coinIconData.worldHeight), this.add(e), this.blocksByKey.Coin = e
						}, i.createRainbowBlock = function() {
							var e = new Pe(this.scene, Oe, ke.BUY_ITEM_RAINBOW_BIG, 24 * 1.2, 30);
							e.kill(), this.add(e), this.blocksByKey.RainbowBulletBallItem = e
						}, i.createElectricBlock = function() {
							var e = new Pe(this.scene, Oe, ke.BUY_ITEM_ELECTRIC_BIG, 30, 30);
							e.kill(), this.add(e), this.blocksByKey.ElectricBulletBallItem = e
						}, i.createBombBlock = function() {
							var e = new Pe(this.scene, Oe, ke.BUY_ITEM_BOMB_BIG, 26.5 * 1.2, 33.6);
							e.kill(), this.add(e), this.blocksByKey.BombBulletItem = e
						}, i.createRocketBlock = function() {
							var e = new Pe(this.scene, Oe, ke.BUY_ITEM_ROCKET_BIG, 24 * 1.2, 30);
							e.kill(), this.add(e), this.blocksByKey.RocketBulletItem = e
						}, i.updateUI = function() {
							var e = this,
								t = [];
							j.Z.forEach((function(i) {
								var n = e.itemsDataByKey[i],
									a = e.blocksByKey[i];
								a && (void 0 !== n ? (a.revive(), a.setValue(n), "Coin" !== i ? (a.hideText(), t.push(a)) : Phaser.Display.Align.In.TopCenter(a, e.background, -32, -6)) : a.kill())
							}));
							var i = 0;
							i = 4 === t.length ? -30 : 2 === t.length ? -5 : 15, Phaser.Actions.GridAlign(t, {
								cellHeight: 15,
								cellWidth: 30,
								width: 4,
								height: 3,
								y: 30,
								x: i
							})
						}, t
					}(Phaser.GameObjects.Container),
					Me = g.Z.DEFAULT,
					Le = Me.KEY,
					Ge = Me.FRAME,
					De = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t) || this).id = void 0, s.priceButton = void 0, s.normalValue = void 0, s.normalIcon = void 0, s.productStoreData = void 0, s.background = void 0, s.boxBundle = void 0, s.glow = void 0, s.storeBundleImage = void 0, s.bundleStoreContainer = void 0, s.treasureTwinkle = void 0, s.bundleStoreContainerEntrances = void 0, s.bundleStoreContainerExits = void 0, s.glowRotate = void 0, s.boxCombo = void 0, s.price = void 0, s.id = i, s.productStoreData = n, s.price = a, s.createUI(), s.setSize(s.background.width, s.background.height), s.add(s.background), s
						}(0, s.Z)(t, e);
						var i = t.prototype;
						return i.createUI = function() {
							var e, t = null == (e = this.productStoreData) ? void 0 : e.type;
							switch (this.background = this.scene.make.image({
									key: this.productStoreData.background.key,
									frame: this.productStoreData.background.frame
								}), this.background.setWorldSize(this.productStoreData.background.width, this.productStoreData.background.height), this.add(this.background), t) {
								case "Bundle":
									this.createBundleStoreItem(), this.runGlowRotate();
									break;
								case "RemoveAds":
									this.createRemoveAdsItem();
									break;
								case "Combo":
									this.createComboItem();
									break;
								default:
									this.createNormalStoreItem()
							}
							this.createPriceButton(), "Bundle" === t ? Phaser.Display.Align.In.BottomRight(this.priceButton, this.background, -15, -20) : Phaser.Display.Align.In.RightCenter(this.priceButton, this.background, -15, -5)
						}, i.createPriceButton = function() {
							this.priceButton = new Ee(this.scene);
							var e = this.price;
							this.updatePrice(e), this.add(this.priceButton)
						}, i.createBundleStoreItem = function() {
							this.createTitleText(), this.createBoxBundle(), this.createStoreBundleContainer(), this.createGlow(), this.createStoreBundleImage(), this.createTreasureTwinkle()
						}, i.createStoreBundleContainer = function() {
							this.bundleStoreContainer = this.scene.add.container(), this.add(this.bundleStoreContainer), Phaser.Display.Align.In.RightCenter(this.bundleStoreContainer, this.background, -92, -8)
						}, i.createTreasureTwinkle = function() {
							this.treasureTwinkle = new we.Z(this.scene), this.add(this.treasureTwinkle)
						}, i.createGlow = function() {
							this.glow = this.scene.make.image({
								key: g.Z.EFFECTS.KEY,
								frame: g.Z.EFFECTS.FRAME.FX_STORE_GLOW
							}), this.glow.setWorldSize(133.5, 132.5), this.bundleStoreContainer.add(this.glow)
						}, i.createStoreBundleImage = function() {
							this.storeBundleImage = this.scene.make.image({
								key: Le,
								frame: Ge.ICON_STORE_BUNDLE
							}), this.storeBundleImage.setWorldSize(150.5, 79.5), this.bundleStoreContainer.add(this.storeBundleImage)
						}, i.createTitleText = function() {
							var e = this.productStoreData,
								t = N.Z.addText(this.scene, {
									font: C.Z.PRIMARY.KEY,
									size: this.scene.fontSize(17),
									text: this.scene.lang.getText(e.title)
								});
							this.add(t), Phaser.Display.Align.In.TopCenter(t, this.background, 0, -15)
						}, i.createBoxBundle = function() {
							this.boxBundle = new Ce(this.scene, this.productStoreData.itemsDataByKey), this.add(this.boxBundle), Phaser.Display.Align.In.BottomLeft(this.boxBundle, this.background, -15, -20)
						}, i.createComboItem = function() {
							this.createComboName(), this.createBoxCombo()
						}, i.createBoxCombo = function() {
							var e = this.productStoreData.icon;
							this.boxCombo = new Re(this.scene, this.productStoreData.itemsDataByKey, e);
							var t = this.boxCombo.scale;
							this.boxCombo.setScale(t - .3), this.add(this.boxCombo), Phaser.Display.Align.In.BottomLeft(this.boxCombo, this.background, 5, 0)
						}, i.createComboName = function() {
							var e = this.productStoreData,
								t = N.Z.addText(this.scene, {
									font: C.Z.PRIMARY.KEY,
									size: this.scene.fontSize(17),
									text: this.scene.lang.getText(e.title),
									maxWidth: 100,
									maxHeight: 50,
									align: "left"
								});
							this.add(t), Phaser.Display.Align.In.Center(t, this.background, 0, -15)
						}, i.createNormalStoreItem = function() {
							var e = this.productStoreData.icon;
							this.normalValue = N.Z.addText(this.scene, {
								font: C.Z.PRIMARY.KEY,
								size: this.scene.fontSize(20),
								text: "0"
							}), this.normalIcon = this.scene.make.image({
								key: e.key,
								frame: e.frame
							}), this.normalIcon.setWorldSize(e.worldWidth, e.worldHeight), this.add(this.normalValue), this.add(this.normalIcon), this.normalIcon.setOrigin(0, 1), this.normalValue.setOrigin(0, .5), this.normalIcon.setPosition(-this.background.width / 2 + 20, -3), this.normalValue.setPosition(this.normalIcon.x + 95, this.normalIcon.y);
							var t = this.productStoreData.itemsDataByKey.Coin;
							if (t) {
								var i = GameCore.Utils.Number.numberWithCommas(t);
								this.normalValue.setText(i)
							}
						}, i.createRemoveAdsItem = function() {
							var e = this.productStoreData.icon,
								t = N.Z.addText(this.scene, {
									font: C.Z.PRIMARY.KEY,
									size: this.scene.fontSize(17),
									text: this.scene.lang.getText("remove_popup_ads_30_days"),
									align: "left",
									maxWidth: 115,
									maxHeight: 50
								});
							this.normalIcon = this.scene.make.image({
								key: e.key,
								frame: e.frame
							}), this.normalIcon.setWorldSize(e.worldWidth, e.worldHeight), this.add(this.normalIcon), this.add(t), this.normalIcon.setOrigin(0, 1), t.setOrigin(0, .5), this.normalIcon.setPosition(-this.background.width / 2 + 20, -10), t.setPosition(this.normalIcon.x + 85, this.normalIcon.y + 3)
						}, i.runOpenAnimation = function() {
							var e;
							"Bundle" === (null == (e = this.productStoreData) ? void 0 : e.type) && (this.treasureTwinkle.setPosition(this.bundleStoreContainer.x, this.bundleStoreContainer.y), this.treasureTwinkle.run(2, 0, 0, this.storeBundleImage.width, this.storeBundleImage.height), this.runBundleStoreContainerEntrances(300, 400), this.runGlowRotate())
						}, i.updatePrice = function(e) {
							this.priceButton.updateText(e)
						}, i.runBundleStoreContainerEntrances = function(e, t) {
							this.bundleStoreContainerEntrances || (this.bundleStoreContainerEntrances = new Ie.Z({
								targets: [this.bundleStoreContainer, this.treasureTwinkle],
								delay: e,
								duration: t,
								props: {
									y: {
										from: this.bundleStoreContainer.y,
										to: this.bundleStoreContainer.y
									},
									scale: {
										start: 0,
										from: 0,
										to: 1
									},
									alpha: {
										start: 1,
										from: 1,
										to: 1
									}
								}
							})), this.bundleStoreContainerEntrances.play()
						}, i.runGlowRotate = function() {
							this.glowRotate || (this.glowRotate = new Be.Z({
								targets: [this.glow],
								repeat: -1,
								duration: 7e3
							})), this.glowRotate.play()
						}, i.runCloseAnimation = function() {
							var e;
							null == (e = this.productStoreData) || e.type
						}, i.runBundleStoreContainerExits = function(e, t) {
							var i = this;
							this.bundleStoreContainerExits || (this.bundleStoreContainerExits = new f.Z({
								targets: [this.bundleStoreContainer, this.treasureTwinkle],
								delay: e,
								duration: t,
								props: {
									y: this.bundleStoreContainer.y,
									scale: 0
								},
								onComplete: function() {
									i.bundleStoreContainer.setY(0)
								}
							})), this.bundleStoreContainerExits.play()
						}, i.kill = function() {
							var t, i;
							e.prototype.kill.call(this), null == (t = this.glowRotate) || t.stop(), null == (i = this.treasureTwinkle) || i.stop()
						}, t
					}(Phaser.GameObjects.Container),
					Fe = i(62698),
					Ne = function(e) {
						function t(t) {
							var i, n = t.gameZone.height,
								a = t.ads.getBannerHeight();
							return (i = e.call(this, t, {
								width: 394.5,
								height: 2 * n - 370 - a / 2,
								marginBottom: 0,
								marginTop: 0
							}) || this).createMask(), i
						}
						return (0, s.Z)(t, e), t.prototype.stopScroll = function() {
							this.isScrolling = !1, this.isScrollingBack = !1, this.isScrollingSmooth = !1, this.gotoTop(), this.setEnable(!1)
						}, t
					}(i(26108).Z),
					Ze = i(20402),
					Ue = g.Z.DEFAULT,
					je = Ue.KEY,
					Ye = Ue.FRAME,
					We = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).storeItems = [], i.storeItemsInShowLess = [], i.storeItemsInShowMore = [], i.onBuy = void 0, i.storeItemsEntrancesAnimation = void 0, i.scroller = void 0, i.loading = void 0, i.emptyText = void 0, i.showMoreButton = void 0, i.showLessButton = void 0, i.createScroller(), i.createLoading(), i.createEmptyText(), i.createStoreItems(), i.align(i.storeItems), i.scroller.addItems(i.storeItems), i
						}(0, s.Z)(t, e);
						var i = t.prototype;
						return i.createScroller = function() {
							this.scroller = new Ne(this.scene), this.scroller.createBound(je, Ye.BLANK, 80, 0);
							var e = this.scene.add.image(0, 0, je, Ye.BLANK),
								t = this.scene.world.getWorldSize(),
								i = t.width,
								n = t.height;
							e.setWorldSize(i, .25 * n), e.setTint(0), Phaser.Display.Align.To.BottomCenter(e, this.scroller), this.add(this.scroller), this.add(e)
						}, i.createLoading = function() {
							this.loading = new Ze.Z(this.scene);
							var e = this.scene.world.getWorldSize().height;
							this.loading.setPosition(0, e / 2 - 50), this.add(this.loading), this.loading.kill()
						}, i.createEmptyText = function() {
							var e = this.scene.world.getWorldSize().height;
							this.emptyText = N.Z.addText(this.scene, {
								font: C.Z.NORMAL.KEY,
								text: this.scene.lang.getText("shop_is_currently_empty_please_comeback_later"),
								size: this.scene.fontSize(23),
								origin: {
									x: .5,
									y: .5
								}
							}), this.emptyText.setPosition(0, e / 2 - 50), this.add(this.emptyText), this.emptyText.kill()
						}, i.createStoreItems = function() {
							var e = this;
							L()(b.Z.PRODUCTS).forEach((function(t) {
								var i = b.Z.PRODUCTS[t];
								if (i) {
									var n = new De(e.scene, t, i, "???");
									e.storeItems.push(n), n.priceButton.onClick = function() {
										e.onBuy && e.onBuy(n)
									}
								}
							}))
						}, i.align = function(e) {
							if (0 !== e.length)
								for (var t = e[0].height / 2, i = 0; i < e.length; i++) e[i].setPosition(0, t), e[i + 1] && (t += e[i].height / 2 + e[i + 1].height / 2)
						}, i.runOpenAnimation = function(e) {
							var t;
							e.length < 1 || (null == (t = this.storeItemsEntrancesAnimation) || t.remove(), this.storeItemsEntrancesAnimation = new Fe.Z({
								targets: e,
								duration: 400,
								delay: this.scene.tweens.stagger(100, {
									start: 50
								}),
								props: {
									alpha: {
										start: 0,
										from: 0,
										to: 1
									}
								}
							}), this.storeItemsEntrancesAnimation.play(), e.forEach((function(e) {
								e.visible && e.runOpenAnimation()
							})))
						}, i.runCloseAnimation = function() {
							this.storeItems.forEach((function(e) {
								e.runCloseAnimation()
							}))
						}, i.isAllowShowMore = function() {
							return this.storeItemsInShowMore.length != this.storeItemsInShowLess.length
						}, i.showLoading = function() {
							this.loading.revive(), this.storeItems.forEach((function(e) {
								e.kill()
							}))
						}, i.hideLoading = function() {
							this.loading.kill()
						}, i.onShowMore = function() {
							if (this.hideLoading(), 0 === this.storeItemsInShowMore.length) return this.showLessButton.kill(), this.showMoreButton.kill(), void this.emptyText.revive();
							this.scroller.setEnable(!0);
							var e = this.getStoreItemShowMore();
							this.storeItems.forEach((function(t) {
								-1 !== de()(e).call(e, t) ? t.revive() : t.kill()
							})), this.align(e), this.runOpenAnimation(e)
						}, i.onShowLess = function() {
							if (this.hideLoading(), 0 === this.storeItemsInShowLess.length) return this.showLessButton.kill(), this.showMoreButton.kill(), void this.onShowMore();
							this.scroller.stopScroll(), this.scroller.setEnable(!1);
							var e = this.getStoreItemShowLess();
							this.storeItems.forEach((function(t) {
								-1 !== de()(e).call(e, t) ? t.revive() : t.kill()
							})), this.align(e), this.runOpenAnimation(e)
						}, i.getStoreItemShowLess = function() {
							return this.storeItemsInShowLess
						}, i.getStoreItemShowMore = function() {
							return this.storeItemsInShowMore
						}, i.kill = function() {
							e.prototype.kill.call(this), this.storeItems.forEach((function(e) {
								e.kill()
							}))
						}, i.updateProducts = function(e) {
							var t = this;
							this.storeItemsInShowLess = [], this.storeItemsInShowMore = [];
							for (var i = this.scene.player.getPurchases(), n = function(n) {
									var a, s = t.storeItems[n],
										o = s.id,
										r = me()(e).call(e, (function(e) {
											return e.productID === o
										}));
									return r ? "Bundle" === s.productStoreData.type && me()(i).call(i, (function(e) {
										return e.productID === o
									})) || "RemoveAds" === s.productStoreData.type && t.scene.ads.isDisabledInterstitialAds() ? "continue" : (s.updatePrice(r.price + " " + r.priceCurrencyCode), ge()(a = b.Z.SHOW_LESS_PRODUCTS).call(a, o) && t.storeItemsInShowLess.push(s), void t.storeItemsInShowMore.push(s)) : "continue"
								}, a = 0; a < this.storeItems.length; a++) n(a)
						}, t
					}(Phaser.GameObjects.Container),
					Ke = function(e) {
						function t(t, i, a, s) {
							var o;
							return (o = e.call(this, t, i, a, s) || this).header = void 0, o.main = void 0, o.footer = void 0, o.popupShowUpAnimation = void 0, o.bgFadeInAnimation = void 0, o.contentsFadeInAnimation = void 0, o.contentsFadeOutAnimation = void 0, o.bgFadeOutAnimation = void 0, o.handleClose = function() {
								o.runCloseAnimation()
							}, o.handleOnBuy = function() {
								var e = (0, n.Z)(r().mark((function e(t) {
									var i, n;
									return r().wrap((function(e) {
										for (;;) switch (e.prev = e.next) {
											case 0:
												if (t) {
													e.next = 2;
													break
												}
												return e.abrupt("return");
											case 2:
												return (i = o.scene.game.globalScene).screen.open(y.o4.NOTIFY_SCREEN, {
													message: o.scene.lang.getText("loading"),
													duration: 0,
													loading: !0
												}), e.prev = 4, e.next = 7, o.scene.payment.purchaseAsync(t.id);
											case 7:
												if (e.sent) {
													e.next = 10;
													break
												}
												throw new Error(o.scene.lang.getText("you_have_canceled_payment"));
											case 10:
												return e.next = 12, i.consumePurchasesReward();
											case 12:
												if (n = e.sent, 0 !== L()(n).length) {
													e.next = 15;
													break
												}
												throw new Error(o.scene.lang.getText("there_was_an_error_during_the_payment_please_try_again"));
											case 15:
												return i.screen.close(y.o4.NOTIFY_SCREEN), e.next = 18, i.openProductReceiveScreen(n);
											case 18:
												o.updateCoin(), o.showBuyableProducts(), e.next = 25;
												break;
											case 22:
												e.prev = 22, e.t0 = e.catch(4), i.screen.open(y.o4.NOTIFY_SCREEN, {
													message: e.t0.message,
													duration: 2e3,
													loading: !1
												});
											case 25:
											case "end":
												return e.stop()
										}
									}), e, null, [
										[4, 22]
									])
								})));
								return function(t) {
									return e.apply(this, arguments)
								}
							}(), o.handleOnShowMore = function() {
								o.footer.showLessBtn.revive(), o.footer.showMoreBtn.kill(), o.main.onShowMore()
							}, o.handleOnShowLess = function() {
								o.footer.showMoreBtn.revive(), o.footer.showLessBtn.kill(), o.main.onShowLess()
							}, o.createUI(), o.setDepth(y.Ks.POPUP), o.background.setAlpha(.8), o
						}(0, s.Z)(t, e);
						var i = t.prototype;
						return i.createUI = function() {
							this.createMain(), this.createHeader(), this.createFooter(), Phaser.Display.Align.In.TopCenter(this.header, this.background);
							var e = this.scene.ads.getBannerHeight();
							Phaser.Display.Align.In.BottomCenter(this.footer, this.background, 0, -e - 10), Phaser.Display.Align.To.BottomCenter(this.main, this.header, 0, 14)
						}, i.createFooter = function() {
							this.footer = new ie(this.scene), this.footer.showMoreBtn.onClick = this.handleOnShowMore, this.footer.showLessBtn.onClick = this.handleOnShowLess, this.add(this.footer), this.main.showMoreButton = this.footer.showMoreBtn, this.main.showLessButton = this.footer.showLessBtn
						}, i.createMain = function() {
							this.main = new We(this.scene), this.main.onBuy = this.handleOnBuy, this.add(this.main)
						}, i.createHeader = function() {
							this.header = new he(this.scene), this.header.closeButton.onClick = this.handleClose, this.add(this.header)
						}, i.open = function() {
							e.prototype.open.call(this), this.main.revive(), this.updateCoin(), this.runOpenAnimation(), this.footer.showLessBtn.kill(), this.main.showLoading(), this.showBuyableProducts()
						}, i.updateCoin = function() {
							var e = this.scene.player.getCoins();
							this.header.coinBar.setValue(e)
						}, i.showBuyableProducts = function() {
							var e = (0, n.Z)(r().mark((function e() {
								var t, i, n;
								return r().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return this.footer.showMoreBtn.kill(), e.next = 3, this.scene.payment.getCatalogAsync();
										case 3:
											return t = e.sent, e.next = 6, this.scene.payment.getPurchasesAsync();
										case 6:
											return i = e.sent, n = J()(t).call(t, (function(e) {
												return Q()(i).call(i, (function(t) {
													return t.productID === e.productID
												})) < 0
											})), this.main.updateProducts(n), this.handleOnShowLess(), this.main.isAllowShowMore() ? this.footer.showMoreBtn.revive() : this.footer.showMoreBtn.kill(), e.abrupt("return");
										case 12:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.runOpenAnimation = function() {
							var e, t;
							null != (e = this.popupShowUpAnimation) && null != (t = e.tween) && t.isPlaying() || (this.scene.audio.playSound(U.Z.POPUP_IN), this.runBgFadeInAnimation(0, 300), this.runContentsFadeInAnimation(0, 300))
						}, i.runCloseAnimation = function() {
							var e, t;
							null != (e = this.contentsFadeOutAnimation) && null != (t = e.tween) && t.isPlaying() || (this.scene.audio.playSound(U.Z.POPUP_OUT), this.main.runCloseAnimation(), this.runExitsAnimation(0, 250))
						}, i.runBgFadeInAnimation = function(e, t) {
							if (!this.bgFadeInAnimation) {
								var i = this.background.alpha;
								this.bgFadeInAnimation = new m.Z({
									targets: [this.background],
									delay: e,
									duration: t,
									props: {
										alpha: {
											start: 0,
											from: 0,
											to: i
										}
									}
								})
							}
							this.bgFadeInAnimation.play()
						}, i.runContentsFadeInAnimation = function(e, t) {
							this.contentsFadeInAnimation || (this.contentsFadeInAnimation = new m.Z({
								targets: [this.header, this.footer],
								delay: e,
								duration: t
							})), this.contentsFadeInAnimation.play()
						}, i.runExitsAnimation = function(e, t) {
							var i, n = this;
							if (this.contentsFadeOutAnimation || (this.contentsFadeOutAnimation = new f.Z({
									targets: [this.header, this.main, this.footer],
									delay: e,
									duration: t,
									onComplete: function() {
										n.main.kill()
									}
								})), this.contentsFadeOutAnimation.play(), !this.bgFadeOutAnimation) {
								var a = this.background.alpha;
								this.bgFadeOutAnimation = new f.Z({
									targets: [this.background],
									delay: e,
									duration: t + 100,
									props: {
										alpha: {
											start: a,
											from: a,
											to: 0
										}
									},
									onComplete: function() {
										n.main.setAlpha(1), n.scene.screen.close(n.name)
									}
								})
							}
							null == (i = this.bgFadeOutAnimation) || i.play()
						}, t
					}(GameCore.Screen),
					He = Ke,
					ze = g.Z.DEFAULT,
					Xe = ze.KEY,
					Ve = ze.FRAME,
					Je = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, c()(t = [this]).call(t, a)) || this).mask = void 0, i.fadeInAnim = void 0, i.fadeOutAnim = void 0, i.fpsMeter = void 0, i.memoryMeter = void 0, i.storeScreen = void 0, i.productReceiveScreen = void 0, i.notifyScreen = void 0, i.switchScene = function(e) {
								i.currentScene.key !== e && i.currentScene.switch(e)
							}, i.emitGameEventStartScene = function(e) {
								var t = e.scene.key;
								i.updateSceneState(), i.runMaskFadeOutAnimation(), i.updateActiveSceneKey(t), i.game.events.emit(Phaser.Scenes.Events.START, t), (0, A.sw)("scene", "Start scene: " + t)
							}, i.emitGameEventSleepScene = function(e) {
								var t = e.scene.scene.key;
								t !== v.C.LOAD_SCENE && (i.runMaskFadeInAnimation(), i.game.events.emit(Phaser.Scenes.Events.SLEEP, t))
							}, i.emitGameEventWakeScene = function(e) {
								var t = e.scene.scene.key;
								t !== v.C.LOAD_SCENE && (i.updateSceneState(), i.runMaskFadeOutAnimation(), i.updateActiveSceneKey(t), i.game.events.emit(Phaser.Scenes.Events.WAKE, t))
							}, i.emitGameEventPauseScene = function(e) {
								var t = e.scene.scene.key;
								i.game.events.emit(Phaser.Scenes.Events.PAUSE, t)
							}, i.emitGameEventResumeScene = function(e) {
								var t = e.scene.key;
								i.game.events.emit(Phaser.Scenes.Events.RESUME, t)
							}, i.emitGameEventShutdownScene = function(e) {
								var t = e.scene.scene.key;
								i.game.events.emit(Phaser.Scenes.Events.SHUTDOWN, t)
							}, i
						}(0, s.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							this.listenScenesEvents(), this.game.globalScene = this
						}, i.setup = function() {
							this.scaleGame(), this.addMask(), this.addNotifyScreen(), this.addStoreScreen(), this.addProductReceiveScreen(), this.addFPS(), this.addMemory()
						}, i.consumePurchasesReward = function() {
							var e = (0, n.Z)(r().mark((function e() {
								var t, i;
								return r().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, this.payment.getPurchasesAsync();
										case 2:
											return t = e.sent, e.next = 5, this.consumePurchases(t);
										case 5:
											return i = e.sent, e.abrupt("return", i);
										case 7:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.consumePurchases = function() {
							var e = (0, n.Z)(r().mark((function e(t) {
								var i, a = this;
								return r().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return i = {}, e.next = 3, u().all(p()(t).call(t, function() {
												var e = (0, n.Z)(r().mark((function e(t) {
													var n, s, o, l, c, h, u;
													return r().wrap((function(e) {
														for (;;) switch (e.prev = e.next) {
															case 0:
																if (n = b.Z.PRODUCTS[t.productID]) {
																	e.next = 3;
																	break
																}
																return e.abrupt("return");
															case 3:
																if ("RemoveAds" !== n.type) {
																	e.next = 15;
																	break
																}
																return e.next = 6, a.payment.consumePurchaseAsync(t);
															case 6:
																if (e.sent) {
																	e.next = 9;
																	break
																}
																return e.abrupt("return");
															case 9:
																s = n.removeAdDays, o = (new Date).valueOf() / 1e3, l = Number(t.purchaseTime) + 24 * s * 3600, o <= l && a.ads.setDisabledInterstitialAds(Math.ceil((l - o) / 86400)), i.RemoveAd || (i.RemoveAd = 0), i.RemoveAd += s;
															case 15:
																if ("Bundle" !== n.type && "Normal" !== n.type && "Combo" !== n.type) {
																	e.next = 22;
																	break
																}
																return e.next = 18, a.payment.consumePurchaseAsync(t);
															case 18:
																if (e.sent) {
																	e.next = 21;
																	break
																}
																return e.abrupt("return");
															case 21:
																for (c in n.itemsDataByKey) h = c, u = n.itemsDataByKey, i[h] = (i[h] || 0) + (u[h] || 0);
															case 22:
															case "end":
																return e.stop()
														}
													}), e)
												})));
												return function(t) {
													return e.apply(this, arguments)
												}
											}()));
										case 3:
											return e.abrupt("return", i);
										case 4:
										case "end":
											return e.stop()
									}
								}), e)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), i.openProductReceiveScreen = function(e) {
							var t = this;
							return new(u())((function(i) {
								t.screen.open(y.o4.PRODUCT_RECEIVE_SCREEN, e), t.productReceiveScreen.once(GameCore.Screens.Events.RUN_CLOSE_ANIMATION, i)
							}))
						}, i.addNotifyScreen = function() {
							var e = this.screen.add(y.o4.NOTIFY_SCREEN, k.Z);
							this.notifyScreen = e, Phaser.Display.Align.In.Center(e, this.gameZone)
						}, i.addStoreScreen = function() {
							var e = this.screen.add(y.o4.STORE_SCREEN, He);
							this.storeScreen = e, Phaser.Display.Align.In.Center(e, this.gameZone)
						}, i.addProductReceiveScreen = function() {
							var e = this.screen.add(y.o4.PRODUCT_RECEIVE_SCREEN, X);
							this.productReceiveScreen = e, Phaser.Display.Align.In.Center(e, this.gameZone)
						}, i.addMask = function() {
							this.mask = this.make.image({
								key: Xe,
								frame: Ve.BLANK
							});
							var e = this.gameZone,
								t = e.width,
								i = e.height;
							this.mask.setAlpha(0), this.mask.setOrigin(0, 0), this.mask.setTint(0), this.mask.setWorldSize(t, i)
						}, i.addFPS = function() {
							GameCore.Configs.Statistics.ShowFPSInGame && (this.fpsMeter = new P(this), Phaser.Display.Align.In.TopLeft(this.fpsMeter, this.gameZone, -20, -10))
						}, i.addMemory = function() {
							GameCore.Configs.Statistics.ShowMemoryInGame && (this.memoryMeter = new O(this), Phaser.Display.Align.In.TopLeft(this.memoryMeter, this.gameZone, -45, -3))
						}, i.updateSceneState = function() {
							this.setGlobalSceneOnTop()
						}, i.setGlobalSceneOnTop = function() {
							this.scene.bringToTop(this)
						}, i.runMaskFadeInAnimation = function() {
							var e, t;
							this.mask && GameCore.Configs.EnableEffectSceneTransition && (null == (e = this.fadeInAnim) || e.remove(), null == (t = this.fadeOutAnim) || t.remove(), this.fadeInAnim = new m.Z({
								targets: [this.mask],
								duration: 400,
								ease: Phaser.Math.Easing.Cubic.In,
								props: {
									alpha: {
										start: 0,
										from: 0,
										to: .6
									}
								}
							}), this.mask.setAlpha(0), this.fadeInAnim.play())
						}, i.runMaskFadeOutAnimation = function() {
							var e, t;
							this.mask && GameCore.Configs.EnableEffectSceneTransition && (null == (e = this.fadeInAnim) || e.remove(), null == (t = this.fadeOutAnim) || t.remove(), this.fadeOutAnim = new f.Z({
								targets: [this.mask],
								duration: 400,
								ease: Phaser.Math.Easing.Cubic.Out,
								props: {
									alpha: {
										start: .6,
										from: .6,
										to: 0
									}
								}
							}), this.mask.setAlpha(1), this.fadeOutAnim.play())
						}, i.listenScenesEvents = function() {
							var e = this;
							this.scene.manager.getScenes(!1).forEach((function(t) {
								t.events.off(Phaser.Scenes.Events.CREATE, e.emitGameEventStartScene), t.events.off(Phaser.Scenes.Events.SLEEP, e.emitGameEventSleepScene), t.events.off(Phaser.Scenes.Events.WAKE, e.emitGameEventWakeScene), t.events.off(Phaser.Scenes.Events.PAUSE, e.emitGameEventPauseScene), t.events.off(Phaser.Scenes.Events.RESUME, e.emitGameEventResumeScene), t.events.off(Phaser.Scenes.Events.SHUTDOWN, e.emitGameEventShutdownScene), t.events.on(Phaser.Scenes.Events.CREATE, e.emitGameEventStartScene), t.events.on(Phaser.Scenes.Events.SLEEP, e.emitGameEventSleepScene), t.events.on(Phaser.Scenes.Events.WAKE, e.emitGameEventWakeScene), t.events.on(Phaser.Scenes.Events.PAUSE, e.emitGameEventPauseScene), t.events.on(Phaser.Scenes.Events.RESUME, e.emitGameEventResumeScene), t.events.on(Phaser.Scenes.Events.SHUTDOWN, e.emitGameEventShutdownScene)
							})), this.events.off(v.K.SWITCH, this.switchScene), this.events.on(v.K.SWITCH, this.switchScene)
						}, i.getActiveScene = function() {
							return this.scene.manager.getScenes(!0)[0]
						}, i.getCurrentScene = function() {
							return this.currentScene
						}, i.updateActiveSceneKey = function(e) {
							e !== v.C.GLOBAL_SCENE && this.storage.dispatch((0, E.I)(e))
						}, i.logEventOpen = function() {}, i.logPageviewOnOpen = function() {}, (0, a.Z)(t, [{
							key: "currentScene",
							get: function() {
								var e = this.storage.getState(),
									t = T(e);
								return (t ? this.scene.manager.getScene(t) : this.getActiveScene()).scene
							}
						}]), t
					}(S.Z),
					qe = Je
			},
			17063: function(e, t, i) {
				"use strict";
				var n = i(41819),
					a = i(62698),
					s = i(37047),
					o = i(20402),
					r = i(27033),
					l = i(58644),
					c = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).loadingIcon = void 0, s.messageText = void 0, s.openAnimation = void 0, s.closeTimerEvent = void 0, s.addLoadingIcon(), s.addMessageText(), s.setDepth(l.Ks.PRIORITY), s.background.setAlpha(.8), s
						}(0, n.Z)(t, e);
						var i = t.prototype;
						return i.open = function(t) {
							var i, n = this;
							e.prototype.open.call(this, t);
							var a = this.getData(["message", "duration", "loading"]),
								s = a[0],
								o = void 0 === s ? "" : s,
								r = a[1],
								l = void 0 === r ? 0 : r,
								c = a[2],
								h = void 0 !== c && c;
							this.setMessage(o), this.showLoading(h), null == (i = this.closeTimerEvent) || i.remove(), l > 0 && (this.closeTimerEvent = this.scene.time.addEvent({
								delay: l,
								callback: function() {
									n.visible && n.scene.screen.close(n.name)
								}
							}))
						}, i.addLoadingIcon = function() {
							this.loadingIcon = new o.Z(this.scene), this.add(this.loadingIcon), Phaser.Display.Align.In.Center(this.loadingIcon, this.zone)
						}, i.addMessageText = function() {
							var e = this.scene.gameZone.width;
							this.messageText = s.Z.addText(this.scene, {
								size: this.scene.fontSize(28),
								font: r.Z.PRIMARY.KEY,
								origin: {
									x: .5,
									y: .5
								}
							}), this.messageText.setMaxWidth(.9 * e), this.add(this.messageText)
						}, i.setMessage = function(e) {
							this.messageText.setText(e)
						}, i.showLoading = function(e) {
							e ? this.loadingIcon.revive() : this.loadingIcon.kill();
							var t = !1 === e ? 20 : 80;
							Phaser.Display.Align.In.Center(this.messageText, this.zone, -5, t)
						}, i.runOpenAnimation = function() {
							var e, t;
							null == (e = this.openAnimation) || e.stop(), null == (t = this.openAnimation) || t.remove(), this.openAnimation = new a.Z({
								targets: [this.messageText, this.loadingIcon],
								props: {
									scale: {
										getStart: function(e) {
											return e.scale - .3
										},
										getEnd: function(e) {
											return e.scale
										}
									}
								}
							}), this.openAnimation.play()
						}, i.logPageviewOnOpen = function() {}, i.logPageviewOnClose = function() {}, t
					}(GameCore.Screen);
				t.Z = c
			},
			33262: function(e, t, i) {
				"use strict";
				var n, a = i(93397),
					s = i(70268),
					o = i(73126),
					r = i(33938),
					l = i(41819),
					c = i(63109),
					h = i.n(c),
					u = i(61154),
					d = 0,
					p = 0,
					m = function() {
						function e(e) {
							this.game = void 0, this.progressFbTimeEvent = void 0, this.game = e
						}
						var t = e.prototype;
						return t.loadingProgressFbBootScene = function() {
							var e = this,
								t = 100;
							p = 30;
							! function i() {
								t <= 0 ? clearTimeout(e.progressFbTimeEvent) : e.progressFbTimeEvent = setTimeout((function() {
									e.game.facebook.setLoadingProgress(Math.round(p)), p += 30 / t, t--, i()
								}), 50)
							}()
						}, t.finishLoadingProgressFbBootScene = function() {
							clearTimeout(this.progressFbTimeEvent)
						}, t.loadingProgressFbLoadScene = function() {
							var e = this;
							(!p || p < 30) && (p = 60), d = p;
							! function t() {
								e.progressFbTimeEvent = setTimeout((function() {
									e.game.facebook.setLoadingProgress(Math.round(p)), p += .1, t()
								}), 50)
							}()
						}, t.onProgress = function(e) {
							var t = 100 - p,
								i = Math.round(e * t + p);
							i > d && clearTimeout(this.progressFbTimeEvent), this.game.facebook.setLoadingProgress(i)
						}, e
					}(),
					f = function() {
						function e(e) {
							this.game = void 0, this.game = e
						}
						var t = e.prototype;
						return t.addKillRevive = function() {
							var e = this;
							[Phaser.GameObjects.Container, Phaser.GameObjects.Image, Phaser.GameObjects.Sprite, Phaser.GameObjects.Graphics, Phaser.GameObjects.Text, Phaser.GameObjects.BitmapText, Phaser.GameObjects.Particles.ParticleEmitter, Phaser.GameObjects.Particles.ParticleEmitterManager].forEach((function(t) {
								t.prototype.kill = e.kill, t.prototype.revive = e.revive
							}))
						}, t.addKillReviveGroup = function() {
							Phaser.GameObjects.Group.prototype.killGroup = this.killGroup, Phaser.GameObjects.Group.prototype.reviveGroup = this.reviveGroup
						}, t.addSetWorldSize = function() {
							var e = this;
							[Phaser.GameObjects.Image, Phaser.GameObjects.Sprite].forEach((function(t) {
								t.prototype.setWorldSize = e.setWorldSize
							}))
						}, t.addSetWorldSizeForContainer = function() {
							var e = this;
							[Phaser.GameObjects.Container].forEach((function(t) {
								t.prototype.setWorldSize = e.setWorldSizeForContainer
							}))
						}, t.addGetWorldPosition = function() {
							var e = this;
							[Phaser.GameObjects.Container, Phaser.GameObjects.Image, Phaser.GameObjects.Sprite, Phaser.GameObjects.Graphics, Phaser.GameObjects.Text, Phaser.GameObjects.BitmapText].forEach((function(t) {
								t.prototype.getWorldPosition = e.getWorldPosition
							}))
						}, t.addDrawDebugBox = function() {
							var e = this;
							[Phaser.GameObjects.Container, Phaser.GameObjects.Image, Phaser.GameObjects.Sprite, Phaser.GameObjects.Graphics, Phaser.GameObjects.Text, Phaser.GameObjects.BitmapText, Phaser.GameObjects.Zone].forEach((function(t) {
								t.prototype.drawDebugBox = e.drawDebugBox
							}))
						}, t.addHighQuality = function() {
							var e = this;
							[Phaser.GameObjects.Text].forEach((function(t) {
								t.prototype.setHighQuality = e.setHighQuality
							}))
						}, t.kill = function() {
							var e = this.active;
							this.setActive(!1), this.setVisible(!1), e && (this.removeFromUpdateList && this.removeFromUpdateList(), this.removeFromDisplayList && this.removeFromDisplayList())
						}, t.revive = function() {
							var e = this.active;
							this.setActive(!0), this.setVisible(!0), e || (this.addToUpdateList && this.addToUpdateList(), this.addToDisplayList && !this.parentContainer && this.addToDisplayList())
						}, t.killGroup = function() {
							this.getChildren().forEach((function(e) {
								e.setActive(!1), e.setVisible(!1)
							}))
						}, t.reviveGroup = function() {
							this.getChildren().forEach((function(e) {
								e.setActive(!0), e.setVisible(!0)
							}))
						}, t.setWorldSize = function(e, t) {
							this.setSize(e, t), this.setDisplaySize(e, t)
						}, t.setWorldSizeForContainer = function(e, t, i) {
							void 0 === i && (i = 2), this.setSize(e * i, t * i), this.setDisplaySize(e, t)
						}, t.getWorldPosition = function() {
							var e = this.getWorldTransformMatrix().decomposeMatrix();
							return {
								x: e.translateX,
								y: e.translateY
							}
						}, t.drawDebugBox = function(e, t) {
							var i = this.x,
								n = this.y,
								a = this.width,
								s = this.height,
								o = this.depth,
								r = this.originX,
								l = this.originY,
								c = this.scene.add.rectangle(i, n, a, s, e, t);
							c.setName("Debug Box"), c.setDepth(o);
							var h = GameCore.Utils.Valid.isNumber;
							return h(r) && h(l) && c.setOrigin(r, l), c
						}, t.setHighQuality = function() {
							return this.renderer instanceof Phaser.Renderer.WebGL.WebGLRenderer ? this.setResolution(2 * this.scene.game.world.getZoomRatio()) : this
						}, e
					}(),
					g = f,
					v = i(77766),
					y = i.n(v),
					b = i(94198),
					E = i.n(b),
					T = i(20116),
					A = i.n(T),
					S = i(2991),
					_ = i.n(S),
					C = {
						LOADED: "loaded",
						DISPLAYED: "displayed"
					};
				! function(e) {
					e.IDLE = "idle", e.LOADING = "loading", e.FILLED = "filled", e.SHOWING = "showing"
				}(n || (n = {}));
				var w, B = n;
				! function(e) {
					e.REWARDED = "rewarded", e.PRE_ROLL = "pre-roll", e.MID_ROLL = "mid-roll"
				}(w || (w = {}));
				var I = w,
					P = i(53082),
					x = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, i) || this).code = void 0, n.code = t, n.message = i, n
						}
						return (0, l.Z)(t, e), t
					}((0, P.Z)(Error)),
					O = function(e) {
						this.type = void 0, this.status = void 0, this.type = e, this.status = B.IDLE
					},
					k = GameCore.Configs.Ads.Mockup.GiphyApiKey,
					R = function() {
						function e() {}
						return e.loadBannerAdAsync = function() {
							var e = (0, r.Z)(h().mark((function e(t) {
								var i, n, a, s, o, r, l;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, this.getAdContentAsync();
										case 2:
											if (i = e.sent, n = document.getElementById(t.placementId), a = t.bannerHeight, s = t.bannerWidth, !n) {
												e.next = 13;
												break
											}
											if ((o = n.getElementsByTagName("img")) && !(o.length <= 0)) {
												e.next = 10;
												break
											}
											return e.abrupt("return");
										case 10:
											o[0].src = i, e.next = 30;
											break;
										case 13:
											(r = document.createElement("div")).id = t.placementId, r.style.bottom = "var(--sab)", r.style.position = "fixed", r.style.background = "#fff url(" + i + ") center center/auto no-repeat", r.style.outline = "2px solid #ffffff40", r.style.outlineOffset = "-2px", r.style.zIndex = "98", r.style.overflow = "hidden", "right" == t.position ? (r.style.bottom = "0px", r.style.right = "0px", r.style.top = "0px", r.style.height = "100%", r.style.width = s + "px") : "left" == t.position ? (r.style.bottom = "0px", r.style.left = "0px", r.style.top = "0px", r.style.height = "100%", r.style.width = s + "px") : "bottom" == t.position ? (r.style.bottom = "0px", r.style.top = "", r.style.height = a + "px", r.style.width = "100%") : "top" == t.position && (r.style.top = "0px", r.style.bottom = "", r.style.height = a + "px", r.style.width = "100%"), l = document.createElement("style"), (document.head || document.getElementsByTagName("head")[0]).appendChild(l), "@keyframes fake-gif {\n                0%,10% {\n                    background-position-y: top\n                }\n                60% {\n                    background-position-y: center\n                }\n                100% {\n                    background-position-y: bottom\n                }\n            }", l.appendChild(document.createTextNode("@keyframes fake-gif {\n                0%,10% {\n                    background-position-y: top\n                }\n                60% {\n                    background-position-y: center\n                }\n                100% {\n                    background-position-y: bottom\n                }\n            }")), r.style.animation = "fake-gif 6s ease-in-out 0s infinite alternate both", document.body.appendChild(r);
										case 30:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), e.getAdContentAsync = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, i, n, a, s;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return t = "https://api.giphy.com/v1/gifs/trending?api_key=" + k + "&rate=pg&bundle=low_bandwidth", e.next = 3, 
                                            new Promise(function (resolve, reject) {
                                                var xhttp = new XMLHttpRequest();
                                                xhttp.onreadystatechange = function() {
                                                    if (this.readyState == 4 && this.status == 200) {
                                                        resolve(xhttp.response);
                                                    // Typical action to be performed when the document is ready:
                                                    }
                                                };
                                                xhttp.responseType = "json";
                                                xhttp.open("GET", t, true);
                                                xhttp.send();
                                            }).then((response) => {
                                                return response
                                            })
                                            // fetch(t, {
											// 	method: "GET"
											// });
										case 3:
											return i = e.sent, e.next = 6, i;
										case 6:
											if (n = e.sent, GameCore.Utils.Valid.isObject(n)) {
												e.next = 9;
												break
											}
											return e.abrupt("return", "");
										case 9:
											return a = n.data, s = Math.floor(Math.random() * a.length), e.abrupt("return", a[s].images.downsized.url);
										case 12:
										case "end":
											return e.stop()
									}
								}), e)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), e.hideBannerAdAsync = function() {
							var e = (0, r.Z)(h().mark((function e(t) {
								var i;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (i = document.getElementById(t)) {
												e.next = 3;
												break
											}
											return e.abrupt("return");
										case 3:
											i.remove();
										case 4:
										case "end":
											return e.stop()
									}
								}), e)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), e
					}(),
					M = function() {
						function e(e) {
							this.config = void 0, this.isShowing = void 0, this.reloadBannerAdInterval = void 0, this.config = e, this.reloadBannerAdInterval = null
						}
						var t = e.prototype;
						return t.show = function() {
							var e = this;
							if (!this.isShowing) {
								var t = this.config,
									i = t.placementId,
									n = t.secondsReload;
								if (n > 0) {
									if (this.reloadBannerAdInterval) return;
									return this.loadBannerAdAsync(i), void(this.reloadBannerAdInterval = setInterval((function() {
										e.loadBannerAdAsync(i)
									}), 1e3 * n))
								}
								this.loadBannerAdAsync(i)
							}
						}, t.loadBannerAdAsync = function() {
							var e = (0, r.Z)(h().mark((function e(t) {
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (e.prev = 0, !GameCore.Configs.Ads.Mockup.Enable) {
												e.next = 7;
												break
											}
											return e.next = 5, R.loadBannerAdAsync(this.config);
										case 5:
											e.next = 9;
											break;
										case 7:
											return e.next = 9, GameSDK.loadBannerAdAsync(t, this.config);
										case 9:
											this.isShowing = !0, e.next = 15;
											break;
										case 12:
											e.prev = 12, e.t0 = e.catch(0);
										case 15:
										case "end":
											return e.stop()
									}
								}), e, this, [
									[0, 12]
								])
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), t.hideAsync = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, i;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (this.isShowing) {
												e.next = 2;
												break
											}
											return e.abrupt("return");
										case 2:
											if (e.prev = 2, t = GameCore.Configs.Ads, i = this.config.placementId, this.isShowing = !1, this.reloadBannerAdInterval && (clearInterval(this.reloadBannerAdInterval), this.reloadBannerAdInterval = null), !t.Mockup.Enable) {
												e.next = 12;
												break
											}
											return e.next = 10, R.hideBannerAdAsync(i);
										case 10:
											e.next = 14;
											break;
										case 12:
											return e.next = 14, GameSDK.hideBannerAdAsync(i);
										case 14:
											e.next = 19;
											break;
										case 16:
											e.prev = 16, e.t0 = e.catch(2);
										case 19:
										case "end":
											return e.stop()
									}
								}), e, this, [
									[2, 16]
								])
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), e
					}();
				GameCore.Ads = {
					Types: I,
					Status: B,
					Events: C,
					AdError: x,
					AdInstance: O
				};
				var L = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).events = void 0, i.enabled = void 0, i.config = void 0, i.lastInterAdShownTime = void 0, i.lastRewardAdShownTime = void 0, i.preRollAd = void 0, i.midRollAd = void 0, i.rewardedVideo = void 0, i.preRoll = void 0, i.safeAreaBottom = void 0, i.isInterstitialRemoved = !1, i.daysRemoveAdsLeft = 0, i.showingBannerAd = void 0, i.reloadBannerAdIntervals = void 0, i.bannerAdConfig = void 0, i.isHaveBannerAdOptions = void 0, i.bannerAds = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							this.events = new Phaser.Events.EventEmitter, this.safeAreaBottom = 0, this.lastInterAdShownTime = 0, this.lastRewardAdShownTime = 0, this.bannerAds = []
						}, i.calculateSafeAreaBottom = function() {
							try {
								if (!this.config.CalculateSafeAreaBottom) return;
								this.safeAreaBottom = E()(getComputedStyle(document.documentElement).getPropertyValue("--sab")), isNaN(this.safeAreaBottom) && (this.safeAreaBottom = 0)
							} catch (e) {
								this.safeAreaBottom = 0
							}
						}, i.configure = function(e, t) {
							this.enabled = t.Enabled, this.config = t, this.initBannerAd(), this.setAdInstance(e), this.calculateSafeAreaBottom()
						}, i.setAdInstance = function(e) {
							this.preRollAd = new e(I.PRE_ROLL, "pre-roll"), this.midRollAd = new e(I.MID_ROLL, "mid-roll"), this.rewardedVideo = new e(I.REWARDED, "rewarded")
						}, i.preloadPreRollAdAsync = function() {
							return this.preloadAdAsync(I.PRE_ROLL)
						}, i.showPreRollAdAsync = function() {
							var e = (0, r.Z)(h().mark((function e() {
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (this.canbeShowInterstitialAd()) {
												e.next = 2;
												break
											}
											throw new x("INTERSTITIAL_AD_CAN_NOT_SHOW", "Can't show interstitial ad");
										case 2:
											return e.next = 4, this.showAdAsync(I.PRE_ROLL);
										case 4:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.preloadMidRollAdAsync = function() {
							var e = (0, r.Z)(h().mark((function e() {
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, this.preloadAdAsync(I.MID_ROLL);
										case 2:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.showMidRollAdAsync = function() {
							var e = (0, r.Z)(h().mark((function e() {
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (this.canbeShowInterstitialAd()) {
												e.next = 2;
												break
											}
											throw new x("INTERSTITIAL_AD_CAN_NOT_SHOW", "Can't show interstitial ad");
										case 2:
											return e.next = 4, this.showAdAsync(I.MID_ROLL);
										case 4:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.preloadRewardedVideoAsync = function() {
							var e = (0, r.Z)(h().mark((function e() {
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, this.preloadAdAsync(I.REWARDED);
										case 2:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.showRewardedVideoAsync = function() {
							var e = (0, r.Z)(h().mark((function e() {
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (this.canbeShowRewardAd()) {
												e.next = 2;
												break
											}
											throw new x("REWARDED_VIDEO_CAN_NOT_SHOW", "Can't show rewarded video");
										case 2:
											return e.next = 4, this.showAdAsync(I.REWARDED);
										case 4:
											this.lastRewardAdShownTime = window.performance.now() / 1e3;
										case 5:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.getRemainingRewardTime = function() {
							var e = window.performance.now() / 1e3,
								t = this.config.RewardAdOptions.secondsBetweenAds,
								i = e - this.lastRewardAdShownTime;
							return i < t ? t - i : 0
						}, i.preloadAdAsync = function() {
							var e = (0, r.Z)(h().mark((function e(t) {
								var i;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (this.enabled) {
												e.next = 2;
												break
											}
											throw new x("ADS_NOT_ENABLED", "Ads is't enabled");
										case 2:
											if (null !== (i = this.getAdInstanceByType(t))) {
												e.next = 5;
												break
											}
											throw new x("AD_INSTANCE_NOT_INITIALLED", "The instance ads not yet initiated");
										case 5:
											return e.next = 7, i.loadAsync();
										case 7:
											this.events.emit(C.LOADED, t);
										case 8:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), i.showAdAsync = function() {
							var e = (0, r.Z)(h().mark((function e(t) {
								var i;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (this.enabled) {
												e.next = 2;
												break
											}
											throw new x("ADS_NOT_ENABLED", "Ads is't enabled");
										case 2:
											if (null !== (i = this.getAdInstanceByType(t))) {
												e.next = 5;
												break
											}
											throw new x("AD_INSTANCE_NOT_INITIALLED", "The instance ads not yet initiated");
										case 5:
											return t !== I.PRE_ROLL && t !== I.MID_ROLL || (this.lastInterAdShownTime = window.performance.now() / 1e3), t === I.REWARDED && (this.lastRewardAdShownTime = window.performance.now() / 1e3, this.config.EnableRewardVideoResetInterstitial && (this.lastInterAdShownTime = this.lastRewardAdShownTime)), e.next = 9, i.showAsync();
										case 9:
											this.events.emit(C.DISPLAYED, t);
										case 10:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), i.getAdStatus = function(e) {
							var t = this.getAdInstanceByType(e);
							return t ? t.getStatus() : null
						}, i.getAdInstanceByType = function(e) {
							switch (e) {
								case I.PRE_ROLL:
									return this.preRollAd;
								case I.MID_ROLL:
									return this.midRollAd;
								case I.REWARDED:
									return this.rewardedVideo;
								default:
									return null
							}
						}, i.canbeShowInterstitialAd = function() {
							return !this.isInterstitialRemoved && this.canbeShowInterstitialAdByTime()
						}, i.canbeShowInterstitialAdByTime = function() {
							var e = window.performance.now() / 1e3,
								t = this.config.InterstitialAdOptions,
								i = t.secondsFirstTime,
								n = t.secondsBetweenAds,
								a = Math.floor(e - this.lastInterAdShownTime);
							return this.lastInterAdShownTime > 0 ? a >= n : a >= i
						}, i.canbeShowRewardAd = function() {
							var e = window.performance.now() / 1e3,
								t = this.config.RewardAdOptions,
								i = t.secondsFirstTime,
								n = t.secondsBetweenAds,
								a = Math.floor(e - this.lastRewardAdShownTime);
							return this.lastRewardAdShownTime > 0 ? a >= n : a >= i
						}, i.initBannerAd = function() {
							for (var e = this.config.BannerAdOptions, t = GameCore.Utils.Device.isDesktop(), i = 0; i < e.length; i++) {
								var n = e[i],
									a = n.platform;
								("ALL" == a || "DESKTOP" == a && t || "MOBILE" == a && !t) && this.bannerAds.push(new M(n))
							}
							return this.bannerAds.length > 0
						}, i.isEnoughSpaceToShowBannerAds = function(e) {
							var t = this.game.world.getScreenWidth(),
								i = this.game.world.getScreenHeight(),
								n = this.game.world.getPixelRatio(),
								a = this.game.canvas,
								s = a.width,
								o = a.height;
							s /= n, o /= n;
							var r = this.game.world.getDefaultRatio();
							if ("left" == e.position || "right" == e.position) {
								var l = e.bannerWidth || 120;
								return !(i < (e.bannerHeight || 600)) && (t - s) / 2 > l
							}
							var c = e.bannerHeight || 90;
							return !(e.bannerWidth && t < e.bannerWidth) && ((i - o) / 2 > c || s / (o - e.bannerHeight + 50) < r)
						}, i.showBannerAdAsync = function() {
							var e = (0, r.Z)(h().mark((function e(t) {
								var i;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (this.enabled) {
												e.next = 2;
												break
											}
											return e.abrupt("return");
										case 2:
											i = 0;
										case 3:
											if (!(i < this.bannerAds.length)) {
												e.next = 11;
												break
											}
											if (void 0 == t) {
												e.next = 7;
												break
											}
											if (this.bannerAds[i].config.placementId == t) {
												e.next = 7;
												break
											}
											return e.abrupt("continue", 8);
										case 7:
											this.bannerAds[i].show();
										case 8:
											i++, e.next = 3;
											break;
										case 11:
											return e.abrupt("return");
										case 12:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), i.hideBannerAdAsync = function() {
							var e = (0, r.Z)(h().mark((function e(t) {
								var i;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (this.enabled) {
												e.next = 2;
												break
											}
											return e.abrupt("return");
										case 2:
											i = 0;
										case 3:
											if (!(i < this.bannerAds.length)) {
												e.next = 11;
												break
											}
											if (void 0 == t) {
												e.next = 7;
												break
											}
											if (this.bannerAds[i].config.placementId == t) {
												e.next = 7;
												break
											}
											return e.abrupt("continue", 8);
										case 7:
											this.bannerAds[i].hideAsync();
										case 8:
											i++, e.next = 3;
											break;
										case 11:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), i.getBannerHeight = function() {
							var e;
							if (!this.enabled) return 0;
							var t = A()(e = this.bannerAds).call(e, (function(e) {
									return "bottom" == e.config.position
								})),
								i = 0;
							t.length > 0 && (i = Math.max.apply(Math, _()(t).call(t, (function(e) {
								return e.config.bannerHeight
							}))));
							var n = i + this.safeAreaBottom;
							if (this.game.world) {
								var a = this.game.world,
									s = a.getPixelRatio(),
									o = a.getZoomRatio();
								return this.game.world.getPhysicPixels(n, s / o)
							}
							return n
						}, i.setDisabledInterstitialAds = function(e) {
							this.isInterstitialRemoved = !0, this.daysRemoveAdsLeft = e
						}, i.isDisabledInterstitialAds = function() {
							return this.isInterstitialRemoved
						}, i.getDaysRemoveAdsLeft = function() {
							return this.daysRemoveAdsLeft
						}, t
					}(Phaser.Plugins.BasePlugin),
					G = L,
					D = function() {
						function e(e, t, i) {
							this.name = void 0, this.color = void 0, this.selfLog = void 0, this.options = void 0, this.name = e, this.color = i || "#FFF", this.options = t, this.selfLog = !0
						}
						var t = e.prototype;
						return t.event = function(e, t, i) {
							this.processEvent(e, t, i), this.selfLog
						}, t.pageview = function(e) {
							var t = this.getPageByKey(e);
							this.processPageView(t), this.selfLog
						}, t.levelStart = function(e, t, i) {
							this.processLevelStart(e, t, i), this.selfLog
						}, t.levelFail = function(e, t, i) {
							this.processLevelFail(e, t, i), this.selfLog
						}, t.levelRescue = function(e, t, i) {
							this.processLevelRescue(e, t, i), this.selfLog
						}, t.levelComplete = function(e, t, i) {
							this.processLevelComplete(e, t, i), this.selfLog
						}, t.showInterstitialAd = function(e) {
							this.processShowInterstitialAd(e), this.selfLog
						}, t.showRewardedVideoAd = function(e) {
							this.processShowRewardedVideoAd(e), this.selfLog
						}, t.receiveReward = function(e) {
							this.processReceiveReward(e), this.selfLog
						}, t.showAdFail = function(e, t, i) {
							this.processShowAdFail(e, t, i), this.selfLog
						}, t.getPageByKey = function(e) {
							var t = e.replace(/_/g, "-");
							return t = t.toLowerCase()
						}, t.processLevelStart = function(e, t, i) {}, t.processLevelFail = function(e, t, i) {}, t.processLevelRescue = function(e, t, i) {}, t.processLevelComplete = function(e, t, i) {}, t.processShowInterstitialAd = function(e) {}, t.processShowRewardedVideoAd = function(e) {}, t.processReceiveReward = function(e) {}, t.processShowAdFail = function(e, t, i) {}, e
					}(),
					F = D;
				GameCore.Analytics = {
					BaseAnalytics: F
				};
				var N, Z = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).analytics = void 0, i.pageview = function(e) {
								i.isActive() && i.analytics.forEach((function(t) {
									t.pageview(e)
								}))
							}, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							this.analytics = []
						}, i.add = function(e) {
							this.analytics.push(e)
						}, i.event = function(e, t, i) {
							this.isActive() && this.analytics.forEach((function(n) {
								n.event(e, t, i)
							}))
						}, i.levelStart = function(e, t, i) {
							this.isActive() && this.analytics.forEach((function(n) {
								n.levelStart(e, t, i)
							}))
						}, i.levelRescue = function(e, t, i) {
							this.isActive() && this.analytics.forEach((function(n) {
								n.levelRescue(e, t, i)
							}))
						}, i.levelFail = function(e, t, i) {
							this.isActive() && this.analytics.forEach((function(n) {
								n.levelFail(e, t, i)
							}))
						}, i.levelComplete = function(e, t, i) {
							this.isActive() && this.analytics.forEach((function(n) {
								n.levelComplete(e, t, i)
							}))
						}, i.showInterstitialAd = function(e) {
							this.isActive() && this.analytics.forEach((function(t) {
								t.showInterstitialAd(e)
							}))
						}, i.showRewardedVideoAd = function(e) {
							this.isActive() && this.analytics.forEach((function(t) {
								t.showRewardedVideoAd(e)
							}))
						}, i.receiveReward = function(e) {
							this.isActive() && this.analytics.forEach((function(t) {
								t.receiveReward(e)
							}))
						}, i.showAdFail = function(e, t, i) {
							this.isActive() && this.analytics.forEach((function(n) {
								n.showAdFail(e, t, i)
							}))
						}, i.isActive = function() {
							return this.analytics.length >= 1
						}, t
					}(Phaser.Plugins.BasePlugin),
					U = Z,
					j = function() {
						function e(e, t) {
							var i = this;
							this.name = void 0, this.game = void 0, this.audio = void 0, this.markers = void 0, this.volume = 0, this.speedVolumeChange = .3, this.tweenChangeVolume = void 0, this.isMusicEnabled = function() {
								return !!i.game.player.getPlayerSetting("music")
							}, this.isSoundEnabled = function() {
								return !!i.game.player.getPlayerSetting("sound")
							}, this.name = t, this.game = e, this.markers = {}, this.audio = this.game.sound.add(this.name)
						}
						var t = e.prototype;
						return t.play = function(e, t) {
							var i, n, a = (0, o.Z)({
								volume: this.volume
							}, t || {});
							a.volume !== this.volume && (a.volume *= this.volume), (null == (i = this.audio) ? void 0 : i.seek) > 0 ? this.audio.resume() : null == (n = this.audio) || n.play(e, a)
						}, t.pause = function(e) {
							var t;
							null == (t = this.audio) || t.pause()
						}, t.stop = function(e) {
							var t;
							null == (t = this.audio) || t.stop()
						}, t.setVolume = function(e) {
							var t, i = this;
							null == (t = this.tweenChangeVolume) || t.remove();
							var n = this.volume,
								a = e,
								s = Math.abs(e - this.volume) / this.speedVolumeChange * 1e3;
							this.tweenChangeVolume = this.game.globalScene.tweens.addCounter({
								from: n,
								to: a,
								duration: s,
								onUpdate: function(e) {
									var t, n = e.getValue();
									i.volume = n, null == (t = i.audio) || t.setVolume(n)
								}
							})
						}, e
					}(),
					Y = j,
					W = i(86902),
					K = i.n(W),
					H = function() {
						function e(e, t) {
							var i = this;
							this.keys = void 0, this.game = void 0, this.audio = void 0, this.markers = void 0, this.lastTimePlayed = {}, this.volume = void 0, this.isMuted = !1, this.isMusicEnabled = function() {
								return !!i.game.player.getPlayerSetting("music")
							}, this.isSoundEnabled = function() {
								return !!i.game.player.getPlayerSetting("sound")
							}, this.keys = t, this.game = e, this.markers = {}
						}
						var t = e.prototype;
						return t.play = function(e, t, i, n) {
							var a, s;
							void 0 === i && (i = !1), void 0 === n && (n = 0);
							var r = (0, o.Z)({
								volume: this.volume
							}, t || {});
							r.volume !== this.volume && (r.volume *= this.volume);
							var l = this.lastTimePlayed[e] || 0,
								c = (new Date).getTime();
							i && c - l < n || (this.createMaker(e, i), null == (a = this.markers[e]) || a.play(), this.lastTimePlayed[e] = c, null == (s = this.markers[e]) || s.setMute(this.isMuted))
						}, t.pause = function(e) {
							var t;
							null == (t = this.markers[e]) || t.pause()
						}, t.stop = function(e) {
							var t;
							null == (t = this.markers[e]) || t.stop()
						}, t.setVolume = function(e) {
							this.volume = e
						}, t.createMaker = function(e, t) {
							if (void 0 === t && (t = !1), t) try {
								this.markers[e] = this.game.sound.add(e)
							} catch (i) {} else if (!this.markers[e]) try {
								this.markers[e] = this.game.sound.add(e)
							} catch (i) {}
						}, t.mute = function() {
							var e = this;
							K()(this.markers).forEach((function(t) {
								var i = e.markers[t];
								i && i.setMute(!0)
							})), this.isMuted = !0
						}, t.unmute = function() {
							var e = this;
							K()(this.markers).forEach((function(t) {
								var i = e.markers[t];
								i && i.setMute(!1)
							})), this.isMuted = !1
						}, e
					}(),
					z = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).soundManager = void 0, i.musicManager = void 0, i.initMusic = function(e) {
								i.musicManager = new Y(i.game, e), i.setMusicVolume(.2)
							}, i.initSound = function(e) {
								i.soundManager = new H(i.game, e), i.setSoundVolume(1)
							}, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function(t) {
							e.prototype.init.call(this, t), this.initSound([])
						}, i.playSound = function(e, t, i, n) {
							void 0 === i && (i = !1), void 0 === n && (n = 0);
							try {
								if (!this.soundManager) return;
								if (!this.soundManager.isSoundEnabled()) return;
								this.soundManager.play(e, t, i, n)
							} catch (a) {}
						}, i.stopSound = function(e) {
							try {
								this.soundManager.stop(e)
							} catch (t) {}
						}, i.playMusic = function(e) {
							void 0 === e && (e = {});
							try {
								if (!this.musicManager) return;
								if (!this.musicManager.isMusicEnabled()) return;
								this.musicManager.play("", (0, o.Z)({
									loop: !0,
									volume: .2
								}, e))
							} catch (t) {}
						}, i.pauseMusic = function() {
							try {
								if (!this.musicManager) return;
								this.musicManager.pause("")
							} catch (e) {}
						}, i.stopMusic = function() {
							try {
								if (!this.musicManager) return;
								this.musicManager.stop("")
							} catch (e) {}
						}, i.setSoundVolume = function(e) {
							try {
								if (!this.soundManager) return;
								this.soundManager.setVolume(e)
							} catch (t) {}
						}, i.setMusicVolume = function(e) {
							try {
								if (!this.musicManager) return;
								this.musicManager.setVolume(e)
							} catch (t) {}
						}, i.muteAllSound = function() {
							this.soundManager.mute()
						}, i.unmuteAllSound = function() {
							this.soundManager.unmute()
						}, t
					}(Phaser.Plugins.BasePlugin),
					X = z,
					V = i(27344),
					J = "AUTH_TOKEN_REQUEST",
					q = "AUTH_TOKEN_RECEIVED",
					Q = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).payload = void 0, n.name = "RequestTokenFail", n.message = t || "Request token fail", n.payload = i || {}, n
						}
						return (0, l.Z)(t, e), t
					}((0, P.Z)(Error)),
					$ = i(20573),
					ee = (0, $.P1)([function(e) {
						return e.auth.token
					}], (function(e) {
						return e
					})),
					te = (0, $.P1)([function(e) {
						return e.auth.isRequesting
					}], (function(e) {
						return e
					})),
					ie = function(e) {
						return {
							type: q,
							payload: {
								token: e
							}
						}
					},
					ne = function(e) {
						function t() {
							return e.apply(this, arguments) || this
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.requestToken = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return t = this.game.storage, e.next = 3, t.dispatch(function() {
												var e = (0, r.Z)(h().mark((function e(t, i) {
													var n, s, o, r;
													return h().wrap((function(e) {
														for (;;) switch (e.prev = e.next) {
															case 0:
																if (e.prev = 0, n = window.game.facebook, s = i(), o = ee(s), !te(s) && "" === o) {
																	e.next = 7;
																	break
																}
																return e.abrupt("return");
															case 7:
																return t({
																	type: J,
																	payload: {}
																}), e.next = 10, n.getPlayerToken();
															case 10:
																r = e.sent, t(ie(r)), e.next = 25;
																break;
															case 14:
																if (e.prev = 14, e.t0 = e.catch(0), !(e.t0 instanceof Object && GameCore.Utils.Object.hasOwn(e.t0, "code"))) {
																	e.next = 19;
																	break
																}
																if ("PENDING_REQUEST" !== e.t0.code) {
																	e.next = 19;
																	break
																}
																return e.abrupt("return");
															case 19:
																if (t(ie("")), !(e.t0 instanceof Object && GameCore.Utils.Object.hasOwn(e.t0, "message"))) {
																	e.next = 24;
																	break
																}
																if ("string" !== typeof e.t0.message) {
																	e.next = 24;
																	break
																}
																return (0, a.tO)(new Error(e.t0.message || "Request token fail")), e.abrupt("return");
															case 24:
																(0, a.tO)(new Q);
															case 25:
															case "end":
																return e.stop()
														}
													}), e, null, [
														[0, 14]
													])
												})));
												return function(t, i) {
													return e.apply(this, arguments)
												}
											}());
										case 3:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.getToken = function() {
							return ee(this.state)
						}, (0, V.Z)(t, [{
							key: "state",
							get: function() {
								return this.game.storage.getState()
							}
						}]), t
					}(Phaser.Plugins.BasePlugin),
					ae = ne,
					se = i(93476),
					oe = i.n(se),
					re = function(e, t) {
						void 0 === t && (t = 1);
						var i = new Image;
						i.onload = function() {
							var e, i;
							e = this.width * t, i = this.height * t, Math.floor(i / 2), Math.floor(e / 2)
						}, i.src = e
					},
					le = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).width = void 0, i.height = void 0, i.renderOptions = void 0, i.canvas = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.preload = function(e) {
							var t = this,
								i = K()(e);
							i.length < 1 || (i.forEach((function(i) {
								t.scene.load.image(i, e[i])
							})), this.scene.load.start())
						}, i.capture = function() {
							var e = (0, r.Z)(h().mark((function e(t) {
								var i, n, a;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return i = t.width, n = t.height, a = t.renderOptions, this.width = i, this.height = n, this.renderOptions = a, this.createCanvas(), e.next = 7, this.loadImages();
										case 7:
											return this.drawObjects(), e.abrupt("return", this.snapshotFrame());
										case 9:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), i.createCanvas = function() {
							this.canvas || (this.canvas = this.game.textures.createCanvas("FrameCaptureCanvas")), this.canvas.clear(), this.canvas.setSize(this.width, this.height)
						}, i.loadImages = function() {
							var e = this;
							return new(oe())((function(t, i) {
								for (var n in e.renderOptions) {
									var a = e.renderOptions[n],
										s = a.name,
										o = a.image;
									if (o) e.scene.textures.get(s).key !== s && e.scene.load.image(s, o)
								}
								e.scene.load.on(Phaser.Loader.Events.COMPLETE, t), e.scene.load.on(Phaser.Loader.Events.FILE_LOAD_ERROR, (function() {
									var e = new Error("Load image failed");
									i(e)
								})), e.scene.load.start()
							}))
						}, i.drawObjects = function() {
							for (var e in this.renderOptions) {
								var t = this.renderOptions[e];
								switch (t.type) {
									case "text":
										this.drawText(t);
										break;
									case "image":
										this.drawImage(t)
								}
							}
						}, i.drawText = function(e) {
							var t = this.canvas.context,
								i = e.x,
								n = e.y,
								a = e.font,
								s = e.text,
								o = e.fillStyle,
								r = e.lineWidth,
								l = e.textAlign;
							t.font = a + ' nunito,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",sans-serif', t.fillStyle = o || "#ffffff", r && (t.lineWidth = r), l && (t.textAlign = l), t.fillText(s, i, n)
						}, i.drawImage = function(e) {
							var t = this.canvas.context,
								i = e.x,
								n = e.y,
								a = e.name,
								s = e.frame,
								o = e.width,
								r = e.height,
								l = e.fallbackWithImage,
								c = this.scene.textures.get(a),
								h = c.getSourceImage(s);
							"__MISSING" === c.key && l && (h = (c = this.scene.textures.get(l)).getSourceImage()), t.drawImage(h, i, n, o, r)
						}, i.snapshotFrame = function() {
							var e = this.canvas.getCanvas().toDataURL("image/jpeg", .85);
							return GameCore.Utils.Valid.isDebugger() && re(e), e
						}, t
					}(Phaser.Plugins.ScenePlugin),
					ce = le,
					he = i(78580),
					ue = i.n(he),
					de = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this) || this).game = void 0, a.options = void 0, a.performance = void 0, a.isRunning = !1, a.checkTimer = void 0, a.fpsHistory = void 0, a.start = function() {
								if (!a.isRunning) {
									a.isRunning = !0;
									var e = a.options.checkInterval;
									a.checkTimer = e, a.fpsHistory = [], a.game.events.on(Phaser.Core.Events.POST_STEP, a.onPostStep)
								}
							}, a.stop = function() {
								a.isRunning && (a.isRunning = !1, a.game.events.off(Phaser.Core.Events.POST_STEP, a.onPostStep), a.options.onlyUpdateWhenSwitchScene && a.checkFps())
							}, a.onPostStep = function(e, t) {
								if (a.checkTimer -= t, !(a.checkTimer > 0)) {
									var i = a.options,
										n = i.checkInterval,
										s = i.onlyUpdateWhenSwitchScene;
									a.checkTimer += n, a.fpsHistory.push(a.game.loop.actualFps), !1 === s && a.fpsHistory.length >= 5 && a.checkFps()
								}
							}, a.game = t, a.options = n, a.performance = i, a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.checkFps = function() {
							if (0 !== this.fpsHistory.length) {
								var e = this.options.autoUpgradeQuality,
									t = !1;
								this.isLowFps() ? t = this.performance.downgradeGraphicsQuality() : e && this.isHighFps() && (t = this.performance.upgradeGraphicsQuality()), t && (this.fpsHistory = [])
							}
						}, i.getFpsMedian = function() {
							return Phaser.Math.Median(this.fpsHistory)
						}, i.isLowFps = function() {
							return this.getFpsMedian() < this.options.fpsThreshold
						}, i.isHighFps = function() {
							return this.getFpsMedian() > 1.2 * this.options.fpsThreshold
						}, t
					}(Phaser.Events.EventEmitter),
					pe = de,
					me = ["pixelRatio", "minQuality", "maxQuality", "qualityAdjustStep", "trackingSceneKeys"],
					fe = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).fpsTracker = void 0, i.pixelRatio = void 0, i.minQuality = void 0, i.maxQuality = void 0, i.qualityAdjustStep = void 0, i.trackingSceneKeys = [], i.trackingScene = function(e) {
								var t;
								if (ue()(t = i.trackingSceneKeys).call(t, e)) {
									var n = i.game.scene.getScene(e);
									n.events.once(Phaser.Scenes.Events.UPDATE, i.fpsTracker.start), n.events.once(Phaser.Scenes.Events.SLEEP, i.fpsTracker.stop)
								}
							}, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.configure = function(e) {
							var t = e.pixelRatio,
								i = e.minQuality,
								n = e.maxQuality,
								a = e.qualityAdjustStep,
								o = e.trackingSceneKeys,
								r = (0, s.Z)(e, me);
							this.pixelRatio = t, this.minQuality = i, this.maxQuality = n, this.qualityAdjustStep = a, this.trackingSceneKeys = o, this.fpsTracker = new pe(this.game, this, r)
						}, i.active = function() {
							this.game.events.on(Phaser.Scenes.Events.WAKE, this.trackingScene), this.game.events.on(Phaser.Scenes.Events.START, this.trackingScene)
						}, i.downgradeGraphicsQuality = function() {
							var e = this.pixelRatio;
							if (e <= this.minQuality) return !1;
							var t = +(e - this.qualityAdjustStep).toFixed(2);
							return !(t < this.minQuality) && (this.pixelRatio = t, this.game.world.resize(this.pixelRatio), !0)
						}, i.upgradeGraphicsQuality = function() {
							var e = this.pixelRatio;
							if (e >= this.maxQuality) return !1;
							var t = +(e + this.qualityAdjustStep).toFixed(2);
							return !(t > this.maxQuality) && (this.pixelRatio = t, this.game.world.resize(this.pixelRatio), !0)
						}, t
					}(Phaser.Plugins.BasePlugin),
					ge = fe,
					ve = i(94473),
					ye = i.n(ve),
					be = {
						sound: !0,
						music: !0,
						vibrate: !0,
						language: "en",
						theme: GameCore.Configs.DefaultTheme
					},
					Ee = i(87339),
					Te = i(2938),
					Ae = i(81643),
					Se = i.n(Ae),
					_e = i(32926),
					Ce = {
						score: 0,
						settings: (0, o.Z)({}, be),
						userGuideDisplays: 0,
						customFields: {
							coin: 300,
							lastReceiveGift: 0,
							level: 1,
							levelStars: {},
							bullets: (N = {}, N.BombBulletItem = 0, N.RainbowBulletBallItem = 0, N.ElectricBulletBallItem = 0, N.RocketBulletItem = 0, N),
							lastTimeSpin: 0,
							lastTimePlayed: 0,
							bonusBullets: 0,
							showRemoveAds: !1,
							purchases: [],
							specialEvents: {}
						}
					},
					we = GameCore.Configs,
					Be = we.ApiHost,
					Ie = we.PlayerDataStoreUsingApi,
					Pe = function() {
						var e = (0, r.Z)(h().mark((function e(t) {
							return h().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										if (!Ie) {
											e.next = 2;
											break
										}
										return e.abrupt("return", xe(t));
									case 2:
										return e.abrupt("return", Oe(t));
									case 3:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}(),
					xe = function() {
						var e = (0, r.Z)(h().mark((function e(t) {
							var i, n;
							return h().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return i = GameCore.Utils.String.params(t), e.next = 3, (0, _e.U)("players?" + i, {}, Be);
									case 3:
										return n = e.sent, e.abrupt("return", (null == n ? void 0 : n.data) || []);
									case 5:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}(),
					Oe = function() {
						var e = (0, r.Z)(h().mark((function e(t) {
							var i, n, a, s;
							return h().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return e.next = 2, GameSDK.player.setDataAsync(t);
									case 2:
										return n = y()(i = K()(Ce)).call(i, K()(t)), a = A()(n).call(n, (function(e, t) {
											return Se()(n).call(n, e) === t
										})), e.next = 6, GameSDK.player.getDataAsync(a);
									case 6:
										return s = e.sent, e.abrupt("return", s);
									case 8:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}(),
					ke = function() {
						var e = (0, r.Z)(h().mark((function e(t) {
							return h().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										if (!Ie) {
											e.next = 2;
											break
										}
										return e.abrupt("return", Re(t));
									case 2:
										return e.abrupt("return", Me());
									case 3:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}(),
					Re = function() {
						var e = (0, r.Z)(h().mark((function e(t) {
							var i;
							return h().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return e.next = 2, (0, _e.v)("players/" + t + "/user-guide-displays/inc", {}, {}, Be);
									case 2:
										return i = e.sent, e.abrupt("return", (null == i ? void 0 : i.data) || {});
									case 4:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}(),
					Me = function() {
						var e = (0, r.Z)(h().mark((function e() {
							return h().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return e.next = 2, GameSDK.player.incrementStatsAsync({
											userGuideDisplays: 1
										});
									case 2:
										return e.abrupt("return", e.sent);
									case 3:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function() {
							return e.apply(this, arguments)
						}
					}(),
					Le = "PLAYER_RECEIVED",
					Ge = "PLAYER_DATA_UPDATE",
					De = "PLAYER_SCORE_UPDATE",
					Fe = "PLAYER_PROFILE_UPDATE",
					Ne = "PLAYER_SETTING_UPDATE",
					Ze = "PLAYER_CONNECTED_PLAYERS_UPDATE",
					Ue = i(46352),
					je = be.sound,
					Ye = be.music,
					We = be.vibrate,
					Ke = be.language,
					He = be.theme,
					ze = function() {
						function e(e) {
							this.sound = void 0, this.music = void 0, this.vibrate = void 0, this.language = void 0, this.theme = void 0;
							var t = e || {},
								i = t.sound,
								n = t.music,
								a = t.vibrate,
								s = t.language,
								o = t.theme;
							this.sound = GameCore.Utils.Valid.isBoolean(i) ? i : je, this.music = GameCore.Utils.Valid.isBoolean(n) ? n : Ye, this.vibrate = GameCore.Utils.Valid.isBoolean(a) ? a : We, this.language = GameCore.Utils.Valid.isString(s) ? s : Ke, this.theme = GameCore.Utils.Valid.isString(o) ? o : He
						}
						return e.prototype.toObject = function() {
							return {
								sound: this.sound,
								music: this.music,
								vibrate: this.vibrate,
								language: this.language,
								theme: this.theme
							}
						}, e
					}(),
					Xe = ze,
					Ve = Ce.userGuideDisplays,
					Je = Ce.customFields,
					qe = Ce.settings,
					Qe = function() {
						function e(e) {
							this.data = void 0;
							var t = e.settings,
								i = e.score,
								n = e.customFields,
								a = e.userGuideDisplays,
								s = GameCore.Utils.Valid.isNumber(i) && i > 0 ? i : 0,
								o = GameCore.Utils.Valid.isNumber(a) ? a : Ve,
								r = GameCore.Utils.Valid.isObject(n) ? n : Je,
								l = qe;
							GameCore.Utils.Valid.isObject(t) && (l = new Xe(t).toObject()), this.data = {
								score: s,
								userGuideDisplays: o,
								settings: l,
								customFields: r
							}
						}
						return e.prototype.toObject = function() {
							return this.data
						}, e
					}(),
					$e = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).payload = void 0, n.name = "PlayerDataNameNotSupport", n.message = t || "The name of player data is not supported", n.payload = i || {}, n
						}
						return (0, l.Z)(t, e), t
					}((0, P.Z)(Error)),
					et = i(3649),
					tt = i.n(et),
					it = (0, $.P1)([function(e) {
						return e.player
					}], (function(e) {
						return e
					})),
					nt = (0, $.P1)([it], (function(e) {
						return e.playerId
					})),
					at = (0, $.P1)([it], (function(e) {
						return e.ASID
					})),
					st = (0, $.P1)([function(e) {
						return e.player.data
					}], (function(e) {
						return e
					})),
					ot = (0, $.P1)([st], (function(e) {
						return e.settings
					})),
					rt = (0, $.P1)([function(e) {
						return e.player.connectedPlayers
					}], (function(e) {
						return e
					})),
					lt = (0, $.P1)([function(e) {
						return e.player.isConnectedPlayersLoaded
					}], (function(e) {
						return e
					})),
					ct = (0, $.P1)([rt, function(e, t) {
						return t.limit
					}, function(e, t) {
						return t.offset
					}], (function(e, t, i) {
						if ("number" !== typeof t) return [];
						if ("number" !== typeof i) return [];
						var n = K()(e);
						return tt()(n).call(n, i, t + i) || []
					})),
					ht = (0, $.P1)([st], (function(e) {
						return e.score
					})),
					ut = (0, $.P1)([st], (function(e) {
						return e.customFields
					})),
					dt = ((0, $.P1)([ut], (function(e) {
						return Number(null == e ? void 0 : e.diamond) || 0
					})), (0, $.P1)([ut], (function(e) {
						return Number(null == e ? void 0 : e.level) || 1
					}))),
					pt = ((0, $.P1)([ut], (function(e) {
						return Number(null == e ? void 0 : e.score) || 0
					})), (0, $.P1)([ut], (function(e) {
						return (null == e ? void 0 : e.levelStars) || {}
					}))),
					mt = (0, $.P1)([ut], (function(e) {
						return (null == e ? void 0 : e.bullets) || {}
					})),
					ft = (0, $.P1)([ut], (function(e) {
						return Number(null == e ? void 0 : e.coin) || 0
					})),
					gt = (0, $.P1)([ut], (function(e) {
						return Number(null == e ? void 0 : e.lastTimeSpin) || 0
					})),
					vt = (0, $.P1)([ut], (function(e) {
						return Number(null == e ? void 0 : e.lastTimePlayed) || 0
					})),
					yt = (0, $.P1)([ut], (function(e) {
						return Number(null == e ? void 0 : e.bonusBullets) || 0
					})),
					bt = (0, $.P1)([ut], (function(e) {
						return void 0 === (null == e ? void 0 : e.showRemoveAds) || e.showRemoveAds
					})),
					Et = (0, $.P1)([ut], (function(e) {
						return void 0 === (null == e ? void 0 : e.purchases) ? [] : e.purchases
					})),
					Tt = (0, $.P1)([ut], (function(e) {
						return (null == e ? void 0 : e.specialEvents) || {}
					})),
					At = GameCore.Configs,
					St = At.AppId,
					_t = At.Tutorial,
					Ct = At.LanguageSupport,
					wt = At.ThemeSupport,
					Bt = At.PlayerDataStore,
					It = function(e) {
						return {
							type: Ze,
							payload: {
								connectedPlayers: e
							}
						}
					},
					Pt = function(e, t) {
						return function(i, n) {
							try {
								var s, r = n(),
									l = ot(r);
								i({
									type: Ne,
									payload: {
										name: e,
										value: t
									}
								});
								var c = {
									settings: (0, o.Z)({}, l, (s = {}, s[e] = t, s))
								};
								(0, Ee.vk)(Bt, c), Lt(n)
							} catch (h) {
								(0, a.tO)(h)
							}
						}
					},
					xt = function(e, t) {
						return function() {
							var i = (0, r.Z)(h().mark((function i(n, s) {
								var o, r;
								return h().wrap((function(i) {
									for (;;) switch (i.prev = i.next) {
										case 0:
											return i.prev = 0, r = {
												customFields: (o = {}, o[e] = t, o)
											}, i.next = 4, n(kt(r));
										case 4:
											Lt(s), i.next = 12;
											break;
										case 7:
											if (i.prev = 7, i.t0 = i.catch(0), !(i.t0 instanceof $e)) {
												i.next = 11;
												break
											}
											return i.abrupt("return");
										case 11:
											(0, a.tO)(i.t0);
										case 12:
										case "end":
											return i.stop()
									}
								}), i, null, [
									[0, 7]
								])
							})));
							return function(e, t) {
								return i.apply(this, arguments)
							}
						}()
					},
					Ot = function(e) {
						return function() {
							var t = (0, r.Z)(h().mark((function t(i, n) {
								var s;
								return h().wrap((function(t) {
									for (;;) switch (t.prev = t.next) {
										case 0:
											return t.prev = 0, s = {
												customFields: e
											}, t.next = 4, i(kt(s));
										case 4:
											Lt(n), t.next = 12;
											break;
										case 7:
											if (t.prev = 7, t.t0 = t.catch(0), !(t.t0 instanceof $e)) {
												t.next = 11;
												break
											}
											return t.abrupt("return");
										case 11:
											(0, a.tO)(t.t0);
										case 12:
										case "end":
											return t.stop()
									}
								}), t, null, [
									[0, 7]
								])
							})));
							return function(e, i) {
								return t.apply(this, arguments)
							}
						}()
					},
					kt = function(e) {
						return function(t) {
							try {
								t({
									type: Ge,
									payload: {
										data: e
									}
								}), (0, Ee.vk)(Bt, e)
							} catch (i) {
								(0, a.tO)(i)
							}
						}
					},
					Rt = function(e) {
						return function() {
							var t = (0, r.Z)(h().mark((function t(i, n) {
								var s, o;
								return h().wrap((function(t) {
									for (;;) switch (t.prev = t.next) {
										case 0:
											return t.prev = 0, t.next = 3, i({
												type: De,
												payload: {
													score: e
												}
											});
										case 3:
											s = n(), o = st(s), Lt(n), (0, Ee.vk)(Bt, o), t.next = 12;
											break;
										case 9:
											t.prev = 9, t.t0 = t.catch(0), (0, a.tO)(t.t0);
										case 12:
										case "end":
											return t.stop()
									}
								}), t, null, [
									[0, 9]
								])
							})));
							return function(e, i) {
								return t.apply(this, arguments)
							}
						}()
					},
					Mt = function(e) {
						return function() {
							var t = (0, r.Z)(h().mark((function t(i, n) {
								var s;
								return h().wrap((function(t) {
									for (;;) switch (t.prev = t.next) {
										case 0:
											return t.prev = 0, s = {
												customFields: e
											}, t.next = 4, i(kt(s));
										case 4:
											t.next = 11;
											break;
										case 6:
											if (t.prev = 6, t.t0 = t.catch(0), !(t.t0 instanceof $e)) {
												t.next = 10;
												break
											}
											return t.abrupt("return");
										case 10:
											(0, a.tO)(t.t0);
										case 11:
										case "end":
											return t.stop()
									}
								}), t, null, [
									[0, 6]
								])
							})));
							return function(e, i) {
								return t.apply(this, arguments)
							}
						}()
					},
					Lt = (0, Te.D)((function(e) {
						var t = e(),
							i = st(t);
						Pe(i)
					}), 3e3),
					Gt = function(e) {
						function t() {
							return e.apply(this, arguments) || this
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.incUserGuideDisplays = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return t = this.game.storage, e.next = 3, t.dispatch(function() {
												var e = (0, r.Z)(h().mark((function e(t, i) {
													var n, s, o;
													return h().wrap((function(e) {
														for (;;) switch (e.prev = e.next) {
															case 0:
																if (e.prev = 0, !_t.ForceUseTutorial) {
																	e.next = 3;
																	break
																}
																return e.abrupt("return");
															case 3:
																return n = window.game.facebook, t(kt({
																	userGuideDisplays: 1
																})), s = i(), o = nt(s), e.next = 9, ke(o);
															case 9:
																n.data.set("userGuideDisplays", 1), e.next = 15;
																break;
															case 12:
																e.prev = 12, e.t0 = e.catch(0), (0, a.tO)(e.t0);
															case 15:
															case "end":
																return e.stop()
														}
													}), e, null, [
														[0, 12]
													])
												})));
												return function(t, i) {
													return e.apply(this, arguments)
												}
											}());
										case 3:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.receiveData = function(e, t) {
							this.game.storage.dispatch(function(e, t) {
								return function(i) {
									var n = e.playerId,
										a = e.name,
										s = e.photo,
										o = e.locale;
									i({
										type: Le,
										payload: {
											playerId: n,
											name: a,
											photo: s,
											locale: o,
											data: t || {}
										}
									})
								}
							}(e, t))
						}, i.updateData = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return t = this.game.storage, e.next = 3, t.dispatch(function() {
												var e = (0, r.Z)(h().mark((function e(t, i) {
													var n, s, o, r, l, c, u, d, p, m, f, g, v, y, b, E, T, A, S, _, C, w, B, I;
													return h().wrap((function(e) {
														for (;;) switch (e.prev = e.next) {
															case 0:
																return e.prev = 0, n = i(), s = it(n), o = s.playerId, r = s.name, l = s.photo, c = s.locale, e.next = 6, FBInstant.player.getASIDAsync();
															case 6:
																return u = e.sent, t({
																	type: Fe,
																	payload: {
																		profile: {
																			appId: St,
																			playerId: o,
																			name: r,
																			photo: l,
																			locale: c,
																			ASID: u
																		}
																	}
																}), e.next = 11, Pe({
																	appId: St,
																	playerId: o,
																	name: r,
																	photo: l,
																	locale: c
																});
															case 11:
																if (d = e.sent, GameCore.Utils.Valid.isObject(d)) {
																	e.next = 14;
																	break
																}
																return e.abrupt("return");
															case 14:
																if (d.playerId === o) {
																	e.next = 16;
																	break
																}
																return e.abrupt("return");
															case 16:
																p = ot(n), m = p.theme, f = p.sound, g = p.music, v = p.vibrate, y = p.language, b = new Qe(d).toObject(), E = b.settings, T = E.theme, A = E.music, S = E.sound, _ = E.vibrate, C = E.language, w = y in Ct, B = m in wt, y === C && w || (b.settings.language = C), !0 === A && g !== A && (b.settings.music = A), !0 === S && f !== S && (b.settings.sound = S), !0 === _ && v !== _ && (b.settings.vibrate = _), m === T && B || (b.settings.theme = T), (I = b.customFields) && (delete I.level, delete I.levelStars, delete I.bonusBullets, delete I.lastTimePlayed, delete I.purchases), t(kt(b)), e.next = 35;
																break;
															case 32:
																e.prev = 32, e.t0 = e.catch(0), (0, a.tO)(e.t0);
															case 35:
															case "end":
																return e.stop()
														}
													}), e, null, [
														[0, 32]
													])
												})));
												return function(t, i) {
													return e.apply(this, arguments)
												}
											}());
										case 3:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.setScore = function() {
							var e = (0, r.Z)(h().mark((function e(t) {
								var i;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return i = this.game.storage, e.next = 3, i.dispatch(Rt(t));
										case 3:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), i.setSetting = function() {
							var e = (0, r.Z)(h().mark((function e(t, i) {
								var n;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return n = this.game.storage, e.next = 3, n.dispatch(Pt(t, i));
										case 3:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t, i) {
								return e.apply(this, arguments)
							}
						}(), i.setCustomData = function() {
							var e = (0, r.Z)(h().mark((function e(t, i) {
								var n;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return n = this.game.storage, e.next = 3, n.dispatch(xt(t, i));
										case 3:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t, i) {
								return e.apply(this, arguments)
							}
						}(), i.updatePlayerLevel = function() {
							var e = (0, r.Z)(h().mark((function e(t, i) {
								var n, a;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return n = this.game.storage, void 0 === (a = {
												level: t,
												levelStars: i
											}).level && delete a.level, void 0 === a.levelStars && delete a.levelStars, e.next = 6, FBInstant.player.setDataAsync(a);
										case 6:
											return e.next = 8, n.dispatch(Ot(a));
										case 8:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t, i) {
								return e.apply(this, arguments)
							}
						}(), i.updateLastPlayed = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, i, n;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return t = this.game.storage, i = new Date, n = {
												lastTimePlayed: i.getTime()
											}, e.next = 5, FBInstant.player.setDataAsync(n);
										case 5:
											return e.next = 7, t.dispatch(Ot(n));
										case 7:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.updateCustomFields = function() {
							var e = (0, r.Z)(h().mark((function e(t) {
								var i;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return i = this.game.storage, e.next = 3, i.dispatch(Ot(t));
										case 3:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), i.updateBonusBubble = function() {
							var e = (0, r.Z)(h().mark((function e(t) {
								var i, n, a;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return i = this.game.storage, n = Phaser.Math.Clamp(t, 0, GameCore.Configs.ComebackBonus.maxBonus), a = {
												bonusBullets: n
											}, e.next = 5, FBInstant.player.setDataAsync(a);
										case 5:
											return e.next = 7, i.dispatch(Ot(a));
										case 7:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), i.updatePlayerDailyRewarded = function() {
							var e = (0, r.Z)(h().mark((function e(t, i) {
								var n, a;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return n = this.game.storage, void 0 === (a = {
												dailyRewarded: {
													logDays: t,
													lastRewarded: i
												}
											}).dailyRewarded.logDays && delete a.dailyRewarded.logDays, void 0 === a.dailyRewarded.lastRewarded && (a.dailyRewarded.lastRewarded = Date.now()), e.next = 6, FBInstant.player.setDataAsync(a);
										case 6:
											return e.next = 8, n.dispatch(Ot(a));
										case 8:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t, i) {
								return e.apply(this, arguments)
							}
						}(), i.updateSpecialEvents = function() {
							var e = (0, r.Z)(h().mark((function e(t, i) {
								var n, a, s, o, r;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return a = this.game.storage, s = Phaser.Math.Clamp(i, 0, GameCore.Configs.SpecialEvent.WatchAdsTimes), o = (new Date).getTime(), r = {
												specialEvents: {
													events: (n = {}, n[t] = s, n),
													lastUpdateAt: o
												}
											}, e.next = 6, FBInstant.player.setDataAsync(r);
										case 6:
											return e.next = 8, a.dispatch(Ot(r));
										case 8:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t, i) {
								return e.apply(this, arguments)
							}
						}(), i.requestConnectedPlayers = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return t = this.game.storage, e.next = 3, t.dispatch(function() {
												var e = (0, r.Z)(h().mark((function e(t) {
													var i, n, s, o, r;
													return h().wrap((function(e) {
														for (;;) switch (e.prev = e.next) {
															case 0:
																return e.prev = 0, n = window.game.facebook, e.next = 4, new(oe())((function(e, t) {
																	n.once("players", (function(t) {
																		e(t)
																	})), n.once("playersfail", (function() {
																		return t([])
																	})), n.getPlayers()
																}));
															case 4:
																if (s = e.sent, o = function(e) {
																		return !!e
																	}, r = A()(i = _()(s).call(s, (function(e) {
																		var t = e.getID(),
																			i = e.getName(),
																			n = e.getPhoto();
																		return t && i && n ? new Ue.Z(t, i, n).toObject() : null
																	}))).call(i, o), !(r.length < 1)) {
																	e.next = 9;
																	break
																}
																return e.abrupt("return");
															case 9:
																t(It(r)), e.next = 15;
																break;
															case 12:
																e.prev = 12, e.t0 = e.catch(0), (0, a.tO)(e.t0);
															case 15:
															case "end":
																return e.stop()
														}
													}), e, null, [
														[0, 12]
													])
												})));
												return function(t) {
													return e.apply(this, arguments)
												}
											}());
										case 3:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.updateConnectedPlayers = function() {
							var e = (0, r.Z)(h().mark((function e(t) {
								var i;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return i = this.game.storage, e.next = 3, i.dispatch(It(t));
										case 3:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), i.buyProduct = function() {
							var e = (0, r.Z)(h().mark((function e(t, i) {
								var n, a, s;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (a = this.getPurchases(), !ye()(a).call(a, (function(e) {
													return e.paymentID === t
												}))) {
												e.next = 3;
												break
											}
											return e.abrupt("return");
										case 3:
											return s = y()(n = []).call(n, a, [{
												paymentID: t,
												productID: i,
												purchaseTime: (new Date).valueOf() / 1e3
											}]), e.next = 6, FBInstant.player.setDataAsync({
												purchases: s
											});
										case 6:
											return e.next = 8, this.updateCustomFields({
												purchases: s
											});
										case 8:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t, i) {
								return e.apply(this, arguments)
							}
						}(), i.getPlayer = function() {
							return it(this.state)
						}, i.getPlayerId = function() {
							return this.getPlayer().playerId
						}, i.getPlayerASID = function() {
							return at(this.state)
						}, i.getPlayerData = function() {
							return this.getPlayer().data
						}, i.getPlayerSetting = function(e) {
							var t = this.getPlayerSettings();
							return "string" !== typeof e ? null : GameCore.Utils.Object.hasOwn(t, e) ? t[e] : GameCore.Utils.Object.hasOwn(be, e) ? be[e] : null
						}, i.getPlayerSettings = function() {
							return this.getPlayerData().settings
						}, i.getPlayerIsNew = function() {
							return 1 == this.getLevel()
						}, i.getCoins = function() {
							var e = this.getCustomData("coin");
							return GameCore.Utils.Valid.isNumber(e) ? e : 0
						}, i.getDiamond = function() {
							var e = this.getCustomData("diamond");
							return GameCore.Utils.Valid.isNumber(e) ? e : 0
						}, i.getBestScore = function() {
							return ht(this.state)
						}, i.getCustomData = function(e) {
							var t = ut(this.state);
							return GameCore.Utils.Valid.isObject(t) && GameCore.Utils.Object.hasOwn(t, e) ? t[e] : null
						}, i.getConnectedPlayers = function() {
							return rt(this.state)
						}, i.isConnectedPlayersLoaded = function() {
							return lt(this.state)
						}, i.getConnectedPlayerIds = function(e, t) {
							return ct(this.state, {
								limit: e,
								offset: t
							})
						}, i.getLevel = function() {
							return dt(this.state)
						}, i.getLevelStars = function() {
							return pt(this.state)
						}, i.getBullets = function() {
							return mt(this.state)
						}, i.getLastTimeSpin = function() {
							return gt(this.state)
						}, i.getLastTimePlayed = function() {
							return vt(this.state)
						}, i.getBonusBullets = function() {
							return yt(this.state)
						}, i.getShowRemoveAds = function() {
							return bt(this.state)
						}, i.getPurchases = function() {
							return Et(this.state)
						}, i.getSpecialEvents = function() {
							return Tt(this.state)
						}, (0, V.Z)(t, [{
							key: "state",
							get: function() {
								return this.game.storage.getState()
							}
						}]), t
					}(Phaser.Plugins.BasePlugin),
					Dt = Gt,
					Ft = GameCore.Configs.ApiHost,
					Nt = function() {
						var e = (0, r.Z)(h().mark((function e(t) {
							var i, n;
							return h().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return i = GameCore.Utils.String.params(t), e.next = 3, (0, _e.U)("players?" + i, {}, Ft);
									case 3:
										return n = e.sent, e.abrupt("return", (null == n ? void 0 : n.data) || []);
									case 5:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}(),
					Zt = "PROFILES_DATA_UPDATE",
					Ut = (0, $.P1)([function(e) {
						return e.profile.data
					}], (function(e) {
						return e
					})),
					jt = (0, $.P1)([function(e) {
						return e.profile.profileIds
					}], (function(e) {
						return e
					})),
					Yt = function(e) {
						return function() {
							var t = (0, r.Z)(h().mark((function t(i, n) {
								var s, o, r, l;
								return h().wrap((function(t) {
									for (;;) switch (t.prev = t.next) {
										case 0:
											if (t.prev = 0, s = n(), o = jt(s), !((r = GameCore.Utils.Array.difference(e, o)).length < 1)) {
												t.next = 6;
												break
											}
											return t.abrupt("return");
										case 6:
											return t.next = 8, Nt({
												playerIds: r
											});
										case 8:
											l = t.sent, i({
												type: Zt,
												payload: {
													data: l
												}
											}), t.next = 15;
											break;
										case 12:
											t.prev = 12, t.t0 = t.catch(0), (0, a.tO)(t.t0);
										case 15:
										case "end":
											return t.stop()
									}
								}), t, null, [
									[0, 12]
								])
							})));
							return function(e, i) {
								return t.apply(this, arguments)
							}
						}()
					},
					Wt = function(e) {
						function t() {
							return e.apply(this, arguments) || this
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.requestProfiles = function() {
							var e = (0, r.Z)(h().mark((function e(t) {
								var i;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return i = this.game.storage, e.next = 3, i.dispatch(Yt(t));
										case 3:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), i.getProfiles = function() {
							return Ut(this.state)
						}, (0, V.Z)(t, [{
							key: "state",
							get: function() {
								return this.game.storage.getState()
							}
						}]), t
					}(Phaser.Plugins.BasePlugin),
					Kt = Wt,
					Ht = function(e) {
						function t() {
							return e.apply(this, arguments) || this
						}
						return (0, l.Z)(t, e), t.prototype.emit = function(t, i) {
							return e.prototype.emit.call(this, t, i)
						}, t
					}(Phaser.Events.EventEmitter),
					zt = Ht,
					Xt = i(71944),
					Vt = function(e) {
						function t(t, i, n, a) {
							var s;
							(s = e.call(this, t) || this).zone = void 0, s.background = void 0, s.setName(i), s.setVisible(!1);
							var o = s.scene.gameZone,
								r = o.width,
								l = o.height;
							return s.setSize(n || r, a || l), s.addZone(), s.addBackground(), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.open = function(e) {
							GameCore.Utils.Valid.isObject(e) && (this.setDataEnabled(), this.setData(e)), this.setBlockInputOutsideEnabled(!0), this.scene.screen.bringToTop(this.name), this.visible || (this.setVisible(!0), this.logPageviewOnOpen(), this.logEventOpen())
						}, i.close = function() {
							this.setBlockInputOutsideEnabled(!1), this.visible && (this.setVisible(!1), this.logPageviewOnClose())
						}, i.incY = function(e) {
							this.y += e, this.background.y -= e
						}, i.incX = function(e) {
							this.x += e, this.background.x -= e
						}, i.incScale = function(e) {
							this.scale += e, this.background.scale -= e ^ e * (100 / e)
						}, i.setBlockInputOutsideEnabled = function(e) {
							this.scene.input.setTopOnly(e)
						}, i.addZone = function() {
							this.zone = this.scene.add.zone(0, 0, this.width, this.height), this.zone.setInteractive({}), this.add(this.zone)
						}, i.addBackground = function() {
							var e = "screen-background";
							if (!this.scene.textures.exists(e)) {
								var t = this.width + 2,
									i = this.height + 2,
									n = this.scene.add.graphics();
								n.fillStyle(0, 1), n.fillRect(0, 0, t, i), n.generateTexture(e, t, i), n.destroy()
							}
							this.background = this.scene.add.image(0, 0, e), this.background.setWorldSize(this.width + 2, this.height + 2), this.add(this.background)
						}, i.logPageviewOnOpen = function() {
							this.scene.analytics.pageview(this.name)
						}, i.logPageviewOnClose = function() {
							this.scene.analytics.pageview(this.scene.scene.key)
						}, i.logEventOpen = function() {
							this.scene.analytics.event(Xt._.SCREEN_OPEN, {
								screen_name: this.getScreenName()
							})
						}, i.getScreenName = function() {
							return GameCore.Utils.String.toUpperCamelCase(this.name.toLowerCase())
						}, t
					}(Phaser.GameObjects.Container),
					Jt = Vt,
					qt = {
						OPEN: "open",
						CLOSE: "close",
						CREATED: "created",
						RUN_CLOSE_ANIMATION: "runCloseAnimation"
					};
				GameCore.Screen = Jt, GameCore.Screens = {
					Events: qt
				};
				var Qt = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).events = void 0, i.screens = [], i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.boot = function() {
							this.events = new zt, this.registryScreenFactory()
						}, i.get = function(e) {
							var t = this.scene.children.getByName(e);
							return null === t ? null : t
						}, i.add = function(e, t, i, n) {
							var a = this.get(e);
							return a || (a = this.scene.add.screen(e, t, i, n), this.screens.push(a), this.events.emit(GameCore.Screens.Events.CREATED, a), a)
						}, i.open = function(e, t) {
							var i = this.get(e);
							return !!i && (i.open(t), i.emit(GameCore.Screens.Events.OPEN, i), this.events.emit(GameCore.Screens.Events.OPEN, i), !0)
						}, i.close = function(e) {
							var t = this.get(e);
							return !!t && (t.close(), t.emit(GameCore.Screens.Events.CLOSE, t), this.events.emit(GameCore.Screens.Events.CLOSE, t), !0)
						}, i.closeAllScreens = function() {
							var e = this;
							this.screens.forEach((function(t) {
								t.visible && e.close(t.name)
							}))
						}, i.bringToTop = function(e) {
							var t = this.scene.children.getByName(e);
							t && this.scene.children.bringToTop(t)
						}, i.registryScreenFactory = function() {
							Phaser.GameObjects.GameObjectFactory.register("screen", this.createScreen)
						}, i.createScreen = function(e, t, i, n) {
							var a = new t(this.scene, e, i, n);
							return Phaser.Display.Align.In.Center(a, this.scene.gameZone), this.existing(a), a
						}, t
					}(Phaser.Plugins.ScenePlugin),
					$t = Qt,
					ei = i(20050),
					ti = i.n(ei),
					ii = i(23828),
					ni = i(53894),
					ai = i(98297),
					si = i(18172),
					oi = {
						currentSceneKey: "",
						prevSceneKey: ""
					};
				(0, si.pV)();
				var ri, li, ci, hi, ui, di, pi, mi, fi, gi = {
						processed: !1,
						contextId: "",
						contextType: "SOLO",
						entryPointData: {},
						currentGameMode: ""
					},
					vi = gi,
					yi = {
						data: {}
					},
					bi = {
						friendListChallenged: []
					},
					Ei = {
						token: "",
						isRequesting: !1
					},
					Ti = (ri = {}, ri.auth = function(e, t) {
						return void 0 === e && (e = Ei), (0, si.ZP)(e, (function(e) {
							var i = t.payload;
							if (i) {
								var n = i.token;
								switch (t.type) {
									case J:
										e.isRequesting = !0;
										break;
									case q:
										e.token = n, e.isRequesting = !1
								}
							}
						}))
					}, ri),
					Ai = i(15177),
					Si = {
						ASID: "",
						playerId: "",
						name: "",
						photo: "",
						locale: "",
						data: {
							score: 0,
							settings: be,
							userGuideDisplays: 0,
							customFields: {
								coin: 0,
								level: 1,
								levelStars: {},
								bullets: {},
								lastTimeSpin: 0,
								lastTimePlayed: 0,
								bonusBullets: 0,
								showRemoveAds: !0,
								purchases: [],
								specialEvents: {}
							}
						},
						connectedPlayers: {},
						isUserNew: !1,
						isConnectedPlayersLoaded: !1
					},
					_i = (li = {}, li.player = function(e, t) {
						return void 0 === e && (e = Si), (0, si.ZP)(e, (function(i) {
							var n = t.payload;
							if (n) {
								var a = n.name,
									s = n.value,
									o = n.data,
									r = void 0 === o ? {} : o,
									l = n.score,
									c = n.connectedPlayers,
									h = void 0 === c ? [] : c,
									u = n.profile;
								switch (t.type) {
									case Le:
										var d = n.playerId,
											p = n.name,
											m = n.photo,
											f = n.locale,
											g = n.data;
										if (i.playerId = d, i.name = p, i.photo = m, i.locale = f, GameCore.Utils.Valid.isObject(g)) {
											var v = g;
											i.data = (0, Ai.TS)(e.data, v)
										}
										g.userGuideDisplays > 0 && (i.isUserNew = !1);
										break;
									case Fe:
										var y = u.playerId,
											b = u.name,
											E = u.photo,
											T = u.locale,
											A = u.ASID;
										i.ASID = A, i.playerId = y, i.name = b, i.photo = E, i.locale = T;
										break;
									case De:
										i.data.score = l;
										break;
									case Ne:
										if (!GameCore.Utils.Object.hasOwn(i.data.settings, a)) break;
										i.data.settings[a] = s;
										break;
									case Ge:
										i.data = (0, Ai.TS)(e.data, r), r.userGuideDisplays > 0 && (i.isUserNew = !1);
										break;
									case Ze:
										if (i.isConnectedPlayersLoaded = !0, h.length <= 0) break;
										var S = GameCore.Utils.Object.keyBy(h, "playerId");
										i.connectedPlayers = (0, Ai.TS)(e.connectedPlayers, S)
								}
							}
						}))
					}, li),
					Ci = i(36384),
					wi = i.n(Ci),
					Bi = {
						data: {},
						profileIds: []
					},
					Ii = (ci = {}, ci.profile = function(e, t) {
						return void 0 === e && (e = Bi), (0, si.ZP)(e, (function(i) {
							var n = t.payload;
							if (n) {
								var a = n.data,
									s = void 0 === a ? [] : a;
								if (t.type === Zt) {
									var r, l, c = GameCore.Utils.Object.keyBy(s, "playerId"),
										h = K()(c);
									i.data = (0, Ai.TS)((0, o.Z)({}, e.data), c), i.profileIds = y()(r = []).call(r, new(wi())(y()(l = []).call(l, e.profileIds, h)))
								}
							}
						}))
					}, ci),
					Pi = i(84228),
					xi = i(23400),
					Oi = i(88986),
					ki = {
						mode: "",
						status: Oi.ys,
						rescued: 0,
						startAt: 0,
						finishAt: 0
					},
					Ri = {
						single: {
							_id: "",
							data: {
								fen: ""
							},
							playerId: "",
							status: Oi.ys
						},
						group: {
							status: Oi.ys,
							opponentInfo: {
								playerId: "",
								name: "",
								photo: ""
							}
						},
						challenge: {
							_id: "",
							status: Oi.ys,
							whitePlayerId: "",
							blackPlayerId: "",
							opponentInfo: {
								playerId: "",
								name: "",
								photo: ""
							}
						},
						online: {
							_id: "",
							status: Oi.ys,
							players: {}
						},
						updateAt: 0,
						isRequesting: !1,
						isAutoStartSingleMode: !1
					},
					Mi = {
						current: {
							updateAt: 0
						},
						data: {
							updateAt: 0
						},
						isRequesting: !1
					},
					Li = (hi = {}, hi[Pi.L] = (0, ii.UY)({
						gameplay: function(e, t) {
							return void 0 === e && (e = ki), (0, si.ZP)(e, (function(i) {
								var n = t.payload;
								if (n) {
									var a = n.mode,
										s = n.status;
									switch (t.type) {
										case xi.Er:
											i.status = Oi.ys, i.mode = ki.mode, i.rescued = ki.rescued, i.startAt = ki.startAt, i.finishAt = ki.finishAt, i.opponentInfo = ki.opponentInfo;
											break;
										case xi.tk:
											i.mode = a, i.status = Oi.kR, i.rescued = ki.rescued, i.startAt = Date.now();
											break;
										case xi.qm:
											i.mode = "string" === typeof a ? a : e.mode, i.status = s || e.status;
											break;
										case xi.Mg:
											i.status = Oi.o3, i.finishAt = Date.now();
											break;
										case xi.XW:
											i.rescued += 1
									}
								}
							}))
						},
						match: function(e, t) {
							return void 0 === e && (e = Ri), (0, si.ZP)(e, (function(i) {
								var n = t.payload;
								if (n) {
									var a = n.match,
										s = n.opponentInfo,
										r = n.players,
										l = n.enable;
									switch (t.type) {
										case xi.xm:
										case xi.AJ:
										case xi.Qi:
										case xi.DI:
										case xi.ar:
											i.isRequesting = !0;
											break;
										case xi.T7:
											i.single = (0, o.Z)({}, e.single, a), i.updateAt = Date.now();
											break;
										case xi.Uo:
											i.isRequesting = !1, i.single = a || Ri.single;
											break;
										case xi.zu:
											i.isRequesting = !1, i.single = Ri.single;
											break;
										case xi.tU:
										case xi.f3:
											i.isRequesting = !0, i.challenge.opponentInfo = s;
											break;
										case xi.AO:
											i.isRequesting = !1, i.challenge = (0, o.Z)({}, a || Ri.challenge), i.challenge.opponentInfo = e.challenge.opponentInfo;
											break;
										case xi.Un:
											i.isRequesting = !1, i.challenge = Ri.challenge;
											break;
										case xi.Vj:
											i.group.status = Oi.kR, s && (i.group.opponentInfo = s);
											break;
										case xi.Sl:
											i.group.status = Oi.o3;
											break;
										case xi.UK:
											i.online.status = Ri.online.status, i.online.players = Ri.online.players;
											break;
										case xi.li:
											i.online.status = Oi.kR, i.online.players = r;
											break;
										case xi.NW:
											i.online.status = Oi.o3;
											break;
										case xi.n_:
											i.isAutoStartSingleMode = l
									}
								}
							}))
						},
						stats: function(e, t) {
							return void 0 === e && (e = Mi), (0, si.ZP)(e, (function(i) {
								var n = t.payload;
								if (n) {
									var a = n.playerId,
										s = n.stats,
										r = n.match,
										l = n.current,
										c = n.players,
										h = n.leaders;
									switch (t.type) {
										case xi.VY:
											delete i.data[a], i.current = Mi.current;
											break;
										case xi.go:
											i.data = Mi.data, i.isRequesting = !0;
											break;
										case xi.PM:
											i.data = s, i.isRequesting = !1;
											break;
										case xi.HV:
											i.data[a] = s;
											break;
										case xi.DP:
											i.current = (0, Ai.TS)((0, o.Z)({}, e.current), s);
											break;
										case xi.li:
											K()(c).forEach((function(e) {
												i.data[e] = {
													score: 0
												}
											}));
											break;
										case xi.Ly:
											h.forEach((function(e) {
												var t = e.playerId,
													n = e.score,
													a = e.rank;
												i.data[t] = {
													score: n,
													rank: a
												}
											}));
											break;
										case xi.AO:
											var u = r || {},
												d = u.blackPlayerId,
												p = u.blackPlayerScore,
												m = u.whitePlayerId,
												f = u.whitePlayerScore,
												g = u.whitePlayerLevel,
												v = u.blackPlayerLevel;
											if (!d || !m) break;
											l && (i.current = l), i.data[d] = {
												score: p,
												level: v
											}, i.data[m] = {
												score: f,
												level: g
											}
									}
								}
							}))
						}
					}), hi),
					Gi = "TOURNAMENT_ACTIVE",
					Di = {
						active: !1,
						tournamentId: null,
						bestSessionScore: 0,
						isRequesting: !1
					},
					Fi = (ui = {}, ui.tournament = function(e, t) {
						return void 0 === e && (e = Di), (0, si.ZP)(e, (function(i) {
							var n = t.payload;
							if (n) {
								var a = n.score,
									s = void 0 === a ? 0 : a,
									o = n.tournamentId;
								switch (t.type) {
									case Gi:
										i.active = !0, i.tournamentId = o;
										break;
									case "TOURNAMENT_REQUEST":
										i.isRequesting = !0;
										break;
									case "TOURNAMENT_RECEIVED":
										i.isRequesting = !1, s > e.bestSessionScore && (i.bestSessionScore = s)
								}
							}
						}))
					}, ui),
					Ni = i(20455),
					Zi = i.n(Ni),
					Ui = i(47302),
					ji = i.n(Ui),
					Yi = "LEADERBOARD_DATA_REQUEST",
					Wi = "LEADERBOARD_DATA_UPDATE",
					Ki = "LEADERBOARD_DATA_CLEAR",
					Hi = {
						leaderboardId: "",
						type: "",
						limit: 0,
						offset: 0,
						leaders: {},
						isRequesting: !1
					},
					zi = (di = {}, di.leaderboards = function(e, t) {
						return void 0 === e && (e = Hi), (0, si.ZP)(e, (function(i) {
							var n = t.payload;
							if (n) {
								var a = n.leaderboardId,
									s = n.type,
									r = n.limit,
									l = n.offset,
									c = n.leaders;
								switch (t.type) {
									case Yi:
										e.type !== s && 0 === l && (i.leaders = Hi.leaders), i.isRequesting = !0, i.leaderboardId = a, i.type = s, i.limit = r, i.offset = l;
										break;
									case Wi:
										if (i.isRequesting = !1, e.type !== s) break;
										var h = GameCore.Utils.Json.clone((0, o.Z)({}, e.leaders, c)),
											u = Zi()(h),
											d = A()(u).call(u, (function(e) {
												return !!e.name && !!e.photo
											}));
										ji()(d).call(d, (function(e, t) {
											return +t.score - +e.score
										})), d.forEach((function(t, n) {
											t.rank = n + 1, e.leaders[t.playerId] || (i.leaders[t.playerId] = t)
										}));
										break;
									case Ki:
										i.isRequesting = !1, i.type = Hi.type, i.limit = Hi.limit, i.offset = Hi.offset, i.leaders = Hi.leaders, i.leaderboardId = Hi.leaderboardId
								}
							}
						}))
					}, di),
					Xi = {
						mission: null,
						missions: null,
						isRequesting: !1
					},
					Vi = (pi = {}, pi.missions = function(e, t) {
						return void 0 === e && (e = Xi), (0, si.ZP)(e, (function(i) {
							var n, a, s = t.payload;
							if (s) {
								var o = s.name,
									r = s.type,
									l = s.value,
									c = s.missions;
								switch (t.type) {
									case "MISSIONS_DATA_REQUEST":
										i.isRequesting = !0;
										break;
									case "MISSIONS_DATA_RECEIVE":
										if (i.isRequesting = !1, c.length < 1) return;
										i.missions = {}, c.forEach((function(e) {
											i.missions[e.name] = e
										}));
										break;
									case "MISSION_START":
										if (null === e.missions) break;
										var h = e.missions[o];
										i.mission = {
											name: o,
											process: {},
											require: h.require,
											reward: h.reward
										}, K()(h.require).forEach((function(e) {
											i.mission.process[e] = 0
										}));
										break;
									case "MISSION_UPDATE":
										if ((null == (n = e.mission) ? void 0 : n.name) !== o) break;
										i.mission.process[r] += l;
										break;
									case "MISSION_COMPLETED":
										if ((null == (a = e.mission) ? void 0 : a.name) !== o) break;
										i.mission = null
								}
							}
						}))
					}, pi),
					Ji = "DAILY_TASKS_PROCESS_UPDATE",
					qi = "DAILY_TASK_REWARDED",
					Qi = "DAILY_TASKS_SEEN",
					$i = {
						tasks: [],
						process: [],
						isRequesting: !1,
						isNotice: !1
					},
					en = (mi = {}, mi.dailyTasks = function(e, t) {
						return void 0 === e && (e = $i), (0, si.ZP)(e, (function(i) {
							var n = t.payload;
							if (n) {
								var a = n.id,
									s = n.type,
									o = n.value,
									r = n.tasks,
									l = n.process;
								switch (t.type) {
									case "DAILY_TASKS_DATA_REQUEST":
										i.isRequesting = !0;
										break;
									case "DAILY_TASKS_DATA_RECEIVE":
										i.isRequesting = !1, i.tasks = r;
										break;
									case Ji:
										i.process = l;
										break;
									case "DAILY_TASK_VALUE_ADD":
										if (!e.process[a]) break;
										i.process[a][s] += o;
										break;
									case qi:
										if (!e.process[a]) break;
										i.process[a].rewarded = !0;
										break;
									case Qi:
										i.isNotice = !1;
										break;
									case "DAILY_TASK_FINISHED":
										i.isNotice = !0
								}
							}
						}))
					}, mi),
					tn = "DAILY_REWARDS_REQUEST",
					nn = "DAILY_REWARDS_RECEIVE",
					an = {
						rewards: [],
						isRequesting: !1
					},
					sn = (fi = {}, fi.dailyRewards = function(e, t) {
						return void 0 === e && (e = an), (0, si.ZP)(e, (function(e) {
							var i = t.payload;
							if (i) {
								var n = i.rewards;
								switch (t.type) {
									case tn:
										e.isRequesting = !0;
										break;
									case nn:
										e.isRequesting = !1, e.rewards = n
								}
							}
						}))
					}, fi),
					on = (0, ii.UY)((0, o.Z)({
						scene: function(e, t) {
							return void 0 === e && (e = oi), (0, si.ZP)(e, (function(i) {
								var n = t.payload;
								if (n) {
									var a = n.sceneKey;
									if (t.type === ai.DW) i.currentSceneKey = a, i.prevSceneKey = e.currentSceneKey
								}
							}))
						},
						context: function(e, t) {
							return void 0 === e && (e = gi), (0, si.ZP)(e, (function(e) {
								var i = t.payload;
								if (i) {
									var n = i.gameMode,
										a = i.contextId,
										s = i.contextType,
										o = i.entryPointData;
									switch (t.type) {
										case ai.kL:
											e.contextId = a, e.contextType = s, e.entryPointData = o;
											break;
										case ai.fJ:
											e.contextId = a, e.contextType = s, e.processed = !0;
											break;
										case ai.EH:
											e.currentGameMode = n
									}
								}
							}))
						},
						messages: function(e, t) {
							return void 0 === e && (e = yi), (0, si.ZP)(e, (function(i) {
								var n = t.payload;
								if (n) {
									var a = n.opponentId;
									if ("string" === typeof a) switch (t.type) {
										case ai.qj:
											e.data[a] ? i.data[a].sent = !0 : i.data[a] = {
												sent: !0
											};
											break;
										case ai.rh:
											e.data[a] ? i.data[a].sent = !1 : i.data[a] = {
												sent: !1
											}
									}
								}
							}))
						},
						friendChallenge: function(e, t) {
							return void 0 === e && (e = bi), (0, si.ZP)(e, (function(e) {
								var i, n = t.payload;
								if (n) {
									var a = n.opponentId,
										s = void 0 === a ? "" : a;
									switch (t.type) {
										case ai.x2:
											if (!s || Se()(i = e.friendListChallenged).call(i, s) >= 0) break;
											e.friendListChallenged.push(s)
									}
								}
							}))
						}
					}, Ti, _i, Ii, Li, Fi, zi, Vi, en, sn)),
					rn = on,
					ln = window,
					cn = (ln.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__, ii.qC),
					hn = function(e) {
						var t = cn((0, ii.md)(ni.Z));
						return (0, ii.MT)(rn, e, t)
					},
					un = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).store = void 0, i.initiator = void 0, i.dispatch = function(e) {
								return i.store.dispatch(e)
							}, i.getState = function() {
								return i.store.getState()
							}, i.subscribe = function(e) {
								return i.store.subscribe(e)
							}, i.watch = function(e, t) {
								var n = ti()((function() {
									var t = i.getState();
									return e(t)
								}));
								return i.subscribe(n((function(e) {
									t(e)
								})))
							}, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							this.store = hn({})
						}, i.setInitiator = function(e) {
							this.initiator = e
						}, i.syncStore = function() {
							this.initiator.initContext(), this.initiator.initPlayer()
						}, t
					}(Phaser.Plugins.BasePlugin),
					dn = un,
					pn = i(97325),
					mn = i(75933),
					fn = i.n(mn),
					gn = (0, pn.B)(),
					vn = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, {
								type: "webfont",
								key: i.type
							}) || this).payload = void 0, n.payload = i, n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.load = function() {
							var e;
							switch (this.payload.type) {
								case "google":
									e = this.getGoogleFontConfig(this.payload);
									break;
								case "local":
									e = this.getLocalFontConfig(this.payload)
							}
							fn().load(e)
						}, i.getGoogleFontConfig = function(e) {
							var t = this,
								i = e.character,
								n = e.fontName,
								a = e.fontWeight;
							return {
								google: {
									families: [n + ":" + (void 0 === a ? 400 : a)],
									text: i
								},
								active: function() {
									t.loader.nextFile(t, !0)
								},
								timeout: 15e3
							}
						}, i.getLocalFontConfig = function(e) {
							var t = this,
								i = e.fontName,
								n = e.fontType,
								a = document.createElement("style");
							document.head.appendChild(a);
							var s = a.sheet;
							if (s) {
								var o = '@font-face { font-family: "' + i + '"; src: url("' + gn + "assets/fonts/" + i + ("opentype" === n ? ".otf" : ".ttf") + '") format("' + n + '"); }';
								s.insertRule(o, 0)
							}
							return {
								custom: {
									families: [i]
								},
								active: function() {
									t.loader.nextFile(t, !0)
								},
								timeout: 15e3
							}
						}, t
					}(Phaser.Loader.File),
					yn = function(e) {
						function t() {
							return e.apply(this, arguments) || this
						}
						return (0, l.Z)(t, e), t.prototype.addFont = function(e) {
							var t = new vn(this.scene.load, e);
							this.scene.load.addFile(t)
						}, t
					}(Phaser.Plugins.ScenePlugin),
					bn = yn,
					En = i(75742),
					Tn = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).portraitRatio = void 0, i.portraitWidth = void 0, i.portraitHeight = void 0, i.landscapeRatio = void 0, i.landscapeWidth = void 0, i.landscapeHeight = void 0, i.worldWidth = void 0, i.worldHeight = void 0, i.worldRatio = void 0, i.defaultRatio = void 0, i.autoResize = void 0, i.disableLandscape = void 0, i.fullSizeOnLandscape = void 0, i.forcePixelRatio = void 0, i.handleResize = (0, Te.D)((function() {
								i.resize(), FBInstant.updateSizeBannerAds()
							}), 300), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.configure = function(e) {
							var t = e.autoResize,
								i = e.portraitRatio,
								n = e.portraitWidth,
								a = e.portraitHeight,
								s = e.landscapeWidth,
								o = e.landscapeHeight,
								r = e.landscapeRatio,
								l = e.disableLandscape,
								c = e.fullSizeOnLandscape;
							this.autoResize = t, this.disableLandscape = l, this.fullSizeOnLandscape = c, this.portraitRatio = i, this.portraitWidth = n, this.portraitHeight = a, this.landscapeRatio = r, this.landscapeWidth = s, this.landscapeHeight = o, this.initWorldSize(), this.addEventResize()
						}, i.resize = function(e) {
							var t = this;
							e && e > 0 && (this.forcePixelRatio = e);
							var i = this.getScreenWidth(),
								n = this.getPixelRatio(),
								a = this.getCanvasSizeFixedRatio(this.worldRatio),
								s = a.width,
								o = a.height;
							this.resizeCanvas(s, o), this.game.scene.scenes.forEach((function(e) {
								var i = e.cameras.main;
								if (i)
									if (e instanceof En.Z) e.scaleGame();
									else {
										var n = t.getZoomRatio(),
											a = t.getWorldSize(),
											s = a.width,
											o = a.height;
										i.setZoom(n), i.centerOn(s / 2, o / 2)
									}
							}));
							var r = document.getElementById("line-left"),
								l = document.getElementById("line-right");
							r && l && (r.style.left = (i - s / n) / 2 + "px", l.style.left = i - (i - s / n) / 2 + "px")
						}, i.resizeCanvas = function(e, t) {
							this.game.canvas.width = e, this.game.canvas.height = t, this.game.scale.resize(e, t)
						}, i.getWorldSize = function() {
							return {
								width: this.worldWidth,
								height: this.worldHeight
							}
						}, i.initWorldSize = function() {
							if (this.worldWidth = this.portraitWidth, this.worldHeight = this.portraitHeight, this.isScreenSmallerRatio(this.portraitRatio)) this.defaultRatio = this.worldWidth / this.worldHeight, this.worldHeight = this.worldWidth / this.getScreenRatio();
							else if (!this.disableLandscape && (this.worldWidth = this.landscapeWidth, this.worldHeight = this.landscapeHeight, this.defaultRatio = this.worldWidth / this.worldHeight, this.fullSizeOnLandscape)) {
								this.worldRatio = this.worldWidth / this.worldHeight, this.landscapeRatio = this.getScreenRatio();
								var e = this.getCanvasSizeFixedRatio(this.landscapeRatio),
									t = e.width,
									i = e.height,
									n = this.getZoomRatio();
								this.worldWidth = t / n, this.worldHeight = i / n
							}
							this.worldRatio = this.worldWidth / this.worldHeight
						}, i.getZoomRatio = function() {
							var e = this.getWorldSize().width;
							return this.getCanvasSizeFixedRatio(this.worldRatio).width / e
						}, i.getPixelRatio = function() {
							if (this.forcePixelRatio > 0) return this.forcePixelRatio;
							if (GameCore.Utils.Device.isDesktop()) return 2;
							var e = GameCore.Utils.Device.pixelRatio();
							return e > 2 && (e = 2), e
						}, i.getPhysicPixels = function(e, t) {
							return e * t
						}, i.getCanvasSizeFixedRatio = function(e) {
							var t = this.getPixelRatio(),
								i = this.getScreenWidth() * t,
								n = this.getScreenHeight() * t;
							return this.isScreenSmallerRatio(e) ? n = i / e : i = n * e, {
								width: i,
								height: n
							}
						}, i.getScreenRatio = function() {
							return this.getScreenWidth() / this.getScreenHeight()
						}, i.getScreenHeight = function() {
							var e = document,
								t = e.body,
								i = e.documentElement,
								n = t.clientHeight,
								a = i.clientHeight;
							return Math.max(a, n) || 0
						}, i.getScreenWidth = function() {
							var e = document,
								t = e.body,
								i = e.documentElement,
								n = t.clientWidth,
								a = i.clientWidth;
							return Math.max(a, n) || 0
						}, i.isScreenSmallerRatio = function(e) {
							return this.getScreenRatio() < e
						}, i.addEventResize = function() {
							this.autoResize && window.addEventListener("resize", this.handleResize)
						}, i.isLandscape = function() {
							return !this.disableLandscape && this.worldRatio > this.portraitRatio
						}, i.getDefaultRatio = function() {
							return this.defaultRatio
						}, t
					}(Phaser.Plugins.BasePlugin),
					An = Tn,
					Sn = function() {
						function e(e, t, i) {
							this.contextId = void 0, this.contextType = void 0, this.entryPointData = void 0, this.contextId = e || vi.contextId, this.contextType = t || vi.contextType, this.entryPointData = i || vi.entryPointData
						}
						return e.prototype.toObject = function() {
							return {
								contextId: this.contextId,
								contextType: this.contextType,
								entryPointData: this.entryPointData
							}
						}, e
					}(),
					_n = i(51710),
					Cn = i(55998),
					wn = GameCore.Configs.PlayerDataStore,
					Bn = function(e) {
						var t = this;
						this.game = void 0, this.initContext = function() {
							var e = window.GameSDK.context.getID(),
								i = window.GameSDK.context.getType(),
								n = window.GameSDK.getEntryPointData(),
								a = new Sn(e, i, n).toObject(),
								s = a.contextId,
								o = a.contextType,
								r = a.entryPointData;
							t.game.storage.dispatch((0, Cn.U1)(s, o, r))
						}, this.initPlayer = function() {
							var e = t.getPlayerInfo(),
								i = t.getPlayerDataLocal();
							t.game.player.receiveData(e, i)
						}, this.getPlayerInfo = function() {
							try {
								var e = window.GameSDK.player.getID(),
									t = window.GameSDK.player.getName(),
									i = window.GameSDK.player.getPhoto(),
									n = window.GameSDK.getLocale();
								if (!GameCore.Utils.Valid.isString(e)) throw new _n.Z(null, {
									playerId: e
								});
								return GameCore.Utils.Valid.isString(t) || (t = "You"), new Ue.Z(e, t, i, n).toObject()
							} catch (a) {
								return new Ue.Z("123", "You").toObject()
							}
						}, this.getPlayerDataLocal = function() {
							try {
								var e = (0, Ee.Th)(wn);
								return GameCore.Utils.Valid.isObject(e) ? new Qe(e).toObject() : null
							} catch (t) {
								return null
							}
						}, this.game = e
					},
					In = i(58123),
					Pn = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).Text = void 0, i.Texture = void 0, i.currentLocale = void 0, i.supportedLanguages = void 0, i.data = void 0, i.options = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.configure = function(e) {
							this.applyOptions(e)
						}, i.getCurrentLanguage = function() {
							return this.currentLocale
						}, i.switchLanguage = function(e) {
							void 0 === e && (e = "en");
							var t = this.getCorrectLocale(e);
							this.currentLocale = t, this.Text = this.data[t].Text, this.Texture = this.data[t].Texture
						}, i.getText = function(e) {
							if ("object" == typeof e) {
								var t = e.key,
									i = e.variables,
									n = void 0 === i ? [] : i,
									a = e.locale,
									s = void 0 === a ? this.currentLocale : a,
									o = this.getCorrectLocale(s),
									r = this.data[o].Text[t];
								return this.replaceVariables(r, n)
							}
							return this.Text[e]
						}, i.getTexture = function(e) {
							if ("object" == typeof e) {
								var t = e.key,
									i = e.variables,
									n = void 0 === i ? [] : i,
									a = e.locale,
									s = void 0 === a ? this.currentLocale : a,
									o = this.getCorrectLocale(s),
									r = this.data[o].Texture[t];
								return this.replaceVariables(r, n)
							}
							return this.Texture[e]
						}, i.isSupportLanguage = function(e) {
							var t;
							return Se()(t = this.supportedLanguages).call(t, e) >= 0
						}, i.applyOptions = function(e) {
							this.options = (0, o.Z)({}, e);
							var t = e.data,
								i = e.locale,
								n = void 0 === i ? "en" : i,
								a = e.upperCaseText,
								s = void 0 !== a && a;
							this.data = t, this.supportedLanguages = K()(t);
							var r = this.getCorrectLocale(n);
							if (this.currentLocale = r, this.Text = t[r].Text, this.Texture = t[r].Texture, s)
								for (var l in this.Text) this.Text[l] = this.Text[l].toUpperCase()
						}, i.replaceVariables = function(e, t) {
							var i = t.length;
							if (0 == i) return e;
							var n = 0;
							return e.replace(/{.*}/, (function() {
								return String(t[Math.min(n++, i - 1)])
							}))
						}, i.getCorrectLocale = function(e) {
							var t = e;
							return ue()(e).call(e, "_") && (t = e.split("_")[0]), this.isSupportLanguage(t) || (t = "en"), t
						}, t
					}(Phaser.Plugins.BasePlugin),
					xn = {
						en: JSON.parse('{"Text":{"unlimited":"Unlimited","shop":"SHOP","invite":"INVITE","daily":"DAILY","daily_spin":"Daily spin!","spin":"SPIN!","goal":"GOAL","play":"PLAY","settings":"SETTINGS","welcome_back":"Welcome back","you_have_been_away_for_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"You\'ve been away for {X} days. You get a bonus bubble \\n for each day you are away!","you_have_been_away_for_more_than_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"You\'ve been away for more than\\n{X} day. You get a bonus bubble\\nfor each day you are away!","daily_bonus":"Daily Bonus","today":"Today","day_{X}":"Day {X}","{X}_bomb":"{X}+Bomb","claim":"CLAIM","pop_bubbles":"Pop bubbles!","season_{X}":"Season {X}","activate":"Activate","premium_pass":"Premium Pass","free":"FREE","premium":"Premium","you_have_passed_all_levels_we_will_update_soon":"You have passed all levels.\\nWe will update soon!","get_spin":"GET SPIN!","sorry_no_rewards_you_have_cancelled_the_ad":"Sorry, No Rewards!\\nYou have cancelled the ad!","can_not_load_new_level":"Can not load new level!","can_not_load_new_level_please_restart_game":"Can not load new level!\\nPlease restart game.","loading_ads":"Loading ads\u2026","loading":"Loading\u2026","no_ads_to_display":"No ads to display","store":"Store","Starter Bundle":"Starter Bundle","show_more":"Show more","Expert Bundle":"Expert Bundle","remove":"Remove","popup_ads":"Popup Ads","{X}_days":"{X} days","show_less":"Show Less","remove_ads":"Remove Ads!","play_bubble_pop_classic_without_popup_ads_in_30_days":"Play Bubble Pop Classic \\n without Popup Ads\\nin 30 days!","do_not_show_again":"Do not show again","buy_now":"BUY NOW","there_was_an_error_while_loading_level_please_try_again_later":"There was an error while loading \\n level. Please try again later.","watch_a_video_to_get_{X}_coins":"Watch a video to get \\n {X} coins!","get_now":"GET NOW!","no_thanks":"No Thanks","pause":"PAUSE","sound":"Sound","music":"Music","on":"ON","off":"OFF","retry":"RETRY","back":"BACK","resume":"RESUME","vibrate":"Vibrate","cancel":"CANCEL","bomb":"Bomb","Removes everything in a radius of 2!":"Removes everything in a radius of 2!","buy":"BUY","not_enough_coin":"Not enough coin","rainbow":"Rainbow","Rainbow can be matched with any bubbles!":"Rainbow can be matched with any bubbles!","electric":"Electric","Removes a row of everything!":"Removes a row of everything!","rocket":"Rocket","Removes everything in its way!":"Removes everything in its way!","out_of_bubbles":"OUT OF BUBBLES!","collect_gems":"Collect Gems","play_on":"PLAY on","continue":"CONTINUE","level":"Level","level_failed":"LEVEL FAILED","pop_all_bubbles":"Pop All Bubbles","score":"SCORE","next":"NEXT","click_to_skip_animation":"Click to skip animation","combo_x_{X}":"Combo\\nx {X}","Drag to aim, \\n Release to shoot!":"Drag to aim,\\nrelease to shoot!","Tap here \\n to switch bubbles!":"Tap here\\nto switch bubbles!","Drop 20+ bubbles \\n to charge The Bomb Booster!":"Drop 20+ bubbles\\nto charge The Bomb Booster!","Click The Bomb Booster icon \\n to use it.":"Click The Bomb Booster icon\\nto use it.","Hit a Dynamite Bubble \\n to explode \\n the surrounding bubbles.":"Hit a Dynamite Bubble\\nto explode\\nthe surrounding bubbles.","Thunder Bubbles \\n remove random bubbles.":"Thunder Bubbles\\nremove random bubbles.","Collect Gems \\n by matching same bubbles!":"Collect Gems\\nby matching same bubbles!","Match bubbles 7 times in a row \\n to charge The Rocket Booster!":"Match bubbles 7 times in a row\\nto charge The Rocket Booster!","Click The Rocket Booster icon \\n to use it.":"Click The Rocket Booster icon \\nto use it.","{X}_bubbles_left":"{X} bubbles left!","Soap Bubbles copy the color \\n of nearby matches.":"Soap Bubbles copy the color\\nof nearby matches.","The Rainbow Booster is unlocked. \\n Unlimited use on this level only!":"The Rainbow Booster is unlocked.\\nUnlimited use on this level only!","The Rainbow Booster \\n can be matched with any color.":"The Rainbow Booster\\ncan be matched with any color.","Don\'t forget to use this item!":"Don\'t forget to use this item!","Hit Pots with any bubbles \\n to break them.":"Hit Pots with any bubbles\\nto break them.","The Electric Booster is unlocked. \\n Unlimited use on this level only!":"The Electric Booster is unlocked. Unlimited use on this level only!","The Electric Booster \\n remove a row of bubbles.":"The Electric Booster\\nremove a row of bubbles.","Hit Electric Bubbles \\n to remove a row of bubbles.":"Hit Electric Bubbles\\nto remove a row of bubbles.","Metal Balls can\'t be matched. \\n Try to drop them!":"Metal Balls can\'t be matched.\\nTry to drop them!","Rope holds up other bubbles. \\n Pop the center bubbles \\n of the Rope.":"Rope holds up other bubbles.\\nPop the center bubbles \\nof the Rope.","Hit Compass Arrow \\n to blast in its way.":"Hit Compass Arrow\\nto blast in its way.","Black Hole \\n sucks unmatched bubbles \\n that are shot close to it.":"Black Hole\\nsucks unmatched bubbles\\nthat are shot close to it.","Hit FireFly Flasks\\n  to remove 3 random bubbles.":"Hit FireFly Flasks\\nto remove 3 random bubbles.","Double Color Bubbles \\n must be matched twice.":"Double Color Bubbles\\nmust be matched twice.","Color Bomb \\n changes color of \\n nearby bubbles randomly.":"Color Bomb\\nchanges color of\\nnearby bubbles randomly.","Spider Web can be removed \\n with a match.":"Spider Web can be removed\\nwith a match.","Switch Black Hole \\n switch between On and Off \\n sucking bubble states.":"Switch Black Hole\\nswitch between On and Off\\nsucking bubble states.","QuestionMark Bubbles \\n change color every turn.":"QuestionMark Bubbles\\nchange color every turn.","When Plant Shells close, \\n you can\'t match them.":"When Plant Shells close, \\nyou can\'t match them.","Hit or match around Leaves \\n to reveal what\'s behind.":"Hit or match around Leaves\\nto reveal what\'s behind.","When Bats drop, \\n they fly to another place. \\n Try to pop them.":"When Bats drop, \\n they fly to another place. \\n Try to pop them.","When you hit \\n +1 or -1 Bubble, \\n you will gain or lose 1 move.":"When you hit \\n +1 or -1 Bubble, \\n you will gain or lose 1 move.","Spider will cover bubbles \\n with Spider Web every turn.":"Spider will cover bubbles\\nwith Spider Web every turn.","Hit Stone with any bubble twice \\n to break it.":"Hit Stone with any bubble twice\\nto break it.","Beetle will cover bubbles \\n with Bush every turn.":"Beetle will cover bubbles\\nwith Bush every turn.","Shoot through the Empty Bubble \\n to break them.":"Shoot through the Empty Bubble\\nto break them.","Mirror Bubbles \\n become the same color \\n as the bubble you\'re shooting.":"Mirror Bubbles \\n become the same color \\n as the bubble you\'re shooting.","Slate Stone can\'t be matched. \\n Try to drop them!":"Slate Stone can\'t be matched.\\nTry to drop them!","Hit Storm Bubbles \\n to release 3 Thunders.":"Hit Storm Bubbles \\n to release 3 Thunders.","Bounce off walls \\n to drop bubbles!":"Bounce off walls\\nto drop bubbles!","of_coins":"Of Coins","A Castle Of Coins":"A Castle Of Coins","A Kingdom Of Coins":"A Kingdom Of Coins","A Bag Of Coins":"A Bag Of Coins","A Chest Of Coins":"A Chest Of Coins","you_have_received":"You have received","you_have_canceled_payment":"You have canceled payment!","there_was_an_error_during_the_payment_please_try_again":"There was an error during\\n the payment! Please try again.","ok":"OK","Drag to aim, Release to shoot!\\nHit the same color balls!":"Drag to aim, Release to shoot!\\nHit the same color balls!","shop_is_currently_empty_please_comeback_later":"Shop is currently empty.\\nPlease comeback later!","offline_bonus":"Offline Bonus","claim_x_{X}":"CLAIM X{X}","level_{X}":"Level {X}","get":"GET","you_have_received_the_rewards":"You have received the rewards","please_come_back_after_{X}":"Please come back after {X}","limited_time_reward_{X}_watch_{Y}_video_to_receive_rewards":"Limited-time reward {X}\\nWatch {Y} video to receive rewards.","{X}_more":"{X}%\\nMore","Black Friday":"Black Friday","1_day":"1 day","you_have_been_away_for_1_day_you_get_a_bonus_bubble_for_each_day_you_are_away":"You\'ve been away for 1 day. You get a bonus bubble for each day you are away!","remove_popup_ads_30_days":"Remove Popup Ads 30 days","usd":"usd"},"Texture":{"empty_2_{abc}":"empty_2_{abc}"}}'),
						fr: JSON.parse('{"Text":{"unlimited":"Illimit\xe9es","shop":"BOUTIQUE","invite":"INVITER","daily":"QUOTIDIENNES","daily_spin":"Un lancer quotidien!","spin":"LANCER!","goal":"OBJECTIF","play":"JOUER","settings":"PARAM\xc8TRES","welcome_back":"Content de vous revoir","you_have_been_away_for_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"Vous avez \xe9t\xe9 absent(e) pendant\\n{X} jours. Vous obtenez une \\nbulle bonus pour chaque jour d\u2019absence !","you_have_been_away_for_more_than_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"Vous avez \xe9t\xe9 absent(e) plus de \\n{X} jours. Vous obtenez une \\nbulle bonus pour chaque jour d\u2019absence !","daily_bonus":"Bonus quotidien","today":"Aujourd\u2019hui","day_{X}":"Jour {X}","{X}_bomb":"{X}+Bombe","claim":"OBTENIR","pop_bubbles":"Faites \xe9clater des bulles !","season_{X}":"Season {X}","activate":"Activer","premium_pass":"Pass Premium","free":"GRATUIT","premium":"Premium","you_have_passed_all_levels_we_will_update_soon":"Vous avez termin\xe9 tous les niveaux.\\nUne mise \xe0 jour aura lieu bient\xf4t !","get_spin":"OBTENIR UN LANCER!","sorry_no_rewards_you_have_cancelled_the_ad":"D\xe9sol\xe9, aucune r\xe9compense !\\nVous avez annul\xe9 la publicit\xe9 !","can_not_load_new_level":"Impossible de charger le nouveau niveau !","can_not_load_new_level_please_restart_game":"Impossible de charger le nouveau niveau\xa0! \\n Veuillez red\xe9marrer le jeu.","loading_ads":"Chargement des publicit\xe9s...","loading":"Chargement en cours...","no_ads_to_display":"Aucune publicit\xe9 \xe0 afficher","store":"Boutique","Starter Bundle":"Pack de d\xe9marrage","show_more":"Afficher plus","Expert Bundle":"Lot expert","remove":"Remove","popup_ads":"Popup Ads","{X}_days":"{X} days","show_less":"Afficher moins","remove_ads":"Supprimer les publicit\xe9s !","play_bubble_pop_classic_without_popup_ads_in_30_days":"Jouez \xe0 Bulles \xe9clat\xe9es \\n classiques sans publicit\xe9s \\n contextuelle pendant 30 jours !","do_not_show_again":"Ne pas afficher \xe0 nouveau","buy_now":"ACHETEZ D\xc8S MAINTENANT","there_was_an_error_while_loading_level_please_try_again_later":"Une erreur est survenue \\n lors du chargement du niveau. \\n Veuillez \\n r\xe9essayez ult\xe9rieurement.","watch_a_video_to_get_{X}_coins":"Regardez une vid\xe9o \\n pour obtenir {X} pi\xe8ces !","get_now":"OBTENEZ D\xc8S MAINTENANT !","no_thanks":"Non merci","pause":"PAUSE","sound":"Son","music":"Musique","on":"ON","off":"OFF","retry":"R\xc9ESSAYER","back":"RETOUR","resume":"REPRENDRE","vibrate":"Vibration","cancel":"ANNULER","bomb":"Bombe","Removes everything in a radius of 2!":"Supprimez tout dans un rayon de 2!","buy":"ACHETER","not_enough_coin":"Pas assez de pi\xe8ces","rainbow":"Arc-en-ciel","Rainbow can be matched with any bubbles!":"L\u2019arc-en-ciel peut \xeatre associ\xe9 \xe0 n\u2019importe quelle bulle!","electric":"\xc9lectrique","Removes a row of everything!":"Supprime une ligne de tout !","rocket":"Fus\xe9e","Removes everything in its way!":"Enl\xe8ve tout ce qui se trouve en travers de son chemin !","out_of_bubbles":"\xc0 COURT DE BULLES !","collect_gems":"Collecter Des Gemmes","play_on":"JOUER","continue":"CONTINUER","level":"Niveau","level_failed":"\xc9CHEC DU NIVEAU","pop_all_bubbles":"\xc9clatez Toutes Les Bulles","score":"SCORE","next":"SUIVANT","click_to_skip_animation":"Cliquez pour passer l\u2019animation","combo_x_{X}":"Combo\\nx {X}","Drag to aim, \\n Release to shoot!":"Faites glisser pour viser,\\nrel\xe2chez pour tirer !","Tap here \\n to switch bubbles!":"Appuyez ici\\npour changer de bulles !","Drop 20+ bubbles \\n to charge The Bomb Booster!":"Faites tomber plus de 20 bulles\\npour charger\\nle Boost de bombe !","Click The Bomb Booster icon \\n to use it.":"Cliquez sur \\n l\u2019ic\xf4ne Boost de bombe \\n pour l\u2019utiliser.","Hit a Dynamite Bubble \\n to explode \\n the surrounding bubbles.":"Touchez une Bulle dynamite\\npour faire exploser\\nles bulles environnantes.","Thunder Bubbles \\n remove random bubbles.":"Bulles \xe9clair\\nsupprime les bulles al\xe9atoires.","Collect Gems \\n by matching same bubbles!":"Collectez des gemmes\\nen faisant correspondre les m\xeames bulles !","Match bubbles 7 times in a row \\n to charge The Rocket Booster!":"Faites correspondre les bulles\\n7 fois d\u2019affil\xe9e pour charger\\nle Boost fus\xe9e !","Click The Rocket Booster icon \\n to use it.":"Cliquez sur l\u2019ic\xf4ne Boost de Fus\xe9e \\n pour l\u2019utiliser.","{X}_bubbles_left":"{X} bulles restantes!","Soap Bubbles copy the color \\n of nearby matches.":"Les Bulles de savon copient \\nla couleur \\ndes correspondances \xe0 proximit\xe9.","The Rainbow Booster is unlocked. \\n Unlimited use on this level only!":"Le Boost arc-en-ciel est \\n d\xe9bloqu\xe9. Utilisation illimit\xe9e \\nuniquement sur ce niveau !","The Rainbow Booster \\n can be matched with any color.":"Le Boost arc-en-ciel \\n peut \xeatre associ\xe9 \xe0 \\n n\u2019importe quelle couleur.","Don\'t forget to use this item!":"N\u2019oubliez pas d\u2019utiliser cet objet!","Hit Pots with any bubbles \\n to break them.":"Touchez les Pots avec\\nn\u2019importe quelle bulle\\npour les briser.","The Electric Booster is unlocked. \\n Unlimited use on this level only!":"Le Boost \xe9lectrique est \\nd\xe9bloqu\xe9. Utilisation illimit\xe9e \\nuniquement sur ce niveau !","The Electric Booster \\n remove a row of bubbles.":"Le Boost \xe9lectrique \\n supprime une rang\xe9e de bulles.","Hit Electric Bubbles \\n to remove a row of bubbles.":"Touchez les Bulles \xe9lectriques\\npour supprimer une rang\xe9e \\nde bulles.","Metal Balls can\'t be matched. \\n Try to drop them!":"Les Balles m\xe9talliques ne peuvent\\n\xeatre mises en correspondance.\\nEssayez de les faire tomber!","Rope holds up other bubbles. \\n Pop the center bubbles \\n of the Rope.":"La corde retient les autres bulles.\\nFaites \xe9clater les bulles centrales\\nde la corde.","Hit Compass Arrow \\n to blast in its way.":"Touchez la Fl\xe8che boussole\\npour tout faire exploser\\nsur son chemin.","Black Hole \\n sucks unmatched bubbles \\n that are shot close to it.":"Le Trou noir\\naspire les bulles non associ\xe9es\\ntir\xe9es \xe0 proximit\xe9.","Hit FireFly Flasks\\n  to remove 3 random bubbles.":"Touchez les Flacons lucioles\\npour supprimer 3 bulles al\xe9atoires.","Double Color Bubbles \\n must be matched twice.":"Les Bulles de couleur doubles\\ndoivent \xeatre associ\xe9es deux fois.","Color Bomb \\n changes color of \\n nearby bubbles randomly.":"La Bombe de couleurs\\nmodifie la couleur des\\nbulles voisines de fa\xe7on al\xe9atoire.","Spider Web can be removed \\n with a match.":"La Toile d\u2019araign\xe9e \\n peut \xeatre supprim\xe9e\\navec une correspondance.","Switch Black Hole \\n switch between On and Off \\n sucking bubble states.":"Activez ou d\xe9sactivez\\nle Trou noir pour\\naspirer les \xe9tats des bulles.","QuestionMark Bubbles \\n change color every turn.":"Les Bulles point d\u2019interrogation \\nchangent de couleur \xe0 chaque tour.","When Plant Shells close, \\n you can\'t match them.":"Quand \\n les Coquilles v\xe9g\xe9tales ferment, \\n vous ne pouvez pas les associer.","Hit or match around Leaves \\n to reveal what\'s behind.":"Touchez ou effectuez des\\n associations autour des Feuilles pour \\nr\xe9v\xe9ler ce qui se cache derri\xe8re.","When Bats drop, \\n they fly to another place. \\n Try to pop them.":"Quand les Chauves-souris tombent, \\n elles volent vers un autre endroit. \\n Essayez de les faire \xe9clater.","When you hit \\n +1 or -1 Bubble, \\n you will gain or lose 1 move.":"Lorsque vous touchez \\n +1 ou -1 Bulle, vous \\n gagnez ou perdez 1 d\xe9placement.","Spider will cover bubbles \\n with Spider Web every turn.":"L\u2019Araign\xe9e couvrira les bulles avec\\nla toile d\u2019araign\xe9e \xe0 chaque tour.","Hit Stone with any bubble twice \\n to break it.":"Touchez les Pierre avec\\nn\u2019importe quelle bulle par deux fois\\npour les briser.","Beetle will cover bubbles \\n with Bush every turn.":"La coccinelle couvrira les bulles\\nde Buisson \xe0 chaque tour.","Shoot through the Empty Bubble \\n to break them.":"Tirez \xe0 travers les Bulles vides\\npour les briser.","Mirror Bubbles \\n become the same color \\n as the bubble you\'re shooting.":"Les Bulles miroir \\n deviennent de la m\xeame couleur \\n que la bulle que vous tirez.","Slate Stone can\'t be matched. \\n Try to drop them!":"Les Pierres d\u2019ardoise \\n ne peuvent \xeatre associ\xe9es. \\n Essayez de les faire tomber !","Hit Storm Bubbles \\n to release 3 Thunders.":"Hit Storm Bubbles \\n to release 3 Thunders.","Bounce off walls \\n to drop bubbles!":"Rebondissez sur les murs\\npour faire tomber des bulles !","of_coins":"Of Coins","A Castle Of Coins":"Un ch\xe2teau de pi\xe8ces","A Kingdom Of Coins":"Un royaume de pi\xe8ces","A Bag Of Coins":"Un sac de pi\xe8ces","A Chest Of Coins":"Un coffre de pi\xe8ces","you_have_received":"Vous avez re\xe7u","you_have_canceled_payment":"Vous avez annul\xe9 le paiement !","there_was_an_error_during_the_payment_please_try_again":"Une erreur s\u2019est produite lors du paiement ! Veuillez r\xe9essayer.","ok":"OK","Drag to aim, Release to shoot!\\nHit the same color balls!":"Faites glisser pour viser,\\nrel\xe2chez pour tirer! Frappez \\nles m\xeames boules de couleur!","shop_is_currently_empty_please_comeback_later":"Shop is currently empty.\\nPlease comeback later!","offline_bonus":"R\xe9compenses hors ligne","claim_x_{X}":"OBTENIR X{X}","level_{X}":"Niveau {X}","get":"GET","you_have_received_the_rewards":"You have received the rewards","please_come_back_after_{X}":"Please come back after {X}","limited_time_reward_{X}_watch_{Y}_video_to_receive_rewards":"Limited-time reward {X}nWatch {Y} video to receive rewards.","{X}_more":"{X}%\\nMore","Black Friday":"Black Friday","1_day":"1 day","you_have_been_away_for_1_day_you_get_a_bonus_bubble_for_each_day_you_are_away":"Vous avez \xe9t\xe9 absent(e) pendant \\n 1 jour. Vous obtenez une \\nbulle bonus pour chaque jour  d\u2019absence !","remove_popup_ads_30_days":"Supprimez les fen\xeatres publicitaires contextuelles pendant 30 jours","usd":"usd"},"Texture":{"empty_2_{abc}":"empty_2_{abc}"}}'),
						de: JSON.parse('{"Text":{"unlimited":"Unbegrenzt","shop":"SHOP","invite":"EINLADEN","daily":"T\xc4GLICH","daily_spin":"T\xe4glicher Durchlauf!","spin":"DREHEN!","goal":"ZIEL","play":"SPIELEN","settings":"EINSTELLUNGEN","welcome_back":"Willkommen zur\xfcck","you_have_been_away_for_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"Du warst {X} Tage weg. Du erh\xe4ltst eine Bonus-Bubble f\xfcr jeden Tag den du weg bist!","you_have_been_away_for_more_than_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"Du warst l\xe4nger als  \\n{X} Tage weg. Du erh\xe4ltst eine Bonus-Bubble f\xfcr jeden Tag den du weg bist!","daily_bonus":"T\xe4glicher Bonus","today":"Heute","day_{X}":"Tag {X}","{X}_bomb":"{X}+Bombe","claim":"EINFORDERN","pop_bubbles":"Pop Bubbles!","season_{X}":"Season {X}","activate":"Aktivieren","premium_pass":"Premium-Pass","free":"KOSTENLOS","premium":"Premium","you_have_passed_all_levels_we_will_update_soon":"Du hast alle Level erreicht. Wird in K\xfcrze aktualisiert!","get_spin":"HOLEN SIE SICH EINEN DURCHLAUF!","sorry_no_rewards_you_have_cancelled_the_ad":"Entschuldigung, keine Belohnungen!\\nDu hast die Anzeige gel\xf6scht!","can_not_load_new_level":"Kann kein neues Level laden!","can_not_load_new_level_please_restart_game":"Neues Level kann nicht geladen werden!\\nBitte Spiel neu starten.","loading_ads":"L\xe4dt Anzeigen \u2026","loading":"Laden \u2026","no_ads_to_display":"Keine Anzeigen verf\xfcgbar","store":"Store","Starter Bundle":"Starter Bundle","show_more":"Mehr anzeigen","Expert Bundle":"Expert Bundle","remove":"Remove","popup_ads":"Popup Ads","{X}_days":"{X} days","show_less":"Weniger anzeigen","remove_ads":"Werbung entfernen!","play_bubble_pop_classic_without_popup_ads_in_30_days":"Spielen Sie Bubble Pop Classic\\nohne Popup-Anzeigen \\nin 30 Tagen!","do_not_show_again":"Nicht mehr anzeigen","buy_now":"JETZT KAUFEN","there_was_an_error_while_loading_level_please_try_again_later":"Ein Fehler ist beim Laden der\\nEbene aufgetreten. \\n Bitte versuche es sp\xe4ter \\n noch einmal.","watch_a_video_to_get_{X}_coins":"Sehen Sie \\nsich ein Video an,\\num 50 M\xfcnzen \\nzu erhalten!","get_now":"HOLEN SIE SICH JETZT!","no_thanks":"Nein, danke","pause":"PAUSE","sound":"Sound","music":"Musik","on":"AN","off":"AUS","retry":"WIEDERHOLEN","back":"ZUR\xdcCK","resume":"WEITER","vibrate":"Vibrieren","cancel":"ABBRECHEN","bomb":"Bombe","Removes everything in a radius of 2!":"Entfernt alles in einem Radius von 2!","buy":"KAUFEN","not_enough_coin":"Nicht genug M\xfcnzen","rainbow":"Regenbogen","Rainbow can be matched with any bubbles!":"Regenbogen kann mit allen Bubbles abgestimmt werden!","electric":"Elektrisch","Removes a row of everything!":"Entfernt eine Reihe von allem!","rocket":"Rakete","Removes everything in its way!":"Entfernt alles was im Weg ist!","out_of_bubbles":"KEINE BUBBLES MEHR!","collect_gems":"Sammle Edelsteine","play_on":"SPIELEN SIE weiter","continue":"FORTSETZEN","level":"Level","level_failed":"LEVEL FEHLGESCHLAGEN","pop_all_bubbles":"Zerplatze Alle Blasen","score":"PUNKTZAHL","next":"WEITER","click_to_skip_animation":"Klicken Sie hier, \\n um die Animation zu \xfcberspringen","combo_x_{X}":"Combo\\nx {X}","Drag to aim, \\n Release to shoot!":"Zum Zielen ziehen,\\nzum Schie\xdfen loslassen!","Tap here \\n to switch bubbles!":"Tippe hier,\\num die Blasen zu wechseln!","Drop 20+ bubbles \\n to charge The Bomb Booster!":"Lass 20+ Blasen fallen,\\num Den Bomb Booster aufzuladen!","Click The Bomb Booster icon \\n to use it.":"Klicken Sie auf das Bomb Booster-Symbol,\\num es zu verwenden.","Hit a Dynamite Bubble \\n to explode \\n the surrounding bubbles.":"Triff eine Dynamitblase, um die \\n umgebenden Blasen zu zerplatzen.","Thunder Bubbles \\n remove random bubbles.":"Thunder Bubbles\\nentfernen zuf\xe4llig Bubbles.","Collect Gems \\n by matching same bubbles!":"Sammle Edelsteine,\\nindem du sie mit gleichen Bubbles zusammenbringst!","Match bubbles 7 times in a row \\n to charge The Rocket Booster!":"Kombiniere Bubbles 7 Mal hintereinander um den Rocket Booster aufzuladen!","Click The Rocket Booster icon \\n to use it.":"Klicke auf das Rocket Booster-Symbol,\\n um es zu benutzen.","{X}_bubbles_left":"{X} Bubbles \xfcbrig!","Soap Bubbles copy the color \\n of nearby matches.":"Soap Bubbles \\nkopieren die Farbe von\\nbenachbarten \xdcbereinstimmungen.","The Rainbow Booster is unlocked. \\n Unlimited use on this level only!":"Der Rainbow Booster ist freigeschaltet. \\nUnbegrenzte Nutzung nur auf diesem Level!","The Rainbow Booster \\n can be matched with any color.":"Der Rainbow Booster\\nkann abgestimmt mit jeder Farbe\\nabgestimmt werden.","Don\'t forget to use this item!":"Vergiss nicht, \\ndieses Objekt zu benutzen!","Hit Pots with any bubbles \\n to break them.":"Schlage T\xf6pfe\\nmit irgendwelchen Blasen um\\nsie zu zerst\xf6ren.","The Electric Booster is unlocked. \\n Unlimited use on this level only!":"Der Electric Booster ist entriegelt. \\n Unbegrenzte Nutzung nur auf dieser Ebene!","The Electric Booster \\n remove a row of bubbles.":"Der Electric Booster entfernt \\n eine Reihe von Bubbles.","Hit Electric Bubbles \\n to remove a row of bubbles.":"W\xe4hle Electric Bubbles, um eine\\nReihe von Bubbles zu entfernen.","Metal Balls can\'t be matched. \\n Try to drop them!":"Metal Balls \\n k\xf6nnen nicht angepasst werden.\\nVersuchen Sie, sie zu vermeiden!","Rope holds up other bubbles. \\n Pop the center bubbles \\n of the Rope.":"Seil h\xe4lt andere Bubbles auf. \\n Pop die mittleren Bubbles des Seils.","Hit Compass Arrow \\n to blast in its way.":"W\xe4hlen Sie den Kompasspfeil,\\num seine Richtung zu schie\xdfen.","Black Hole \\n sucks unmatched bubbles \\n that are shot close to it.":"Das Black Hole saugt ungepaarte \\n Bubbles, die in der N\xe4he \\n abgeschossen werden, auf.","Hit FireFly Flasks\\n  to remove 3 random bubbles.":"W\xe4hle FireFly Flasks um\\n3 zuf\xe4llige Bubbles zu entfernen.","Double Color Bubbles \\n must be matched twice.":"Double Color Bubbles\\nm\xfcssen zweimal angepasst werden.","Color Bomb \\n changes color of \\n nearby bubbles randomly.":"Color Bomb \xe4ndert die\\nFarbe der umgebenden\\nBubbles zuf\xe4llig.","Spider Web can be removed \\n with a match.":"Spider Web kann \\nmit einer \xdcbereinstimmung\\nentfernt werden.","Switch Black Hole \\n switch between On and Off \\n sucking bubble states.":"Switch Black Hole Schalter \\nzwischen Ein und Aus umschalten,\\num Bubble States abzusaugen.","QuestionMark Bubbles \\n change color every turn.":"QuestionMark Bubbles \xe4ndern\\nihre Farbe in jeder Runde.","When Plant Shells close, \\n you can\'t match them.":"Wenn sich die Plant Shells \\nschlie\xdfen, k\xf6nnen sie nicht mehr\\nangepasst werden.","Hit or match around Leaves \\n to reveal what\'s behind.":"W\xe4hle oder gleiche Leaves ab,\\num zu enth\xfcllen,\\nwas sich dahinter befindet.","When Bats drop, \\n they fly to another place. \\n Try to pop them.":"Wenn die Bats abnehmen,\\nfliegen sie an einen anderen Ort.\\nVersuchen Sie, sie zu zerplatzen.","When you hit \\n +1 or -1 Bubble, \\n you will gain or lose 1 move.":"Wenn du eine\\n+1 oder -1 Bubble triffst, gewinnst \\noder verlierst Du einen Zug.","Spider will cover bubbles \\n with Spider Web every turn.":"Spider bedeckt Bubbles \\nin jeder Runde mit einem \\nSpider Web.","Hit Stone with any bubble twice \\n to break it.":"Triff den Stone zweimal \\n mit einer beliebigen Bubble\\num ihn zu zerst\xf6ren.","Beetle will cover bubbles \\n with Bush every turn.":"Beetle deckt Bubbles in \\njeder Runde mit einem Bush ab.","Shoot through the Empty Bubble \\n to break them.":"Schie\xdfe durch die Empty Bubble\\num sie zu zerst\xf6ren.","Mirror Bubbles \\n become the same color \\n as the bubble you\'re shooting.":"Mirror Bubbles\\nhaben die gleiche Farbe wie die\\nBubble, auf die du schie\xdft.","Slate Stone can\'t be matched. \\n Try to drop them!":"Slate Stone kann nicht\\nangepasst werden. \\nVersuchen Sie, sie zu vermeiden!","Hit Storm Bubbles \\n to release 3 Thunders.":"Hit Storm Bubbles \\n to release 3 Thunders.","Bounce off walls \\n to drop bubbles!":"Pralle von W\xe4nden ab,\\num Bubbles zu verringern!","of_coins":"Of Coins","A Castle Of Coins":"Eine Haufen M\xfcnzen","A Kingdom Of Coins":"Ein Riesenhaufen M\xfcnzen","A Bag Of Coins":"Eine Sack voll M\xfcnzen","A Chest Of Coins":"Eine Truhe mit M\xfcnzen","you_have_received":"Du hast erhalten","you_have_canceled_payment":"Du hast die Zahlung storniert!","there_was_an_error_during_the_payment_please_try_again":"Es ist ein Fehler w\xe4hrend der Zahlung aufgetreten! Bitte nochmals versuchen.","ok":"OK","Drag to aim, Release to shoot!\\nHit the same color balls!":"Ziehen Sie zum Ziel, ver\xf6ffentlichen \\nSie zu schie\xdfen! Schlagen Sie die \\ngleichen Farbkugeln!","shop_is_currently_empty_please_comeback_later":"Shop is currently empty.\\nPlease comeback later!","offline_bonus":"Offline Belohnungen","claim_x_{X}":"EINFORDERN X{X}","level_{X}":"Level {X}","get":"GET","you_have_received_the_rewards":"You have received the rewards","please_come_back_after_{X}":"Please come back after {X}","limited_time_reward_{X}_watch_{Y}_video_to_receive_rewards":"Limited-time reward {X}nWatch {Y} video to receive rewards.","{X}_more":"{X}%\\nMore","Black Friday":"Black Friday","1_day":"1 day","you_have_been_away_for_1_day_you_get_a_bonus_bubble_for_each_day_you_are_away":"Du warst einen Tag weg. Du erh\xe4ltst eine Bonus-Bubble f\xfcr jeden Tag den du weg bist!","remove_popup_ads_30_days":"Entferne Popup-Anzeigen f\xfcr 30 Tage","usd":"USD"},"Texture":{"empty_2_{abc}":"empty_2_{abc}"}}'),
						es: JSON.parse('{"Text":{"unlimited":"Ilimitado","shop":"TIENDA","invite":"INVITAR","daily":"DIARIO","daily_spin":"\xa1Giro diario!","spin":"\xa1GIRAR!","goal":"OBJETIVO","play":"JUGAR","settings":"CONFIGURACI\xd3N","welcome_back":"Bienvenido de nuevo","you_have_been_away_for_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"Has faltado {X} d\xedas. \\nRecibir\xe1s una burbuja extra por cada d\xeda que faltes.","you_have_been_away_for_more_than_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"Has faltado m\xe1s de {X} d\xedas. \\nRecibir\xe1s una burbuja extra por cada d\xeda que faltes.","daily_bonus":"Bono diario","today":"Hoy","day_{X}":"D\xeda {X}","{X}_bomb":"{X}+Bomba","claim":"RECLAMAR","pop_bubbles":"\xa1Revienta burbujas!","season_{X}":"Season {X}","activate":"Activar","premium_pass":"Pase Premium","free":"GRATIS","premium":"Premium","you_have_passed_all_levels_we_will_update_soon":"Has superado todos los niveles. \xa1Pronto lo actualizaremos!","get_spin":"CONSEGUIR UN GIRO!","sorry_no_rewards_you_have_cancelled_the_ad":"Lo sentimos, \\nno hay recompensas.\\n \xa1Has cancelado el anuncio!","can_not_load_new_level":"No se puede cargar un nuevo nivel","can_not_load_new_level_please_restart_game":"\xa1No se puede cargar el nuevo nivel!\\\\nReinicia el juego.","loading_ads":"Cargando anuncios...","loading":"Cargando...","no_ads_to_display":"Sin anuncios para mostrar","store":"Tienda","Starter Bundle":"Paquete inicial","show_more":"Mostrar m\xe1s","Expert Bundle":"Paquete de Expertos","remove":"Remove","popup_ads":"Popup Ads","{X}_days":"{X} days","show_less":"Mostrar menos","remove_ads":"\xa1Eliminar anuncios!","play_bubble_pop_classic_without_popup_ads_in_30_days":"\xa1Juega a Bubble Pop Classic\\nsin anuncios emergentes\\ndurante 30 d\xedas!","do_not_show_again":"No mostrar de nuevo","buy_now":"COMPRAR AHORA","there_was_an_error_while_loading_level_please_try_again_later":"Se ha producido un error\\nal cargar el nivel.\\nPor favor,\\nint\xe9ntalo de nuevo m\xe1s tarde.","watch_a_video_to_get_{X}_coins":"\xa1Mira un v\xeddeo\\npara conseguir \\n{X} monedas!","get_now":"\xa1Conseguir ahora!","no_thanks":"No, gracias","pause":"PAUSAR","sound":"Sonido","music":"M\xfasica","on":"ENCENDIDO","off":"APAGADO","retry":"REINTENTAR","back":"VOLVER","resume":"REANUDAR","vibrate":"Vibrar","cancel":"CANCELAR","bomb":"Bomba","Removes everything in a radius of 2!":"\xa1Elimina todo en un radio de 2!","buy":"COMPRAR","not_enough_coin":"No hay suficientes monedas","rainbow":"Arco\xedris","Rainbow can be matched with any bubbles!":"\xa1El arco\xedris se puede combinar con cualquier burbuja!","electric":"El\xe9ctrico","Removes a row of everything!":"\xa1Elimina una fila de todo!","rocket":"Cohete","Removes everything in its way!":"\xa1Elimina todo a su paso!","out_of_bubbles":"\xa1NO QUEDAN BURBUJAS!","collect_gems":"Recoge Gemas","play_on":"JUEGA en","continue":"CONTINUAR","level":"Nivel","level_failed":"NIVEL FALLIDO","pop_all_bubbles":"Estalla Todas Las Burbujas","score":"PUNTUACI\xd3N","next":"SIGUIENTE","click_to_skip_animation":"Haz clic para saltar la animaci\xf3n","combo_x_{X}":"Combo\\nx {X}","Drag to aim, \\n Release to shoot!":"Arrastra para apuntar,\\nsuelta para disparar.","Tap here \\n to switch bubbles!":"\xa1Toca aqu\xed\\npara cambiar de burbuja!","Drop 20+ bubbles \\n to charge The Bomb Booster!":"Suelta m\xe1s de 20 burbujas\\npara cargar el Potenciador de Bombas.","Click The Bomb Booster icon \\n to use it.":"Haz clic en el \\n icono del Potenciador \\n de Bombas  para usarlo.","Hit a Dynamite Bubble \\n to explode \\n the surrounding bubbles.":"Golpea una Burbuja de Dinamita\\npara hacer explotar\\nlas burbujas circundantes.","Thunder Bubbles \\n remove random bubbles.":"Las Burbujas de Trueno eliminan \\nburbujas de forma aleatoria.","Collect Gems \\n by matching same bubbles!":"\xa1Recoge gemas\\nemparejando burbujas iguales!","Match bubbles 7 times in a row \\n to charge The Rocket Booster!":"Combina burbujas 7 veces seguidas para cargar el Cohete Propulsor.","Click The Rocket Booster icon \\n to use it.":"Haz clic en el icono del Cohete Propulsor para usarlo.","{X}_bubbles_left":"\xa1Quedan {X} burbujas!","Soap Bubbles copy the color \\n of nearby matches.":"Las Burbujas de Jab\xf3n copian \\nel color de los pares cercanos.","The Rainbow Booster is unlocked. \\n Unlimited use on this level only!":"El Potenciador Arco\xedris est\xe1 desbloqueado. \\n \xa1Uso ilimitado solo en este nivel!","The Rainbow Booster \\n can be matched with any color.":"El Potenciador Arco\xedris se puede \\n combinar con cualquier color.","Don\'t forget to use this item!":"\xa1No olvides usar este art\xedculo!","Hit Pots with any bubbles \\n to break them.":"Golpea las macetas con cualquier\\n burbuja para romperlas.","The Electric Booster is unlocked. \\n Unlimited use on this level only!":"El Potenciador El\xe9ctrico est\xe1 desbloqueado. \xa1Uso ilimitado solo en este nivel!","The Electric Booster \\n remove a row of bubbles.":"El Potenciador El\xe9ctrico \\n elimina una fila de burbujas.","Hit Electric Bubbles \\n to remove a row of bubbles.":"Golpea las Burbujas El\xe9ctricas \\n para eliminar \\nuna fila de burbujas.","Metal Balls can\'t be matched. \\n Try to drop them!":"Las Bolas de Metal \\n no se pueden combinar.\\n\xa1Trata de dejarlas caer!","Rope holds up other bubbles. \\n Pop the center bubbles \\n of the Rope.":"La cuerda sostiene otras\\nburbujas. Revienta las burbujas \\ncentrales de la cuerda.","Hit Compass Arrow \\n to blast in its way.":"Golpea la Flecha\\nde la Br\xfajula para abrirte paso.","Black Hole \\n sucks unmatched bubbles \\n that are shot close to it.":"El Agujero Negro\\nsucciona burbujas sin pareja\\nque se disparan cerca de \xe9l.","Hit FireFly Flasks\\n  to remove 3 random bubbles.":"Golpea los Frascos Luci\xe9rnaga \\n para eliminar 3 burbujas al azar.","Double Color Bubbles \\n must be matched twice.":"Las Burbujas de Doble Color \\n tienen que emparejarse dos veces.","Color Bomb \\n changes color of \\n nearby bubbles randomly.":"La Bomba de Color \\n cambia el color de las burbujas  \\n cercanas aleatoriamente.","Spider Web can be removed \\n with a match.":"La Telara\xf1a se puede eliminar\\ncon un emparejamiento.","Switch Black Hole \\n switch between On and Off \\n sucking bubble states.":"Activa y desactiva el Agujero Negro \\n para succionar burbujas.","QuestionMark Bubbles \\n change color every turn.":"Las Burbujas Interrogante\\ncambian de color en cada turno.","When Plant Shells close, \\n you can\'t match them.":"Cuando las Conchas Vegetales\\nse cierran,\\nno puedes emparejarlas.","Hit or match around Leaves \\n to reveal what\'s behind.":"Golpea o combina alrededor de\\nlas hojas para revelar lo que \\nhay detr\xe1s.","When Bats drop, \\n they fly to another place. \\n Try to pop them.":"Cuando los murci\xe9lagos caen,\\nvuelan a otro lugar.\\nIntenta reventarlos.","When you hit \\n +1 or -1 Bubble, \\n you will gain or lose 1 move.":"Cuando golpeas la burbuja \\n+1 o -1, ganar\xe1s o perder\xe1s \\n1 movimiento.","Spider will cover bubbles \\n with Spider Web every turn.":"La Ara\xf1a cubrir\xe1 las burbujas\\ncon Telara\xf1a en cada turno.","Hit Stone with any bubble twice \\n to break it.":"Golpea la Piedra\\ncon cualquier burbuja dos veces\\npara romperla.","Beetle will cover bubbles \\n with Bush every turn.":"El Escarabajo cubrir\xe1 las burbujas\\ncon Arbustos en cada turno.","Shoot through the Empty Bubble \\n to break them.":"Dispara a trav\xe9s de \\nla Burbuja Vac\xeda para romperlas.","Mirror Bubbles \\n become the same color \\n as the bubble you\'re shooting.":"Las Burbujas Espejo\\nse vuelven del mismo color que \\n la burbuja a la que est\xe9s disparando.","Slate Stone can\'t be matched. \\n Try to drop them!":"La Piedra de Pizarra\\nno se puede emparejar.\\n\xa1Trata de dejarlas caer!","Hit Storm Bubbles \\n to release 3 Thunders.":"Hit Storm Bubbles \\n to release 3 Thunders.","Bounce off walls \\n to drop bubbles!":"\xa1Rebota en las paredes\\npara dejar caer burbujas!","of_coins":"Of Coins","A Castle Of Coins":"Un Castillo de Monedas","A Kingdom Of Coins":"Un Reino de Monedas","A Bag Of Coins":"Una Bolsa de Monedas","A Chest Of Coins":"Un Cofre de Monedas","you_have_received":"Has recibido","you_have_canceled_payment":"\xa1Has cancelado el pago!","there_was_an_error_during_the_payment_please_try_again":"Se ha producido un error\\ndurante el pago.\\nPor favor,\\nint\xe9ntalo de nuevo.","ok":"OK","Drag to aim, Release to shoot!\\nHit the same color balls!":"\xa1Arrast para apuntar,\\nlanzar para disparar!\\n \xa1Golpea las mismas bolas de color!","shop_is_currently_empty_please_comeback_later":"Shop is currently empty.\\nPlease comeback later!","offline_bonus":"Recompensa sin conexi\xf3n","claim_x_{X}":"RECLAMAR X{X}","level_{X}":"Nivel {X}","get":"GET","you_have_received_the_rewards":"You have received the rewards","please_come_back_after_{X}":"Please come back after {X}","limited_time_reward_{X}_watch_{Y}_video_to_receive_rewards":"Limited-time reward {X}nWatch {Y} video to receive rewards.","{X}_more":"{X}%\\nMore","Black Friday":"Black Friday","1_day":"1 day","you_have_been_away_for_1_day_you_get_a_bonus_bubble_for_each_day_you_are_away":"Has faltado 1 d\xeda. \\nRecibir\xe1s una burbuja extra por cada d\xeda que faltes.","remove_popup_ads_30_days":"Eliminar anuncios emergentes 30 d\xedas","usd":"USD"},"Texture":{"empty_2_{abc}":"empty_2_{abc}"}}'),
						id: JSON.parse('{"Text":{"unlimited":"Tak terbatas","shop":"TOKO","invite":"UNDANGAN","daily":"HARIAN","daily_spin":"Putaran harian!","spin":"PUTAR!","goal":"TARGET","play":"MAINKAN","settings":"PENGATURAN","welcome_back":"Selamat datang kembali","you_have_been_away_for_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"Kamu belum bermain selama {X} hari. \\nKamu mendapatkan satu bonus gelembung setiap hari kamu tidak bermain!","you_have_been_away_for_more_than_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"Kamu belum bermain selama lebih dari {X} hari. \\nKamu mendapatkan satu bonus gelembung setiap hari kamu tidak bermain!","daily_bonus":"Bonus Harian","today":"Hari Ini","day_{X}":"Hari {X}","{X}_bomb":"{X}+Bom","claim":"KLAIM","pop_bubbles":"Pecahkan gelembung!","season_{X}":"Season {X}","activate":"Aktifkan","premium_pass":"Pas Premium","free":"GRATIS","premium":"Premium","you_have_passed_all_levels_we_will_update_soon":"Kamu telah melalui semua level. Kami akan segera memperbarui!","get_spin":"DAPATKAN PUTARAN!","sorry_no_rewards_you_have_cancelled_the_ad":"Maaf, Tidak Ada Hadiah!\\n Kamu telah membatalkan iklan!","can_not_load_new_level":"Tidak bisa memuat level baru!","can_not_load_new_level_please_restart_game":"Tidak dapat memuat level baru!\\\\nSilakan mulai ulang game.","loading_ads":"Memuat iklan...","loading":"Memuat...","no_ads_to_display":"Tidak ada iklan untuk ditampilkan","store":"Toko","Starter Bundle":"Bundel Awal","show_more":"Tampilkan lebih banyak","Expert Bundle":"Bundel Ahli","remove":"Remove","popup_ads":"Popup Ads","{X}_days":"{X} days","show_less":"Tampilkan lebih sedikit","remove_ads":"Hapus Iklan!","play_bubble_pop_classic_without_popup_ads_in_30_days":"Mainkan Bubble Pop Classic\\ntanpa Iklan Popup\\nselama 30 hari!","do_not_show_again":"Jangan tampilkan lagi","buy_now":"BELI SEKARANG","there_was_an_error_while_loading_level_please_try_again_later":"Ada kesalahan memuat level.\\nSilakan coba lagi nanti.","watch_a_video_to_get_{X}_coins":"Tonton video\\nuntuk mendapatkan \\n{X} koin!","get_now":"DAPATKAN SEKARANG!","no_thanks":"Tidak, terima kasih","pause":"JEDA","sound":"Suara","music":"Musik","on":"HIDUP","off":"MATI","retry":"COBA LAGI","back":"KEMBALI","resume":"LANJUTKAN","vibrate":"Bergetar","cancel":"BATALKAN","bomb":"Bom","Removes everything in a radius of 2!":"Singkirkan apa pun dalam radius 2!","buy":"BELI","not_enough_coin":"Koin tidak cukup","rainbow":"Pelangi","Rainbow can be matched with any bubbles!":"Pelangi bisa dicocokkan dengan gelembung mana pun!","electric":"Elektrik","Removes a row of everything!":"Menyingkirkan satu baris apa pun!","rocket":"Roket","Removes everything in its way!":"Menyingkirkan apa pun yang menghalangi!","out_of_bubbles":"GELEMBUNG HABIS!","collect_gems":"Kumpulkan Permata","play_on":"Mainkan","continue":"LANJUTKAN","level":"Level","level_failed":"LEVEL GAGAL","pop_all_bubbles":"Pecahkan Semua Gelembung","score":"SKOR","next":"BERIKUTNYA","click_to_skip_animation":"Klik untuk melewatkan animasi","combo_x_{X}":"Kombo\\nx {X}","Drag to aim, \\n Release to shoot!":"Seret untuk mengarahkan,\\nlepaskan untuk menembak!","Tap here \\n to switch bubbles!":"Ketuk di sini untuk menukar gelembung!","Drop 20+ bubbles \\n to charge The Bomb Booster!":"Jatuhkan 20+ gelembung\\nuntuk mengisi Booster Bom!","Click The Bomb Booster icon \\n to use it.":"Klik ikon Booster Bom\\nuntuk menggunakannya.","Hit a Dynamite Bubble \\n to explode \\n the surrounding bubbles.":"Kenai Gelembung Dinamit\\nuntuk meledakkan\\ngelembung di sekitarnya.","Thunder Bubbles \\n remove random bubbles.":"Gelembung Geledek\\nmenyingkirkan gelembung acak.","Collect Gems \\n by matching same bubbles!":"Kumpulkan Permata\\ndengan mencocokkan gelembung yang sama!","Match bubbles 7 times in a row \\n to charge The Rocket Booster!":"Cocokkan gelembung 7 kali berturut-turut untuk mengisi Booster Roket!","Click The Rocket Booster icon \\n to use it.":"Klik ikon Booster Roket\\nuntuk menggunakannya.","{X}_bubbles_left":"{X} gelembung tersisa!","Soap Bubbles copy the color \\n of nearby matches.":"Gelembung Sabun meniru \\nwarna gelembung di dekatnya.","The Rainbow Booster is unlocked. \\n Unlimited use on this level only!":"Booster Pelangi terbuka.\\nPengunaan tak terbatas hanya \\ndi level ini!","The Rainbow Booster \\n can be matched with any color.":"Booster Pelangi\\nbisa dicocokkan dengan\\nwarna apa pun.","Don\'t forget to use this item!":"Jangan lupa gunakan item ini!","Hit Pots with any bubbles \\n to break them.":"Kenai Pot\\ndengan gelembung apa pun\\nuntuk memecahkannya.","The Electric Booster is unlocked. \\n Unlimited use on this level only!":"Booster Elektrik terbuka. Penggunaan tak terbatas hanya di level ini!","The Electric Booster \\n remove a row of bubbles.":"Booster Elektrik\\nmenyingkirkan satu baris gelembung.","Hit Electric Bubbles \\n to remove a row of bubbles.":"Kenai Gelembung Elektrik\\nuntuk menyingkirkan\\nsatu baris gelembung.","Metal Balls can\'t be matched. \\n Try to drop them!":"Bola Logam tidak bisa dicocokkan.\\nCoba jatuhkan!","Rope holds up other bubbles. \\n Pop the center bubbles \\n of the Rope.":"Tali menahan gelembung lain.\\nPecahkan gelembung di\\ntengah-tengah Tali.","Hit Compass Arrow \\n to blast in its way.":"Kenai Panah Kompas\\nagar meledak di jalurnya.","Black Hole \\n sucks unmatched bubbles \\n that are shot close to it.":"Lubang Hitam mengisap\\ngelembung yang tidak cocok yang\\nditembakkan di dekatnya.","Hit FireFly Flasks\\n  to remove 3 random bubbles.":"Kenai FireFly Flask\\nuntuk menyingkirkan\\n3 gelembung acak.","Double Color Bubbles \\n must be matched twice.":"Gelembung Warna Ganda\\nharus dicocokkan dua kali.","Color Bomb \\n changes color of \\n nearby bubbles randomly.":"Bom Warna\\nmengubah warna gelembung\\ndi dekatnya secara acak.","Spider Web can be removed \\n with a match.":"Jaring Laba-laba \\nbisa disingkirkan\\ndengan gelembung yang sesuai.","Switch Black Hole \\n switch between On and Off \\n sucking bubble states.":"Tukar Lubang Hitam\\nberalih antara status Hidup dan \\nMati gelembung pengisap","QuestionMark Bubbles \\n change color every turn.":"Gelembung TandaTanya\\nberubah warna di setiap giliran.","When Plant Shells close, \\n you can\'t match them.":"Saat Tempurung Tanaman \\ntertutup, kamu tidak \\nbisa mencocokkannya.","Hit or match around Leaves \\n to reveal what\'s behind.":"Kenai atau cocokkan di sekitar \\nDaun untuk mengungkap\\nyang ada di baliknya.","When Bats drop, \\n they fly to another place. \\n Try to pop them.":"Saat Kelelawar jatuh,\\nmereka terbang ke tempat lain.\\nCoba pecahkan mereka.","When you hit \\n +1 or -1 Bubble, \\n you will gain or lose 1 move.":"Saat kamu mengenai Gelembung \\n +1 atau -1, kamu akan mendapatkan\\natau kehilangan 1 gerakan.","Spider will cover bubbles \\n with Spider Web every turn.":"Laba-laba akan menutupi \\n gelembung dengan Jaring \\nLaba-laba di setiap giliran.","Hit Stone with any bubble twice \\n to break it.":"Kenai Batu dengan \\ngelembung apa pun dua kali\\nuntuk memecahkannya.","Beetle will cover bubbles \\n with Bush every turn.":"Kumbang akan menutupi \\ngelembung dengan Semak \\ndi setiap giliran.","Shoot through the Empty Bubble \\n to break them.":"Tembak \\nmelalui Gelembung Kosong \\nuntuk memecahkannya.","Mirror Bubbles \\n become the same color \\n as the bubble you\'re shooting.":"Gelembung Cermin berubah menjadi\\nwarna yang sama dengan gelembung\\nyang kamu tembak.","Slate Stone can\'t be matched. \\n Try to drop them!":"Batu Sabak tidak bisa dicocokkan.\\nCoba jatuhkan!","Hit Storm Bubbles \\n to release 3 Thunders.":"Hit Storm Bubbles \\n to release 3 Thunders.","Bounce off walls \\n to drop bubbles!":"Pantulkan ke tembok\\nuntuk menjatuhkan gelembung!","of_coins":"Of Coins","A Castle Of Coins":"Satu Kastel Koin","A Kingdom Of Coins":"Satu Kerajaan Koin","A Bag Of Coins":"Satu Kantung Koin","A Chest Of Coins":"Satu Peti Koin","you_have_received":"Kamu telah menerima","you_have_canceled_payment":"Kamu telah membatalkan pembayaran!","there_was_an_error_during_the_payment_please_try_again":"Terjadi kesalahan selama pembayaran! Silakan coba lagi.","ok":"OK","Drag to aim, Release to shoot!\\nHit the same color balls!":"Seret untuk membidik,\\nlepaskan untuk menembak! Tekan \\nbola dengan warna yang sama!","shop_is_currently_empty_please_comeback_later":"Shop is currently empty.\\nPlease comeback later!","offline_bonus":"Hadiah Luring","claim_x_{X}":"KLAIM X{X}","level_{X}":"Level {X}","get":"GET","you_have_received_the_rewards":"You have received the rewards","please_come_back_after_{X}":"Please come back after {X}","limited_time_reward_{X}_watch_{Y}_video_to_receive_rewards":"Limited-time reward {X}nWatch {Y} video to receive rewards.","{X}_more":"{X}%\\nMore","Black Friday":"Black Friday","1_day":"1 day","you_have_been_away_for_1_day_you_get_a_bonus_bubble_for_each_day_you_are_away":"Kamu belum bermain selama 1 hari. \\nKamu mendapatkan satu bonus gelembung setiap hari kamu tidak bermain!","remove_popup_ads_30_days":"Hapus Iklan Popup 30 hari","usd":"usd"},"Texture":{"empty_2_{abc}":"empty_2_{abc}"}}'),
						it: JSON.parse('{"Text":{"unlimited":"Illimitato","shop":"NEGOZIO","invite":"INVITA","daily":"QUOTIDIANO","daily_spin":"Rotazione giornaliera!","spin":"RUOTA!","goal":"OBIETTIVO","play":"GIOCA","settings":"IMPOSTAZIONI","welcome_back":"Bentornato","you_have_been_away_for_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"Sei stato via per {X} giorni. \\nOttieni una bolla bonus per ogni giorno che sei via!","you_have_been_away_for_more_than_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"Sei stato via per pi\xf9 di {X} giorni. \\nOttieni una bolla bonus per ogni giorno che sei via!","daily_bonus":"Bonus giornaliero","today":"Oggi","day_{X}":"Giorno {X}","{X}_bomb":"{X}+Bomba","claim":"RIVENDICA","pop_bubbles":"Scoppia le bolle!","season_{X}":"Season {X}","activate":"Attiva","premium_pass":"Premium Pass","free":"GRATUITO","premium":"Premium","you_have_passed_all_levels_we_will_update_soon":"Hai superato tutti i livelli. Ti aggiorneremo presto!","get_spin":"OTTENIENI ROTAZIONE!","sorry_no_rewards_you_have_cancelled_the_ad":"Spiacente, nessuna ricompensa!\\n Hai cancellato l\'annuncio!","can_not_load_new_level":"Non \xe8 possibile caricare il nuovo livello!","can_not_load_new_level_please_restart_game":"Impossibile caricare il nuovo livello!\\\\nRiavvia il gioco.","loading_ads":"Caricamento annunci\u2026","loading":"Caricamento...","no_ads_to_display":"Nessun annuncio da visualizzare","store":"Negozio","Starter Bundle":"Pacchetto principiante","show_more":"Mostra di pi\xf9","Expert Bundle":"Pacchetto esperto","remove":"Remove","popup_ads":"Popup Ads","{X}_days":"{X} days","show_less":"Mostra meno","remove_ads":"Rimuovi gli annunci!","play_bubble_pop_classic_without_popup_ads_in_30_days":"Gioca Bubble Pop Classic\\nsenza annunci popup\\nper 30 giorni!","do_not_show_again":"Non mostrare pi\xf9","buy_now":"ACQUISTA ORA","there_was_an_error_while_loading_level_please_try_again_later":"Si \xe8 verificato un errore durante\\nil caricamento del livello.\\nRiprova pi\xf9 tardi.","watch_a_video_to_get_{X}_coins":"Guarda un video\\nper ottenere \\n{X} monete!","get_now":"OTTIENI SUBITO!","no_thanks":"No, grazie","pause":"PAUSA","sound":"Suono","music":"Musica","on":"ATTIVATO","off":"DISATTIVATO","retry":"RIPROVA","back":"INDIETRO","resume":"RIPRENDI","vibrate":"Vibra","cancel":"ANNULLA","bomb":"Bomba","Removes everything in a radius of 2!":"Rimuove tutto in un raggio di 2!","buy":"ACQUISTA","not_enough_coin":"Monete insufficenti","rainbow":"Arcobaleno","Rainbow can be matched with any bubbles!":"L\'arcobaleno pu\xf2 essere abbinato con qualsiasi bolla!","electric":"Elettrico","Removes a row of everything!":"Rimuove una fila di qualsiasi cosa!","rocket":"Razzo","Removes everything in its way!":"Rimuove tutto nel suo percorso!","out_of_bubbles":"BOLLE ESAURITE!","collect_gems":"Raccogli Le Gemme","play_on":"GIOCA su","continue":"CONTINUA","level":"Livello","level_failed":"LIVELLO NON RIUSCITO","pop_all_bubbles":"Scoppia Tutte Le Bolle","score":"PUNTEGGIO","next":"AVANTI","click_to_skip_animation":"Fai clic per saltare l\'animazione","combo_x_{X}":"Combo\\nx {X}","Drag to aim, \\n Release to shoot!":"Trascina per mirare,\\nrilascia per sparare!","Tap here \\n to switch bubbles!":"Tocca qui \\nper scambiare le bolle!","Drop 20+ bubbles \\n to charge The Bomb Booster!":"Scoppia 20+ bolle \\n per caricare il Booster Bomba!","Click The Bomb Booster icon \\n to use it.":"Fare clic sull\'icona Booster Bomba\\nper usarlo.","Hit a Dynamite Bubble \\n to explode \\n the surrounding bubbles.":"Colpisci una bolla di dinamite\\nper far esplodere \\nle bolle circostanti.","Thunder Bubbles \\n remove random bubbles.":"Il fulmine rimuove bolle casuali.","Collect Gems \\n by matching same bubbles!":"Raccogli le gemme\\nabbinando le bolle uguali!","Match bubbles 7 times in a row \\n to charge The Rocket Booster!":"Abbina le bolle 7 volte di fila \\nper caricare il Booster Razzo!","Click The Rocket Booster icon \\n to use it.":"Fai clic sull\'icona Booster Razzo\\nper usarlo.","{X}_bubbles_left":"{X} bolle rimaste!","Soap Bubbles copy the color \\n of nearby matches.":"Le bolle di sapone copiano \\nil colore di abbinamenti vicini.","The Rainbow Booster is unlocked. \\n Unlimited use on this level only!":"Il Booster Arcobaleno \\n\xe8 sbloccato. Uso\\nillimitato solo su questo livello!","The Rainbow Booster \\n can be matched with any color.":"Il Booster Arcobaleno\\npu\xf2 essere abbinato con\\nqualsiasi colore.","Don\'t forget to use this item!":"Non dimenticare \\ndi usare questo oggetto!","Hit Pots with any bubbles \\n to break them.":"Colpisci le pentole\\ncon qualsiasi bollae per romperle.","The Electric Booster is unlocked. \\n Unlimited use on this level only!":"Il Booster Elettrico \xe8 sbloccato.\\nUso illimitato solo su questo livello!","The Electric Booster \\n remove a row of bubbles.":"Il Booster Elettrico\\nrimuove una fila di bolle.","Hit Electric Bubbles \\n to remove a row of bubbles.":"Colpisci le bolle elettriche\\nper rimuovere una fila di bolle.","Metal Balls can\'t be matched. \\n Try to drop them!":"Le sfere di metallo\\nnon possono essere abbinate.\\nProva a farle cadere!","Rope holds up other bubbles. \\n Pop the center bubbles \\n of the Rope.":"La corda regge altre bolle.\\nFai scoppiare le bolle centrali \\ndella corda.","Hit Compass Arrow \\n to blast in its way.":"Colpisci la freccia della bussola\\nper far esplodere \\nle bolle circostanti.","Black Hole \\n sucks unmatched bubbles \\n that are shot close to it.":"Il buco nero succhia \\n le bolle non abbinate che vengono \\n sparate vicino ad esso.","Hit FireFly Flasks\\n  to remove 3 random bubbles.":"Colpisci le boccette con le lucciole\\nper rimuovere 3 bolle casuali.","Double Color Bubbles \\n must be matched twice.":"Le bolle a doppio colore\\ndevono essere abbinate due volte.","Color Bomb \\n changes color of \\n nearby bubbles randomly.":"La bomba di colore cambia \\nil colore delle bolle vicine a caso.","Spider Web can be removed \\n with a match.":"La ragnatela pu\xf2 essere rimossa\\ncon un fiammifero.","Switch Black Hole \\n switch between On and Off \\n sucking bubble states.":"L\'interruttore buco nero\\nattiva o disattiva il risucchio.","QuestionMark Bubbles \\n change color every turn.":"Le bolle con il punto interrogativo\\ncambiano colore ogni turno.","When Plant Shells close, \\n you can\'t match them.":"Quando i gusci delle piante\\nsi chiudono, non puoi abbinali.","Hit or match around Leaves \\n to reveal what\'s behind.":"Colpisci o abbina le foglie\\nper rivelare cosa c\'\xe8 dietro.","When Bats drop, \\n they fly to another place. \\n Try to pop them.":"Quando i pipistrelli cadono,\\nvolano verso un altro posto.\\nProva a farli scoppiare.","When you hit \\n +1 or -1 Bubble, \\n you will gain or lose 1 move.":"Quando colpisci una bolla +1 o -1,\\nguadagnerai o perderai 1 mossa.","Spider will cover bubbles \\n with Spider Web every turn.":"Il ragno coprir\xe0 le bolle\\ncon ragnatele ogni turno.","Hit Stone with any bubble twice \\n to break it.":"Colpisci la pietra\\ncon qualsiasi bolla due volte\\nper romperla.","Beetle will cover bubbles \\n with Bush every turn.":"Lo scarafaggio coprir\xe0 le bolle\\ncon un cespuglio ogni turno.","Shoot through the Empty Bubble \\n to break them.":"Spara attraverso la bolla vuota\\nper romperla.","Mirror Bubbles \\n become the same color \\n as the bubble you\'re shooting.":"Le bolle specchio\\ndiventano dello stesso colore\\ndella bolla che stai sparando.","Slate Stone can\'t be matched. \\n Try to drop them!":"La pietra di ardesia\\nnon pu\xf2 essere abbinata.\\nProva a farla cadere!","Hit Storm Bubbles \\n to release 3 Thunders.":"Hit Storm Bubbles \\n to release 3 Thunders.","Bounce off walls \\n to drop bubbles!":"Rimbalza sui muri\\nper far cadere le bolle!","of_coins":"Of Coins","A Castle Of Coins":"Un castello di monete","A Kingdom Of Coins":"Un regno di monete","A Bag Of Coins":"Un sacchetto di monete","A Chest Of Coins":"Una cassa di monete","you_have_received":"Hai ricevuto","you_have_canceled_payment":"Hai annullato il pagamento!","there_was_an_error_during_the_payment_please_try_again":"Si \xe8 verificato un errore durante il pagamento! Per favore, riprova.","ok":"OK","Drag to aim, Release to shoot!\\nHit the same color balls!":"Trascina per mirare,\\nrilascia per sparare! Colpisci \\nle palline dello stesso colore!","shop_is_currently_empty_please_comeback_later":"Shop is currently empty.\\nPlease comeback later!","offline_bonus":"Premi Offline","claim_x_{X}":"RIVENDICA X{X}","level_{X}":"Livello {X}","get":"GET","you_have_received_the_rewards":"You have received the rewards","please_come_back_after_{X}":"Please come back after {X}","limited_time_reward_{X}_watch_{Y}_video_to_receive_rewards":"Limited-time reward {X}nWatch {Y} video to receive rewards.","{X}_more":"{X}%\\nMore","Black Friday":"Black Friday","1_day":"1 day","you_have_been_away_for_1_day_you_get_a_bonus_bubble_for_each_day_you_are_away":"Sei stato via per 1 giorno. \\nOttieni una bolla bonus per ogni giorno che sei via!","remove_popup_ads_30_days":"Rimuove gli annunci popup per 30 giorni","usd":"usd"},"Texture":{"empty_2_{abc}":"empty_2_{abc}"}}'),
						pt: JSON.parse('{"Text":{"unlimited":"Ilimitado","shop":"LOJA","invite":"CONVIDAR","daily":"DI\xc1RIO","daily_spin":"Giro di\xe1rio!","spin":"GIRAR!","goal":"OBJECTIVO","play":"JOGAR","settings":"DEFINI\xc7\xd5ES","welcome_back":"Bem-vindo de volta","you_have_been_away_for_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"Estiveste ausente {X} dias. Recebes uma bolha de b\xf3nus por cada dia que est\xe1s fora!","you_have_been_away_for_more_than_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"Estiveste ausente por mais de \\n {X} dias. Recebes uma bolha de b\xf3nus por cada dia que est\xe1s fora!","daily_bonus":"B\xf3nus di\xe1rio","today":"Hoje","day_{X}":"Dia {X}","{X}_bomb":"{X}+Bomba","claim":"RECLAMAR","pop_bubbles":"Estoura bolhas!","season_{X}":"Season {X}","activate":"Activar","premium_pass":"Passe Premium","free":"GR\xc1TIS","premium":"Premium","you_have_passed_all_levels_we_will_update_soon":"Ultrapassaste todos os n\xedveis. Actualizaremos em breve!","get_spin":"GANHAR GIRO!","sorry_no_rewards_you_have_cancelled_the_ad":"Desculpa, n\xe3o h\xe1 recompensas!\\n Cancelaste o an\xfancio!","can_not_load_new_level":"N\xe3o se pode carregar um novo n\xedvel!","can_not_load_new_level_please_restart_game":"N\xe3o \xe9 poss\xedvel carregar o novo n\xedvel!\\nPor favor, reinicie o jogo.","loading_ads":"A carregar an\xfancios...","loading":"A carregar...","no_ads_to_display":"Sem an\xfancios a exibir","store":"Loja","Starter Bundle":"Pacote inicial","show_more":"Mostrar mais","Expert Bundle":"Pacote Especialista","remove":"Remove","popup_ads":"Popup Ads","{X}_days":"{X} days","show_less":"Mostrar menos","remove_ads":"Remover an\xfancios!","play_bubble_pop_classic_without_popup_ads_in_30_days":"Joga Bubble Pop Classic\\nsem An\xfancios popup\\nem 30 dias!","do_not_show_again":"N\xe3o mostrar novamente","buy_now":"COMPRAR AGORA","there_was_an_error_while_loading_level_please_try_again_later":"Ocorreu um erro\\nao carregar o n\xedvel.\\nPor favor,\\ntenta novamente mais tarde.","watch_a_video_to_get_{X}_coins":"V\xea um v\xeddeo\\npara conseguir \\n{X} moedas!","get_now":"CONSEGUE AGORA!","no_thanks":"N\xe3o, obrigado","pause":"PAUSAR","sound":"Som","music":"M\xfasica","on":"LIGADO","off":"DESLIGADO","retry":"TENTAR NOVAMENTE","back":"VOLTAR","resume":"RETOMAR","vibrate":"Vibrar","cancel":"CANCELAR","bomb":"Bomba","Removes everything in a radius of 2!":"Remove tudo num raio de 2!","buy":"COMPRAR","not_enough_coin":"N\xe3o h\xe1 moedas suficientes","rainbow":"Arco-\xedris","Rainbow can be matched with any bubbles!":"O Arco-\xedris pode ser combinado com quaisquer bolhas!","electric":"El\xe9ctrico","Removes a row of everything!":"Remove uma fileira de tudo!","rocket":"Foguete","Removes everything in its way!":"Remove tudo no seu caminho!","out_of_bubbles":"SEM BOLHAS!","collect_gems":"Recolhe Gemas","play_on":"JOGAR em","continue":"CONTINUAR","level":"N\xedvel","level_failed":"FALHOU O N\xcdVEL","pop_all_bubbles":"Estoura Todas as Bolhas","score":"PONTUA\xc7\xc3O","next":"PR\xd3XIMO","click_to_skip_animation":"Clica para pular a anima\xe7\xe3o","combo_x_{X}":"Combo\\nx {X}","Drag to aim, \\n Release to shoot!":"Arrasta para apontar,\\nlarga para disparar!","Tap here \\n to switch bubbles!":"Toca aqui para trocar bolhas!","Drop 20+ bubbles \\n to charge The Bomb Booster!":"Larga mais de 20 bolhas \\npara carregar  O Amplificador \\nde Bomba!","Click The Bomb Booster icon \\n to use it.":"Clica no \xedcone do \\nAmplificador de Bomba para us\xe1-lo.","Hit a Dynamite Bubble \\n to explode \\n the surrounding bubbles.":"Bate numa bolha Dinamite\\npara explodir\\nas bolhas circundantes.","Thunder Bubbles \\n remove random bubbles.":"As Bolhas Trov\xe3o\\nremovem bolhas aleat\xf3rias.","Collect Gems \\n by matching same bubbles!":"Recolhe Gemas\\ncombinando as mesmas bolhas!","Match bubbles 7 times in a row \\n to charge The Rocket Booster!":"Combina bolhas 7 vezes \\n seguidas para carregar o Propulsor de Foguete!","Click The Rocket Booster icon \\n to use it.":"Clica no \xedcone do \\nPropulsor de Foguete\\npara us\xe1-lo.","{X}_bubbles_left":"Ficam {X} bolhas!","Soap Bubbles copy the color \\n of nearby matches.":"As Bolhas Sab\xe3o copiam a cor das\\ncorrespond\xeancias pr\xf3ximas.","The Rainbow Booster is unlocked. \\n Unlimited use on this level only!":"O Potenciador Arco-\xedris \\nest\xe1 desbloqueado. Uso \\nilimitado apenas neste n\xedvel!","The Rainbow Booster \\n can be matched with any color.":"O Potenciador Arco-\xedris pode ser\\n combinado com qualquer cor.","Don\'t forget to use this item!":"N\xe3o esque\xe7as \\nde usar este item!","Hit Pots with any bubbles \\n to break them.":"Bate nos Potes com \\nquaisquer bolhas para as quebrar.","The Electric Booster is unlocked. \\n Unlimited use on this level only!":"O Impulsionador El\xe9ctrico \\nest\xe1 desbloqueado. Uso \\nilimitado apenas neste n\xedvel!","The Electric Booster \\n remove a row of bubbles.":"O Impulsionador El\xe9ctrico \\n remove uma fileira de bolhas.","Hit Electric Bubbles \\n to remove a row of bubbles.":"Bate nas Bolhas El\xe9ctricas \\n para remover uma fileira de bolhas.","Metal Balls can\'t be matched. \\n Try to drop them!":"As Bolas de Metal\\nn\xe3o podem ser combinadas.\\nTenta larg\xe1-las!","Rope holds up other bubbles. \\n Pop the center bubbles \\n of the Rope.":"A Corda segura outras bolhas.\\nRebenta as bolhas do centro \\nda Corda.","Hit Compass Arrow \\n to blast in its way.":"Bate na Flecha B\xfassola\\npara abrir caminho.","Black Hole \\n sucks unmatched bubbles \\n that are shot close to it.":"O Buraco Negro\\nsuga bolhas sem correspond\xeancia \\nque s\xe3o disparadas perto dele.","Hit FireFly Flasks\\n  to remove 3 random bubbles.":"Bate em Frascos de Pirilampos\\npara remover 3 bolhas aleat\xf3rias.","Double Color Bubbles \\n must be matched twice.":"As Bolhas de Cor Dupla devem ser\\ncombinadas duas vezes.","Color Bomb \\n changes color of \\n nearby bubbles randomly.":"A Bomba de Cor muda a cor das\\nbolhas pr\xf3ximas \\n de forma aleat\xf3ria.","Spider Web can be removed \\n with a match.":"A Teia de Aranha\\npode ser removida\\ncom uma correspond\xeancia.","Switch Black Hole \\n switch between On and Off \\n sucking bubble states.":"Ativa e desativa o Buraco Negro\\npara sugar bolhas.","QuestionMark Bubbles \\n change color every turn.":"As Bolhas de Interroga\xe7\xe3o\\nmudam de cor a cada turno.","When Plant Shells close, \\n you can\'t match them.":"Quando as Conchas Vegetais \\nfecham, n\xe3o se podem combinar.","Hit or match around Leaves \\n to reveal what\'s behind.":"Bate ou combina em torno\\ndas Folhas para\\nrevelar o que est\xe1 por tr\xe1s.","When Bats drop, \\n they fly to another place. \\n Try to pop them.":"Quando os Morcegos caem,\\neles voam para outro lugar.\\nTenta estour\xe1-los.","When you hit \\n +1 or -1 Bubble, \\n you will gain or lose 1 move.":"Quando bates + 1 ou -1 bolha,\\nganhas ou perdes 1 movimento.","Spider will cover bubbles \\n with Spider Web every turn.":"A Aranha cobrir\xe1 as bolhas \\ncom Teia de Aranha a cada vez.","Hit Stone with any bubble twice \\n to break it.":"Bate duas vezes na Pedra com \\nqualquer bolha para a quebrar.","Beetle will cover bubbles \\n with Bush every turn.":"O Escaravelho cobrir\xe1 as bolhas\\ncom Arbusto a cada vez.","Shoot through the Empty Bubble \\n to break them.":"Atira atrav\xe9s da Bolha Vazia\\npara as quebrar.","Mirror Bubbles \\n become the same color \\n as the bubble you\'re shooting.":"As Bolhas\\nde Espelho tornam-se da mesma cor\\nque a bolha que est\xe1s a disparar.","Slate Stone can\'t be matched. \\n Try to drop them!":"A Pedra de Ard\xf3sia\\nn\xe3o pode ser combinada.\\nTenta larg\xe1-las!","Hit Storm Bubbles \\n to release 3 Thunders.":"Hit Storm Bubbles \\n to release 3 Thunders.","Bounce off walls \\n to drop bubbles!":"Quica das paredes\\npara deixar cair bolhas!","of_coins":"Of Coins","A Castle Of Coins":"Um Castelo de Moedas","A Kingdom Of Coins":"Um Reino de Moedas","A Bag Of Coins":"Um Saco de Moedas","A Chest Of Coins":"Um Cofre de Moedas","you_have_received":"Recebeste","you_have_canceled_payment":"Cancelaste o pagamento!","there_was_an_error_during_the_payment_please_try_again":"Houve um erro durante o pagamento! Por favor, tenta novamente.","ok":"OK","Drag to aim, Release to shoot!\\nHit the same color balls!":"Arraste para mirar,\\nlibere para atirar!\\nBata nas mesmas bolas coloridas!","shop_is_currently_empty_please_comeback_later":"Shop is currently empty.\\nPlease comeback later!","offline_bonus":"Recompensa Offline","claim_x_{X}":"RECLAMAR X{X}","level_{X}":"N\xedvel {X}","get":"GET","you_have_received_the_rewards":"You have received the rewards","please_come_back_after_{X}":"Please come back after {X}","limited_time_reward_{X}_watch_{Y}_video_to_receive_rewards":"Limited-time reward {X}nWatch {Y} video to receive rewards.","{X}_more":"{X}%\\nMore","Black Friday":"Black Friday","1_day":"1 day","you_have_been_away_for_1_day_you_get_a_bonus_bubble_for_each_day_you_are_away":"Estiveste ausente 1 dia. Recebes uma bolha de b\xf3nus por cada dia que est\xe1s fora!","remove_popup_ads_30_days":"Remover an\xfancios popup 30 dias","usd":"USD"},"Texture":{"empty_2_{abc}":"empty_2_{abc}"}}'),
						ja: JSON.parse('{"Text":{"unlimited":"\u7121\u5236\u9650","shop":"\u30b7\u30e7\u30c3\u30d7","invite":"\u62db\u5f85\u3059\u308b","daily":"\u30c7\u30a4\u30ea\u30fc","daily_spin":"\u30c7\u30a4\u30ea\u30fc\u30b9\u30d4\u30f3\uff01","spin":"\u30b9\u30d4\u30f3!","goal":"\u76ee\u6a19","play":"\u30d7\u30ec\u30a4","settings":"\u8a2d\u5b9a","welcome_back":"\u304a\u304b\u3048\u308a\u306a\u3055\u3044","you_have_been_away_for_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"\u4e0d\u5728\u671f\u9593\uff1a{X} \u65e5\u3002\u4e0d\u5728\u3057\u3066\u3044\u305f \u65e5\u6570\u5206\u306e \u30dc\u30fc\u30ca\u30b9\u30d0\u30d6\u30eb\u3092\u3069\u3046\u305e\uff01","you_have_been_away_for_more_than_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"\u4e0d\u5728\u671f\u9593\uff1a\\n{X} \u65e5\u4ee5\u4e0a\u3002\u4e0d\u5728\u3057\u3066\u3044\u305f \u65e5\u6570\u5206\u306e \u30dc\u30fc\u30ca\u30b9\u30d0\u30d6\u30eb\u3092\u3069\u3046\u305e\uff01","daily_bonus":"\u30c7\u30a4\u30ea\u30fc\u30dc\u30fc\u30ca\u30b9","today":"\u4eca\u65e5","day_{X}":"\u65e5 {X}","{X}_bomb":"{X}+\u7206\u5f3e","claim":"\u53d7\u3051\u53d6\u308b","pop_bubbles":"\u30d0\u30d6\u30eb\u3092\u6d88\u305d\u3046\uff01","season_{X}":"Season {X}","activate":"\u6709\u52b9\u306b\u3059\u308b","premium_pass":"\u30d7\u30ec\u30df\u30a2\u30e0\u30d1\u30b9","free":"\u7121\u6599","premium":"\u30d7\u30ec\u30df\u30a2\u30e0","you_have_passed_all_levels_we_will_update_soon":"\u3059\u3079\u3066\u306e\u30ec\u30d9\u30eb\\n\u3092\u5b8c\u4e86\u3057\u307e\u3057\u305f\u3002 \u8fd1\u65e5\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u307e\u3059\uff01","get_spin":"\u30b9\u30d4\u30f3\\n\u3092\u5165\u624b\u3059\u308b!","sorry_no_rewards_you_have_cancelled_the_ad":"\u30ea\u30ef\u30fc\u30c9\u306f\u3042\u308a\u307e\u305b\u3093\uff01\\n\u5e83\u544a\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3057\u307e\u3057\u305f\uff01","can_not_load_new_level":"\u65b0\u3057\u3044\u30ec\u30d9\u30eb\\n\u3092\u8aad\u307f\u8fbc\u3081\u307e\u305b\u3093\uff01","can_not_load_new_level_please_restart_game":"\u65b0\u3057\u3044\u30ec\u30d9\u30eb\\n\u3092\u30ed\u30fc\u30c9\u3067\u304d\u307e\u305b\u3093!\\n\u30b2\u30fc\u30e0\u3092\\n\u518d\u8d77\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\u3002","loading_ads":"\u5e83\u544a\u3092\u8aad\u307f\u8fbc\u307f\u4e2d...","loading":"\u8aad\u307f\u8fbc\u307f\u4e2d...","no_ads_to_display":"\u8868\u793a\u3067\u304d\\n\u308b\u5e83\u544a\u306f\u3042\u308a\u307e\u305b\u3093","store":"\u30b9\u30c8\u30a2","Starter Bundle":"\u30b9\u30bf\u30fc\u30bf\u30fc\u30d0\u30f3\u30c9\u30eb","show_more":"\u3082\u3063\u3068 \u8868\u793a\u3059\u308b","Expert Bundle":"\u30a8\u30ad\u30b9\u30d1\u30fc\u30c8\u30d0\u30f3\u30c9\u30eb","remove":"Remove","popup_ads":"Popup Ads","{X}_days":"{X} days","show_less":"\u8868\u793a\u3092 \u5236\u9650\u3059\u308b","remove_ads":"\u5e83\u544a\u3092\u524a\u9664\u3059\u308b\uff01","play_bubble_pop_classic_without_popup_ads_in_30_days":"30 \u306b\u3061\u304b\u3093\u30dd\u30c3\\n\u30d7\u30a2\u30c3\u30d7\u5e83\u544a\u306a\u3057\u3067 \\n\u300e\u30d0\u30d6\u30eb\u30fb\u30dd\u30c3\u30d7\u30fb\u30af\u30e9\u30b7\u30c3\u30af\u300f\\n\u3092\u30d7\u30ec\u30a4\u3057\u307e\u3057\u3087\u3046\uff01","do_not_show_again":"\u6b21\u304b\u3089\u8868\u793a\u3057\u306a\u3044","buy_now":"\u4eca\u3059\u3050\u8cfc\u5165","there_was_an_error_while_loading_level_please_try_again_later":"\u30ec\u30d9\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u4e2d\u306b \\n\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\\n\u307e\u305f\u5f8c\u3067\u8a66\u3057\u3066\u304f\u3060\u3055\u3044\u3002","watch_a_video_to_get_{X}_coins":"\u52d5\u753b\u3092\u8996\u8074\u3057\u3066\u30b3\u30a4\u30f3 \\n{X} \u679a\u3092\u3092\u7372\u5f97\u3057\u307e\u3057\u3087\u3046\uff01","get_now":"\u4eca\u3059\u3050\u30b2\u30c3\u30c8\uff01","no_thanks":"\u65ad\u308b","pause":"\u30dd\u30fc\u30ba","sound":"\u30b5\u30a6\u30f3\u30c9","music":"BGM","on":"\u30aa\u30f3","off":"\u30aa\u30d5","retry":"\u518d\u6311\u6226","back":"\u623b\u308b","resume":"\u30b2\u30fc\u30e0\u306b\u623b\u308b","vibrate":"\u632f\u52d5","cancel":"\u30ad\u30e3\u30f3\u30bb\u30eb","bomb":"\u7206\u5f3e","Removes everything in a radius of 2!":"\u534a\u5f84 2 \u4ee5\u5185\u306e\\n\u5168\u3066\u3092\u6d88\u3057\u307e\u3059\uff01","buy":"\u8cfc\u5165\u3059\u308b","not_enough_coin":"\u30b3\u30a4\u30f3\u304c\u8db3\u308a\u307e\u305b\u3093","rainbow":"\u8679","Rainbow can be matched with any bubbles!":"\u8679\u306f\u3069\\n\u3093\u306a\u30d0\u30d6\u30eb\u3068\u3082 \\n\u30de\u30c3\u30c1\u3067\u304d\u307e\u3059\uff01","electric":"\u96fb\u6483","Removes a row of everything!":"1 \u5217\u4e38\u3054\\n\u3068\u6d88\u3057\u307e\u3059\uff01","rocket":"\u30ed\u30b1\u30c3\u30c8","Removes everything in its way!":"\u9032\u8def\u306b\u3042\u308b\u3082\\n\u306e\u3059\u3079\u3066\u3092\u6d88\u3057\u307e\u3059\uff01","out_of_bubbles":"\u30d0\u30d6\u30eb\u5207\u308c\uff01","collect_gems":"\u30b8\u30a7\u30e0\u3092\u96c6\u3081\u3088\u3046","play_on":"\u30d7\u30ec\u30a4 \u3092\u7d9a\u3051\u308b","continue":"\u7d9a\u3051\u308b","level":"\u30ec\u30d9\u30eb","level_failed":"\u30ec\u30d9\u30eb\u5931\u6557","pop_all_bubbles":"\u30d0\u30d6\u30eb\u3092\u3059\u3079\u3066\u6d88\u305d\u3046","score":"\u30b9\u30b3\u30a2","next":"\u6b21\u3078","click_to_skip_animation":"\u30af\u30ea\u30c3\u30af\u3057\u3066\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u30b9\u30ad\u30c3\u30d7","combo_x_{X}":"\u30b3\u30f3\u30dc \\nx {X}","Drag to aim, \\n Release to shoot!":"\u30c9\u30e9\u30c3\u30b0\u3057\u3066\u72d9\u3044\u3001\\n\u653e\u3057\u3066\u6483\u3064\uff01","Tap here \\n to switch bubbles!":"\u3053\u3053\u3092\u30bf\u30c3\u30d7\u3057\u3066\u30d0\u30d6\u30eb\u3092\u5207\u66ff\uff01","Drop 20+ bubbles \\n to charge The Bomb Booster!":"20 \u500b\u4ee5\u4e0a\u306e\u30d0\u30d6\u30eb\u3092\u843d\u3068\u3057\u3066 \\n\u7206\u5f3e\u30d6\u30fc\u30b9\u30bf\u30fc\u3092\u30c1\u30e3\u30fc\u30b8\u3057\u307e\u3057\u3087\u3046\uff01","Click The Bomb Booster icon \\n to use it.":"\u7206\u5f3e\u30d6\u30fc\u30b9\u30bf\u30fc\u306e\u30a2\u30a4\u30b3\u30f3\\n\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002","Hit a Dynamite Bubble \\n to explode \\n the surrounding bubbles.":"\u30c0\u30a4\u30ca\u30de\u30a4\u30c8\u30d0\u30d6\u30eb\u306b\u5f53\u3066\u3066\\n\u5468\u56f2\u306e\u30d0\u30d6\u30eb\u3092\u7206\u767a\u3055\u305b\u307e\u3057\u3087\u3046\u3002","Thunder Bubbles \\n remove random bubbles.":"\u96f7\u30d0\u30d6\u30eb\u306f\u30e9\u30f3\u30c0\u30e0\u306a\\n \u30d0\u30d6\u30eb\u3092\u6d88\u3057\u307e\u3059\u3002","Collect Gems \\n by matching same bubbles!":"\u540c\u3058\u30d0\u30d6\u30eb\u3092\u30de\u30c3\u30c1\u3055\u305b\u3066\\n \u30b8\u30a7\u30e0\u3092\u7372\u5f97\u3057\u307e\u3057\u3087\u3046\uff01","Match bubbles 7 times in a row \\n to charge The Rocket Booster!":"\u30d0\u30d6\u30eb\u3092 7 \u56de\u9023\u7d9a\u3067\u30de\u30c3\u30c1\u3055\u305b\u3066 \u30ed\u30b1\u30c3\u30c8\u30d6\u30fc\u30b9\u30bf\u30fc\u3092\u30c1\u30e3\u30fc\u30b8\u3057\u307e\u3057\u3087\u3046\uff01","Click The Rocket Booster icon \\n to use it.":"\u30ed\u30b1\u30c3\u30c8\u30d6\u30fc\u30b9\u30bf\u30fc\u306e\u30a2\u30a4\u30b3\u30f3\u3092\\n \u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002","{X}_bubbles_left":"\u30d0\u30d6\u30eb\u304c\u6b8b\u308a{X}\u500b\uff01","Soap Bubbles copy the color \\n of nearby matches.":"\u77f3\u3051\u3093\u30d0\u30d6\u30eb\u306f\\n \u4ed8\u8fd1\u3067\u30de\u30c3\u30c1\u3057\u305f\u8272\u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002","The Rainbow Booster is unlocked. \\n Unlimited use on this level only!":"\u8679\u30d6\u30fc\u30b9\u30bf\u30fc\u304c\u30a2\u30f3\u30ed\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\\n\u3053\u306e\u30ec\u30d9\u30eb\u3067\u306e\u307f\u7121\u5236\u9650\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\uff01","The Rainbow Booster \\n can be matched with any color.":"\u8679\u30d6\u30fc\u30b9\u30bf\u30fc\u306f\\n \u3069\u306e\u8272\u3068\u3082\u30de\u30c3\u30c1\u3067\u304d\u307e\u3059\u3002","Don\'t forget to use this item!":"\u3053\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u5fd8\u308c\u305a\u306b\u4f7f\u7528\u3057\u307e\u3057\u3087\u3046\uff01","Hit Pots with any bubbles \\n to break them.":"\u4efb\u610f\u306e\u30d0\u30d6\u30eb\u3092\u58fa\u306b\u5f53\u3066\u3066\\n \u58ca\u3057\u307e\u3057\u3087\u3046\u3002","The Electric Booster is unlocked. \\n Unlimited use on this level only!":"\u96fb\u6483\u30d6\u30fc\u30b9\u30bf\u30fc\u304c\u30a2\u30f3\u30ed\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\\n \u3053\u306e\u30ec\u30d9\u30eb\u3067\u306e\u307f\u7121\u5236\u9650\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\uff01","The Electric Booster \\n remove a row of bubbles.":"\u96fb\u6483\u30d6\u30fc\u30b9\u30bf\u30fc\u306f\\n \u30d0\u30d6\u30eb\u3092 1 \u5217\u4e38\u3054\u3068\u6d88\u3057\u307e\u3059\u3002","Hit Electric Bubbles \\n to remove a row of bubbles.":"\u96fb\u6483\u30d6\u30fc\u30b9\u30bf\u30fc\u306b\u5f53\u3066\u3066\\n \u30d0\u30d6\u30eb\u3092 1 \u5217\u4e38\u3054\u3068\u6d88\u3057\u307e\u3057\u3087\u3046\u3002","Metal Balls can\'t be matched. \\n Try to drop them!":"\u91d1\u5c5e\u7389\u306f\u30de\u30c3\u30c1\u3067\u304d\u307e\u305b\u3093\u3002\\n \u843d\u3068\u3057\u307e\u3057\u3087\u3046\uff01","Rope holds up other bubbles. \\n Pop the center bubbles \\n of the Rope.":"\u30ed\u30fc\u30d7\u306f\u4ed6\u306e\u30d0\u30d6\u30eb\u3092\u5f15\u3063\u639b\u3051\u307e\u3059\u3002\\n \u30ed\u30fc\u30d7\u306e\u4e2d\u592e\u306e\u30d0\u30d6\u30eb\u3092\u6d88\u3057\u307e\u3057\u3087\u3046\u3002","Hit Compass Arrow \\n to blast in its way.":"\u30b3\u30f3\u30d1\u30b9\u77e2\u5370\u306b\u5f53\u3066\\n\u3066\u305d\u306e\u65b9\u5411\u306b\u3042\u308b\u30d0\u30d6\\n\u30eb\u3092\u6d88\u3057\u307e\u3057\u3087\u3046\u3002","Black Hole \\n sucks unmatched bubbles \\n that are shot close to it.":"\u30d6\u30e9\u30c3\u30af\u30db\u30fc\u30eb\u306f\u9032\u8def\u4ed8\u8fd1\u306e\\n \u30de\u30c3\u30c1\u3057\u306a\u3044\u30d0\u30d6\u30eb\u3092\u5438\u3044\u8fbc\u307f\u307e\u3059\u3002","Hit FireFly Flasks\\n  to remove 3 random bubbles.":"\u30db\u30bf\u30eb\u30fb\u30d5\u30e9\u30b9\u30b3\u306b\u5f53\u3066\u3066\\n \u30e9\u30f3\u30c0\u30e0\u306a\u30d0\u30d6\u30eb\u3092 3 \u3064\u6d88\u3057\u307e\u3057\u3087\u3046\u3002","Double Color Bubbles \\n must be matched twice.":"\u30c0\u30d6\u30eb\u30ab\u30e9\u30fc\u306e\u30d0\u30d6\u30eb\u306f\\n 2 \u56de\u30de\u30c3\u30c1\u3055\u305b\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","Color Bomb \\n changes color of \\n nearby bubbles randomly.":"\u30ab\u30e9\u30fc\u30dc\u30e0\u306f\u4ed8\u8fd1\u306e\u30d0\u30d6\u30eb\u306e\u8272\u3092\\n \u30e9\u30f3\u30c0\u30e0\u306b\u5909\u3048\u307e\u3059\u3002","Spider Web can be removed \\n with a match.":"\u30af\u30e2\u306e\u7cf8\u306f\u30de\u30c3\u30c1\u3059\u308b\u30d0\u30d6\u30eb\u304b\u3089\\n \u53d6\u308a\u9664\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","Switch Black Hole \\n switch between On and Off \\n sucking bubble states.":"\u30d6\u30e9\u30c3\u30af\u30db\u30fc\u30eb\u30fb\u30b9\u30a4\u30c3\u30c1\u306f \\n\u30d0\u30d6\u30eb\u5438\u53ce\u306e\\n \u30aa\u30f3\u3068\u30aa\u30d5\u304c\u5207\u308a\u66ff\u308f\u308a\u307e\u3059\u3002","QuestionMark Bubbles \\n change color every turn.":"\u30cf\u30c6\u30ca\u30d0\u30d6\u30eb\u306f\\n \u30bf\u30fc\u30f3\u3054\u3068\u306b\u8272\u304c\u5909\u308f\u308a\u307e\u3059\u3002","When Plant Shells close, \\n you can\'t match them.":"\u690d\u7269\u306e\u6bbb\u304c\u9589\u3058\u308b\u3068\\n \u30de\u30c3\u30c1\u3067\u304d\u307e\u305b\u3093\u3002","Hit or match around Leaves \\n to reveal what\'s behind.":"\u8449\u306b\u5f53\u3066\u308b\u304b\u3001\\n\u305d\u306e\u5468\u8fba\u3067\u30de\u30c3\u30c1\u3055\u305b\u3066\\n \u4e2d\u8eab\u3092\u8868\u793a\u3055\u305b\u307e\u3057\u3087\u3046\u3002","When Bats drop, \\n they fly to another place. \\n Try to pop them.":"\u30b3\u30a6\u30e2\u30ea\u306f\u843d\u3061\u308b\u3068\\n \u5225\u306e\u5834\u6240\u3078\u98db\u3093\u3067\u3044\u304d\u307e\u3059\u3002\\n\u843d\u3068\u3055\u305a\u6d88\u3057\u307e\u3057\u3087\u3046\u3002","When you hit \\n +1 or -1 Bubble, \\n you will gain or lose 1 move.":"+1 \u307e\u305f\u306f -1 \u30d0\u30d6\u30eb\u306b\u5f53\u3066\u308b\u3068\\n\u30e0\u30fc\u30d6\u6570\u304c 1 \u5897\u6e1b\u3057\u307e\u3059\u3002","Spider will cover bubbles \\n with Spider Web every turn.":"\u30af\u30e2\u304c\u30bf\u30fc\u30f3\u3054\u3068\u306b\u30af\u30e2\u306e\u7cf8\u3067\\n \u30d0\u30d6\u30eb\u3092\u8986\u3044\u307e\u3059\u3002","Hit Stone with any bubble twice \\n to break it.":"\u4efb\u610f\u306e\u30d0\u30d6\u30eb\u3092\u77f3\u306b 2 \u56de\u5f53\u3066\u3066\\n \u58ca\u3057\u307e\u3057\u3087\u3046\u3002","Beetle will cover bubbles \\n with Bush every turn.":"\u7532\u866b\u304c\u30bf\u30fc\u30f3\u3054\u3068\u306b\u8302\u307f\u3067\\n \u30d0\u30d6\u30eb\u3092\u8986\u3044\u307e\u3059\u3002","Shoot through the Empty Bubble \\n to break them.":"\u7a7a\u767d\u30d0\u30d6\u30eb\u3092\u6483\u3061\u629c\u3044\u3066\\n \u58ca\u3057\u307e\u3057\u3087\u3046\u3002","Mirror Bubbles \\n become the same color \\n as the bubble you\'re shooting.":"\u93e1\u30d0\u30d6\u30eb\u306f\u6483\u3063\u305f\u30d0\u30d6\u30eb\u3068\\n \u540c\u3058\u8272\u306b\u306a\u308a\u307e\u3059\u3002","Slate Stone can\'t be matched. \\n Try to drop them!":"\u77f3\u677f\u306f\u30de\u30c3\u30c1\u3067\u304d\u307e\u305b\u3093\u3002\\n \u843d\u3068\u3057\u307e\u3057\u3087\u3046\uff01","Hit Storm Bubbles \\n to release 3 Thunders.":"Hit Storm Bubbles \\n to release 3 Thunders.","Bounce off walls \\n to drop bubbles!":"\u58c1\u306b\u30d0\u30a6\u30f3\u30c9\u3055\u305b\u3066\u30d0\\n\u30d6\u30eb\u3092\u843d\u3068\u3057\u307e\u3057\u3087\u3046\uff01","of_coins":"Of Coins","A Castle Of Coins":"\u30b3\u30a4\u30f3\u3044\u3063\u3071\u3044\u306e\\n\u57ce","A Kingdom Of Coins":"\u30b3\u30a4\u30f3\u3044\u3063\u3071\u3044\u306e\\n\u738b\u56fd","A Bag Of Coins":"\u30b3\u30a4\u30f3\u3044\u3063\u3071\u3044\u306e\\n\u888b","A Chest Of Coins":"\u30b3\u30a4\u30f3\u3044\u3063\u3071\u3044\u306e\\n\u5b9d\u7bb1","you_have_received":"\u7372\u5f97\uff1a","you_have_canceled_payment":"\u652f\u6255\u3044\u3092\\n\u30ad\u30e3\u30f3\u30bb\u30eb\u3057\u307e\u3057\u305f\uff01","there_was_an_error_during_the_payment_please_try_again":"\u652f\u6255\u3044\u4e2d\u306b\\n \u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\uff01\\n\u3082\u3046\u4e00\u5ea6\u8a66\u3057\u3066\u304f\u3060\u3055\u3044\u3002","ok":"OK","Drag to aim, Release to shoot!\\nHit the same color balls!":"\u72d9\u3044\u3092\u5b9a\u3081\u3066\u3001\\n\u64ae\u5f71\u3059\u308b\u305f\u3081\u306b\u30ea\u30ea\u30fc\u30b9\u3057\u3066\u304f\u3060\u3055\u3044\uff01\\n\u540c\u3058\u30ab\u30e9\u30fc\u30dc\u30fc\u30eb\u3092\u6253\u3064\uff01","shop_is_currently_empty_please_comeback_later":"Shop is currently empty.\\nPlease comeback later!","offline_bonus":"\u30aa\u30d5\u30e9\u30a4\u30f3\u7279\u5178","claim_x_{X}":"\u53d7\u3051\u53d6\u308b X{X}","level_{X}":"\u30ec\u30d9\u30eb {X}","get":"GET","you_have_received_the_rewards":"You have received the rewards","please_come_back_after_{X}":"Please come back after {X}","limited_time_reward_{X}_watch_{Y}_video_to_receive_rewards":"Limited-time reward {X}nWatch {Y} video to receive rewards.","{X}_more":"{X}%\\nMore","Black Friday":"Black Friday","1_day":"1 day","you_have_been_away_for_1_day_you_get_a_bonus_bubble_for_each_day_you_are_away":"\u4e0d\u5728\u671f\u9593\uff1a1 \u65e5\u3002\u4e0d\u5728\u3057\u3066\u3044\u305f \u65e5\u6570\u5206\u306e \u30dc\u30fc\u30ca\u30b9\u30d0\u30d6\u30eb\u3092\u3069\u3046\u305e\uff01","remove_popup_ads_30_days":"30 \u65e5\u9593\\n\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\\n\u5e83\u544a\u3092\u975e\u8868\u793a\u306b\u3059\u308b","usd":"\u7c73\u30c9\u30eb"},"Texture":{"empty_2_{abc}":"empty_2_{abc}"}}'),
						zh: JSON.parse('{"Text":{"unlimited":"\u65e0\u9650","shop":"\u5546\u5e97","invite":"\u9080\u8bf7","daily":"\u6bcf\u65e5","daily_spin":"\u6bcf\u65e5\u8f6c\u76d8!","spin":"\u8f6c\u76d8!","goal":"\u76ee\u6807","play":"\u5f00\u59cb","settings":"\u8bbe\u7f6e","welcome_back":"\u6b22\u8fce\u56de\u6765","you_have_been_away_for_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"\u60a8\u5df2\u79bb\u5f00{X}\u5929\u3002\u6bcf\u79bb\u5f00{X}\u5929\uff0c \u90fd\u53ef\u83b7\u5f97\u4e00\u4e2a \u798f\u5229\u6ce1\u6ce1\uff01","you_have_been_away_for_more_than_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"\u60a8\u5df2\u7d93\u96e2\u958b\u8d85\u904e {X}\u5929\u3002\\n\u6bcf\u79bb\u5f00{X}\u5929\uff0c \u90fd\u53ef\u83b7\u5f97\u4e00\u4e2a \u798f\u5229\u6ce1\u6ce1\uff01","daily_bonus":"\u6bcf\u65e5\u798f\u5229","today":"\u4eca\u65e5","day_{X}":"\u5929 {X}","{X}_bomb":"{X}+\u70b8\u5f39","claim":"\u9886\u53d6","pop_bubbles":"\u51fb\u7834\u6ce1\u6ce1\uff01","season_{X}":"Season {X}","activate":"\u6fc0\u6d3b","premium_pass":"\u9ad8\u7ea7\u901a\u884c\u8bc1","free":"\u514d\u8d39","premium":"\u9ad8\u7ea7","you_have_passed_all_levels_we_will_update_soon":"\u60a8\u5df2\u901a\u8fc7\u4e86\u6240\u6709\u5173\u5361\u3002 \u6211\u4eec\u4f1a\u5c3d\u5feb\u66f4\u65b0\uff01","get_spin":"\u83b7\u5f97\u8f6c\u76d8\u6b21\u6570!","sorry_no_rewards_you_have_cancelled_the_ad":"\u62b1\u6b49\uff0c\u6ca1\u6709\u5956\u52b1\uff01\\n \u4f60\u5df2\u53d6\u6d88\u5e7f\u544a\uff01","can_not_load_new_level":"\u65e0\u6cd5\u52a0\u8f7d\u65b0\u5173\u5361\uff01","can_not_load_new_level_please_restart_game":"\u65e0\u6cd5\u52a0\u8f7d\u65b0\u5173\u5361\uff01\\n\u8bf7\u91cd\u65b0\u542f\u52a8\u6e38\u620f\u3002","loading_ads":"\u52a0\u8f7d\u5e7f\u544a\u2026\u2026","loading":"\u6b63\u5728\u52a0\u8f7d\u2026\u2026","no_ads_to_display":"\u6ca1\u6709\u53ef\u663e\u793a\u7684\u5e7f\u544a","store":"\u5546\u5e97","Starter Bundle":"\u65b0\u624b\u5305","show_more":"\u663e\u793a\u66f4 \u591a\u5185\u5bb9","Expert Bundle":"\u9ad8\u624b\u5305","remove":"Remove","popup_ads":"Popup Ads","{X}_days":"{X} days","show_less":"\u663e\u793a\u66f4 \u5c11\u5185\u5bb9","remove_ads":"\u79fb\u9664\u5e7f\u544a\uff01","play_bubble_pop_classic_without_popup_ads_in_30_days":"\u6e38\u73a9\u6ca1\u6709\u5f39\u7a97\u5e7f\u544a\u7684 \\n\u300a\u7ecf\u5178\u6ce1\u6ce1\u5c04\u51fb\u300b\\n30\u5929\uff01","do_not_show_again":"\u4e0d\u518d\u63d0\u793a","buy_now":"\u7acb\u523b\u8d2d\u4e70","there_was_an_error_while_loading_level_please_try_again_later":"\u52a0\u8f7d\u5173\u5361\u65f6 \u51fa\u9519\u3002\u8bf7\u7a0d\u540e\u91cd\u8bd5\u3002","watch_a_video_to_get_{X}_coins":"\u89c2\u770b\u5e7f\u544a\u8d5a\u53d6 {X}\u91d1\u5e01\uff01","get_now":"\u7acb\u5373\u83b7\u5f97\uff01","no_thanks":"\u4e0d\uff0c\u8c22\u8c22","pause":"\u6682\u505c","sound":"\u58f0\u97f3","music":"\u97f3\u4e50","on":"\u5f00\u542f","off":"\u5173\u95ed","retry":"\u91cd\u8bd5","back":"\u8fd4\u56de","resume":"\u56de\u5230\u6e38\u620f","vibrate":"\u9707\u52a8","cancel":"\u53d6\u6d88","bomb":"\u70b8\u5f39","Removes everything in a radius of 2!":"\u79fb\u9664\u534a\u5f84\u4e3a2\u7684\u5706\\n\u5708\u5185\u6240\u6709\u6ce1\u6ce1!","buy":"\u8d2d\u4e70","not_enough_coin":"\u91d1\u5e01\u4e0d\u8db3","rainbow":"\u5f69\u8679","Rainbow can be matched with any bubbles!":"\u5f69\u8679\u53ef\u4ee5\u548c\u4efb\u4f55\u6ce1\u6ce1 \u914d\u5bf9!","electric":"\u7535\u6d41","Removes a row of everything!":"\u79fb\u9664\u4e00\u6761\u7ebf\u4e0a\u6240\u6709\u6ce1\u6ce1!","rocket":"\u706b\u7bad","Removes everything in its way!":"\u79fb\u9664\u8def\u5f84\u4e0a\u6240\u6709\u6ce1\u6ce1!","out_of_bubbles":"\u6ca1\u6709\u6ce1\u6ce1\u4e86\uff01","collect_gems":"\u6536\u96c6\u5b9d\u77f3","play_on":"\u7ee7\u7eed\u6e38\u620f","continue":"\u7ee7\u7eed","level":"\u5173\u5361","level_failed":"\u5173\u5361\u5931\u8d25","pop_all_bubbles":"\u6253\u7834\u6240\u6709\u6ce1\u6ce1","score":"\u5206\u6570","next":"\u4e0b\u4e00\u5173","click_to_skip_animation":"\u70b9\u51fb\u8df3\u8fc7\u52a8\u753b","combo_x_{X}":"Combo\\nx {X}","Drag to aim, \\n Release to shoot!":"\u62d6\u62fd\u7784\u51c6\uff0c\u677e\u5f00\u53d1\u5c04\uff01","Tap here \\n to switch bubbles!":"\u70b9\u51fb\u8fd9\u91cc\u5207\u6362\u6ce1\u6ce1\uff01","Drop 20+ bubbles \\n to charge The Bomb Booster!":"\u51fb\u843d20\u4e2a\u4ee5\u4e0a\u6ce1\u6ce1\u6765\u7ed9  \u70b8\u5f39\u5145\u80fd!","Click The Bomb Booster icon \\n to use it.":"\u70b9\u51fb\u70b8\u5f39\u56fe\u6807\u6765\u4f7f\u7528\u3002","Hit a Dynamite Bubble \\n to explode \\n the surrounding bubbles.":"\u51fb\u4e2d\u70b8\u836f\u6ce1\u6ce1\u6765\u70b8\u6389  \u5468\u56f4\u7684\u6ce1\u6ce1\u3002","Thunder Bubbles \\n remove random bubbles.":"\u96f7\u7535\u6ce1\u6ce1\u53ef\u4ee5\u79fb\u9664\u968f\u673a  \u6ce1\u6ce1\u3002","Collect Gems \\n by matching same bubbles!":"\u901a\u8fc7\u914d\u5bf9\u76f8\u540c\u7684\u6ce1\u6ce1\u6765\\n \u6536\u96c6\u73e0\u5b9d\uff01","Match bubbles 7 times in a row \\n to charge The Rocket Booster!":"\u8fde\u7eed\u914d\u5bf9\u6ce1\u6ce17\u6b21\u6765\u7ed9 \u706b\u7bad\u5145\u80fd\uff01","Click The Rocket Booster icon \\n to use it.":"\u70b9\u51fb\u706b\u7bad\u56fe\u6807\u6765\u4f7f\u7528\u3002","{X}_bubbles_left":"\u8fd8\u5269{X}\u4e2a\u6ce1\u6ce1\uff01","Soap Bubbles copy the color \\n of nearby matches.":"\u80a5\u7682\u6ce1\u6ce1\u53ef\u4ee5\u590d\u5236\u9644\u8fd1\u5339\u914d\u6ce1\u6ce1\u7684\\n \u989c\u8272\u3002","The Rainbow Booster is unlocked. \\n Unlimited use on this level only!":"\u89e3\u9501\u4e86\u5f69\u8679\u3002\u53ea\u80fd\u5728\u672c\u5173\u65e0\u9650\u4f7f\u7528!","The Rainbow Booster \\n can be matched with any color.":"\u5f69\u8679\u53ef\u4ee5\u548c\u4efb\u4f55\u989c\u8272\u7684\\n \u6ce1\u6ce1\u914d\u5bf9\u3002","Don\'t forget to use this item!":"\u522b\u5fd8\u4e86\u4f7f\u7528\u9053\u5177\uff01","Hit Pots with any bubbles \\n to break them.":"\u58f6\u53ef\u4ee5\u7528\u4efb\u4f55\u989c\u8272\u7684\u6ce1\u6ce1\\n \u51fb\u7834\u3002","The Electric Booster is unlocked. \\n Unlimited use on this level only!":"\u89e3\u9501\u4e86\u7535\u6d41\u3002\\n \u53ea\u80fd\u5728\u672c\u5173\u65e0\u9650\u4f7f\u7528\uff01","The Electric Booster \\n remove a row of bubbles.":"\u7535\u6d41\u53ef\u4ee5\u79fb\u9664\\n \u4e00\u6761\u7ebf\u4e0a\u6240\u6709\u6ce1\u6ce1\u3002","Hit Electric Bubbles \\n to remove a row of bubbles.":"\u51fb\u4e2d\u7535\u6d41\u6ce1\u6ce1\u6765\u79fb\u9664\\n \u4e00\u6761\u7ebf\u4e0a\u6240\u6709\u6ce1\u6ce1\u3002","Metal Balls can\'t be matched. \\n Try to drop them!":"\u91d1\u5c5e\u7403\u4e0d\u80fd\u914d\u5bf9\u3002\u8bd5\u7740\u628a\u5b83\u4eec\u51fb\u843d\uff01","Rope holds up other bubbles. \\n Pop the center bubbles \\n of the Rope.":"\u7ef3\u5b50\u652f\u6491\u7740\u5176\u4ed6\u6ce1\u6ce1\u3002\\n \u51fb\u7834\u7ef3\u5b50\u4e2d\u5fc3\u7684\u6ce1\u6ce1\u3002","Hit Compass Arrow \\n to blast in its way.":"\u51fb\u4e2d\u6307\u5357\u9488\u7bad\u5934\\n\u6765\u70b8\u6389\u6240\u6307\u65b9\u5411\u7684\u6ce1\u6ce1\u3002","Black Hole \\n sucks unmatched bubbles \\n that are shot close to it.":"\u9ed1\u6d1e\u53ef\u4ee5\u5438\u5165\u53d1\u5c04\u5230\u5176\u9644\u8fd1\u7684\\n \u4e0d\u5339\u914d\u7684\u6ce1\u6ce1\u3002","Hit FireFly Flasks\\n  to remove 3 random bubbles.":"\u51fb\u4e2d\u8424\u706b\u866b\u74f6\u6765\u79fb\u9664\\n 3\u4e2a\u968f\u673a\u6c14\u6ce1\u3002","Double Color Bubbles \\n must be matched twice.":"\u53cc\u8272\u6ce1\u6ce1\u5fc5\u987b \u914d\u5bf9\u4e24\u6b21\u3002","Color Bomb \\n changes color of \\n nearby bubbles randomly.":"\u989c\u8272\u70b8\u5f39\u53ef\u4ee5\u968f\u673a\u6539\u53d8\\n \u9644\u8fd1\u6ce1\u6ce1\u7684\u989c\u8272\u3002","Spider Web can be removed \\n with a match.":"\u8718\u86db\u7f51\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u914d\u5bf9\\n \u6765\u79fb\u9664\u3002","Switch Black Hole \\n switch between On and Off \\n sucking bubble states.":"\u5207\u6362\u9ed1\u6d1e\u5f00\u5173\u6765\u9009\u62e9\\n \u662f\u5426\u5438\u5165\u6ce1\u6ce1\u3002","QuestionMark Bubbles \\n change color every turn.":"\u95ee\u53f7\u6ce1\u6ce1\u6bcf\u56de\u5408 \u90fd\u6539\u53d8\u989c\u8272\u3002","When Plant Shells close, \\n you can\'t match them.":"\u690d\u7269\u5916\u58f3\u95ed\u5408\u65f6\uff0c\u5916\u58f3\u91cc\u7684\u6ce1\u6ce1\\n \u65e0\u6cd5\u914d\u5bf9\u3002","Hit or match around Leaves \\n to reveal what\'s behind.":"\u547d\u4e2d\u6216\u914d\u5bf9\u6811\u53f6\u5468\u56f4\u7684\u6ce1\u6ce1\\n \u4f7f\u5176\u4e2d\u7684\u6ce1\u6ce1\u9732\u51fa\u3002","When Bats drop, \\n they fly to another place. \\n Try to pop them.":"\u8759\u8760\u88ab\u51fb\u843d\u65f6\uff0c\u4f1a\u98de\u5230\\n \u53e6\u4e00\u4e2a\u5730\u65b9\u3002\u8bd5\u7740\u6253\u7834\u5b83\u4eec\u3002","When you hit \\n +1 or -1 Bubble, \\n you will gain or lose 1 move.":"\u51fb\u4e2d+1\u6ce1\u6ce1\u6216-1\u6ce1\u6ce1\u65f6\uff0c\u4f60\u4f1a\\n \u83b7\u5f97\u6216\u5931\u53bb1\u4e2a\u53ef\u7528\u6ce1\u6ce1\u3002","Spider will cover bubbles \\n with Spider Web every turn.":"\u8718\u86db\u6bcf\u56de\u5408\u90fd\u4f1a\u7528 \u8718\u86db\u7f51\u8986\u76d6\u6ce1\u6ce1\u3002","Hit Stone with any bubble twice \\n to break it.":"\u7528\u4efb\u610f\u6ce1\u6ce1\u51fb\u4e2d\u77f3\u5934 \u4e24\u6b21\u6765\u51fb\u788e\u5b83\u3002","Beetle will cover bubbles \\n with Bush every turn.":"\u7532\u866b\u6bcf\u56de\u5408\u90fd\u4f1a\u7528 \u704c\u6728\u8986\u76d6\u6ce1\u6ce1\u3002","Shoot through the Empty Bubble \\n to break them.":"\u51fb\u7a7f\u900f\u660e\u6ce1\u6ce1\u6765 \u6253\u7834\u5b83\u4eec\u3002","Mirror Bubbles \\n become the same color \\n as the bubble you\'re shooting.":"\u955c\u5b50\u6ce1\u6ce1\u4f1a\u53d8\u6210\\n \u4f60\u53d1\u5c04\u7684\u6ce1\u6ce1\u7684\u989c\u8272\u3002","Slate Stone can\'t be matched. \\n Try to drop them!":"\u77f3\u677f\u4e0d\u80fd\u914d\u5bf9\u3002 \u8bd5\u7740\u628a\u5b83\u4eec\u51fb\u843d!","Hit Storm Bubbles \\n to release 3 Thunders.":"Hit Storm Bubbles \\n to release 3 Thunders.","Bounce off walls \\n to drop bubbles!":"\u5229\u7528\u5899\u58c1\u53cd\u5f39\u6765\u51fb\u843d\u6ce1\u6ce1!","of_coins":"Of Coins","A Castle Of Coins":"\u4e00\u57ce\u91d1\u5e01","A Kingdom Of Coins":"\u4e00\u56fd\u91d1\u5e01","A Bag Of Coins":"\u4e00\u5305\u91d1\u5e01","A Chest Of Coins":"\u4e00\u7bb1\u91d1\u5e01","you_have_received":"\u60a8\u6536\u5230\u4e86","you_have_canceled_payment":"\u60a8\u5df2\u53d6\u6d88\u4e86\u652f\u4ed8!","there_was_an_error_during_the_payment_please_try_again":"\u652f\u4ed8\u65f6\\n\u51fa\u9519\uff01\u8bf7\u7a0d\u540e\u518d\u8bd5\u3002","ok":"OK","Drag to aim, Release to shoot!\\nHit the same color balls!":"\u62d6\u52a8\u7784\u51c6\uff0c\u91ca\u653e\u5c04\u51fb\uff01\\n\u51fb\u4e2d\u76f8\u540c\u7684\u989c\u8272\u7403!","shop_is_currently_empty_please_comeback_later":"Shop is currently empty.\\nPlease comeback later!","offline_bonus":"\u7ebf\u4e0b\u5956\u52b1","claim_x_{X}":"\u9886\u53d6 X{X}","level_{X}":"\u5173\u5361 {X}","get":"GET","you_have_received_the_rewards":"You have received the rewards","please_come_back_after_{X}":"Please come back after {X}","limited_time_reward_{X}_watch_{Y}_video_to_receive_rewards":"Limited-time reward {X}nWatch {Y} video to receive rewards.","{X}_more":"{X}%\\nMore","Black Friday":"Black Friday","1_day":"1 day","you_have_been_away_for_1_day_you_get_a_bonus_bubble_for_each_day_you_are_away":"\u60a8\u5df2\u79bb\u5f001\u5929\u3002\u6bcf\u79bb\u5f001\u5929\uff0c \u90fd\u53ef\u83b7\u5f97\u4e00\u4e2a \u798f\u5229\u6ce1\u6ce1\uff01","remove_popup_ads_30_days":"\u79fb\u9664\u5f39\u7a97\u5e7f\u544a30\u5929","usd":"USD"},"Texture":{"empty_2_{abc}":"empty_2_{abc}"}}'),
						tr: JSON.parse('{"Text":{"unlimited":"S\u0131n\u0131rs\u0131z","shop":"MA\u011eAZA","invite":"DAVET ET","daily":"G\xdcNL\xdcK","daily_spin":"G\xfcnl\xfck \u015fans!","spin":"\xc7EVIR!","goal":"HEDEF","play":"OYNA","settings":"AYARLAR","welcome_back":"Tekrar ho\u015f geldin","you_have_been_away_for_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"{X} g\xfcn yoksun. Olmad\u0131\u011f\u0131n her \\ng\xfcn i\xe7in bir bonus baloncuk!","you_have_been_away_for_more_than_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"{X} g\xfcnden uzun s\xfcredir yoksunuz. \\nOlmad\u0131\u011f\u0131n her g\xfcn i\xe7in bir bonus baloncuk!","daily_bonus":"G\xfcnl\xfck Bonus","today":"Bug\xfcn","day_{X}":"G\xfcn {X}","{X}_bomb":"{X}+Bomba","claim":"AL","pop_bubbles":"Baloncuklar\u0131 patlat!","season_{X}":"Season {X}","activate":"Etkinle\u015ftir","premium_pass":"Premium Pass","free":"\xdcCRETSIZ","premium":"Premium","you_have_passed_all_levels_we_will_update_soon":"T\xfcm seviyeleri ge\xe7tin. Yak\u0131nda g\xfcncelleyece\u011fiz!","get_spin":"D\xd6ND\xdcR!","sorry_no_rewards_you_have_cancelled_the_ad":"\xdczg\xfcn\xfcm, \xd6d\xfcl Yok!\\n Reklam\u0131 iptal ettin!","can_not_load_new_level":"Yeni seviye y\xfcklenemiyor!","can_not_load_new_level_please_restart_game":"Yeni seviye y\xfcklenemiyor!\\nL\xfctfen oyunu yeniden ba\u015flat\u0131n.","loading_ads":"Reklam y\xfckleniyor\u2026","loading":"Y\xfckleniyor\u2026","no_ads_to_display":"G\xf6r\xfcnt\xfclenecek reklam yok","store":"Ma\u011faza","Starter Bundle":"Ba\u015flang\u0131\xe7 Paketi","show_more":"Daha fazla g\xf6ster","Expert Bundle":"Uzman Paketi","remove":"Remove","popup_ads":"Popup Ads","{X}_days":"{X} days","show_less":"Daha az g\xf6ster","remove_ads":"Reklamlar\u0131 kald\u0131r!","play_bubble_pop_classic_without_popup_ads_in_30_days":"30 g\xfcn \\nboyunca reklams\u0131z\\n Bubble Pop Classic oyna!","do_not_show_again":"Bir daha g\xf6sterme","buy_now":"\u015e\u0130MD\u0130 SATIN AL","there_was_an_error_while_loading_level_please_try_again_later":"Seviye y\xfcklenirken hata olu\u015ftu. \\nL\xfctfen daha sonra tekrar dene.","watch_a_video_to_get_{X}_coins":"{X} para kazanmak\\ni\xe7in video izle!","get_now":"HEMEN AL!","no_thanks":"Hay\u0131r, te\u015fekk\xfcrler","pause":"DURAKLAT","sound":"Ses","music":"M\xfczik","on":"A\xc7IK","off":"KAPALI","retry":"YENIDEN DENE","back":"GERI","resume":"DEVAM ET","vibrate":"Titre\u015fim","cancel":"\u0130PTAL","bomb":"Bomba","Removes everything in a radius of 2!":"2 yar\u0131\xe7ap\u0131ndaki her \u015feyi yok eder!","buy":"SATIN AL","not_enough_coin":"Yeterli para yok","rainbow":"G\xf6kku\u015fa\u011f\u0131","Rainbow can be matched with any bubbles!":"G\xf6kku\u015fa\u011f\u0131 t\xfcm kabarc\u0131klarla e\u015fle\u015fir!","electric":"Elektrik","Removes a row of everything!":"Her \u015feyin bir sat\u0131r\u0131n\u0131 yok eder!","rocket":"Roket","Removes everything in its way!":"Yoluna \xe7\u0131kan her \u015feyi yok eder!","out_of_bubbles":"BALONCUKLAR B\u0130TT\u0130!","collect_gems":"M\xfccevherleri Topla","play_on":"OYNA","continue":"DEVAM","level":"Seviye","level_failed":"SEV\u0130YE BA\u015eARISIZ","pop_all_bubbles":"T\xfcm Baloncuklar\u0131 Patlat","score":"SKOR","next":"SONRAK\u0130","click_to_skip_animation":"Animasyonu atlamak i\xe7in t\u0131kla","combo_x_{X}":"Kombo\\nx {X}","Drag to aim, \\n Release to shoot!":"Ni\u015fan almak i\xe7in s\xfcr\xfckle, \\nate\u015f etmek i\xe7in b\u0131rak!","Tap here \\n to switch bubbles!":"Baloncuklar\u0131 de\u011fi\u015ftirmek i\xe7in buraya dokun!","Drop 20+ bubbles \\n to charge The Bomb Booster!":"Bombay\u0131 doldurmak i\xe7in \\nen az 20 baloncuk d\xfc\u015f\xfcr!","Click The Bomb Booster icon \\n to use it.":"Bombay\u0131 kullanmak \\ni\xe7in bomba simgesine t\u0131kla.","Hit a Dynamite Bubble \\n to explode \\n the surrounding bubbles.":"Dinamit baloncu\u011fu vurarak \\netraf\u0131ndaki baloncuklar\u0131\\npatlatabilirsin.","Thunder Bubbles \\n remove random bubbles.":"Y\u0131ld\u0131r\u0131m kabarc\u0131klar \\nbaloncuklar\u0131 rastgele patlat\u0131r.","Collect Gems \\n by matching same bubbles!":"Ayn\u0131 kabarc\u0131klar\u0131 e\u015fle\u015ftirerek m\xfccevherleri topla!","Match bubbles 7 times in a row \\n to charge The Rocket Booster!":"Roketi doldurmak i\xe7in \\n7 kabarc\u0131\u011f\u0131 tek s\u0131rada e\u015fle\u015ftir!","Click The Rocket Booster icon \\n to use it.":"Roketi kullanmak i\xe7in roket simgesine t\u0131kla.","{X}_bubbles_left":"{X} baloncuk kald\u0131!","Soap Bubbles copy the color \\n of nearby matches.":"Sabun K\xf6p\xfckleri \\netraf\u0131ndakilerin rengini kopyalar.","The Rainbow Booster is unlocked. \\n Unlimited use on this level only!":"G\xf6kku\u015fa\u011f\u0131 kilidi a\xe7\u0131ld\u0131 - Sadece bu seviyede s\u0131n\u0131rs\u0131z kullan\u0131m!","The Rainbow Booster \\n can be matched with any color.":"G\xf6kku\u015fa\u011f\u0131 t\xfcm renklerle\\ne\u015fle\u015ftirilebilir.","Don\'t forget to use this item!":"Bunu kullanmay\u0131 unutma!","Hit Pots with any bubbles \\n to break them.":"Testileri herhangi bir kabarc\u0131kla\\nk\u0131rabilirsin.","The Electric Booster is unlocked. \\n Unlimited use on this level only!":"Elektri\u011fin kilidi a\xe7\u0131ld\u0131. \\nSadece bu seviyede s\u0131n\u0131rs\u0131z kullan\u0131m!","The Electric Booster \\n remove a row of bubbles.":"Elektrik bir s\u0131ra balocu\u011fu patlat\u0131r.","Hit Electric Bubbles \\n to remove a row of bubbles.":"Elektrik kabarc\u0131klar\u0131n\u0131 \\nvurarak bir s\u0131ra\\nbaloncu\u011fu patlatabilirsin.","Metal Balls can\'t be matched. \\n Try to drop them!":"Metal toplar e\u015fle\u015ftirilemez.\\nOnlar\u0131 d\xfc\u015f\xfcrmeye \xe7al\u0131\u015f!","Rope holds up other bubbles. \\n Pop the center bubbles \\n of the Rope.":"\u0130p di\u011fer baloncuklar\u0131 tutar. \\n\u0130pin orta baloncuklar\u0131n\u0131 patlat.","Hit Compass Arrow \\n to blast in its way.":"Pusula okunu vurarak \\no y\xf6ndekileri patlat.","Black Hole \\n sucks unmatched bubbles \\n that are shot close to it.":"Kara Delik yak\u0131n\u0131ndaki e\u015fle\u015fmemi\u015f \\nbaloncuklar\u0131 emer.","Hit FireFly Flasks\\n  to remove 3 random bubbles.":"Rastgele 3 baloncu\u011fu yok etmek \\ni\xe7in ate\u015fb\xf6ceklerini kullan.","Double Color Bubbles \\n must be matched twice.":"\xc7ift Renkli Baloncuklar \\niki renkle de e\u015fle\u015fmelidir.","Color Bomb \\n changes color of \\n nearby bubbles randomly.":"Renk Bombas\u0131 yak\u0131n\u0131ndaki\\nbaloncuklar\u0131n \\nrengini rastgele de\u011fi\u015ftirir.","Spider Web can be removed \\n with a match.":"\xd6r\xfcmcek A\u011f\u0131 \\ne\u015fle\u015fme ile yok edilebilir.","Switch Black Hole \\n switch between On and Off \\n sucking bubble states.":"Baloncuk emme durumunu \\nde\u011fi\u015ftirmek i\xe7in Kara Deli\u011fi \\na\xe7 veya kapat.","QuestionMark Bubbles \\n change color every turn.":"Soru i\u015fareti baloncuklar\u0131\\nher seferinde renk de\u011fi\u015ftirir.","When Plant Shells close, \\n you can\'t match them.":"Bitki kabuklar\u0131 kapand\u0131\u011f\u0131nda\\nonlar\u0131 e\u015fle\u015ftiremezsin.","Hit or match around Leaves \\n to reveal what\'s behind.":"Arkas\u0131ndakini g\xf6rmek \\ni\xe7in yapraklar\u0131n etraf\u0131ndan dola\u015f.","When Bats drop, \\n they fly to another place. \\n Try to pop them.":"Yarasalar d\xfc\u015ft\xfc\u011f\xfcnde\\nba\u015fka yere u\xe7arlar. \\nOnlar\u0131 patlatmaya \xe7al\u0131\u015f.","When you hit \\n +1 or -1 Bubble, \\n you will gain or lose 1 move.":"+1 veya -1 balocu\u011funu vurdu\u011funda\\n1 hamle kazanacak\\nveya kaybedeceksin.","Spider will cover bubbles \\n with Spider Web every turn.":"\xd6r\xfcmcek,\\nbaloncuklar\u0131 \xf6r\xfcmcek a\u011f\u0131yla kaplar.","Hit Stone with any bubble twice \\n to break it.":"Ta\u015f\u0131 k\u0131rabilmek \\ni\xe7in herhangi bir balocukla \\niki kere vurman gerek.","Beetle will cover bubbles \\n with Bush every turn.":"U\u011furb\xf6ce\u011fi, \\nbaloncuklar\u0131 \xe7al\u0131l\u0131kla kaplar.","Shoot through the Empty Bubble \\n to break them.":"Onlar\u0131 patlatmak i\xe7in bo\u015f \\nbaloncu\u011fun aras\u0131ndan ate\u015f et.","Mirror Bubbles \\n become the same color \\n as the bubble you\'re shooting.":"Ayna baloncuklar ate\u015f etti\u011fin \\nbaloncu\u011fun rengine d\xf6n\xfc\u015f\xfcr.","Slate Stone can\'t be matched. \\n Try to drop them!":"Ta\u015f tahta e\u015fle\u015ftirilemez. \\nOnlar\u0131 d\xfc\u015f\xfcrmeye \xe7al\u0131\u015f!","Hit Storm Bubbles \\n to release 3 Thunders.":"Hit Storm Bubbles \\n to release 3 Thunders.","Bounce off walls \\n to drop bubbles!":"Baloncuklar\u0131 d\xfc\u015f\xfcrmek i\xe7in \\nduvarlardan z\u0131plat!","of_coins":"Of Coins","A Castle Of Coins":"Para Kalesi","A Kingdom Of Coins":"Para Krall\u0131\u011f\u0131","A Bag Of Coins":"Para \xc7antas\u0131","A Chest Of Coins":"Para Sand\u0131\u011f\u0131","you_have_received":"Ald\u0131n","you_have_canceled_payment":"\xd6demeyi iptal ettin!","there_was_an_error_during_the_payment_please_try_again":"\xd6deme s\u0131ras\u0131nda hata olu\u015ftu! L\xfctfen tekrar dene.","ok":"OK","Drag to aim, Release to shoot!\\nHit the same color balls!":"Ni\u015fan almak i\xe7in s\xfcr\xfckleyin, \\nate\u015f etmek i\xe7in b\u0131rak\u0131n! \\nAyn\u0131 renk toplar\u0131 vur!","shop_is_currently_empty_please_comeback_later":"Shop is currently empty.\\nPlease comeback later!","offline_bonus":"\xc7evrimd\u0131\u015f\u0131 \xd6d\xfcl","claim_x_{X}":"AL X{X}","level_{X}":"Seviye {X}","get":"GET","you_have_received_the_rewards":"You have received the rewards","please_come_back_after_{X}":"Please come back after {X}","limited_time_reward_{X}_watch_{Y}_video_to_receive_rewards":"Limited-time reward {X}nWatch {Y} video to receive rewards.","{X}_more":"{X}%\\nMore","Black Friday":"Black Friday","1_day":"1 day","you_have_been_away_for_1_day_you_get_a_bonus_bubble_for_each_day_you_are_away":"1 g\xfcnd\xfcr yoksun. Olmad\u0131\u011f\u0131n her \\ng\xfcn i\xe7in bir bonus baloncuk!","remove_popup_ads_30_days":"Pop-Up reklamlar\u0131 30 g\xfcn kald\u0131r","usd":"usd"},"Texture":{"empty_2_{abc}":"empty_2_{abc}"}}'),
						ru: JSON.parse('{"Text":{"unlimited":"\u041d\u0435\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u044b\u0439","shop":"\u041c\u0410\u0413\u0410\u0417\u0418\u041d","invite":"\u041f\u0420\u0418\u0413\u041b\u0410\u0428\u0415\u041d\u0418\u042f","daily":"\u0415\u0416\u0415\u0414\u041d\u0415\u0412\u041d\u041e","daily_spin":"\u0415\u0436\u0435\u0434\u043d\u0435\u0432\u043d\u044b\u0439 \u0441\u043f\u0438\u043d!","spin":"\u041a\u0420\u0423\u0422\u0418","goal":"\u0426\u0415\u041b\u042c","play":"\u0418\u0413\u0420\u0410\u0422\u042c","settings":"\u041d\u0410\u0421\u0422\u0420\u041e\u0419\u041a\u0418","welcome_back":"\u0421 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u0435\u043c","you_have_been_away_for_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"\u0412\u044b \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b\u0438 {X} \u0434\u043d\u0435\u0439. \\n\u0412\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0435 \u0431\u043e\u043d\u0443\u0441\u043d\u044b\u0439 \u043f\u0443\u0437\u044b\u0440\u044c \u043d\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u0434\u0435\u043d\u044c \u0442\u044b \u043e\u0444\u043b\u0430\u0439\u043d!","you_have_been_away_for_more_than_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away":"\u0412\u044b \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b\u0438 \u0431\u043e\u043b\u0435\u0435 {X} \u0434\u043d\u0435\u0439. \\n\u0412\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0435 \u0431\u043e\u043d\u0443\u0441\u043d\u044b\u0439 \u043f\u0443\u0437\u044b\u0440\u044c \u043d\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u0434\u0435\u043d\u044c \u0442\u044b \u043e\u0444\u043b\u0430\u0439\u043d!","daily_bonus":"\u0415\u0436\u0435\u0434\u043d\u0435\u0432\u043d\u044b\u0439 \u0431\u043e\u043d\u0443\u0441","today":"\u0421\u0435\u0433\u043e\u0434\u043d\u044f","day_{X}":"\u0414\u0435\u043d\u044c {X}","{X}_bomb":"{X}+\u0411\u043e\u043c\u0431\u0430","claim":"\u0421\u041e\u0411\u0420\u0410\u0422\u042c","pop_bubbles":"\u041b\u043e\u043f\u0430\u0439\u0442\u0435 \u043f\u0443\u0437\u044b\u0440\u0438!","season_{X}":"{X} \u0441\u0435\u0437\u043e\u043d","activate":"\u0410\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u0442\u044c","premium_pass":"\u041f\u0440\u0435\u043c\u0438\u0443\u043c-\u043f\u0440\u043e\u043f\u0443\u0441\u043a","free":"\u0411\u0415\u0421\u041f\u041b\u0410\u0422\u041d\u041e","premium":"\u041f\u0440\u0435\u043c\u0438\u0443\u043c","you_have_passed_all_levels_we_will_update_soon":"\u0412\u044b \u043f\u0440\u043e\u0448\u043b\u0438 \u0432\u0441\u0435 \u0443\u0440\u043e\u0432\u043d\u0438.\\n\u0421\u043a\u043e\u0440\u043e \u043e\u0431\u043d\u043e\u0432\u0438\u043c!","get_spin":"\u041f\u041e\u041b\u0423\u0427\u0418\u0422\u042c \u0421\u041f\u0418\u041d","sorry_no_rewards_you_have_cancelled_the_ad":"\u0418\u0437\u0432\u0438\u043d\u0438\u0442\u0435, \u043d\u0430\u0433\u0440\u0430\u0434 \u043d\u0435\u0442!\\n\u0412\u044b \u043e\u0442\u043c\u0435\u043d\u0438\u043b\u0438 \u0440\u0435\u043a\u043b\u0430\u043c\u0443!","can_not_load_new_level":"\u041d\u0435 \u043c\u043e\u0433\u0443 \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c!","can_not_load_new_level_please_restart_game":"\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \\n\u043d\u043e\u0432\u044b\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c! \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \\n\u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0438\u0433\u0440\u0443.","loading_ads":"\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0440\u0435\u043a\u043b\u0430\u043c\u044b\u2026","loading":"\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430\u2026","no_ads_to_display":"\u041d\u0435\u0442 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u0434\u043b\u044f \u043f\u043e\u043a\u0430\u0437\u0430","store":"\u041c\u0430\u0433\u0430\u0437\u0438\u043d","Starter Bundle":"\u0421\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u043d\u0430\u0431\u043e\u0440","show_more":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435","Expert Bundle":"\u041d\u0430\u0431\u043e\u0440 \u044d\u043a\u0441\u043f\u0435\u0440\u0442\u043e\u0432","remove":"remove","popup_ads":"Popup Ads","{X}_days":"{X} \u0434\u043d\u0435\u0439","show_less":"\u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0439 \u043c\u0435\u043d\u044c\u0448\u0435","remove_ads":"\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0440\u0435\u043a\u043b\u0430\u043c\u0443!","play_bubble_pop_classic_without_popup_ads_in_30_days":"\u0418\u0433\u0440\u0430\u0439\u0442\u0435 \u0432 Bubble Pop Classic\\n \u0431\u0435\u0437 \u0412\u0441\u043f\u043b\u044b\u0432\u0430\u044e\u0449\u0430\u044f \u0440\u0435\u043a\u043b\u0430\u043c\u0430 \\n\u0447\u0435\u0440\u0435\u0437 30 \u0434\u043d\u0435\u0439!","do_not_show_again":"\u041d\u0435 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0439 \u0441\u043d\u043e\u0432\u0430","buy_now":"\u041a\u0423\u041f\u0418 \u0421\u0415\u0419\u0427\u0410\u0421","there_was_an_error_while_loading_level_please_try_again_later":"\u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \\n\u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0443\u0440\u043e\u0432\u0435\u043d\u044c. \\n \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \\n\u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443 \u043f\u043e\u0437\u0436\u0435.","watch_a_video_to_get_{X}_coins":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u0432\u0438\u0434\u0435\u043e, \\n\u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0435 50 \u043c\u043e\u043d\u0435\u0442!","get_now":"\u041f\u041e\u041b\u0423\u0427\u0418\u0422\u042c \u0421\u0415\u0419\u0427\u0410\u0421!","no_thanks":"\u0421\u043f\u0430\u0441\u0438\u0431\u043e, \u043d\u0435 \u043d\u0430\u0434\u043e","pause":"\u041f\u0410\u0423\u0417\u0410","sound":"\u0417\u0432\u0443\u043a","music":"\u041c\u0443\u0437\u044b\u043a\u0430","on":"\u0412\u041a\u041b","off":"\u0412\u042b\u041a\u041b","retry":"\u041f\u041e\u0412\u0422\u041e\u0420\u0418\u0422\u042c \u041f\u041e\u041f\u042b\u0422\u041a\u0423","back":"\u041d\u0410\u0417\u0410\u0414","resume":"\u041f\u0420\u041e\u0414\u041e\u041b\u0416\u0418\u0422\u042c","vibrate":"\u0432\u0438\u0431\u0440\u0430\u0446\u0438\u044f","cancel":"\u041e\u0422\u041c\u0415\u041d\u0410","bomb":"\u0411\u043e\u043c\u0431\u0430","Removes everything in a radius of 2!":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0432\u0441\u0435 \u0432 \u0440\u0430\u0434\u0438\u0443\u0441\u0435 2!","buy":"\u041a\u0423\u041f\u0418\u0422\u042c","not_enough_coin":"\u041d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043c\u043e\u043d\u0435\u0442","rainbow":"\u0420\u0430\u0434\u0443\u0433\u0430","Rainbow can be matched with any bubbles!":"\u0420\u0430\u0434\u0443\u0433\u0443 \u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u0441 \u043b\u044e\u0431\u044b\u043c\u0438 \u043f\u0443\u0437\u044b\u0440\u044f\u043c\u0438!","electric":"\u0420\u0430\u0437\u0440\u044f\u0434","Removes a row of everything!":"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0432\u0441\u0435 \u0432 \u0440\u044f\u0434\u0443!","rocket":"\u0420\u0430\u043a\u0435\u0442\u0430","Removes everything in its way!":"\u0423\u0431\u0438\u0440\u0430\u0435\u0442 \u0432\u0441\u0435 \u043d\u0430 \u0441\u0432\u043e\u0435\u043c \u043f\u0443\u0442\u0438!","out_of_bubbles":"\u041d\u0415\u0422 \u041f\u0423\u0417\u042b\u0420\u042c\u041a\u041e\u0412!","collect_gems":"\u0421\u043e\u0431\u0438\u0440\u0430\u0439\u0442\u0435 \u0414\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0435 \u043a\u0430\u043c\u043d\u0438","play_on":"\u0418\u0413\u0420\u0410\u0422\u042c","continue":"\u041f\u0420\u041e\u0414\u041e\u041b\u0416\u0418\u0422\u042c","level":"\u0423\u0440\u043e\u0432\u0435\u043d\u044c","level_failed":"\u0423\u0420\u041e\u0412\u0415\u041d\u042c \u041f\u0420\u041e\u0412\u0410\u041b\u0415\u041d","pop_all_bubbles":"\u041b\u043e\u043f\u043d\u0443\u0442\u044c \u0412\u0441\u0435 \u041f\u0443\u0437\u044b\u0440\u0438","score":"\u0421\u0427\u0415\u0422","next":"\u0421\u041b\u0415\u0414\u0423\u042e\u0429\u0418\u0419","click_to_skip_animation":"\u041d\u0430\u0436\u043c\u0438\u0442\u0435, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0430\u043d\u0438\u043c\u0430\u0446\u0438\u044e","combo_x_{X}":"\u041a\u043e\u043c\u0431\u043e\\nx{X}","Drag to aim, \\n Release to shoot!":"\u041f\u0435\u0440\u0435\u0442\u0430\u0449\u0438\u0442\u0435, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438\u0446\u0435\u043b\u0438\u0442\u044c\u0441\u044f, \u043e\u0442\u043f\u0443\u0441\u0442\u0438\u0442\u0435, \u0447\u0442\u043e\u0431\u044b \u0441\u0442\u0440\u0435\u043b\u044f\u0442\u044c!","Tap here \\n to switch bubbles!":"\u041d\u0430\u0436\u043c\u0438\u0442\u0435 \u0437\u0434\u0435\u0441\u044c,\\n \u0447\u0442\u043e\u0431\u044b \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043f\u0443\u0437\u044b\u0440\u0438!","Drop 20+ bubbles \\n to charge The Bomb Booster!":"\u0421\u0431\u0440\u043e\u0441\u044c\u0442\u0435 20+ \u043f\u0443\u0437\u044b\u0440\u0435\u0439, \\n\u0447\u0442\u043e\u0431\u044b \u0437\u0430\u0440\u044f\u0434\u0438\u0442\u044c \u0411\u043e\u043c\u0431\u0430\u0440\u0434\u0438\u0440\u043e\u0432\u0449\u0438\u043a!","Click The Bomb Booster icon \\n to use it.":"\u0429\u0435\u043b\u043a\u043d\u0438\u0442\u0435 \u0437\u043d\u0430\u0447\u043e\u043a \\nBomb Booster, \\n\u0447\u0442\u043e\u0431\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0435\u0433\u043e.","Hit a Dynamite Bubble \\n to explode \\n the surrounding bubbles.":"\u0423\u0434\u0430\u0440\u044c\u0442\u0435 \u043f\u043e \u043f\u0443\u0437\u044b\u0440\u044e \u0441 \u0434\u0438\u043d\u0430\u043c\u0438\u0442\u043e\u043c, \\n\u0447\u0442\u043e\u0431\u044b \u0432\u0437\u043e\u0440\u0432\u0430\u0442\u044c \u043e\u043a\u0440\u0443\u0436\u0430\u044e\u0449\u0438\u0435 \\n\u043f\u0443\u0437\u044b\u0440\u0438.","Thunder Bubbles \\n remove random bubbles.":"\u0413\u0440\u043e\u043c\u043e\u0432\u044b\u0435 \u043f\u0443\u0437\u044b\u0440\u0438 \\n\u0443\u0434\u0430\u043b\u044f\u044e\u0442 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0435 \u043f\u0443\u0437\u044b\u0440\u0438.","Collect Gems \\n by matching same bubbles!":"\u0421\u043e\u0431\u0438\u0440\u0430\u0439\u0442\u0435 \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0435 \\n\u043a\u0430\u043c\u043d\u0438, \u0441\u043e\u043f\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044f \\n\u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0435 \u043f\u0443\u0437\u044b\u0440\u0438!","Match bubbles 7 times in a row \\n to charge The Rocket Booster!":"\u0421\u043e\u0435\u0434\u0438\u043d\u044f\u0439\u0442\u0435 \u043f\u0443\u0437\u044b\u0440\u0438 7 \u0440\u0430\u0437 \u043f\u043e\u0434\u0440\u044f\u0434, \u0447\u0442\u043e\u0431\u044b \u0437\u0430\u0440\u044f\u0434\u0438\u0442\u044c \u0440\u0430\u043a\u0435\u0442\u043d\u044b\u0439 \u0443\u0441\u043a\u043e\u0440\u0438\u0442\u0435\u043b\u044c!","Click The Rocket Booster icon \\n to use it.":"\u0429\u0435\u043b\u043a\u043d\u0438\u0442\u0435 \u0437\u043d\u0430\u0447\u043e\u043a \\nRocket Booster, \\n\u0447\u0442\u043e\u0431\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439 \u044d\u0442\u043e.","{X}_bubbles_left":"\u041e\u0441\u0442\u0430\u043b\u043e\u0441\u044c {X} \u043f\u0443\u0437\u044b\u0440\u0435\u0439!","Soap Bubbles copy the color \\n of nearby matches.":"\u041c\u044b\u043b\u044c\u043d\u044b\u0435 \u043f\u0443\u0437\u044b\u0440\u0438 \u043a\u043e\u043f\u0438\u0440\u0443\u044e\u0442 \u0446\u0432\u0435\u0442\\n\u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0438\u0445 \u043f\u0443\u0437\u044b\u0440\u0435\u0439.","The Rainbow Booster is unlocked. \\n Unlimited use on this level only!":"\u0423\u0441\u0438\u043b\u0438\u0442\u0435\u043b\u044c \u0440\u0430\u0434\u0443\u0433\u0438 \u0440\u0430\u0437\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d.  \\n \u041d\u0435\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u043e\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 \u044d\u0442\u043e\u043c \u0443\u0440\u043e\u0432\u043d\u0435!","The Rainbow Booster \\n can be matched with any color.":"\u0423\u0441\u0438\u043b\u0438\u0442\u0435\u043b\u044c \u0440\u0430\u0434\u0443\u0433\u0438 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c\\n\u0441\u043e\u0447\u0435\u0442\u0430\u0435\u0442\u0441\u044f \u0441 \u043b\u044e\u0431\u044b\u043c \u0446\u0432\u0435\u0442\u043e\u043c.","Don\'t forget to use this item!":"\u041d\u0435 \u0437\u0430\u0431\u0443\u0434\u044c\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e\u0442 \u043f\u0440\u0435\u0434\u043c\u0435\u0442!","Hit Pots with any bubbles \\n to break them.":"\u0423\u0434\u0430\u0440\u044f\u0439\u0442\u0435 \u0433\u043e\u0440\u0448\u043a\u0438 \u043b\u044e\u0431\u044b\u043c\u0438 \\n\u043f\u0443\u0437\u044b\u0440\u044f\u043c\u0438, \u0447\u0442\u043e\u0431\u044b \u0441\u043b\u043e\u043c\u0430\u0442\u044c \u0438\u0445.","The Electric Booster is unlocked. \\n Unlimited use on this level only!":"\u042d\u043b\u0435\u043a\u0442\u0440\u043e\u0443\u0441\u0438\u043b\u0438\u0442\u0435\u043b\u044c \u0440\u0430\u0437\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d. \\n\u041d\u0435\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u043e\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 \u044d\u0442\u043e\u043c \u0443\u0440\u043e\u0432\u043d\u0435!","The Electric Booster \\n remove a row of bubbles.":"\u042d\u043b\u0435\u043a\u0442\u0440\u043e\u0443\u0441\u0438\u043b\u0438\u0442\u0435\u043b\u044c \u0443\u0434\u0430\u043b\u0438\u0442\u044c\\n\u0440\u044f\u0434 \u043f\u0443\u0437\u044b\u0440\u0435\u0439.","Hit Electric Bubbles \\n to remove a row of bubbles.":"\u041d\u0430\u0436\u043c\u0438 \u043d\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043f\u0443\u0437\u044b\u0440\u0438, \\n \u0447\u0442\u043e\u0431\u044b \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0440\u044f\u0434 \u043f\u0443\u0437\u044b\u0440\u0435\u0439.","Metal Balls can\'t be matched. \\n Try to drop them!":"\u041c\u0435\u0442\u0430\u043b\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0448\u0430\u0440\u044b\\n \u043d\u0435\u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u044b. \\n \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439 \u0438\u0445 \u0431\u0440\u043e\u0441\u0438\u0442\u044c!","Rope holds up other bubbles. \\n Pop the center bubbles \\n of the Rope.":"\u0412\u0435\u0440\u0435\u0432\u043a\u0430 \u0434\u0435\u0440\u0436\u0438\u0442 \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u0443\u0437\u044b\u0440\u0438.\\n\u041b\u043e\u043f\u043d\u0438\u0442\u0435 \u0446\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u044b\u0435 \\n\u043f\u0443\u0437\u044b\u0440\u0438 \u0432\u0435\u0440\u0435\u0432\u043a\u0438.","Hit Compass Arrow \\n to blast in its way.":"\u041d\u0430\u0436\u043c\u0438\u0442\u0435 \u043d\u0430 \u0441\u0442\u0440\u0435\u043b\u043a\u0443 \u043a\u043e\u043c\u043f\u0430\u0441\u0430, \\n \u0447\u0442\u043e\u0431\u044b \u0432\u0437\u043e\u0440\u0432\u0430\u0442\u044c \\n\u0432 \u044d\u0442\u043e\u043c \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0438.","Black Hole \\n sucks unmatched bubbles \\n that are shot close to it.":"\u0427\u0435\u0440\u043d\u0430\u044f \u0434\u044b\u0440\u0430 \\n\u0441\u043e\u0441\u0435\u0442 \u043e\u0434\u0438\u043d\u043e\u0447\u043d\u044b\u0435 \u043f\u0443\u0437\u044b\u0440\u0438\\n \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u044f\u0434\u043e\u043c \u0441 \u043d\u0435\u0439.","Hit FireFly Flasks\\n  to remove 3 random bubbles.":"\u041d\u0430\u0436\u043c\u0438\u0442\u0435 FireFly Flasks,  \\n\u0447\u0442\u043e\u0431\u044b \u0443\u0434\u0430\u043b\u0438\u0442\u044c \\n3 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0445 \u043f\u0443\u0437\u044b\u0440\u044f.","Double Color Bubbles \\n must be matched twice.":"\u0414\u0432\u0443\u0445\u0446\u0432\u0435\u0442\u043d\u044b\u0435 \u043f\u0443\u0437\u044b\u0440\u0438 \\n\u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u044b \u0434\u0432\u0430\u0436\u0434\u044b.","Color Bomb \\n changes color of \\n nearby bubbles randomly.":"\u0426\u0432\u0435\u0442\u043d\u0430\u044f \u0431\u043e\u043c\u0431\u0430 \\n \u043c\u0435\u043d\u044f\u0435\u0442 \u0446\u0432\u0435\u0442 \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0438\u0445 \\n \u043f\u0443\u0437\u044b\u0440\u0438 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c.","Spider Web can be removed \\n with a match.":"\u041f\u0430\u0443\u0442\u0438\u043d\u0430 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0443\u0434\u0430\u043b\u0435\u043d\u0430 \\n\u0441\u043f\u0438\u0447\u043a\u043e\u0439.","Switch Black Hole \\n switch between On and Off \\n sucking bubble states.":"Switch Black Hole \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0442\u0435\u043b\u044c \\n \u043c\u0435\u0436\u0434\u0443 \u0412\u043a\u043b.  \u0438 \u0432\u044b\u043a\u043b. \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \\n\u0437\u0430\u0441\u0430\u0441\u044b\u0432\u0430\u043d\u0438\u044f \u043f\u0443\u0437\u044b\u0440\u044c\u043a\u043e\u0432.","QuestionMark Bubbles \\n change color every turn.":"\u041f\u0443\u0437\u044b\u0440\u0438 \u0432\u043e\u043f\u0440\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0437\u043d\u0430\u043a\u0430 \\n\u043c\u0435\u043d\u044f\u044e\u0442\u0441 \u0440\u0430\u0441\u043a\u0440\u0430\u0441 \u043a\u0430\u0436\u0434\u044b\u0439 \u0445\u043e\u0434.","When Plant Shells close, \\n you can\'t match them.":"\u041a\u043e\u0433\u0434\u0430 \u0440\u0430\u043a\u043e\u0432\u0438\u043d\u044b \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u044e\u0442\u0441\u044f, \\n\u0432\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u043e\u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0438\u0445.","Hit or match around Leaves \\n to reveal what\'s behind.":"\u0423\u0434\u0430\u0440\u044c\u0442\u0435 \u0438\u043b\u0438 \u0441\u043e\u043f\u043e\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \u043b\u0438\u0441\u0442\u044c\u044f, \\n\u0447\u0442\u043e\u0431\u044b \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0447\u0442\u043e \u043f\u043e\u0437\u0430\u0434\u0438.","When Bats drop, \\n they fly to another place. \\n Try to pop them.":"\u041a\u043e\u0433\u0434\u0430 \u043b\u0435\u0442\u0443\u0447\u0438\u0435 \u043c\u044b\u0448\u0438 \u043f\u0430\u0434\u0430\u044e\u0442, \\n\u043e\u043d\u0438 \u043b\u0435\u0442\u044f\u0442 \u0432 \u0434\u0440\u0443\u0433\u043e\u0435 \u043c\u0435\u0441\u0442\u043e. \\n\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439 \u0438\u0445 \u043b\u043e\u043f\u043d\u0443\u0442\u044c.","When you hit \\n +1 or -1 Bubble, \\n you will gain or lose 1 move.":"\u041f\u0440\u0438 \u0443\u0434\u0440\u0435 \u043f\u043e +1 \u0438\u043b\u0438 -1 \u043f\u0443\u0437\u044b\u0440\u044e, \\n\u0432\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0435 \u0438\u043b\u0438 \u043f\u043e\u0442\u0435\u0440\u044f\u0435\u0442\u0435 1 \u0445\u043e\u0434.","Spider will cover bubbles \\n with Spider Web every turn.":"\u041f\u0430\u0443\u043a \u0437\u0430\u043a\u0440\u043e\u0435\u0442 \u043f\u0443\u0437\u044b\u0440\u0438\\n\u041f\u0430\u0443\u0442\u0438\u043d\u0430 \u043d\u0430 \u043a\u0430\u0436\u0434\u043e\u043c \u0448\u0430\u0433\u0443.","Hit Stone with any bubble twice \\n to break it.":"\u0423\u0434\u0430\u0440\u044c \u043f\u043e \u043a\u0430\u043c\u043d\u044e \u043b\u044e\u0431\u044b\u043c \\n\u043f\u0443\u0437\u044b\u0440\u0435\u043c \u0434\u0432\u0430\u0436\u0434\u044b, \\n\u0447\u0442\u043e\u0431\u044b \u0441\u043b\u043e\u043c\u0430\u0442\u044c \u0435\u0433\u043e.","Beetle will cover bubbles \\n with Bush every turn.":"\u0416\u0443\u043a \u043d\u0430\u043a\u0440\u043e\u0435\u0442 \u043f\u0443\u0437\u044b\u0440\u0438 \\n\u0441 \u043a\u0443\u0441\u0442\u0430\u043c\u0438 \u043a\u0430\u0436\u0434\u044b\u0439 \u0445\u043e\u0434.","Shoot through the Empty Bubble \\n to break them.":"\u0421\u0442\u0440\u0435\u043b\u044f\u0439 \u0441\u043a\u0432\u043e\u0437\u044c \u043f\u0443\u0441\u0442\u043e\u0439 \u043f\u0443\u0437\u044b\u0440\u044c, \\n\u0447\u0442\u043e\u0431\u044b\u0441\u043b\u043e\u043c\u0430\u0442\u044c \u0438\u0445.","Mirror Bubbles \\n become the same color \\n as the bubble you\'re shooting.":"\u0417\u0435\u0440\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0443\u0437\u044b\u0440\u0438 \u0441\u0442\u0430\u043d\u043e\u0432\u044f\u0442\u0441\u044f \\n\u043e\u0434\u043d\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430 \u043a\u0430\u043a \u043f\u0443\u0437\u044b\u0440\u044c, \\n\u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b \u0441\u0442\u0440\u0435\u043b\u044f\u0435\u0442\u0435.","Slate Stone can\'t be matched. \\n Try to drop them!":"\u0421\u043b\u0430\u043d\u0446\u0435\u0432\u044b\u0439 \u043a\u0430\u043c\u0435\u043d\u044c \\n\u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0441\u0440\u0430\u0432\u043d\u0438\u0442\u044c\u0441\u044f. \\n\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439 \u0438\u0445 \u0431\u0440\u043e\u0441\u0438\u0442\u044c!","Hit Storm Bubbles \\n to release 3 Thunders.":"Hit Storm Bubbles \\n to release 3 Thunders.","Bounce off walls \\n to drop bubbles!":"\u041e\u0442\u0442\u0430\u043b\u043a\u0438\u0432\u0430\u0439\u0442\u0435\u0441\u044c \u043e\u0442 \u0441\u0442\u0435\u043d, \\n\u0447\u0442\u043e\u0431\u044b \u0441\u0431\u0440\u043e\u0441\u0438\u0442\u044c \u043f\u0443\u0437\u044b\u0440\u0438!","of_coins":"Of Coins","A Castle Of Coins":"\u0417\u0430\u043c\u043e\u043a \u043c\u043e\u043d\u0435\u0442","A Kingdom Of Coins":"\u041a\u043e\u0440\u043e\u043b\u0435\u0432\u0441\u0442\u0432\u043e \u043c\u043e\u043d\u0435\u0442","A Bag Of Coins":"\u041c\u0435\u0448\u043e\u043a \u043c\u043e\u043d\u0435\u0442","A Chest Of Coins":"\u0421\u0443\u043d\u0434\u0443\u043a \u0441 \u043c\u043e\u043d\u0435\u0442\u0430\u043c\u0438","you_have_received":"\u0412\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438","you_have_canceled_payment":"\u0412\u044b \u043e\u0442\u043c\u0435\u043d\u0438\u043b\u0438 \u043f\u043b\u0430\u0442\u0435\u0436!","there_was_an_error_during_the_payment_please_try_again":"\u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u0432\u043e \u0432\u0440\u0435\u043c\u044fn\u043e\u043f\u043b\u0430\u0442\u044b! \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0435\u0449\u0435 \u0440\u0430\u0437.","ok":"OK","Drag to aim, Release to shoot!\\nHit the same color balls!":"\u041f\u0435\u0440\u0435\u0442\u0430\u0449\u0438\u0442\u0435, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438\u0446\u0435\u043b\u0438\u0442\u044c\u0441\u044f, \\n\u043e\u0442\u043f\u0443\u0441\u0442\u0438\u0442\u0435, \u0447\u0442\u043e\u0431\u044b \u0441\u0442\u0440\u0435\u043b\u044f\u0442\u044c! \\n\u0411\u0435\u0439 \u0448\u0430\u0440\u0438\u043a\u0438 \u043e\u0434\u043d\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430!","shop_is_currently_empty_please_comeback_later":"Shop is currently empty.\\nPlease comeback later!","offline_bonus":"\u041e\u0444\u0444\u043b\u0430\u0439\u043d \u043d\u0430\u0433\u0440\u0430\u0434\u044b","claim_x_{X}":"\u0421\u041e\u0411\u0420\u0410\u0422\u042c X{X}","level_{X}":"\u0423\u0440\u043e\u0432\u0435\u043d\u044c {X}","get":"GET","you_have_received_the_rewards":"You have received the rewards","please_come_back_after_{X}":"Please come back after {X}","limited_time_reward_{X}_watch_{Y}_video_to_receive_rewards":"Limited-time reward {X}\\nWatch {Y} video to receive rewards.","{X}_more":"{X}%\\nMore","Black Friday":"Black Friday","1_day":"1  \u0434\u0435\u043d\u044c","you_have_been_away_for_1_day_you_get_a_bonus_bubble_for_each_day_you_are_away":"\u0412\u044b \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b\u0438 1 \u0434\u0435\u043d\u044c. \\n\u0412\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0435 \u0431\u043e\u043d\u0443\u0441\u043d\u044b\u0439 \u043f\u0443\u0437\u044b\u0440\u044c \u043d\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u0434\u0435\u043d\u044c \u0442\u044b \u043e\u0444\u043b\u0430\u0439\u043d!","remove_popup_ads_30_days":"\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0432\u0441\u043f\u043b\u044b\u0432\u0430\u044e\u0449\u0443\u044e \u0440\u0435\u043a\u043b\u0430\u043c\u0443 30 \u0434\u043d\u0435\u0439","usd":"\u0434\u043e\u043b\u043b\u0430\u0440 \u0421\u0428\u0410"},"Texture":{"empty_2_{abc}":"empty_2_{abc}"}}')
					},
					On = function(e) {
						function t() {
							return e.apply(this, arguments) || this
						}
						return (0, l.Z)(t, e), t.prototype.configure = function(t) {
							e.prototype.configure.call(this, (0, o.Z)({
								data: xn,
								locale: "en",
								upperCaseText: !1
							}, t))
						}, t
					}(Pn),
					kn = On,
					Rn = i(75252),
					Mn = [Xt._.SCREEN_OPEN, Xt._.BUBBLE_MATCH, Xt._.BUBBLE_MATCH_FAILED, Xt._.MATCH_START, Xt._.MATCH_RESCUE, Xt._.MATCH_END],
					Ln = function(e) {
						function t(t, i) {
							var n;
							(n = e.call(this, "GoogleAnalytics", (0, o.Z)({}, i), "#E35335") || this).game = void 0, n.trackingId = void 0, n.currentPath = "/";
							var a = i.trackingId;
							n.game = t;
							var s = (GameCore.Configs.Analytics.GoogleAnalytics || {}).consoleLog;
							return n.selfLog = !!s, n.trackingId = a, n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.processEvent = function(e, t, i) {
							if (!(Se()(Mn).call(Mn, e) >= 0)) {
								var n = this.formatEventName(e),
									a = t ? (0, o.Z)({}, t) : {};
								a = i ? (0, o.Z)({}, a, {
									value: i
								}) : a, a = (0, o.Z)({}, a, {
									page_path: this.currentPath,
									send_to: "GA"
								}), gtag("event", n, a)
							}
						}, i.processLevelStart = function(e, t, i) {
							this.processEvent(Xt._.LEVEL_START, {
								level: e,
								score: t,
								level_name: i
							})
						}, i.processLevelRescue = function(e, t, i) {
							this.processEvent(Xt._.LEVEL_RESCUE, {
								level: e,
								score: t,
								level_name: i
							})
						}, i.processLevelFail = function(e, t, i) {
							this.processEvent(Xt._.LEVEL_END, {
								level: e,
								score: t,
								level_name: i,
								success: !1
							})
						}, i.processLevelComplete = function(e, t, i) {
							this.processEvent(Xt._.LEVEL_END, {
								level: e,
								score: t,
								level_name: i,
								success: !0
							})
						}, i.processShowInterstitialAd = function(e) {
							this.processEvent(Xt._.AD_SHOW, {
								ad_type: "interstitial",
								screen_name: "" + e,
								level: this.game.level.getLevel()
							})
						}, i.processShowRewardedVideoAd = function(e) {
							this.processEvent(Xt._.AD_SHOW, {
								ad_type: "rewarded_video",
								screen_name: "" + e,
								level: this.game.level.getLevel()
							})
						}, i.processShowAdFail = function(e, t) {
							var i = e === GameCore.Ads.Types.REWARDED ? "rewarded_video" : "interstitial";
							this.processEvent(Xt._.AD_SHOW_FAILED, {
								ad_type: i,
								screen_name: "" + t,
								level: this.game.level.getLevel()
							})
						}, i.processPageView = function(e) {
							var t = "/" + this.getGameplayMode() + "/" + e;
							this.currentPath = t, gtag("event", "page_view", {
								page_path: this.currentPath,
								send_to: ["GA", this.trackingId]
							})
						}, i.getGameplayMode = function() {
							var e = this.game.storage.getState();
							return (0, Rn.F)(e)
						}, i.formatEventName = function(e) {
							return "string" !== typeof e ? "unknown" : e.toLowerCase().replace(/:/g, "_")
						}, i.formatPageTitle = function(e, t) {
							return this.toUpperCamelCaseWithSpace(e) + "::" + this.toUpperCamelCaseWithSpace(t)
						}, i.toUpperCamelCaseWithSpace = function(e) {
							var t = e.replace(/[-_\s.]+(.)?/g, (function(e, t) {
								return t ? " " + t.toUpperCase() : ""
							}));
							return t.substr(0, 1).toUpperCase() + t.substr(1)
						}, t
					}(GameCore.Analytics.BaseAnalytics),
					Gn = Ln,
					Dn = "G-CW5QJF9FWQ",
					Fn = "UA-261518513-8",
					Nn = function(e) {
						function t() {
							for (var t, i, n = arguments.length, s = new Array(n), o = 0; o < n; o++) s[o] = arguments[o];
							return (i = e.call.apply(e, y()(t = [this]).call(t, s)) || this).startGame = (0, r.Z)(h().mark((function e() {
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.prev = 0, e.next = 3, i.auth.requestToken();
										case 3:
											i.storage.syncStore(), i.configureSentry(), i.configureRollbar(), i.detectGameMode(), i.initAnalytics(), i.analytics.event(Xt._.LOAD_START), i.scene.launch(In.C.GLOBAL_SCENE), i.scene.start(In.C.LOAD_SCENE), i.analytics.pageview("load-scene"), e.next = 17;
											break;
										case 14:
											e.prev = 14, e.t0 = e.catch(0), (0, a.tO)(e.t0);
										case 17:
											return e.prev = 17, i.facebook.progressLoading.finishLoadingProgressFbBootScene(), i.scene.sleep(In.C.BOOT_SCENE), e.finish(17);
										case 21:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[0, 14, 17, 21]
								])
							}))), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.create = function() {
							this.facebook.progressLoading.loadingProgressFbBootScene(), this.setBackgroundHTML(), this.startGame(), this.ads.showBannerAdAsync().catch((function(e) {}))
						}, i.setBackgroundHTML = function() {
							var e = document.getElementById("background"),
								t = document.getElementById("line-left"),
								i = document.getElementById("line-right"),
								n = GameCore.Utils.Device.isDesktop(),
								a = (0, pn.B)();
							n && t && i && e && (e.setAttribute("src", a + "assets/images/bg-desktop.jpg"), t.setAttribute("src", a + "assets/images/line.png"), i.setAttribute("src", a + "assets/images/line.png"))
						}, i.configureSentry = function() {
							var e = this.player.getPlayer();
							(0, a.Tv)({
								id: e.playerId,
								username: e.name
							})
						}, i.configureRollbar = function() {
							if (this.rollbar) {
								var e = this.player.getPlayer();
								this.rollbar.configure({
									payload: {
										person: {
											id: e.playerId,
											name: e.name
										}
									}
								})
							}
						}, i.detectGameMode = function() {
							this.storage.dispatch((0, Cn.qF)())
						}, i.initAnalytics = function() {
							var e = this.player.getPlayerId();
							this.analytics.add(new Gn(this.game, {
								userId: e,
								trackingId: Fn,
								measuringId: Dn,
								version: "24"
							}))
						}, t
					}(Phaser.Scene),
					Zn = Nn,
					Un = i(5281),
					jn = i(20468),
					Yn = i(90143),
					Wn = i(58644),
					Kn = i(62187),
					Hn = i(73431),
					zn = i.n(Hn)()(.55, .47, .43, .91),
					Xn = {
						targets: [],
						yoyo: !0,
						repeat: -1,
						duration: 600,
						repeatDelay: 50,
						ease: zn,
						easeParams: [0, .9],
						props: {
							scale: {
								from: 1,
								to: 1.2
							}
						}
					},
					Vn = function(e) {
						function t(t) {
							return e.call(this, Xn, t) || this
						}
						return (0, l.Z)(t, e), t
					}(Kn.Z),
					Jn = i(20746),
					qn = i(77087),
					Qn = i(62698),
					$n = i(2828),
					ea = i(34094),
					ta = i(56688),
					ia = i(37047),
					na = i(97686),
					aa = i(54255),
					sa = i(4396),
					oa = i(19518),
					ra = i.n(oa),
					la = aa.Z.EFFECTS,
					ca = la.KEY,
					ha = la.FRAME,
					ua = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, ca, ha.FX_COMET) || this).emitter = void 0, i.scene = t, i.createEmitters(), i.kill(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitters = function() {
							var e = 1 / this.scene.world.getPixelRatio();
							this.emitter = this.createEmitter({
								on: !1,
								frame: ha.FX_SPARKLE,
								speed: {
									min: 120,
									max: 300
								},
								scale: {
									min: e,
									max: 2.5 * e
								},
								angle: {
									min: -70,
									max: -110
								},
								lifespan: {
									min: 500,
									max: 1500
								},
								gravityY: 200,
								particleClass: da
							})
						}, i.setEmitZone = function(e) {
							this.emitter.setEmitZone(e)
						}, i.explode = function(e, t, i) {
							this.revive(), this.emitter.explode(e, t, i)
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager),
					da = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).split = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i), this.split = 2 * Phaser.Math.RND.between(1, 2);
							var n = this.emitter,
								a = n.x,
								s = (n.y, this.x - a.defaultValue);
							this.velocityX = Math.abs(this.velocityX) * ra()(s)
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n),
								s = this.lifeT * this.split,
								o = Math.floor(s),
								r = s - o;
							return this.alpha = o % 2 == 0 ? 1 - Phaser.Math.Easing.Sine.InOut(r) : Phaser.Math.Easing.Sine.InOut(r), this.scaleX = 1 - Phaser.Math.Easing.Sine.Out(this.lifeT), this.scaleY = 1 - Phaser.Math.Easing.Sine.Out(this.lifeT), a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					pa = ua,
					ma = aa.Z.DEFAULT,
					fa = ma.KEY,
					ga = ma.FRAME,
					va = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).treasureCloseImage = void 0, i.treasureOpenImage = void 0, i.treasureOpen = void 0, i.openAnimationTimeline = void 0, i.particle = void 0, i.createTreasure(), i.createParitcle(), i.treasureOpen.kill(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.getTreasureClose = function() {
							return this.treasureCloseImage
						}, i.createTreasure = function() {
							this.treasureCloseImage = this.scene.make.image({
								key: fa,
								frame: ga.TREASURE_CLOSE
							}), this.treasureCloseImage.setWorldSize(185.5, 155), this.treasureOpenImage = this.scene.make.image({
								key: fa,
								frame: ga.TREASURE_OPEN
							}), this.treasureOpenImage.setWorldSize(285.5, 227), this.treasureOpen = this.scene.add.container(), this.treasureOpen.setSize(285.5, 227), this.treasureOpen.add([this.treasureOpenImage]), this.add([this.treasureCloseImage, this.treasureOpen]), this.setSize(285.5, 227)
						}, i.createParitcle = function() {
							this.particle = new pa(this.scene);
							var e = new Phaser.Geom.Rectangle(-75, -35, 150, 70);
							this.particle.setEmitZone({
								source: e,
								type: "random"
							}), this.add(this.particle)
						}, i.playOpenAnimation = function(e) {
							var t, i = this;
							this.reset(), null == (t = this.openAnimationTimeline) || t.destroy(), this.openAnimationTimeline = this.scene.tweens.timeline();
							var n = this.treasureCloseImage.scale,
								a = this.treasureCloseImage.y,
								s = 0,
								o = Math.PI / 3;
							this.openAnimationTimeline.add({
								targets: [this.treasureCloseImage],
								duration: 800,
								props: {
									scaleY: {
										from: n,
										to: .9 * n,
										ease: Phaser.Math.Easing.Sine.Out
									},
									y: {
										from: a,
										to: a + 15,
										ease: Phaser.Math.Easing.Sine.Out
									}
								},
								ease: Phaser.Math.Easing.Linear,
								onStart: function() {
									i.scene.audio.playSound(sa.Z.GIFT_CHARGE)
								},
								onUpdate: function(e) {
									var t = 6 * e.progress,
										n = t - (s = Math.floor(t)),
										a = 0,
										r = o * (s % 2 === 0 ? 1 : -1) * (1 - .1 * (6 - s)),
										l = 2 * n;
									if (n > .5) {
										var c = a;
										a = r, r = c, l -= 1
									}
									i.treasureCloseImage.angle = Phaser.Math.Easing.Sine.Out(l) * (r - a) + a
								},
								onComplete: function() {
									i.scene.audio.playSound(sa.Z.GIFT_EXPLODE), i.treasureCloseImage.kill(), i.treasureOpen.revive(), i.particle.explode(60, 0, 0), e && e()
								}
							}), this.openAnimationTimeline.add({
								targets: this.treasureOpen,
								duration: 1e3,
								props: {
									y: {
										from: -20,
										to: 10,
										ease: Phaser.Math.Easing.Bounce.Out
									}
								}
							}), this.openAnimationTimeline.play()
						}, i.reset = function() {
							this.treasureCloseImage.revive(), this.treasureCloseImage.setPosition(0, 30.5), this.treasureCloseImage.setWorldSize(185.5, 155), this.treasureOpen.setPosition(0, 0), this.treasureOpen.kill()
						}, t
					}(Phaser.GameObjects.Container),
					ya = va,
					ba = aa.Z.DEFAULT,
					Ea = ba.KEY,
					Ta = ba.FRAME,
					Aa = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).hand = void 0, i.name = "TapTutorialHand", i.addHand(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.addHand = function() {
							this.hand = this.scene.make.image({
								key: Ea,
								frame: Ta.ICON_HAND,
								origin: {
									x: .5,
									y: .5
								}
							}), this.hand.setWorldSize(65.5, 55.5), this.add(this.hand)
						}, i.playAnimation = function(e, t) {
							var i, n = this;
							void 0 === e && (e = 0), void 0 === t && (t = 800);
							var a = 1 / this.scene.world.getPixelRatio();
							this.hand.angle = 30, null == (i = this.scene) || i.tweens.add({
								delay: e,
								targets: [this.hand],
								ease: Phaser.Math.Easing.Cubic.Out,
								props: {
									alpha: {
										start: 0,
										value: 1,
										duration: 200
									},
									scale: {
										duration: 400,
										start: 1.6 * a,
										to: 1.2 * a
									},
									angle: {
										from: 30,
										value: 0,
										duration: 400
									}
								},
								onComplete: function() {
									var e;
									null == (e = n.scene) || e.tweens.add({
										targets: [n.hand],
										delay: 200,
										duration: 200,
										ease: Phaser.Math.Easing.Cubic.Out,
										props: {
											alpha: 0
										},
										onComplete: function() {
											n.hand.x = 0, n.hand.y = 0, n.hand.scale = a, n.playAnimation(t)
										}
									})
								}
							})
						}, i.stopAnimation = function() {
							this.scene.tweens.killTweensOf(this.hand)
						}, i.preDestroy = function() {
							this.scene.tweens.killTweensOf(this.hand)
						}, t
					}(Phaser.GameObjects.Container),
					Sa = Aa,
					_a = i(27033),
					Ca = i(352),
					wa = i(27989),
					Ba = i(36033),
					Ia = i(82414),
					Pa = GameCore.Configs.Network,
					xa = aa.Z.EFFECTS,
					Oa = xa.KEY,
					ka = xa.FRAME,
					Ra = aa.Z.DEFAULT,
					Ma = Ra.KEY,
					La = Ra.FRAME,
					Ga = aa.Z.THEME,
					Da = (Ga.KEY, Ga.FRAME),
					Fa = Ga.DEFAULT,
					Na = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).rewardValue = void 0, s.onReward = void 0, s.hand = void 0, s.viewAdButton = void 0, s.skipButton = void 0, s.closeButton = void 0, s.giftAdsIcon = void 0, s.glowFx = void 0, s.currencyText = void 0, s.popupContents = void 0, s.cometTwinkle = void 0, s.starTwinkleUp = void 0, s.popupFadeOutAnimation = void 0, s.backgroundFadeInAnimation = void 0, s.contentShowUpAnimation = void 0, s.giftEntrancesAnimation = void 0, s.giftAttentionAnimation = void 0, s.iconAttentionAnimation = void 0, s.adsTimer = void 0, s.treasureBox = void 0, s.header = void 0, s.main = void 0, s.treasureExplosiveTimer = void 0, s.treasureExplosive = void 0, s.open = function(t) {
								e.prototype.open.call((0, Un.Z)(s), t), s.rewardValue = t.awardCoins, s.treasureBox.reset(), s.main.updateUI({
									Coin: s.rewardValue
								}), s.header.updateUI({
									Coin: s.rewardValue
								}), s.setTheGiftClickable(!1), s.setRewardValue(s.rewardValue), s.runOpenAnimation()
							}, s.handleClosePopup = function() {
								s.runCloseAnimation(), s.skipButton.setDisabled(!0), s.viewAdButton.setDisabled(!0)
							}, s.handleShowRewardedVideoAd = (0, r.Z)(h().mark((function e() {
								var t, i, n, a;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return t = s.scene, i = t.audio, n = t.game, e.prev = 1, s.viewAdButton.setDisabled(!0), s.skipButton.setDisabled(!0), n.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
												message: s.scene.lang.getText("loading_ads"),
												duration: 0,
												loading: !0
											}), i.pauseMusic(), i.muteAllSound(), e.next = 9, new(oe())((function(e, t) {
												var i;
												null == (i = s.adsTimer) || i.remove(), s.adsTimer = s.scene.time.delayedCall(Pa.Timeout, t), s.scene.ads.getAdStatus(GameCore.Ads.Types.REWARDED) === GameCore.Ads.Status.LOADING ? s.scene.ads.events.once(GameCore.Ads.Events.LOADED, e) : s.scene.ads.preloadRewardedVideoAsync().then(e).catch(t)
											}));
										case 9:
											return e.next = 11, s.scene.ads.showRewardedVideoAsync();
										case 11:
											s.scene.audio.playSound(sa.Z.DAILY_REWARD), n.globalScene.screen.close(Wn.o4.NOTIFY_SCREEN), s.starTwinkleUp.stop(), s.popupContents.setVisible(!1), s.popupContents.setActive(!1), s.runTheGiftEntrancesAnimation(0, 1500), e.next = 26;
											break;
										case 19:
											if (e.prev = 19, e.t0 = e.catch(1), !(e.t0 instanceof Object && GameCore.Utils.Object.hasOwn(e.t0, "code"))) {
												e.next = 25;
												break
											}
											if ("USER_INPUT" !== e.t0.code) {
												e.next = 25;
												break
											}
											return s.showNotifySkipAds(), e.abrupt("return");
										case 25:
											s.showNotifyNoAds();
										case 26:
											return e.prev = 26, null == (a = s.adsTimer) || a.destroy(), s.scene.audio.playMusic(), s.scene.audio.unmuteAllSound(), s.viewAdButton.setDisabled(!1), s.skipButton.setDisabled(!1), e.finish(26);
										case 33:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[1, 19, 26, 33]
								])
							}))), s.handleTheGiftClick = function() {
								s.setTheGiftClickable(!1), s.logButtonEvent("OpenGift"), s.scene.tweens.killTweensOf(s.treasureBox), s.hand.kill(), s.treasureBox.revive(), s.main.kill(), s.main.setAlpha(1), s.header.kill(), s.treasureBox.playOpenAnimation((function() {
									s.main.revive(), s.main.playAnimation(), s.scene.time.delayedCall(1e3, (function() {
										s.handleClaim()
									}))
								}))
							}, s.handleClaim = (0, r.Z)(h().mark((function e() {
								var t, i, n, a, o, r, l;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return s.header.revive(), s.header.setAlpha(0), s.scene.tweens.add({
												targets: s.header,
												duration: 200,
												props: {
													alpha: {
														start: 0,
														from: 0,
														to: 1
													}
												}
											}), t = s.scene.player.getCoins(), i = [], n = s.main.getBlock("Coin"), a = s.header.getIconBlockPosition("Coin"), n && a && (n.kill(), o = n.getIcon(), r = o.getWorldPosition(), s.treasureExplosive.setSizeIcon(o.width, o.height), l = s.runTreasuresExplodeEffect(r, a), i.push(l)), e.next = 10, oe().all(i);
										case 10:
											return s.scene.player.updateCustomFields({
												coin: t + s.rewardValue
											}), s.logEarnVirtualCurrency(s.rewardValue), oe().all(i).then((function() {
												var e;
												null == (e = s.treasureExplosiveTimer) || e.remove(), s.treasureExplosiveTimer = s.scene.time.delayedCall(700, (function() {
													s.setDepth(Wn.Ks.POPUP), s.runCloseAnimation()
												}))
											})), e.abrupt("return", oe().resolve());
										case 14:
										case "end":
											return e.stop()
									}
								}), e)
							}))), s.runTreasuresExplodeEffect = function() {
								var e = (0, r.Z)(h().mark((function e(t, i) {
									var n, a, o, r, l;
									return h().wrap((function(e) {
										for (;;) switch (e.prev = e.next) {
											case 0:
												return n = s.rewardValue, 1, a = s.treasureExplosive.explode(1, t.x, t.y, i.x, i.y), o = a.allTweens, r = a.longestTween, l = s.scene.player.getCoins() || 0, s.setDepth(jn.Z.ON_TOP), o.forEach((function(e) {
													e.on(Phaser.Tweens.Events.TWEEN_COMPLETE, (function() {
														l += n / Math.ceil(1), s.header.updateTextBlock("Coin", l)
													}))
												})), e.abrupt("return", new(oe())((function(e) {
													r.on(Phaser.Tweens.Events.TWEEN_COMPLETE, e)
												})));
											case 7:
											case "end":
												return e.stop()
										}
									}), e)
								})));
								return function(t, i) {
									return e.apply(this, arguments)
								}
							}(), s.showNotifyNoAds = function() {
								s.scene.game.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
									message: s.scene.lang.getText("no_ads_to_display"),
									duration: 1200,
									loading: !1
								})
							}, s.runCloseAnimation = function() {
								s.runExitsAnimation(0, 200)
							}, s.setDepth(Wn.Ks.POPUP), s.background.setAlpha(.8), s.createCloseButton(), s.createViewAdsButton(), s.createSkipButton(), s.createGiftGlow(), s.createGiftAdsIcon(), s.createCurrencyText(), s.createEffects(), s.createContentsGroup(), s.createTreasureBox(), s.createMain(), s.createHeader(), s.createTreasureExplosive(), s.createHand(), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setTheGiftClickable = function(e) {
							e ? this.treasureBox.setInteractive() : this.treasureBox.disableInteractive()
						}, i.logEarnVirtualCurrency = function(e) {
							this.scene.analytics.event(Xt._.EARN_VIRTUAL_CURRENCY, {
								value: e,
								virtual_currency_name: "coin",
								earn_from: "RewardAd"
							})
						}, i.logButtonEvent = function(e) {
							var t = this.getScreenName();
							this.scene.analytics.event(Xt._.BUTTON_CLICK, {
								button_name: e,
								screen_name: t
							})
						}, i.showNotifySkipAds = function() {
							this.scene.game.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
								message: this.scene.lang.getText("sorry_no_rewards_you_have_cancelled_the_ad"),
								duration: 1500,
								loading: !1
							})
						}, i.runOpenAnimation = function() {
							this.revive(), this.skipButton.setDisabled(!1), this.viewAdButton.setDisabled(!1), this.hand.kill(), this.popupContents.reviveGroup(), this.starTwinkleUp.stop(), this.runBackgroundEntrancesAnimation(0, 200), this.runPopupContentEntrancesAnimation(100, 500), this.runLogoAttentionAnimation(500)
						}, i.runBackgroundEntrancesAnimation = function(e, t) {
							this.backgroundFadeInAnimation || (this.backgroundFadeInAnimation = new Jn.Z({
								targets: [this.background],
								delay: e,
								duration: t,
								props: {
									alpha: {
										start: 0,
										to: .8
									}
								}
							})), this.backgroundFadeInAnimation.play()
						}, i.runPopupContentEntrancesAnimation = function(e, t) {
							var i;
							null == (i = this.contentShowUpAnimation) || i.remove(), this.contentShowUpAnimation = new Qn.Z({
								targets: this.popupContents.getChildren(),
								duration: t,
								delay: this.scene.tweens.stagger(100, {
									start: e
								}),
								props: {
									scale: {
										getStart: function(e) {
											return e.scale - .3
										},
										getEnd: function(e) {
											return e.scale
										}
									},
									alpha: {
										start: 0,
										from: 0,
										to: 1
									}
								}
							}), this.contentShowUpAnimation.play()
						}, i.runLogoAttentionAnimation = function(e) {
							var t, i = this.giftAdsIcon,
								n = i.x,
								a = i.y,
								s = i.width,
								o = i.height;
							this.starTwinkleUp.run(1, n, a, s, o);
							var r = 1 / this.scene.world.getPixelRatio();
							this.giftAdsIcon.setScale(.8 * r), null == (t = this.iconAttentionAnimation) || t.remove(), this.iconAttentionAnimation = new Vn({
								targets: [this.giftAdsIcon],
								delay: e,
								props: {
									scale: "+=0.05"
								}
							}), this.iconAttentionAnimation.play()
						}, i.runTheGiftEntrancesAnimation = function(e, t) {
							var i, n = this;
							this.treasureBox.revive(), this.treasureBox.setAlpha(1), Phaser.Display.Align.In.TopRight(this.treasureBox, this.zone), null == (i = this.giftEntrancesAnimation) || i.remove();
							var a = this.treasureBox,
								s = {
									x: a.x,
									y: a.y
								},
								o = 0,
								r = 0;
							this.giftEntrancesAnimation = new $n.Z({
								targets: [this.treasureBox],
								delay: e,
								duration: t,
								curve: [
									[s.x, s.y],
									[s.x - 80, s.y + 80],
									[o, r]
								],
								props: {
									scale: {
										start: .5,
										to: .8
									},
									angle: {
										start: 20,
										to: 0
									}
								},
								onCurveUpdate: function(e) {
									var t = e.x + Phaser.Math.RND.between(-40, 40),
										i = e.y + Phaser.Math.RND.between(-40, 40);
									n.cometTwinkle.explode(1, t, i)
								},
								onComplete: function() {
									n.scene.audio.playSound(sa.Z.GIFT_REVEAL);
									n.starTwinkleUp.setScale(1.5);
									var e = n.treasureBox,
										t = e.x,
										i = e.y,
										a = e.width,
										s = e.height;
									n.starTwinkleUp.run(1, t, i, a / 1.5, s / 1.5), n.moveTo(n.starTwinkleUp, n.length - 1), n.runTheGiftAttentionAnimation()
								}
							}), this.giftEntrancesAnimation.play()
						}, i.runTheGiftAttentionAnimation = function() {
							this.giftAttentionAnimation || (this.giftAttentionAnimation = new Vn({
								targets: [this.treasureBox],
								props: {
									scale: "+=0.05"
								}
							})), this.hand.revive(), this.hand.playAnimation(), this.setTheGiftClickable(!0), Phaser.Display.Align.In.Center(this.hand, this.treasureBox, 20, 20), this.giftAttentionAnimation.play()
						}, i.runExitsAnimation = function(e, t) {
							var i = this;
							this.popupFadeOutAnimation || (this.popupFadeOutAnimation = new qn.Z({
								targets: this.getAll(),
								delay: e,
								duration: t,
								props: {
									alpha: {
										start: .8,
										to: 0
									}
								},
								onComplete: function() {
									i.scene.screen.close(i.name)
								}
							})), this.popupFadeOutAnimation.play()
						}, i.createHand = function() {
							this.hand = new Sa(this.scene), this.add(this.hand)
						}, i.createContentsGroup = function() {
							this.popupContents = this.scene.make.group({}), this.popupContents.addMultiple([this.glowFx, this.giftAdsIcon, this.currencyText, this.viewAdButton, this.skipButton, this.closeButton])
						}, i.createGiftAdsIcon = function() {
							var e = 1 / this.scene.world.getPixelRatio();
							this.giftAdsIcon = this.scene.add.image(0, 0, Ma, La.TREASURE_CLOSE), this.giftAdsIcon.setWorldSize(185, 155), this.giftAdsIcon.setScale(.8 * e), Phaser.Display.Align.In.Center(this.giftAdsIcon, this.zone, 0, -80), this.add(this.giftAdsIcon)
						}, i.createGiftGlow = function() {
							this.glowFx = this.scene.add.image(0, 0, Oa, ka.FX_GLOW_LIGHT), this.glowFx.setWorldSize(206, 199.5), Phaser.Display.Align.In.Center(this.glowFx, this.zone, 0, -80), this.add(this.glowFx), this.scene.tweens.add({
								targets: [this.glowFx],
								duration: 6e3,
								repeat: -1,
								props: {
									angle: 360,
									scale: {
										value: "+=0.01",
										yoyo: !0,
										duration: 800,
										ease: Phaser.Math.Easing.Sine.InOut
									}
								}
							})
						}, i.createCurrencyText = function() {
							this.currencyText = ia.Z.addText(this.scene, {
								size: this.scene.fontSize(28),
								font: _a.Z.PRIMARY.KEY,
								origin: {
									x: .5,
									y: .5
								}
							}), this.setRewardValue(0), this.add(this.currencyText)
						}, i.setRewardValue = function(e) {
							this.rewardValue = e, this.currencyText.setText(this.scene.lang.getText({
								key: "watch_a_video_to_get_{X}_coins",
								variables: [e]
							})), Phaser.Display.Align.In.BottomCenter(this.currencyText, this.giftAdsIcon, 0, 90)
						}, i.createViewAdsButton = function() {
							this.viewAdButton = new ea.Z(this.scene, Ma, La.BUTTON_BLUE_LONG, 181.5, 57), this.viewAdButton.setName("ViewAd"), this.viewAdButton.onClick = this.handleShowRewardedVideoAd;
							var e = ia.Z.addText(this.scene, {
									size: this.scene.fontSize(23),
									text: this.scene.lang.getText("get_now"),
									font: _a.Z.PRIMARY.KEY,
									maxWidth: 130,
									maxHeight: 35
								}),
								t = this.scene.make.image({
									key: Ma,
									frame: La.RESCUE_ICON_AD
								});
							t.setWorldSize(41.85, 36), this.viewAdButton.add([e, t]), this.add(this.viewAdButton), Phaser.Display.Align.In.Center(e, this.viewAdButton, 25, -3), Phaser.Display.Align.In.LeftCenter(t, this.viewAdButton, -15, -3), Phaser.Display.Align.In.Center(this.viewAdButton, this.zone, 0, 165)
						}, i.createCloseButton = function() {
							this.closeButton = new Ia.Z(this.scene, {
								key: Fa.KEY,
								frame: Da.BUTTON_CLOSE,
								width: 39.5,
								height: 39,
								paddingZone: 20
							}), this.closeButton.setName("Close"), this.closeButton.onClick = this.handleClosePopup, Phaser.Display.Align.In.TopRight(this.closeButton, this.zone, -15, -15), this.add(this.closeButton)
						}, i.createSkipButton = function() {
							this.skipButton = new ea.Z(this.scene, Ma, La.BUTTON_GREEN_LONG, 182, 30), this.skipButton.setName("NoThanks");
							var e = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(18),
								text: this.scene.lang.getText("no_thanks")
							});
							this.skipButton.add(e), this.skipButton.button.setAlpha(.001), this.skipButton.onClick = this.handleClosePopup, Phaser.Display.Align.In.Center(e, this.skipButton, 0, 0), Phaser.Display.Align.In.BottomCenter(this.skipButton, this.viewAdButton, 0, 40), this.add(this.skipButton)
						}, i.createEffects = function() {
							this.cometTwinkle = new Ca.Z(this.scene), this.starTwinkleUp = new wa.Z(this.scene), this.add([this.cometTwinkle, this.starTwinkleUp])
						}, i.createTreasureExplosive = function() {
							this.treasureExplosive = new Ba.Z(this.scene), this.treasureExplosive.setTreasureGroup("Coin10"), this.treasureExplosive.setDepth(jn.Z.PRIORITY)
						}, i.createTreasureBox = function() {
							this.treasureBox = new ya(this.scene), this.treasureBox.kill(), this.add(this.treasureBox), this.treasureBox.setInteractive({
								useHandCursor: !0
							}), Phaser.Display.Align.In.Center(this.treasureBox, this.zone, 0, -30.5), this.treasureBox.on(Phaser.Input.Events.GAMEOBJECT_POINTER_DOWN, this.handleTheGiftClick)
						}, i.createMain = function() {
							this.main = new na.Z(this.scene), this.main.kill(), this.add(this.main)
						}, i.createHeader = function() {
							this.header = new ta.Z(this.scene), this.header.kill(), Phaser.Display.Align.To.TopRight(this.header, this.zone, -23, -4), this.add(this.header)
						}, i.setDepth = function(t) {
							var i;
							return e.prototype.setDepth.call(this, t), null == (i = this.treasureExplosive) || i.setDepth(t + 1), this
						}, t
					}(GameCore.Screen),
					Za = Na,
					Ua = i(60732),
					ja = i(93307),
					Ya = i(9247),
					Wa = aa.Z.THEME,
					Ka = (Wa.KEY, Wa.FRAME),
					Ha = Wa.DEFAULT,
					za = Wa.HARD,
					Xa = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, Ha.KEY, Ka.BUTTON_PLAY, 176.5, 79.5) || this).textLevel = void 0, i.icon = void 0, i.createUI(), i.setName("LevelCurrent"), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createUI = function() {
							this.createTextLevel(), this.createIcon()
						}, i.createTextLevel = function() {
							this.textLevel = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(30),
								text: this.scene.lang.getText({
									key: "level_{X}",
									variables: [0]
								})
							}), this.add(this.textLevel)
						}, i.createIcon = function() {
							this.icon = this.scene.make.image({
								key: za.KEY,
								frame: Ka.ICON_HEADER
							}), this.icon.setWorldSize(53.5, 58.5), this.icon.kill(), this.icon.setRotation(-Math.PI / 6), Phaser.Display.Align.To.TopLeft(this.icon, this.button, 14, -24), this.add(this.icon)
						}, i.updateTextLevel = function(e) {
							this.textLevel.setText("" + this.scene.lang.getText({
								key: "level_{X}",
								variables: [e]
							})), ia.Z.setFontSize(this.textLevel, .72 * this.displayWidth, 30), Phaser.Display.Align.In.Center(this.textLevel, this.button, 0, -7.75)
						}, i.setThemeDefault = function() {
							this.button.setTexture(Ha.KEY, Ka.BUTTON_PLAY), this.icon.kill()
						}, i.setThemeHard = function() {
							this.button.setTexture(za.KEY, Ka.BUTTON_PLAY), this.icon.revive()
						}, t
					}(ea.Z),
					Va = aa.Z.DEFAULT,
					Ja = Va.KEY,
					qa = Va.FRAME,
					Qa = aa.Z.THEME,
					$a = Qa.KEY,
					es = Qa.FRAME,
					ts = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, $a, es.BUTTON_BLUE_CIRCLE, 37.5, 39) || this).icon = void 0, i.createIcon(), i.setName("Setting"), i
						}
						return (0, l.Z)(t, e), t.prototype.createIcon = function() {
							this.icon = this.scene.make.image({
								key: Ja,
								frame: qa.ICON_SETTING
							}), this.icon.setWorldSize(21.5, 21.5), this.add(this.icon), Phaser.Display.Align.In.Center(this.icon, this.button)
						}, t
					}(ea.Z),
					is = aa.Z.DEFAULT,
					ns = is.KEY,
					as = is.FRAME,
					ss = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).playLevelButton = void 0, i.settingButton = void 0, i.createButtons(), i.alignButtons(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.alignButtons = function() {
							var e = this.scene.ads.getBannerHeight(),
								t = this.scene.world.getWorldSize().height;
							Phaser.Display.Align.In.Center(this.playLevelButton, this, 0, -e - 35 - t / 8), Phaser.Display.Align.To.LeftCenter(this.settingButton, this, 132, -27 - e)
						}, i.createButtons = function() {
							this.createLevelCurrentButton(), this.createSettingButton(), this.createDebugBtn()
						}, i.createDebugBtn = function() {
							var e = this;
							if (GameCore.Utils.Valid.isDebugger()) {
								var t = new ea.Z(this.scene, ns, as.BUTTON_GREEN_CIRCLE_SMALL, 20.5, 21.5);
								this.playLevelButton.add(t), t.onClick = function() {
									"theme-default" === e.scene.theme.getCurrentTheme("theme").textureKey ? (e.scene.theme.changeTheme(aa.Z.THEME_GAMEPLAY.KEY, aa.Z.THEME_GAMEPLAY.HARD.KEY), e.scene.theme.changeTheme("theme", "theme-hard"), e.scene.theme.changeTheme(Yn.Z.GAME_BACKGROUND_THEME.KEY, Yn.Z.GAME_BACKGROUND_THEME.HARD.KEY)) : (e.scene.theme.changeTheme(aa.Z.THEME_GAMEPLAY.KEY, aa.Z.THEME_GAMEPLAY.DEFAULT.KEY), e.scene.theme.changeTheme("theme", "theme-default"), e.scene.theme.changeTheme(Yn.Z.GAME_BACKGROUND_THEME.KEY, Yn.Z.GAME_BACKGROUND_THEME.DEFAULT.KEY))
								}, Phaser.Display.Align.In.Center(t, this.playLevelButton, 100, 0)
							}
						}, i.createLevelCurrentButton = function() {
							this.playLevelButton = new Xa(this.scene), this.add(this.playLevelButton)
						}, i.createSettingButton = function() {
							this.settingButton = new ts(this.scene), this.add(this.settingButton)
						}, t
					}(Phaser.GameObjects.Container),
					os = ss,
					rs = aa.Z.DEFAULT,
					ls = rs.KEY,
					cs = rs.FRAME,
					hs = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, ls, cs.BUTTON_STORE, 67, 65.5) || this).bgText = void 0, i.text = void 0, i.createUI(), i.setName("Shop"), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createUI = function() {
							this.createBgText(), this.createText()
						}, i.createBgText = function() {
							this.bgText = this.scene.make.image({
								key: ls,
								frame: cs.BG_TIME_BOX_SMALL
							}), this.bgText.setWorldSize(65, 26), this.add(this.bgText), Phaser.Display.Align.In.BottomCenter(this.bgText, this.button, -.5, 9.5)
						}, i.createText = function() {
							this.text = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(11.5),
								text: this.scene.lang.getText("shop"),
								maxWidth: 50
							}), this.add(this.text), Phaser.Display.Align.In.Center(this.text, this.bgText, 0, -2.3)
						}, t
					}(ea.Z),
					us = hs,
					ds = i(32422),
					ps = i(93985),
					ms = aa.Z.DEFAULT,
					fs = ms.KEY,
					gs = ms.FRAME,
					vs = aa.Z.THEME,
					ys = (vs.KEY, vs.FRAME),
					bs = vs.DEFAULT,
					Es = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, fs, {
								background: {
									key: bs.KEY,
									frame: ys.BG_VALUE_BAR
								},
								icon: gs.ICON_HEART
							}) || this).setName("LiveBar"), i.startAbbreviate = 1e3, i.fractionalDigits = 3, i.bar.setWorldSize(121.5, 48.5), i.icon.setWorldSize(27.5, 25), i.value.setOrigin(.5, .5), i.value.setText(i.scene.lang.getText("unlimited")), ia.Z.setFontSize(i.value, .6 * i.bar.width, 25), i.alignObject(), Phaser.Display.Align.In.Center(i.value, i.bar, 14, -2), Phaser.Display.Align.In.LeftCenter(i.icon, i.bar, -12, -2.25), i
						}
						return (0, l.Z)(t, e), t
					}(ps.Z),
					Ts = Es,
					As = aa.Z.DEFAULT,
					Ss = As.KEY,
					_s = As.FRAME,
					Cs = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, Ss, _s.BUTTON_WHEEL, 64, 67.5) || this).notificationIcon = void 0, i.bgText = void 0, i.text = void 0, i.lastTimeSpin = 0, i.notifyAnimation = void 0, i.createUI(), i.align(), i.runAnimation(), i.setName("LuckySpin"), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createUI = function() {
							this.createNotificationIcon(), this.createBgText(), this.createText()
						}, i.createNotificationIcon = function() {
							this.notificationIcon = this.scene.make.image({
								key: Ss,
								frame: _s.ICON_NOTIFICATION
							}), this.notificationIcon.setOrigin(0, 1), this.notificationIcon.setWorldSize(17.5, 18.5), this.add(this.notificationIcon)
						}, i.createBgText = function() {
							this.bgText = this.scene.make.image({
								key: Ss,
								frame: _s.BG_TIME_BOX_SMALL
							}), this.bgText.setWorldSize(65, 26), this.add(this.bgText)
						}, i.createText = function() {
							this.text = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(10),
								text: "36:45:26"
							}), this.add(this.text)
						}, i.align = function() {
							Phaser.Display.Align.In.TopRight(this.notificationIcon, this.button, -.75, -1.5), Phaser.Display.Align.In.BottomCenter(this.bgText, this.button, 2, 10), Phaser.Display.Align.In.Center(this.text, this.bgText, 0, -2)
						}, i.runAnimation = function() {
							if (!this.notifyAnimation) {
								var e = 1 / this.scene.world.getPixelRatio();
								this.notifyAnimation = new Vn({
									targets: [this.notificationIcon],
									props: {
										scale: {
											from: e,
											to: e,
											start: e
										},
										rotation: {
											from: -Math.PI / 12,
											to: Math.PI / 24,
											start: -Math.PI / 12
										}
									}
								})
							}
							this.notifyAnimation.play()
						}, i.updateText = function(e) {
							this.text.setText(e)
						}, i.setLastTimeSpin = function(e) {
							this.lastTimeSpin = e
						}, i.isCanSpin = function() {
							return !!((new Date).getTime() - this.lastTimeSpin > 864e5 || GameCore.Configs.DailySpin.forceSpin)
						}, i.unlockSpin = function() {
							this.updateText("00:00:00"), this.text.kill(), this.bgText.kill(), this.notificationIcon.revive()
						}, i.updateClock = function() {
							if (this.isCanSpin()) this.unlockSpin();
							else {
								this.text.revive(), this.bgText.revive(), this.notificationIcon.kill();
								var e = (new Date).getTime(),
									t = this.lastTimeSpin + 864e5 - e,
									i = Math.floor(t / 36e5) < 1 ? 0 : Math.floor(t / 36e5);
								i > 0 && (t -= 36e5 * i);
								var n = Math.floor(t / 6e4) < 1 ? 0 : Math.floor(t / 6e4);
								n > 0 && (t -= 60 * n * 1e3);
								var a = Math.floor(t / 1e3) < 1 ? 0 : Math.floor(t / 1e3);
								this.updateText(this.formatUnitTime(i) + ":" + this.formatUnitTime(n) + ":" + this.formatUnitTime(a))
							}
						}, i.formatUnitTime = function(e) {
							return e < 10 ? "0" + e : e.toString()
						}, t
					}(ea.Z),
					ws = aa.Z.DEFAULT,
					Bs = ws.KEY,
					Is = ws.FRAME,
					Ps = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, Bs, Is.ICON_ADS, 55.6, 58) || this).bgText = void 0, i.text = void 0, i.tweenShowDaysLeft = void 0, i.createUI(), i.align(), i.bgText.setAlpha(0), i.text.setAlpha(0), i.bgText.kill(), i.text.kill(), i.setName("RemoveAdsButton"), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createUI = function() {
							this.createBgText(), this.createText()
						}, i.createBgText = function() {
							this.bgText = this.scene.make.image({
								key: Bs,
								frame: Is.BG_TIME_BOX_SMALL
							}), this.bgText.setWorldSize(65, 26), this.add(this.bgText)
						}, i.createText = function() {
							this.text = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(10),
								text: this.scene.lang.getText({
									key: "{X}_days",
									variables: [30]
								})
							}), this.add(this.text)
						}, i.align = function() {
							Phaser.Display.Align.In.BottomCenter(this.bgText, this.button, 2, 10), Phaser.Display.Align.In.Center(this.text, this.bgText, 0, -2)
						}, i.updateText = function() {
							var e = this.scene.ads.getDaysRemoveAdsLeft();
							e <= 1 ? this.text.setText(this.scene.lang.getText("1_day")) : this.text.setText(this.scene.lang.getText({
								key: "{X}_days",
								variables: [e]
							}))
						}, i.showDaysLeft = function() {
							var e, t = this;
							null == (e = this.tweenShowDaysLeft) || e.remove();
							var i = this.bgText.alpha;
							this.bgText.revive(), this.text.revive(), this.tweenShowDaysLeft = this.scene.tweens.add({
								targets: [this.bgText, this.text],
								alpha: 1,
								duration: 200 * (1 - i),
								completeDelay: 2e3,
								onComplete: function() {
									t.tweenShowDaysLeft = t.scene.tweens.add({
										targets: [t.bgText, t.text],
										alpha: 0,
										duration: 200,
										onComplete: function() {
											t.tweenShowDaysLeft = void 0, t.bgText.kill(), t.text.kill()
										}
									})
								}
							})
						}, t
					}(ea.Z),
					xs = aa.Z.DEFAULT,
					Os = xs.KEY,
					ks = xs.FRAME,
					Rs = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, Os, ks.BUTTON_INVITE_FRIEND, 64.5, 65.5) || this).bgText = void 0, i.text = void 0, i.createUI(), i.setName("Invite"), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createUI = function() {
							this.createBgText(), this.createText()
						}, i.createBgText = function() {
							this.bgText = this.scene.make.image({
								key: Os,
								frame: ks.BG_TIME_BOX_SMALL
							}), this.bgText.setWorldSize(65, 26), this.add(this.bgText), Phaser.Display.Align.In.BottomCenter(this.bgText, this.button, -.5, 9.5)
						}, i.createText = function() {
							this.text = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(11.5),
								text: this.scene.lang.getText("invite"),
								maxWidth: 50,
								maxHeight: 20
							}), this.add(this.text), Phaser.Display.Align.In.Center(this.text, this.bgText, 0, -2.3)
						}, t
					}(ea.Z),
					Ms = Rs,
					Ls = aa.Z.DEFAULT,
					Gs = Ls.KEY,
					Ds = Ls.FRAME,
					Fs = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, Gs, Ds.BUTTON_DAILY_REWARD, 64.5, 65.5) || this).bgText = void 0, i.timeText = void 0, i.text = void 0, i.tweenShowDaysLeft = void 0, i.createUI(), i.setName("Shop"), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createUI = function() {
							this.createBgText(), this.createTimeText(), this.createText()
						}, i.createBgText = function() {
							this.bgText = this.scene.make.image({
								key: Gs,
								frame: Ds.BG_TIME_BOX_SMALL
							}), this.bgText.setWorldSize(65, 26), this.add(this.bgText), Phaser.Display.Align.In.BottomCenter(this.bgText, this.button, -.5, 9.5)
						}, i.createTimeText = function() {
							this.timeText = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(10),
								text: "00:00:00",
								origin: {
									x: .5,
									y: .5
								}
							}), this.add(this.timeText), Phaser.Display.Align.In.Center(this.timeText, this.bgText, 0, -2.3)
						}, i.createText = function() {
							this.text = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(11.5),
								text: this.scene.lang.getText("daily"),
								origin: {
									x: .5,
									y: .5
								},
								maxWidth: 50
							}), this.add(this.text), this.text.kill(), this.text.setAlpha(0), Phaser.Display.Align.In.Center(this.text, this.bgText, 0, -2.3)
						}, i.showRewardText = function() {
							var e, t = this;
							null == (e = this.tweenShowDaysLeft) || e.remove();
							var i = this.text.alpha;
							this.text.revive(), this.tweenShowDaysLeft = this.scene.tweens.add({
								targets: [this.text],
								alpha: 1,
								duration: 400 * (1 - i),
								completeDelay: 1e3,
								onUpdate: function() {
									t.timeText.setAlpha(1 - t.text.alpha)
								},
								onComplete: function() {
									t.tweenShowDaysLeft = t.scene.tweens.add({
										targets: [t.text],
										alpha: 0,
										duration: 400,
										onUpdate: function() {
											t.timeText.setAlpha(1 - t.text.alpha)
										},
										onComplete: function() {
											t.tweenShowDaysLeft = void 0, t.text.kill()
										}
									})
								}
							})
						}, i.updateClock = function() {
							this.text.revive(), this.bgText.revive();
							var e = (new Date).getTime(),
								t = this.scene.player.getCustomData("dailyRewarded").lastRewarded + 864e5 - e;
							t < 0 && (t = 0);
							var i = Math.floor(t / 36e5) < 1 ? 0 : Math.floor(t / 36e5);
							i > 0 && (t -= 36e5 * i);
							var n = Math.floor(t / 6e4) < 1 ? 0 : Math.floor(t / 6e4);
							n > 0 && (t -= 60 * n * 1e3);
							var a = Math.floor(t / 1e3) < 1 ? 0 : Math.floor(t / 1e3);
							this.updateText(this.formatUnitTime(i) + ":" + this.formatUnitTime(n) + ":" + this.formatUnitTime(a))
						}, i.updateText = function(e) {
							this.timeText.setText(e)
						}, i.formatUnitTime = function(e) {
							return e < 10 ? "0" + e : e.toString()
						}, t
					}(ea.Z),
					Ns = Fs,
					Zs = aa.Z.DEFAULT,
					Us = Zs.KEY,
					js = Zs.FRAME,
					Ys = GameCore.Configs.SpecialEvent,
					Ws = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, Us, js.BUTTON_BLACK_FRIDAY, 82, 72) || this).bgText = void 0, i.timeText = void 0, i.createUI(), i.setName("SpecialEventButton"), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createUI = function() {
							this.createBgText(), this.createTimeText()
						}, i.createBgText = function() {
							this.bgText = this.scene.make.image({
								key: Us,
								frame: js.BG_TIME_BOX_SMALL
							}), this.bgText.setWorldSize(65, 26), this.add(this.bgText), Phaser.Display.Align.In.BottomCenter(this.bgText, this.button, -9, 10)
						}, i.createTimeText = function() {
							this.timeText = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(9),
								text: "00:00:00",
								origin: {
									x: .5,
									y: .5
								}
							}), this.add(this.timeText), Phaser.Display.Align.In.Center(this.timeText, this.bgText, 0, -2.3)
						}, i.updateClock = function() {
							this.bgText.revive();
							var e = (new Date).getTime(),
								t = Ys.FinishAt - e;
							if (t <= 0) this.updateText(this.formatUnitTime(0) + ":" + this.formatUnitTime(0) + ":" + this.formatUnitTime(0));
							else {
								var i = Math.floor(t / 864e5) < 1 ? 0 : Math.floor(t / 864e5);
								i > 0 && (t -= 864e5 * i);
								var n = Math.floor(t / 36e5) < 1 ? 0 : Math.floor(t / 36e5);
								n > 0 && (t -= 36e5 * n);
								var a = Math.floor(t / 6e4) < 1 ? 0 : Math.floor(t / 6e4);
								a > 0 && (t -= 60 * a * 1e3);
								var s = Math.floor(t / 1e3) < 1 ? 0 : Math.floor(t / 1e3);
								this.updateText(i + "d:" + this.formatUnitTime(n) + ":" + this.formatUnitTime(a) + ":" + this.formatUnitTime(s))
							}
						}, i.updateText = function(e) {
							this.timeText.setText(e)
						}, i.formatUnitTime = function(e) {
							return e < 10 ? "0" + e : e.toString()
						}, t
					}(ea.Z),
					Ks = Ws,
					Hs = aa.Z.DEFAULT,
					zs = (Hs.KEY, Hs.FRAME, aa.Z.THEME),
					Xs = zs.KEY,
					Vs = zs.FRAME,
					Js = function(e) {
						function t(t) {
							var i;
							(i = e.call(this, t) || this).coinBar = void 0, i.liveBar = void 0, i.shopButton = void 0, i.luckySpinButton = void 0, i.removeAdsButton = void 0, i.inviteFriendButton = void 0, i.dailyRewardButton = void 0, i.specialEventButton = void 0, i.leftContainer = void 0, i.rightContainer = void 0, i.slideInLeftTween = void 0, i.slideInRightTween = void 0, i.slideOutLeftTween = void 0, i.slideOutRightTween = void 0, i.leftContainerDefaultX = void 0, i.leftContainerDefaultY = void 0, i.rightContainerDefaultX = void 0, i.rightContainerDefaultY = void 0, i.isHidingUI = !1, i.duration = 450;
							var n = i.scene.gameZone.width;
							return i.setSize(n, 50), i.createUI(), i.alignUI(), i.createDebug(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createUI = function() {
							this.createLiveBar(), this.createCoinBar(), this.createShopButton(), this.createLuckySpinButton(), this.createRemoveAdsButton(), this.createInviteFriendButton(), this.createDailyRewardButton(), this.createSpecialEventButton(), this.createContainers()
						}, i.createDebug = function() {
							var e, t, i, n, a, s = this;
							if (GameCore.Utils.Valid.isDebugger()) {
								var o = new ea.Z(this.scene, Xs, Vs.BUTTON_BLUE_CIRCLE, 37.5, 39);
								o.setName("debugButton"), null == o || null == (e = o.setAlpha(.8)) || e.setScale(.8), this.rightContainer.add(o), o.onClick = function() {
									s.luckySpinButton.setLastTimeSpin(0)
								};
								var r = this.scene.payment;
								r.getPaymentEnable() && this.scene.isAllowOpenSpecialEventScreen() ? Phaser.Display.Align.To.BottomCenter(o, this.specialEventButton, 0, 20) : Phaser.Display.Align.To.BottomCenter(o, this.inviteFriendButton, 0, 20);
								var l = new ea.Z(this.scene, Xs, Vs.BUTTON_BLUE_CIRCLE, 37.5, 39);
								l.button.setTint(8355711), l.setName("debugButton"), null == l || null == (t = l.setAlpha(.8)) || t.setScale(.8), this.rightContainer.add(l), l.onClick = function() {
									s.scene.screen.open(Wn.o4.REMOVE_ADS_SCREEN)
								}, Phaser.Display.Align.To.BottomCenter(l, o);
								var c = new ea.Z(this.scene, Xs, Vs.BUTTON_BLUE_CIRCLE, 37.5, 39);
								c.setName("addCoinButton"), null == c || null == (i = c.setAlpha(.8)) || i.setScale(.8), this.leftContainer.add(c), c.onClick = function() {
									var e = s.scene.player.getCoins() + 1e3;
									s.scene.player.updateCustomFields({
										coin: e
									})
								}, r.getPaymentEnable() || !this.scene.isAllowOpenSpecialEventScreen() ? Phaser.Display.Align.To.BottomCenter(c, this.dailyRewardButton, 0, 20) : Phaser.Display.Align.To.BottomCenter(c, this.dailyRewardButton, 0, 40 + this.specialEventButton.height);
								var h = new ea.Z(this.scene, Xs, Vs.BUTTON_BLUE_CIRCLE, 37.5, 39);
								h.button.setTint(8355711), h.setName("debugButton"), null == h || null == (n = h.setAlpha(.8)) || n.setScale(.8), this.leftContainer.add(h), h.onClick = function() {
									s.scene.unlockAllLevels()
								}, Phaser.Display.Align.To.BottomCenter(h, c);
								var u = new ea.Z(this.scene, Xs, Vs.BUTTON_BLUE_CIRCLE, 37.5, 39);
								u.button.setTint(8355711), u.setName("debugButton"), null == u || null == (a = u.setAlpha(.8)) || a.setScale(.8), u.onClick = function() {
									s.scene.player.updateSpecialEvents(GameCore.Configs.SpecialEvent.Type, 0)
								}, Phaser.Display.Align.To.BottomCenter(u, h), this.leftContainer.add(u)
							}
						}, i.createLuckySpinButton = function() {
							this.luckySpinButton = new Cs(this.scene)
						}, i.createShopButton = function() {
							this.shopButton = new us(this.scene)
						}, i.createRemoveAdsButton = function() {
							this.removeAdsButton = new Ps(this.scene)
						}, i.createInviteFriendButton = function() {
							this.inviteFriendButton = new Ms(this.scene)
						}, i.createDailyRewardButton = function() {
							this.dailyRewardButton = new Ns(this.scene)
						}, i.createSpecialEventButton = function() {
							this.specialEventButton = new Ks(this.scene)
						}, i.createLiveBar = function() {
							this.liveBar = new Ts(this.scene)
						}, i.createCoinBar = function() {
							this.coinBar = new ds.Z(this.scene)
						}, i.createContainers = function() {
							var e = this.scene.gameZone.width;
							this.leftContainer = this.scene.add.container(), this.leftContainer.setSize(e / 2, 50), this.rightContainer = this.scene.add.container(), this.rightContainer.setSize(e / 2, 50), this.leftContainer.add([this.liveBar, this.shopButton, this.removeAdsButton, this.dailyRewardButton]), this.rightContainer.add([this.coinBar, this.luckySpinButton, this.inviteFriendButton, this.specialEventButton]), this.add([this.leftContainer, this.rightContainer])
						}, i.alignUI = function() {
							this.leftContainer.setPosition(0, 0), this.rightContainer.setPosition(0, 0);
							var e = this.scene.gameZone.width;
							Phaser.Display.Align.In.LeftCenter(this.liveBar, this.leftContainer, -15);
							var t = this.scene.payment;
							t.getPaymentEnable() ? (this.shopButton.revive(), this.removeAdsButton.revive(), Phaser.Display.Align.In.LeftCenter(this.liveBar, this.leftContainer, -15), Phaser.Display.Align.To.BottomLeft(this.shopButton, this.leftContainer, -15, 5), Phaser.Display.Align.To.BottomLeft(this.removeAdsButton, this.leftContainer, -20, 90), Phaser.Display.Align.To.BottomLeft(this.dailyRewardButton, this.leftContainer, -15, 175), Phaser.Display.Align.In.RightCenter(this.coinBar, this.rightContainer, -22), Phaser.Display.Align.To.BottomRight(this.luckySpinButton, this.rightContainer, -15, 5), Phaser.Display.Align.To.BottomRight(this.inviteFriendButton, this.rightContainer, -15, 90)) : (this.shopButton.kill(), this.removeAdsButton.kill(), Phaser.Display.Align.In.LeftCenter(this.liveBar, this.leftContainer, -15), Phaser.Display.Align.To.BottomLeft(this.dailyRewardButton, this.leftContainer, -15, 5), Phaser.Display.Align.In.RightCenter(this.coinBar, this.rightContainer, -22), Phaser.Display.Align.To.BottomRight(this.luckySpinButton, this.rightContainer, -15, 5), Phaser.Display.Align.To.BottomRight(this.inviteFriendButton, this.rightContainer, -15, 90)), this.scene.isAllowOpenSpecialEventScreen() ? (this.specialEventButton.revive(), t.getPaymentEnable() ? Phaser.Display.Align.To.BottomRight(this.specialEventButton, this.rightContainer, 3, 168) : Phaser.Display.Align.To.BottomRight(this.specialEventButton, this.rightContainer, -e + this.specialEventButton.width + 14, 83)) : this.specialEventButton.kill(), this.leftContainer.setPosition(-e / 4, 0), this.rightContainer.setPosition(e / 4, 0), this.leftContainerDefaultX = this.leftContainer.x, this.leftContainerDefaultY = this.leftContainer.y, this.rightContainerDefaultX = this.rightContainer.x, this.rightContainerDefaultY = this.rightContainer.y
						}, i.slideIn = function() {
							var e, t, i = this;
							if (this.isHidingUI) {
								var n = this.scene.gameZone.width;
								if (this.isHidingUI = !1, null == (e = this.slideOutLeftTween) || e.complete(), null == (t = this.slideOutRightTween) || t.complete(), !this.slideInLeftTween) {
									var a = (this.leftContainer.x + 1.5 * n) / (this.leftContainerDefaultX + 1.5 * n);
									a = (1 - a) * this.duration, this.slideInLeftTween = this.scene.tweens.add({
										targets: this.leftContainer,
										duration: a,
										x: this.leftContainerDefaultX,
										ease: Phaser.Math.Easing.Circular.InOut,
										onComplete: function() {
											i.slideInLeftTween = void 0
										}
									})
								}
								if (!this.slideInRightTween) {
									var s = (this.rightContainer.x - this.rightContainerDefaultX) / (1.5 * n - this.rightContainerDefaultX);
									s *= this.duration, this.slideInRightTween = this.scene.tweens.add({
										targets: this.rightContainer,
										duration: s,
										x: this.rightContainerDefaultX,
										ease: Phaser.Math.Easing.Circular.InOut,
										onComplete: function() {
											i.slideInRightTween = void 0
										}
									})
								}
							}
						}, i.slideOut = function() {
							var e, t, i = this;
							if (!this.isHidingUI) {
								this.isHidingUI = !0;
								var n = this.scene.gameZone.width;
								if (null == (e = this.slideInLeftTween) || e.complete(), null == (t = this.slideInRightTween) || t.complete(), !this.slideOutLeftTween) {
									var a = (this.leftContainer.x + 1.5 * n) / (this.leftContainerDefaultX + 1.5 * n);
									a *= this.duration, this.slideOutLeftTween = this.scene.tweens.add({
										targets: this.leftContainer,
										duration: a,
										ease: Phaser.Math.Easing.Circular.InOut,
										x: 1.5 * -n,
										onComplete: function() {
											i.slideOutLeftTween = void 0
										}
									})
								}
								if (!this.slideOutRightTween) {
									var s = (this.rightContainer.x - this.rightContainerDefaultX) / (1.5 * n - this.rightContainerDefaultX);
									s = (1 - s) * this.duration, this.slideOutRightTween = this.scene.tweens.add({
										targets: this.rightContainer,
										duration: s,
										ease: Phaser.Math.Easing.Circular.InOut,
										x: 1.5 * n,
										onComplete: function() {
											i.slideOutRightTween = void 0
										}
									})
								}
							}
						}, t
					}(Phaser.GameObjects.Container),
					qs = Js,
					Qs = aa.Z.DEFAULT,
					$s = Qs.KEY,
					eo = Qs.FRAME,
					to = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).options = void 0, n.leaves = void 0, n.dino = void 0, n.title = void 0, n.ribbon = void 0, n.background = void 0, n.dinoAnimation = void 0, n.options = i, n.createBackground(), n.createLeaves(), n.createDino(), n.createRibbon(), n.createTitle(), n.setDepth(jn.Z.LOGO), n.runAnimations(), n.scene.add.existing((0, Un.Z)(n)), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.isDinoSad = function(e) {
							this.dino.setFrame(eo.BLANK)
						}, i.setTitle = function(e) {
							this.title.setText(e)
						}, i.changeRibbon = function(e, t, i) {
							this.ribbon.setFrame(e), this.ribbon.setWorldSize(t, i)
						}, i.changeBackground = function(e, t, i) {
							this.background.setFrame(e), this.background.setWorldSize(t, i)
						}, i.createBackground = function() {
							this.background = this.scene.make.image({
								key: $s,
								frame: eo.BLANK
							}), this.background.setY(-20), this.background.setWorldSize(278.5, 82), this.add(this.background)
						}, i.createLeaves = function() {
							this.leaves = this.scene.make.image({
								key: $s,
								frame: eo.BLANK
							}), this.leaves.setY(30), this.leaves.setWorldSize(272, 60), this.add(this.leaves)
						}, i.createDino = function() {
							this.dino = this.scene.make.image({
								key: $s,
								frame: eo.BLANK
							}), this.dino.setY(5), this.dino.setWorldSize(98, 94.5), this.add(this.dino)
						}, i.createRibbon = function() {
							this.ribbon = this.scene.make.image({
								key: $s,
								frame: eo.RIBBON_RED
							}), this.ribbon.setY(70), this.ribbon.setWorldSize(276.5, 68.5), this.add(this.ribbon)
						}, i.createTitle = function() {
							var e = this.options,
								t = e.title,
								i = e.titleSize,
								n = i || 28;
							this.title = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(n),
								text: t,
								origin: {
									x: .5,
									y: .5
								}
							}), this.add(this.title), Phaser.Display.Align.In.Center(this.title, this.ribbon, 0, -6)
						}, i.runAnimations = function() {
							this.runBackgroundAnimation()
						}, i.runBackgroundAnimation = function() {
							this.dinoAnimation || (this.dinoAnimation = new Vn({
								targets: [this.background],
								duration: 1400,
								repeatDelay: 200,
								props: {
									scale: "+=0.02"
								}
							})), this.dinoAnimation.play()
						}, t
					}(Phaser.GameObjects.Container),
					io = to,
					no = aa.Z.THEME,
					ao = no.KEY,
					so = no.FRAME,
					oo = function(e) {
						function t(t, i, n, a, s) {
							var o;
							return (o = e.call(this, t, i, n) || this).barTopLeft = void 0, o.barTopMid = void 0, o.barTopRight = void 0, o.barMidLeft = void 0, o.barMidBg = void 0, o.barMidRight = void 0, o.barBottomLeft = void 0, o.barBottomMid = void 0, o.barBottomRight = void 0, o.setSize(a, s), o.setDepth(jn.Z.POPUP), o.createPopup(), o.scene.add.existing((0, Un.Z)(o)), o
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createPopup = function() {
							this.createPopupImages(), this.updatePopupSize(), this.alignPopupImages()
						}, i.createPopupImages = function() {
							this.barTopLeft = this.scene.add.image(0, 0, ao, so.POPUP_TOP_LEFT), this.barTopMid = this.scene.add.image(0, 0, ao, so.POPUP_TOP_MID), this.barTopRight = this.scene.add.image(0, 0, ao, so.POPUP_TOP_RIGHT), this.barMidLeft = this.scene.add.image(0, 0, ao, so.POPUP_MID_LEFT), this.barMidBg = this.scene.add.image(0, 0, ao, so.POPUP_MID_MID), this.barMidRight = this.scene.add.image(0, 0, ao, so.POPUP_MID_RIGHT), this.barBottomLeft = this.scene.add.image(0, 0, ao, so.POPUP_BOTTOM_LEFT), this.barBottomMid = this.scene.add.image(0, 0, ao, so.POPUP_BOTTOM_MID), this.barBottomRight = this.scene.add.image(0, 0, ao, so.POPUP_BOTTOM_RIGHT), this.barTopLeft.setWorldSize(75, 75), this.barTopMid.setWorldSize(144.5, 75), this.barTopRight.setWorldSize(75, 75), this.barMidLeft.setWorldSize(75, 213.5), this.barMidBg.setWorldSize(144.5, 213.5), this.barMidRight.setWorldSize(75, 213.5), this.barBottomLeft.setWorldSize(75, 75), this.barBottomMid.setWorldSize(144.5, 75), this.barBottomRight.setWorldSize(75, 75), this.add([this.barTopRight, this.barTopMid, this.barBottomLeft, this.barBottomRight, this.barMidLeft, this.barMidRight, this.barTopLeft, this.barBottomMid, this.barMidBg])
						}, i.updatePopupSize = function() {
							this.barTopMid.setWorldSize(this.width - 150, this.barTopMid.height), this.barMidLeft.setWorldSize(this.barMidLeft.width, this.height - 150), this.barMidBg.setWorldSize(this.width - 150, this.height - 150), this.barMidRight.setWorldSize(this.barMidRight.width, this.height - 150), this.barBottomMid.setWorldSize(this.width - 150, this.barBottomMid.height)
						}, i.alignPopupImages = function() {
							Phaser.Display.Align.In.TopLeft(this.barTopLeft, this), Phaser.Display.Align.In.TopCenter(this.barTopMid, this), Phaser.Display.Align.In.TopRight(this.barTopRight, this), Phaser.Display.Align.In.LeftCenter(this.barMidLeft, this), Phaser.Display.Align.In.Center(this.barMidBg, this), Phaser.Display.Align.In.RightCenter(this.barMidRight, this), Phaser.Display.Align.In.BottomLeft(this.barBottomLeft, this), Phaser.Display.Align.In.BottomCenter(this.barBottomMid, this), Phaser.Display.Align.In.BottomRight(this.barBottomRight, this)
						}, (0, V.Z)(t, [{
							key: "onClose",
							set: function(e) {
								this.setInteractive({
									useHandCursor: !0
								}), this.on(Phaser.Input.Events.GAMEOBJECT_POINTER_DOWN, e)
							}
						}]), t
					}(Phaser.GameObjects.Container),
					ro = oo,
					lo = i(66419),
					co = i.n(lo),
					ho = i(65420),
					uo = i.n(ho),
					po = i(19996),
					mo = i.n(po),
					fo = i(35285),
					go = {
						targets: [],
						props: {
							alpha: {
								start: 0,
								to: 1,
								duration: 500,
								ease: Phaser.Math.Easing.Cubic.Out
							},
							scale: {
								start: .8,
								to: 1,
								duration: 1e3,
								ease: Phaser.Math.Easing.Elastic.Out,
								easeParams: [.1, .45]
							},
							y: {
								start: 0,
								to: 0,
								duration: 500,
								ease: Phaser.Math.Easing.Back.Out
							}
						},
						delay: 0
					},
					vo = function(e) {
						function t(t) {
							return e.call(this, go, t) || this
						}
						return (0, l.Z)(t, e), t
					}(Kn.Z),
					yo = i(20402),
					bo = function(e) {
						function t(t, i) {
							var n;
							(n = e.call(this, t) || this).payload = void 0, n.loading = void 0, n.photo = void 0, n.avtFrame = void 0, n.background = void 0, n.loadPhotoTimer = void 0, n.handleLoadPhotoAfterDelay = function(e, t) {
								return function() {
									var i = n.scene.textures.get(e);
									i && i.key === e ? n.handleLoadComplete(e) : (n.scene.load.once("filecomplete-image-" + e, n.handleLoadComplete), n.scene.load.image(e, t), n.scene.load.start())
								}
							}, n.handleLoadComplete = function(e) {
								if (n.scene) {
									var t = n.payload,
										i = t.id,
										a = t.radius,
										s = void 0 === a ? 0 : a,
										o = t.octagon;
									if (i && i === e) {
										var r = i + "_bordered_" + s,
											l = i + "_octagon_" + o,
											c = void 0 != o ? l : s > 0 ? r : i,
											h = n.scene.textures.get(c);
										if (h && h.key === c) n.setPhoto(h.key);
										else if (o) {
											if (!GameCore.Utils.Image.drawOctagon({
													scene: n.scene,
													key: i,
													newKey: l,
													octagon: o
												})) return void n.showLoading(!1);
											n.setPhoto(l)
										} else if (0 != s && s < 100) {
											if (!GameCore.Utils.Image.drawBorder({
													scene: n.scene,
													key: i,
													newKey: r,
													radius: s
												})) return void n.showLoading(!1);
											n.setPhoto(r)
										} else if (100 == s) {
											if (!GameCore.Utils.Image.drawCircle({
													scene: n.scene,
													key: i,
													newKey: r
												})) return void n.showLoading(!1);
											n.setPhoto(r)
										} else n.setPhoto(i)
									}
								}
							}, n.handleLoadPhotoFailed = function(e) {
								e.key === n.payload.id && n.setDefaultAvatar(e.key)
							}, n.scene.add.existing((0, Un.Z)(n)), n.payload = i, n.setSize(i.width, i.height), n.createBackground(), n.createLoading(), n.createPhoto(), n.createFrame();
							var a = n.payload,
								s = a.id,
								o = a.url,
								r = a.radius;
							return s && o && n.loadPhoto(s, o, r), n.addDefaultListeners(), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setFrame = function(e) {
							this.avtFrame.setFrame(e), this.avtFrame.setVisible(!0)
						}, i.setBackground = function(e) {
							this.background.setFrame(e)
						}, i.loadPhoto = function(e, t, i) {
							var n;
							if (void 0 === i && (i = 0), this.payload.id = e, this.payload.url = t, this.payload.radius = i, null == (n = this.loadPhotoTimer) || n.remove(), e && t) {
								var a = this.scene.textures.get(e);
								if (a && a.key === e) this.handleLoadComplete(e);
								else {
									this.showLoading(!0);
									var s = this.payload.loadDelay || 0;
									this.loadPhotoTimer = this.scene.time.delayedCall(s, this.handleLoadPhotoAfterDelay(e, t))
								}
							} else this.setPhoto(Yn.Z.AVATAR.KEY)
						}, i.addDefaultListeners = function() {
							var e = this;
							this.scene.load.on(Phaser.Loader.Events.FILE_LOAD_ERROR, this.handleLoadPhotoFailed), this.on(Phaser.GameObjects.Events.DESTROY, (function() {
								var t;
								null == (t = e.loadPhotoTimer) || t.remove(), e.scene.load.off(Phaser.Loader.Events.FILE_LOAD_ERROR, e.handleLoadPhotoFailed)
							}))
						}, i.setDefaultAvatar = function(e) {
							this.loadPhoto(e, Yn.Z.AVATAR.FILE, this.payload.radius)
						}, i.createBackground = function() {
							var e = this.payload,
								t = e.key,
								i = e.background;
							this.background = this.scene.make.image({
								key: t,
								frame: i
							}), this.background.setWorldSize(this.width, this.height), this.add(this.background)
						}, i.createLoading = function() {
							this.loading = new yo.Z(this.scene);
							var e = Math.min(this.width, this.height);
							this.loading.setWorldSize(.75 * e, .75 * e), this.loading.setVisible(!1), this.add(this.loading)
						}, i.createPhoto = function() {
							this.photo = this.scene.make.image({
								x: 0,
								y: 0,
								origin: {
									x: .5,
									y: .5
								},
								visible: !1
							}), this.add(this.photo)
						}, i.createFrame = function() {
							var e = this.payload,
								t = e.key,
								i = e.frame,
								n = e.width,
								a = e.height;
							i ? (this.avtFrame = this.scene.make.image({
								key: t,
								frame: i
							}), this.avtFrame.setWorldSize(n, a)) : this.avtFrame = this.scene.make.image({
								x: 0,
								y: 0,
								origin: {
									x: .5,
									y: .5
								},
								visible: !1
							}), this.add(this.avtFrame)
						}, i.showLoading = function(e) {
							this.photo.setVisible(!e), this.loading.setVisible(e)
						}, i.setPhoto = function(e) {
							this.showLoading(!1), this.photo.setTexture(e), this.photo.setFrame(0);
							var t = this.payload,
								i = t.width,
								n = t.height,
								a = Math.min(i, n) - 10;
							this.photo.setWorldSize(a, a), Phaser.Display.Align.In.Center(this.photo, this.background)
						}, t
					}(Phaser.GameObjects.Container),
					Eo = bo,
					To = aa.Z.DEFAULT,
					Ao = To.KEY,
					So = To.FRAME,
					_o = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).scene = void 0, n.rankIcon = void 0, n.username = void 0, n.score = void 0, n.showPopUp = void 0, n.avatar = void 0, n.rankText = void 0, n.background = void 0, n.scene = t, n.setDataEnabled(), n.setData(i), n.createBackground(), n.updateSize(), n.createAvatar(), n.createRank(), n.createUsername(), n.createScore(), n.scene.add.existing(n.setDepth(jn.Z.POPUP)), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createBackground = function() {
							this.background = this.scene.make.image({
								key: Ao,
								frame: So.LEADERBOARD_BG_DARK
							}), this.background.setWorldSize(270, 44), this.add(this.background)
						}, i.updateSize = function() {
							var e = this.background,
								t = e.width,
								i = e.height;
							this.setSize(t, i)
						}, i.createAvatar = function() {
							var e = this.getData("playerId"),
								t = this.getData("photo");
							this.avatar = new Eo(this.scene, {
								id: e,
								url: t,
								key: Ao,
								frame: So.AVATAR_FRAME_PURPLE,
								background: So.AVATAR_BG,
								width: 38,
								height: 40,
								loadDelay: 100
							}), this.add(this.avatar), Phaser.Display.Align.In.LeftCenter(this.avatar, this, -40, -2)
						}, i.createRank = function() {
							this.createRankIcon(), this.createRankText()
						}, i.createRankIcon = function() {
							var e, t = +this.getData("score");
							e = +this.getData("rank"), 0 === t && (e = 0), this.rankIcon = this.scene.make.image({
								key: Ao,
								frame: ""
							}), this.add(this.rankIcon), this.updateRankIcon(e)
						}, i.updateRankIcon = function(e) {
							var t = "";
							switch (e) {
								case 1:
								case 2:
								case 3:
								case 0:
									t = So.BLANK
							}
							this.rankIcon.setFrame(t), "" != t ? (this.rankIcon.setWorldSize(38, 49), 0 === e && this.rankIcon.setWorldSize(11, 16)) : this.rankIcon.setVisible(!1), this.rankIcon.setPosition(-116, 0)
						}, i.createRankText = function() {
							var e, t = +this.getData("score");
							e = +this.getData("rank"), 0 === t && (e = 0), this.rankText = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(18),
								text: "0",
								origin: {
									x: .5,
									y: .5
								}
							}), this.add(this.rankText), this.updateRankText(e)
						}, i.createUsername = function() {
							var e = this.getData("name"),
								t = GameCore.Utils.String.getShortName(e, 12),
								i = GameCore.Utils.String.removeDiacritics(t);
							this.username = this.scene.make.text({
								style: {
									fontFamily: _a.Z.FONT_FAMILY
								},
								origin: {
									x: 0,
									y: .5
								},
								text: i
							}), this.username.setTint(14803687), this.username.setHighQuality(), this.username.setFontSize(16), Phaser.Display.Align.In.LeftCenter(this.username, this.background, -85, 2), this.add(this.username)
						}, i.createScore = function() {
							var e = this.getData("score"),
								t = this.getData("rank");
							switch (this.score = this.scene.make.bitmapText({
									font: _a.Z.PRIMARY.KEY,
									size: this.scene.fontSize(20),
									text: "0",
									origin: {
										x: 1,
										y: .5
									}
								}), this.score.setTint(14803687), t) {
								case 1:
									this.score.setTint(15511591);
									break;
								case 2:
									this.score.setTint(12763842);
									break;
								case 3:
									this.score.setTint(15700059)
							}
							this.add(this.score), this.updateScore(e), Phaser.Display.Align.In.RightCenter(this.score, this.background, -16, 2)
						}, i.updateScore = function(e) {
							var t = GameCore.Utils.Number.toAbbreviatedString(+e, {
								startAbbreviate: 1e14
							});
							this.score.setText("" + t)
						}, i.updateRankText = function(e) {
							this.rankText.revive();
							var t = 18,
								i = "" + e;
							e < 4 && this.rankText.kill(), e > 999 && (t = 14, i = GameCore.Utils.Number.toAbbreviatedString(+e, {
								fractionalDigits: 1,
								removeLastZero: !0
							})), this.rankText.setText(i), this.rankText.setFontSize(t), this.rankText.setPosition(-110, 0)
						}, i.updateRank = function(e, t) {
							0 === t && (e = 0), this.updateRankIcon(e), this.updateRankText(e)
						}, i.runShowPopUpAnimation = function(e, t) {
							this.scene.tweens.killTweensOf(this), this.showPopUp = new vo({
								targets: [this],
								delay: e,
								duration: t,
								props: {
									y: {
										start: this.y + 70,
										to: this.y
									}
								}
							}), this.showPopUp.play()
						}, t
					}(Phaser.GameObjects.Container),
					Co = _o;

				function wo(e, t) {
					var i = "undefined" !== typeof uo() && mo()(e) || e["@@iterator"];
					if (i) return (i = i.call(e)).next.bind(i);
					if (Array.isArray(e) || (i = function(e, t) {
							var i;
							if (!e) return;
							if ("string" === typeof e) return Bo(e, t);
							var n = tt()(i = Object.prototype.toString.call(e)).call(i, 8, -1);
							"Object" === n && e.constructor && (n = e.constructor.name);
							if ("Map" === n || "Set" === n) return co()(e);
							if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Bo(e, t)
						}(e)) || t && e && "number" === typeof e.length) {
						i && (e = i);
						var n = 0;
						return function() {
							return n >= e.length ? {
								done: !0
							} : {
								done: !1,
								value: e[n++]
							}
						}
					}
					throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
				}

				function Bo(e, t) {
					(null == t || t > e.length) && (t = e.length);
					for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
					return n
				}
				var Io = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.leaders = void 0, i.currentPlayerLeader = void 0, i.scene = t, i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.resetLeadersBoard = function() {
							this.leaders && this.leaders.forEach((function(e) {
								return e.kill()
							})), this.currentPlayerLeader && this.currentPlayerLeader.kill()
						}, i.updateData = function(e) {
							var t = Zi()(e) || [],
								i = ji()(t).call(t, (function(e, t) {
									return +t.score - +e.score
								}));
							this.leaders = [];
							for (var n, a = wo(i); !(n = a()).done;) {
								var s = n.value,
									o = s.playerId,
									r = s.photo,
									l = s.score,
									c = s.name,
									h = s.rank;
								if (o) {
									var u = {
										playerId: o,
										photo: r,
										score: l,
										rank: h,
										name: c
									};
									if (this.leaders.length < 3) {
										var d = new Co(this.scene, u);
										this.leaders.push(d)
									}
								}
							}
							this.showLeaders(), this.showCurrentPlayerLeaders()
						}, i.showLeaders = function() {
							for (var e = this.leaders, t = 0; t < e.length; t++) {
								var i = e[t];
								if (!i) return;
								Phaser.Display.Align.In.Center(i, this.scene.main.board, 0, t * (i.height + 3) - 35), i.runShowPopUpAnimation(100 * t, 300)
							}
						}, i.showCurrentPlayerLeaders = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, i, n, a, s, o, r, l, c, u, d, p;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return t = window.game.player, i = t.getPlayer(), n = i.playerId, a = i.name, s = i.photo, e.next = 4, (0, fo.GA)(n);
										case 4:
											o = e.sent, r = 0, l = 0, GameCore.Configs.LeadersBoard.UseMock && (l = Phaser.Math.Between(999, 9999), r = Phaser.Math.Between(9999, 99999)), o && o.score && o.rank && (r = +o.score, l = +o.rank), this.currentPlayerLeader ? (this.currentPlayerLeader.revive(), this.currentPlayerLeader.updateScore(r), this.currentPlayerLeader.updateRank(l, r)) : (c = {
												playerId: n,
												photo: s,
												score: r,
												rank: l,
												name: a
											}, this.currentPlayerLeader = new Co(this.scene, c)), this.currentPlayerLeader.avatar.setY(0), this.currentPlayerLeader.rankText && (this.currentPlayerLeader.rankText.x -= 5), this.currentPlayerLeader.background.kill(), u = this.scene.gameZone.getCenter(), d = u.x, p = u.y, this.currentPlayerLeader.setPosition(d, p + 70), this.currentPlayerLeader.runShowPopUpAnimation(400, 300);
										case 16:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), t
					}(Phaser.GameObjects.Container),
					Po = Io,
					xo = i(39482),
					Oo = i(44494),
					ko = i.n(Oo),
					Ro = i(62262);

				function Mo(e, t) {
					var i = "undefined" !== typeof uo() && mo()(e) || e["@@iterator"];
					if (i) return (i = i.call(e)).next.bind(i);
					if (Array.isArray(e) || (i = function(e, t) {
							var i;
							if (!e) return;
							if ("string" === typeof e) return Lo(e, t);
							var n = tt()(i = Object.prototype.toString.call(e)).call(i, 8, -1);
							"Object" === n && e.constructor && (n = e.constructor.name);
							if ("Map" === n || "Set" === n) return co()(e);
							if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Lo(e, t)
						}(e)) || t && e && "number" === typeof e.length) {
						i && (e = i);
						var n = 0;
						return function() {
							return n >= e.length ? {
								done: !0
							} : {
								done: !1,
								value: e[n++]
							}
						}
					}
					throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
				}

				function Lo(e, t) {
					(null == t || t > e.length) && (t = e.length);
					for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
					return n
				}
				var Go = GameCore.Configs.LeadersBoard,
					Do = Go.UseMock,
					Fo = Go.Limit,
					No = function(e, t, i, n) {
						return void 0 === i && (i = Fo), void 0 === n && (n = 0),
							function() {
								var s = (0, r.Z)(h().mark((function s(o) {
									var r, l, c, u, d, p, m, f, g, v, y, b, E, T, S, C, w, B, I;
									return h().wrap((function(s) {
										for (;;) switch (s.prev = s.next) {
											case 0:
												if (s.prev = 0, r = window.game.player, l = r.getPlayerId(), o(Uo()), o({
														type: Yi,
														payload: {
															leaderboardId: e,
															type: t,
															limit: i,
															offset: n
														}
													}), !Do) {
													s.next = 13;
													break
												}
												return s.next = 8, (0, xo.qZ)(1e3);
											case 8:
												return 145, d = _()(c = ko()(u = new Array(i)).call(u, null)).call(c, (function(e, t) {
													var i = (t + 1) * (n + 1);
													return {
														playerId: 145 === t ? l : "0" + i,
														name: 145 === t ? "Current Player" : "MPlayer " + i,
														photo: "./assets/images/others/avatar.png",
														rank: i,
														score: Math.floor(17 * Math.random() * 1e7 / i)
													}
												})), d.length > 0 && (p = d.length - 1, d[p].name = "You", d[p].playerId = l, d[p].photo = "./assets/images/others/avatar.jpg"), o(Zo(d, t)), s.abrupt("return");
											case 13:
												if (m = [], t !== Ro.C) {
													s.next = 20;
													break
												}
												return s.next = 17, (0, fo.H$)({
													limit: i,
													offset: n
												});
											case 17:
												m = s.sent, s.next = 28;
												break;
											case 20:
												if (t !== Ro.n) {
													s.next = 28;
													break
												}
												return (f = r.getConnectedPlayerIds(i, n)).push(l), g = GameCore.Utils.Array.unique(f), s.next = 26, (0, fo.tu)({
													playerIds: g,
													limit: g.length
												});
											case 26:
												m = s.sent, g.forEach((function(e) {
													var t = A()(m).call(m, (function(t) {
														return t.playerId === e
													}));
													t && 0 !== t.length || m.push({
														playerId: e,
														score: 0
													})
												}));
											case 28:
												for (v = {}, y = Mo(m); !(b = y()).done;) E = b.value, T = E.playerId, S = E.score, C = E.rank, w = E.getPlayer(), B = w.getPhoto(), I = w.getName(), v[T] = {
													playerId: T,
													name: I,
													photo: B,
													score: S,
													rank: C
												};
												o(Zo(v, t)), s.next = 38;
												break;
											case 34:
												s.prev = 34, s.t0 = s.catch(0), o(Zo([], t)), (0, a.tO)(s.t0);
											case 38:
											case "end":
												return s.stop()
										}
									}), s, null, [
										[0, 34]
									])
								})));
								return function(e) {
									return s.apply(this, arguments)
								}
							}()
					},
					Zo = function(e, t) {
						return {
							type: Wi,
							payload: {
								leaders: e,
								type: t
							}
						}
					},
					Uo = function() {
						return {
							type: Ki,
							payload: {}
						}
					},
					jo = aa.Z.DEFAULT,
					Yo = jo.KEY,
					Wo = jo.FRAME,
					Ko = aa.Z.THEME,
					Ho = Ko.KEY,
					zo = Ko.FRAME,
					Xo = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.board = void 0, i.loading = void 0, i.subPanel = void 0, i.leadersBar = void 0, i.countdownTimer = void 0, i.countdownText = void 0, i.emptyMessage = void 0, i.updateCountdown = (0, r.Z)(h().mark((function e() {
								var t, n, a, s, o, r, l;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											t = Date.now(), n = new Date(t), a = n.getDay(), s = n.getDate() - a + (0 == a ? 1 : 8), o = new Date(n.setDate(s)).setHours(0, 0, 0, 0), r = o - t, l = Math.floor(r / 864e5), r < 0 && (r = 0, i.resetLeaderBoards()), i.countdownText.setText("0" + l + ":" + (0, xo.F0)(r, !0));
										case 5:
										case "end":
											return e.stop()
									}
								}), e)
							}))), i.scene = t, i.createBoard(), i.createSubPanel(), i.createClock(), i.createCountdownTimer(), i.createLoading(), i.createLeaderBar(), i.createEmptyMessage(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setEmptyMessageVisible = function(e) {
							e ? this.emptyMessage.revive() : this.emptyMessage.kill()
						}, i.resetLeadersData = function() {
							this.leadersBar.resetLeadersBoard()
						}, i.updateLeadersData = function(e) {
							this.leadersBar.updateData(e)
						}, i.createBoard = function() {
							this.board = new ro(this.scene, 0, 0, 305, 200), this.add(this.board)
						}, i.createSubPanel = function() {
							this.subPanel = this.scene.make.image({
								key: Ho,
								frame: zo.POPUP_BOARD_BOTTOM
							}), this.subPanel.setWorldSize(291.5, 58), this.add(this.subPanel), this.moveBelow(this.subPanel, this.board), Phaser.Display.Align.In.BottomCenter(this.subPanel, this.board, 0, 57)
						}, i.createCountdownTimer = function() {
							var e;
							null == (e = this.countdownTimer) || e.destroy(), this.countdownTimer = this.scene.time.addEvent({
								loop: !0,
								delay: 1e3,
								startAt: 1e3,
								callback: this.updateCountdown
							})
						}, i.createClock = function() {
							var e = this.scene.add.container();
							this.countdownText = this.scene.add.text(0, 0, "0", {
								fontSize: "13px",
								fontFamily: _a.Z.FONT_FAMILY,
								color: "#b4b9c4"
							}), this.countdownText.setHighQuality(), Phaser.Display.Align.In.Center(this.countdownText, e, -30, -2);
							var t = this.scene.make.image({
								key: Yo,
								frame: Wo.BLANK
							});
							t.setWorldSize(21, 24), Phaser.Display.Align.In.Center(t, e, -47, 0), e.add([t, this.countdownText]), Phaser.Display.Align.In.TopCenter(e, this.board, 10, -33), this.add(e)
						}, i.createLeaderBar = function() {
							this.leadersBar = new Po(this.scene).setDepth(jn.Z.POPUP)
						}, i.createLoading = function() {
							this.loading = new yo.Z(this.scene), this.loading.setTint(5982858), this.loading.setWorldSize(55, 55), this.add(this.loading), Phaser.Display.Align.In.Center(this.loading, this.board, 0, 15)
						}, i.createEmptyMessage = function() {
							this.emptyMessage = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(20),
								text: "You are the top of the top!",
								origin: {
									x: .5,
									y: .5
								}
							}), this.emptyMessage.kill(), this.add(this.emptyMessage)
						}, i.showLoading = function(e) {
							this.loading.setVisible(e), this.setEmptyMessageVisible(!1)
						}, i.resetLeaderBoards = function() {
							this.leadersBar.resetLeadersBoard(), this.scene.storage.dispatch(Uo())
						}, t
					}(Phaser.GameObjects.Container),
					Vo = Xo,
					Jo = aa.Z.DEFAULT,
					qo = Jo.KEY,
					Qo = Jo.FRAME,
					$o = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, qo, Qo.BUTTON_GREEN_LONG) || this).buttonsPulsateAnimation = void 0, i.setName("PlaySingle"), i.button.setWorldSize(135.5, 73), i.createIcon(), i.createText(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createIcon = function() {
							var e = this.scene.make.image({
								key: qo,
								frame: Qo.BLANK
							});
							e.setPosition(-28, -2), e.setWorldSize(28, 38.5), this.add(e)
						}, i.createText = function() {
							var e = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(20),
								text: "Play\nNow",
								origin: {
									x: .5,
									y: .5
								}
							});
							e.setPosition(16, 0), e.setLeftAlign(), this.add(e)
						}, i.runAnimation = function() {
							var e, t;
							null == (e = this.buttonsPulsateAnimation) || e.remove(), this.buttonsPulsateAnimation = new Vn({
								targets: [this],
								props: {
									scale: "-=0.02"
								}
							}), null == (t = this.buttonsPulsateAnimation) || t.play()
						}, t
					}(ea.Z),
					er = $o,
					tr = aa.Z.DEFAULT,
					ir = tr.KEY,
					nr = tr.FRAME,
					ar = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, ir, nr.BUTTON_BLUE_LONG) || this).setName("PlayWithFriends"), i.button.setWorldSize(135.5, 73), i.createIcon(), i.createText(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createIcon = function() {
							var e = this.scene.make.image({
								key: ir,
								frame: nr.ICON_FRIENDS
							});
							e.setPosition(-28, -2), e.setWorldSize(39.5, 37), this.add(e)
						}, i.createText = function() {
							var e = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(20),
								text: "Play\nWith",
								origin: {
									x: .5,
									y: .5
								}
							});
							e.setPosition(18, 0), e.setLeftAlign(), this.add(e)
						}, t
					}(ea.Z),
					sr = ar,
					or = aa.Z.DEFAULT.FRAME,
					rr = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).dinoTitle = void 0, i.board = void 0, i.scene = void 0, i.playSingleButton = void 0, i.playWithFriendsButton = void 0, i.scene = t, i.createBoard(), i.createDinoTitle(), i.createPlayWithFriendButton(), i.createPlaySingleButton(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createDinoTitle = function() {
							this.dinoTitle = new io(this.scene, {
								title: "Leaderboards",
								titleSize: 24
							}), this.dinoTitle.changeRibbon(or.RIBBON_PINK, 276.5, 68.5), this.dinoTitle.changeBackground(or.BLANK, 204, 61.5), this.add(this.dinoTitle), Phaser.Display.Align.In.Center(this.dinoTitle, this, 0, -225)
						}, i.createBoard = function() {
							this.board = new Vo(this.scene), Phaser.Display.Align.In.Center(this.board, this.scene.gameZone, 0, -55)
						}, i.createPlaySingleButton = function() {
							this.playSingleButton = new er(this.scene), this.add(this.playSingleButton);
							var e = (this.scene.gameZone.height - 610) / 4;
							this.playSingleButton.setPosition(-80, 155 + e)
						}, i.createPlayWithFriendButton = function() {
							this.playWithFriendsButton = new sr(this.scene), this.add(this.playWithFriendsButton);
							var e = (this.scene.gameZone.height - 610) / 4;
							this.playWithFriendsButton.setPosition(80, 155 + e)
						}, t
					}(Phaser.GameObjects.Container),
					lr = rr,
					cr = i(99873),
					hr = i(26108),
					ur = i(4175),
					dr = i(99599),
					pr = (GameCore.Configs.DailyTasks, function(e) {
						return function(t) {
							var i = {};
							e.forEach((function(e) {
								var t = e.id,
									n = e.require;
								i[t] = {}, K()(n).forEach((function(e) {
									var n;
									i[t] = ((n = {})[e] = 0, n.rewarded = !1, n)
								}))
							})), window.game.player.setCustomData("dailyTasks", {
								logTasks: i,
								startedTime: Date.now()
							}), t(mr(i)), ur.Z.emit(dr.Z.EVENTS.TASKS_RESET)
						}
					}),
					mr = function(e) {
						return {
							type: Ji,
							payload: {
								process: e
							}
						}
					},
					fr = function() {
						return function(e) {
							e({
								type: Qi,
								payload: {}
							}), ur.Z.emit(dr.Z.EVENTS.NOTICE_UPDATE)
						}
					},
					gr = (0, $.P1)([function(e) {
						var t;
						return null == (t = e.dailyTasks) ? void 0 : t.tasks
					}], (function(e) {
						return e
					})),
					vr = (0, $.P1)([function(e) {
						var t;
						return null == (t = e.dailyTasks) ? void 0 : t.process
					}], (function(e) {
						return e
					})),
					yr = ((0, $.P1)([function(e) {
						var t;
						return null == (t = e.dailyTasks) ? void 0 : t.isRequesting
					}], (function(e) {
						return e
					})), (0, $.P1)([function(e) {
						var t;
						return null == (t = e.dailyTasks) ? void 0 : t.isNotice
					}], (function(e) {
						return e
					})), aa.Z.THEME_GAMEPLAY),
					br = yr.KEY,
					Er = yr.FRAME,
					Tr = function(e) {
						function t(t, i) {
							var n;
							(n = e.call(this, t) || this).payload = void 0, n.process = void 0, n.minProcess = void 0, n.maxProcess = void 0, n.progressAnimation = void 0, n.progressBg = void 0, n.progressBar = void 0, n.payload = (0, o.Z)({
								onUpdate: function() {}
							}, i);
							var a = i.width,
								s = 18.5;
							return n.setSize(a, s), n.process = 0, n.minProcess = 0, n.maxProcess = 1, n.createProgressBg(a, s), n.createProgressBar(a - 5.5, 13.5), n.createContainer(), n.setProgress(0, !0), n.handleChangeTheme(), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.handleChangeTheme = function() {
							var e = this;
							this.updateTextureTheme();
							var t = this.scene.theme,
								i = t.EVENTS;
							t.events.on(i.THEME_CHANGE + "-" + br, (function(t) {
								e.updateTextureTheme()
							}))
						}, i.updateTextureTheme = function() {
							var e = this.scene.theme.getCurrentTheme(br);
							this.scene.textures.get(e.textureKey).has(Er.PROGRESS_BG) && (this.progressBg.setFrame(Er.PROGRESS_BG), this.progressBg.setWorldSize(this.payload.width, 18.5))
						}, i.setProgress = function(e, t) {
							if (void 0 === t && (t = !1), !this.scene || t) return this.process = this.getCorrectValue(e), void this.updateProgress(this.process);
							this.runProgressAnimation(e)
						}, i.updateProgress = function(e) {
							var t = this.payload.onUpdate,
								i = this.scene.world.getPixelRatio(),
								n = 138.5 * e * i;
							this.progressBar.setCrop(0, 0, n, 13.5 * i), t(this.process)
						}, i.getCorrectValue = function(e) {
							var t = e;
							return isFinite(t) || (t = 0), t < this.minProcess && (t = this.minProcess), t > this.maxProcess && (t = this.maxProcess), t
						}, i.runProgressAnimation = function(e) {
							var t, i = this;
							null == (t = this.progressAnimation) || t.stop();
							var n = this.getCorrectValue(e);
							this.progressAnimation = this.scene.tweens.addCounter({
								from: this.process,
								to: n,
								ease: Phaser.Math.Easing.Quadratic.InOut,
								onUpdate: function(e) {
									var t = e.getValue();
									i.process = t, i.updateProgress(t)
								},
								onComplete: function() {
									i.updateProgress(n)
								}
							})
						}, i.createProgressBg = function(e, t) {
							this.progressBg = this.scene.make.image({
								key: br,
								frame: Er.PROGRESS_BG
							}), this.progressBg.setWorldSize(e, t)
						}, i.createProgressBar = function(e, t) {
							this.progressBar = this.scene.make.image({
								key: br,
								frame: Er.PROGRESS_BAR
							}), this.progressBar.setWorldSize(e, t)
						}, i.createContainer = function() {
							this.add([this.progressBg, this.progressBar]), this.scene.add.existing(this)
						}, t
					}(Phaser.GameObjects.Container),
					Ar = Tr,
					Sr = function() {
						var e = (window.game.player.getCustomData("dailyTasks") || {}).logTasks;
						return GameCore.Utils.Json.clone(e)
					},
					_r = aa.Z.DEFAULT,
					Cr = _r.KEY,
					wr = _r.FRAME,
					Br = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t) || this).payload = void 0, a.process = void 0, a.isCompleted = void 0, a.background = void 0, a.titleText = void 0, a.processText = void 0, a.progressBar = void 0, a.claimButton = void 0, a.rewardedIcon = void 0, a.missionIcon = void 0, a.handleOnClaim = function(e) {
								return function() {
									var t = a.payload,
										i = t.id,
										n = t.reward,
										s = a.claimButton.getWorldPosition();
									a.scene.storage.dispatch(function(e) {
										return function(t) {
											var i = Sr();
											if (GameCore.Utils.Valid.isObject(i)) {
												var n = i;
												GameCore.Utils.Object.hasOwn(n, e) && (n[e].rewarded = !0, window.game.player.setCustomData("dailyTasks", {
													logTasks: n
												}), t({
													type: qi,
													payload: {
														id: e
													}
												}))
											}
										}
									}(i)), a.claimButton.kill(), K()(n).forEach((function(t) {
										var i = n[t];
										e(t, i), a.scene.events.emit("claim-reward", s, i)
									}))
								}
							}, a.updateData = function() {
								var e, t, i = a.getProcessValue(),
									n = i.current,
									s = i.target,
									o = n / s;
								a.progressBar.setProgress(o, !0), a.setProcessText(n, s), a.isCompleted = n >= s && !(null != (e = a.process) && e.rewarded), a.claimButton.setDisabled(!a.isCompleted), null != (t = a.process) && t.rewarded && a.claimButton.kill(), a.isCompleted && a.rewardedIcon.setFrame(wr.BLANK)
							}, a.payload = i, a.process = n, a.setName("Task: " + i.id), a.createBackground(), a.updateBlockSize(), a.createMissionIcon(), a.createTitle(), a.createProcessBar(), a.createProcessStatus(), a.createClaimButton(), a.updateData(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setProcess = function(e) {
							this.process = e, this.updateData()
						}, i.getId = function() {
							return this.payload.id
						}, i.getProcessValue = function() {
							var e = this,
								t = this.payload.require,
								i = K()(t),
								n = 0,
								a = 0;
							return i.forEach((function(i) {
								n = t[i] || 0;
								var s = e.process[i];
								a = "number" === typeof s ? s : 0
							})), {
								current: a,
								target: n
							}
						}, i.setProcessText = function(e, t) {
							this.processText.setText(e + " / " + t)
						}, i.createBackground = function() {
							this.background = this.scene.make.image({
								key: Cr,
								frame: wr.MISSION_BLOCK_BG
							}), this.background.setWorldSize(298, 74.5), this.add(this.background)
						}, i.updateBlockSize = function() {
							var e = this.background,
								t = e.width,
								i = e.height;
							this.setSize(t, i)
						}, i.createMissionIcon = function() {
							var e = this.payload.id,
								t = dr.Z.COLLECT_EGGS,
								i = dr.Z.COMPLETE_GAMES,
								n = dr.Z.INVITE_FRIENDS,
								a = dr.Z.REACH_TARGET_POINTS,
								s = dr.Z.SHOOT_FLYING_EGG,
								o = dr.Z.USE_RESCUE,
								r = dr.Z.GET_DINOMITE_COMBO;
							switch (this.missionIcon = this.scene.make.image({
									key: Cr,
									frame: wr.BLANK
								}), e) {
								case t.ID:
									this.missionIcon.setFrame(wr.ICON_EGGS), this.missionIcon.setWorldSize(55.5, 59.5);
									break;
								case i.ID:
									this.missionIcon.setFrame(wr.ICON_CROWN), this.missionIcon.setWorldSize(57, 57.5);
									break;
								case n.ID:
									this.missionIcon.setFrame(wr.BLANK), this.missionIcon.setWorldSize(59.5, 54.5);
									break;
								case a.ID:
									this.missionIcon.setFrame(wr.BLANK), this.missionIcon.setWorldSize(65.5, 49);
									break;
								case s.ID:
									this.missionIcon.setFrame(wr.BLANK), this.missionIcon.setWorldSize(60.5, 55);
									break;
								case o.ID:
									this.missionIcon.setFrame(wr.BLANK), this.missionIcon.setWorldSize(64.5, 48.5);
									break;
								case r.ID:
									this.missionIcon.setFrame(wr.BLANK), this.missionIcon.setWorldSize(47, 59)
							}
							this.add(this.missionIcon), this.missionIcon.setPosition(-110, 0)
						}, i.createTitle = function() {
							var e = this.payload.title;
							this.titleText = this.scene.make.text({
								text: e,
								style: {
									color: "#63452F",
									fontFamily: _a.Z.FONT_FAMILY,
									fontSize: "14px"
								},
								origin: {
									x: 0,
									y: .5
								}
							}), this.titleText.setHighQuality(), this.add(this.titleText), Phaser.Display.Align.In.LeftCenter(this.titleText, this, -70, -14)
						}, i.createProcessBar = function() {
							var e = aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES,
								t = e.KEY,
								i = e.FRAME;
							this.progressBar = new Ar(this.scene, {
								width: 136,
								key: t,
								frames: i
							}), this.add(this.progressBar), Phaser.Display.Align.In.Center(this.progressBar, this, -12, 10)
						}, i.createProcessStatus = function() {
							this.processText = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(12),
								origin: {
									x: .5,
									y: .5
								}
							}), this.add(this.processText), Phaser.Display.Align.In.Center(this.processText, this.progressBar, 0, 0)
						}, i.createClaimButton = function() {
							this.claimButton = new ea.Z(this.scene, Cr, wr.BUTTON_GREEN_SHORT, 61.5, 32);
							var e = "Claim:" + GameCore.Utils.String.toUpperCamelCase(this.payload.id);
							this.claimButton.setName(e), this.createRewardIcon(), this.createRewardValue(), this.add(this.claimButton), Phaser.Display.Align.In.RightCenter(this.claimButton, this.background, -18, 8)
						}, i.createRewardIcon = function() {
							this.rewardedIcon = this.scene.make.image({
								key: Cr,
								frame: wr.BLANK
							}), this.rewardedIcon.setFrame(wr.BLANK), this.rewardedIcon.setWorldSize(15.5, 15.5), this.claimButton.add(this.rewardedIcon), Phaser.Display.Align.In.Center(this.rewardedIcon, this.claimButton, -15, -1)
						}, i.createRewardValue = function() {
							var e = this.payload.reward,
								t = this.scene.make.bitmapText({
									font: _a.Z.PRIMARY.KEY,
									size: this.scene.fontSize(14),
									text: "" + e.coin,
									origin: {
										x: .5,
										y: .5
									}
								});
							this.claimButton.add(t), Phaser.Display.Align.In.Center(t, this.claimButton, 8, -1)
						}, (0, V.Z)(t, [{
							key: "onClaim",
							set: function(e) {
								this.claimButton.onClick = this.handleOnClaim(e), this.updateData()
							}
						}]), t
					}(Phaser.GameObjects.Container),
					Ir = Br,
					Pr = aa.Z.DEFAULT,
					xr = Pr.KEY,
					Or = Pr.FRAME,
					kr = aa.Z.THEME,
					Rr = kr.KEY,
					Mr = kr.FRAME,
					Lr = GameCore.Configs.DailyTasks,
					Gr = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).onReward = void 0, s.missionsData = void 0, s.missionProcess = void 0, s.startedTime = void 0, s.scroller = void 0, s.popup = void 0, s.missionBlocks = void 0, s.countdownTimer = void 0, s.countdownText = void 0, s.countdownContainer = void 0, s.backgroundFadeInAnimation = void 0, s.popupShowUpAnimation = void 0, s.popupExitsAnimation = void 0, s.contentShowUpAnimation = void 0, s.handleClosePopup = function() {
								s.scene.storage.dispatch(fr()), s.runCloseAnimation()
							}, s.handleOnClaim = function(e, t) {
								s.claimReward(e, t)
							}, s.resetTaskData = (0, r.Z)(h().mark((function e() {
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return s.startedTime = Date.now(), e.next = 3, s.scene.storage.dispatch(pr(s.missionsData));
										case 3:
											s.updateTasksData(), s.scroller.value = 0, s.createMissionBlocks();
										case 6:
										case "end":
											return e.stop()
									}
								}), e)
							}))), s.updateTasksData = function() {
								var e = s.scene,
									t = e.player,
									i = e.storage.getState(),
									n = gr(i) || [],
									a = vr(i) || {},
									o = (t.getCustomData("dailyTasks") || {}).startedTime,
									r = void 0 === o ? 0 : o;
								s.missionsData = n, s.missionProcess = a, s.startedTime = r
							}, s.updateCountdown = (0, r.Z)(h().mark((function e() {
								var t, i, n;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (s.startedTime) {
												e.next = 2;
												break
											}
											return e.abrupt("return");
										case 2:
											if (t = Date.now(), i = t - s.startedTime, !((n = 1e3 * Lr.Duration - i) < 0)) {
												e.next = 9;
												break
											}
											return n = 0, e.next = 9, s.resetTaskData();
										case 9:
											s.countdownText.setText("" + (0, xo.F0)(n, !0));
										case 10:
										case "end":
											return e.stop()
									}
								}), e)
							}))), s.createPopup(), s.createCloseButton(), s.createPopupContents(), s.createScroller(), s.createDebugTools(), s.setDepth(Wn.Ks.POPUP), s.background.setAlpha(.5), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setBlockInputOutsideEnabled = function(e) {
							this.scene.input.setTopOnly(!0)
						}, i.open = function(t) {
							e.prototype.open.call(this, t), this.scene.storage.dispatch(fr()), this.updateTasksData(), this.scroller.value = 0, this.createCountdownTimer(), this.createMissionBlocks(), this.runOpenAnimation(), this.scroller.setEnable(!0)
						}, i.createScroller = function() {
							this.scroller = new hr.Z(this.scene, {
								width: 280,
								height: 310
							}), this.scene.renderer instanceof Phaser.Renderer.WebGL.WebGLRenderer && this.scroller.createBound(aa.Z.DEFAULT.KEY, aa.Z.DEFAULT.FRAME.BLANK, 4, 2826565), this.scroller.createMask(), this.scroller.setPosition(0, 20), this.popup.add(this.scroller)
						}, i.claimReward = function(e, t) {
							"function" === typeof this.onReward && (this.onReward(e, t), this.updateTasksData(), this.updateMissionBlocks(), this.scene.audio.playSound(sa.Z.DAILY_REWARD))
						}, i.runOpenAnimation = function() {
							this.setVisible(!0), this.scene.audio.playSound(sa.Z.POPUP_IN), this.runBackgroundEntrancesAnimation(0, 300), this.runPopupEntrancesAnimation(200, 500), this.runPopupContentEntrancesAnimation(400, 400)
						}, i.runCloseAnimation = function() {
							this.scene.audio.playSound(sa.Z.POPUP_OUT), this.runPopupExitsAnimation(0, 200)
						}, i.runBackgroundEntrancesAnimation = function(e, t) {
							var i;
							this.backgroundFadeInAnimation || (this.backgroundFadeInAnimation = new Jn.Z({
								targets: [this.background],
								delay: e,
								duration: t,
								props: {
									alpha: {
										start: 0,
										from: 0,
										to: .8
									}
								}
							})), null == (i = this.backgroundFadeInAnimation) || i.play()
						}, i.runPopupEntrancesAnimation = function(e, t) {
							var i, n;
							if (!this.popupShowUpAnimation) return this.popupShowUpAnimation = new cr.Z({
								targets: [this.popup],
								delay: e,
								duration: t,
								props: {
									y: {
										from: 350,
										to: this.popup.y
									},
									scale: {
										start: 0,
										from: 0,
										to: 1
									},
									alpha: {
										start: 1,
										from: 1,
										to: 1
									}
								}
							}), void(null == (n = this.popupShowUpAnimation) || n.play());
							null == (i = this.popupShowUpAnimation) || i.play()
						}, i.runPopupContentEntrancesAnimation = function(e, t) {
							var i, n, a = this.missionBlocks.getChildren();
							a.length < 1 || (this.missionBlocks.setAlpha(0), null == (i = this.contentShowUpAnimation) || i.remove(), this.contentShowUpAnimation = new Qn.Z({
								targets: a,
								duration: t,
								delay: this.scene.tweens.stagger(80, {
									start: e
								}),
								props: {
									alpha: {
										from: 0,
										to: 1
									}
								}
							}), null == (n = this.contentShowUpAnimation) || n.play())
						}, i.runPopupExitsAnimation = function(e, t) {
							var i, n, a = this;
							if (!this.popupExitsAnimation) return this.popupExitsAnimation = new qn.Z({
								targets: [this.popup],
								delay: e,
								duration: t,
								props: {
									y: 250,
									scale: 0
								},
								onComplete: function() {
									a.scene.screen.close(a.name), a.popup.setY(0)
								}
							}), void(null == (n = this.popupExitsAnimation) || n.play());
							null == (i = this.popupExitsAnimation) || i.play()
						}, i.createDebugTools = function() {
							if (GameCore.Utils.Valid.isDebugger()) {
								var e = new ea.Z(this.scene, xr, Or.BLANK);
								e.button.setWorldSize(21, 23), e.setName("Reset"), e.onClick = this.resetTaskData, this.add(e), Phaser.Display.Align.In.TopLeft(e, this.zone, -30, -60)
							}
						}, i.createCloseButton = function() {
							var e = new Ia.Z(this.scene, {
								key: Rr,
								frame: Mr.BUTTON_CLOSE,
								width: 48.5,
								height: 43,
								paddingZone: 20
							});
							this.popup.add(e), e.setName("Close"), e.useSound = !1, e.onClick = this.handleClosePopup, Phaser.Display.Align.In.TopRight(e, this.popup, 25, 25)
						}, i.createPopup = function() {
							this.popup = new ro(this.scene, 0, 0, 334, 410), this.add(this.popup), Phaser.Display.Align.In.Center(this.popup, this.zone)
						}, i.createPopupContents = function() {
							this.createTitle(), this.createCountdown()
						}, i.createTitle = function() {
							var e = this.scene.add.container(),
								t = this.scene.make.image({
									key: xr,
									frame: Or.RIBBON_ORANGE
								});
							t.setWorldSize(225, 65.5);
							var i = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(24),
								text: "Daily Missions"
							});
							Phaser.Display.Align.In.Center(i, t, 0, -4), e.add([t, i]), this.popup.add(e), Phaser.Display.Align.In.TopCenter(e, this.popup, 0, -10)
						}, i.createCountdown = function() {
							this.countdownContainer = this.scene.add.container();
							var e = this.scene.make.image({
								key: xr,
								frame: Or.BLANK
							});
							e.setWorldSize(18, 20.5), this.countdownText = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(16),
								text: "00:00:00",
								origin: {
									x: .5,
									y: .5
								}
							}), Phaser.Display.Align.To.RightCenter(this.countdownText, e, 3);
							var t = e.width + this.countdownText.width - 10;
							this.countdownContainer.add([e, this.countdownText]), this.popup.add(this.countdownContainer), Phaser.Display.Align.In.TopCenter(this.countdownContainer, this.popup, -t / 2, -55)
						}, i.createCountdownTimer = function() {
							var e;
							null == (e = this.countdownTimer) || e.destroy(), this.countdownTimer = this.scene.time.addEvent({
								loop: !0,
								delay: 1e3,
								startAt: 1e3,
								callback: this.updateCountdown
							})
						}, i.createMissionBlocks = function() {
							var e, t, i = this;
							null == (e = this.missionBlocks) || e.destroy(!0);
							var n = this.missionsData.length,
								a = ko()(t = new Array(n)).call(t, null);
							this.missionBlocks = this.scene.add.group({
								maxSize: n
							}), a.forEach((function(e, t) {
								var n = i.createMissionBlock(t);
								null !== n && i.missionBlocks.add(n)
							})), this.missionBlocks.setX(0);
							var s = this.missionBlocks.getChildren();
							this.scroller.addItems(s)
						}, i.createMissionBlock = function(e) {
							var t = this.missionsData[e].id;
							if (!GameCore.Utils.Object.hasOwn(this.missionProcess, t)) return null;
							var i = this.missionProcess[t];
							if (!GameCore.Utils.Valid.isObject(i)) return null;
							var n = new Ir(this.scene, this.missionsData[e], i);
							return n.setY(70 * e - 110), n.onClaim = this.handleOnClaim, n
						}, i.updateMissionBlocks = function() {
							var e = this;
							this.missionBlocks.getChildren().forEach((function(t) {
								if (t instanceof Ir) {
									var i = t.getId();
									if (!GameCore.Utils.Object.hasOwn(e.missionProcess, i)) return;
									var n = e.missionProcess[i];
									if (!GameCore.Utils.Valid.isObject(n)) return;
									t.setProcess(n)
								}
							}))
						}, t
					}(GameCore.Screen),
					Dr = Gr,
					Fr = aa.Z.THEME,
					Nr = Fr.FRAME,
					Zr = Fr.DEFAULT.KEY,
					Ur = function(e) {
						function t(t, i, n, a, s) {
							var o;
							return (o = e.call(this, t, i, n) || this).barTopLeft = void 0, o.barTopMid = void 0, o.barTopRight = void 0, o.barMidLeft = void 0, o.barMidBg = void 0, o.barMidRight = void 0, o.barBottomLeft = void 0, o.barBottomMid = void 0, o.barBottomRight = void 0, o.setSize(a, s), o.setDepth(jn.Z.POPUP), o.createPopup(), o.scene.add.existing((0, Un.Z)(o)), o
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createPopup = function() {
							this.createPopupImages(), this.updatePopupSize(), this.alignPopupImages()
						}, i.createPopupImages = function() {
							this.barTopLeft = this.scene.add.image(0, 0, Zr, Nr.POPUP_TOP_LEFT), this.barTopMid = this.scene.add.image(0, 0, Zr, Nr.POPUP_TOP_MID), this.barTopRight = this.scene.add.image(0, 0, Zr, Nr.POPUP_TOP_RIGHT), this.barMidLeft = this.scene.add.image(0, 0, Zr, Nr.POPUP_MID_LEFT), this.barMidBg = this.scene.add.image(0, 0, Zr, Nr.POPUP_MID_MID), this.barMidRight = this.scene.add.image(0, 0, Zr, Nr.POPUP_MID_RIGHT), this.barBottomLeft = this.scene.add.image(0, 0, Zr, Nr.POPUP_BOTTOM_LEFT), this.barBottomMid = this.scene.add.image(0, 0, Zr, Nr.POPUP_BOTTOM_MID), this.barBottomRight = this.scene.add.image(0, 0, Zr, Nr.POPUP_BOTTOM_RIGHT), this.barTopLeft.setWorldSize(75, 75), this.barTopMid.setWorldSize(144.5, 75), this.barTopRight.setWorldSize(75, 75), this.barMidLeft.setWorldSize(75, 213.5), this.barMidBg.setWorldSize(144.5, 213.5), this.barMidRight.setWorldSize(75, 213.5), this.barBottomLeft.setWorldSize(75, 75), this.barBottomMid.setWorldSize(144.5, 75), this.barBottomRight.setWorldSize(75, 75), this.add([this.barTopRight, this.barTopMid, this.barBottomLeft, this.barBottomRight, this.barMidLeft, this.barMidRight, this.barTopLeft, this.barBottomMid, this.barMidBg])
						}, i.updatePopupSize = function() {
							this.barTopMid.setWorldSize(this.width - 150, this.barTopMid.height), this.barMidLeft.setWorldSize(this.barMidLeft.width, this.height - 150), this.barMidBg.setWorldSize(this.width - 150, this.height - 150), this.barMidRight.setWorldSize(this.barMidRight.width, this.height - 150), this.barBottomMid.setWorldSize(this.width - 150, this.barBottomMid.height)
						}, i.alignPopupImages = function() {
							Phaser.Display.Align.In.TopLeft(this.barTopLeft, this), Phaser.Display.Align.In.TopCenter(this.barTopMid, this), Phaser.Display.Align.In.TopRight(this.barTopRight, this), Phaser.Display.Align.In.LeftCenter(this.barMidLeft, this), Phaser.Display.Align.In.Center(this.barMidBg, this), Phaser.Display.Align.In.RightCenter(this.barMidRight, this), Phaser.Display.Align.In.BottomLeft(this.barBottomLeft, this), Phaser.Display.Align.In.BottomCenter(this.barBottomMid, this), Phaser.Display.Align.In.BottomRight(this.barBottomRight, this)
						}, (0, V.Z)(t, [{
							key: "onClose",
							set: function(e) {
								this.setInteractive({
									useHandCursor: !0
								}), this.on(Phaser.Input.Events.GAMEOBJECT_POINTER_DOWN, e)
							}
						}]), t
					}(Phaser.GameObjects.Container),
					jr = Ur,
					Yr = i(92439),
					Wr = [{
						id: 1,
						items: {
							Coin: 20
						}
					}, {
						id: 2,
						items: {
							Coin: 30
						}
					}, {
						id: 3,
						items: {
							Coin: 40,
							BombBulletItem: 1
						}
					}, {
						id: 4,
						items: {
							Coin: 60
						}
					}, {
						id: 5,
						items: {
							RainbowBulletBallItem: 1
						}
					}, {
						id: 6,
						items: {
							Coin: 60,
							ElectricBulletBallItem: 1
						}
					}, {
						id: 7,
						items: {
							Coin: 60,
							RocketBulletItem: 1,
							ElectricBulletBallItem: 1
						}
					}],
					Kr = function() {
						var e = (0, r.Z)(h().mark((function e() {
							return h().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return e.abrupt("return", Wr);
									case 1:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function() {
							return e.apply(this, arguments)
						}
					}(),
					Hr = {
						REWARDED: "rewarded",
						SKIPPED: "skipped",
						READY: "ready",
						WAITING: "waiting"
					},
					zr = (0, $.P1)([function(e) {
						var t;
						return null == (t = e.dailyRewards) ? void 0 : t.rewards
					}], (function(e) {
						return e
					})),
					Xr = (0, $.P1)([function(e) {
						var t;
						return null == (t = e.dailyRewards) ? void 0 : t.isRequesting
					}], (function(e) {
						return e
					})),
					Vr = GameCore.Configs.DailyRewards,
					Jr = function(e) {
						return function(t) {
							var i, n = window.game.player.getCustomData("dailyRewarded") || {},
								a = n.logDays,
								s = void 0 === a ? [] : a,
								r = n.lastRewarded,
								l = void 0 === r ? 0 : r,
								c = new Date,
								h = new Date(l),
								u = new Date(h.toDateString()),
								d = Math.abs(c.valueOf() - u.valueOf()),
								p = Math.floor(d / 864e5) > 1,
								m = Vr.CheckInterrupt && p || s.length >= Vr.MaxDays,
								f = m ? [!1] : y()(i = []).call(i, s, [!1]);
							qr(f);
							var g = _()(e).call(e, (function(e, t) {
								var i = t < f.length,
									n = f.length === t + 1,
									a = !1 === f[t],
									s = Hr.WAITING;
								return n ? s = Hr.READY : m ? s = Hr.WAITING : i && a ? s = Hr.SKIPPED : i && (s = Hr.REWARDED), (0, o.Z)({}, e, {
									status: s
								})
							}));
							t({
								type: nn,
								payload: {
									rewards: g
								}
							})
						}
					},
					qr = function(e, t) {
						void 0 === t && (t = !1), window.game.player.setCustomData("dailyRewarded", {
							logDays: e,
							lastRewarded: t ? 0 : Date.now()
						})
					},
					Qr = i(53270),
					$r = i(87922),
					el = aa.Z.DEFAULT,
					tl = el.KEY,
					il = el.FRAME,
					nl = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).icon = void 0, i.text = void 0, i.createUI(), i.setSize(i.icon.width, i.icon.height), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createUI = function() {
							this.createIcon(), this.createText(), Phaser.Display.Align.In.Center(this.text, this.icon, -2, 3), this.add([this.icon, this.text])
						}, i.createIcon = function() {
							this.icon = this.scene.make.image({
								key: tl,
								frame: il.TREASURE_CLOSE
							}), this.icon.setWorldSize(55.65, 46.5)
						}, i.createText = function() {
							this.text = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(30),
								text: "?"
							})
						}, t
					}(Phaser.GameObjects.Container),
					al = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).payload = void 0, n.blockBg = void 0, n.titleBg = void 0, n.titleText = void 0, n.overlayContainer = void 0, n.iconCheck = void 0, n.glowLight = void 0, n.iconContainer = void 0, n.glowAnimation = void 0, n.scaleAnimation = void 0, n.treasureIconByKeys = {}, n.payload = i, n.setName("Day: " + i.day), n.drawObjects(), n.setStatus(), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.drawObjects = function() {
							this.createBlockBG(), this.createGlowLight(), this.createTitleBg(), this.createTitleText(), this.createIconContainer(), this.createOverlayContainer(), this.createIconCheck()
						}, i.createOverlayContainer = function() {
							this.overlayContainer = this.scene.add.container();
							var e = this.scene.make.image({
								key: tl,
								frame: il.DAILY_DAY_BG_BOX,
								alpha: .5
							});
							e.setWorldSize(79.5, 70), e.setTint(0), Phaser.Display.Align.In.Center(e, this.blockBg);
							var t = this.scene.make.image({
								key: tl,
								frame: il.DAILY_DAY_BOX,
								alpha: .5
							});
							t.setWorldSize(86.5, 34.5), t.setTint(0), Phaser.Display.Align.In.Center(t, this.titleBg), this.overlayContainer.add([e, t]), this.overlayContainer.setVisible(!1), this.add(this.overlayContainer)
						}, i.createIconContainer = function() {
							switch (this.iconContainer = this.scene.add.container(), this.payload.day) {
								case 1:
									this.createIconContainerDay1();
									break;
								case 2:
									this.createIconContainerDay2();
									break;
								case 3:
									this.createIconContainerDay3();
									break;
								case 4:
									this.createIconContainerDay4();
									break;
								case 5:
									this.createIconContainerDay5();
									break;
								case 6:
									this.createIconContainerDay6();
									break;
								case 7:
									this.createIconContainerDay7()
							}
							this.add(this.iconContainer)
						}, i.createTitleBg = function() {
							this.titleBg = this.scene.make.image({
								key: tl,
								frame: il.DAILY_DAY_BOX
							}), this.titleBg.setWorldSize(86.5, 34.5), 7 === this.payload.day && (this.titleBg.setFrame(il.DAILY_DAY_BOX_LONG), this.titleBg.setWorldSize(265, 34.5)), this.add(this.titleBg), Phaser.Display.Align.In.Center(this.titleBg, this.blockBg, 0, -42)
						}, i.createGlowLight = function() {
							var e = aa.Z.EFFECTS,
								t = e.KEY,
								i = e.FRAME;
							this.glowLight = this.scene.make.image({
								key: t,
								frame: i.FX_BOX_DAILY_REWARD
							}), this.glowLight.setVisible(!1), this.glowLight.setWorldSize(76, 88.5), Phaser.Display.Align.In.Center(this.glowLight, this.blockBg, 0, -5), this.add(this.glowLight)
						}, i.createBlockBG = function() {
							this.blockBg = this.scene.make.image({
								key: tl,
								frame: il.DAILY_DAY_BG_BOX
							}), this.blockBg.setWorldSize(79.5, 70), 7 === this.payload.day && (this.blockBg.setFrame(il.DAILY_DAY_BG_BOX_LONG), this.blockBg.setWorldSize(258, 94.5), Phaser.Display.Align.In.Center(this.blockBg, this, 89)), this.add(this.blockBg)
						}, i.createTitleText = function() {
							var e = this.payload.day;
							this.titleText = ia.Z.addText(this.scene, {
								font: _a.Z.NORMAL.KEY,
								size: this.scene.fontSize(19),
								text: this.scene.lang.getText({
									key: "day_{X}",
									variables: [e]
								}),
								origin: {
									x: .5,
									y: .5
								},
								maxHeight: 20,
								maxWidth: .8 * this.titleBg.width
							}), this.add(this.titleText), Phaser.Display.Align.In.Center(this.titleText, this.titleBg, 0, -5)
						}, i.createIconCheck = function() {
							this.iconCheck = this.scene.make.image({
								key: tl,
								frame: il.ICON_CHECK_2
							}), this.iconCheck.setVisible(!1), this.iconCheck.setWorldSize(41.5, 43.5), this.add(this.iconCheck), Phaser.Display.Align.In.Center(this.iconCheck, this.blockBg, 0, -6)
						}, i.createIconContainerDay1 = function() {
							var e = ia.Z.addText(this.scene, {
									font: _a.Z.PRIMARY.KEY,
									size: this.scene.fontSize(16),
									text: "20"
								}),
								t = this.scene.make.image({
									key: tl,
									frame: il.ICON_WHEEL_COIN_10
								});
							t.setWorldSize(38, 28.5), Phaser.Display.Align.In.Center(t, this.iconContainer, 0, -10), Phaser.Display.Align.In.Center(e, this.iconContainer, 0, 20), this.treasureIconByKeys.Coin10 = {
								icon: t
							}, this.iconContainer.add([t, e])
						}, i.createIconContainerDay2 = function() {
							var e = ia.Z.addText(this.scene, {
									font: _a.Z.PRIMARY.KEY,
									size: this.scene.fontSize(16),
									text: "30"
								}),
								t = this.scene.make.image({
									key: tl,
									frame: il.ICON_WHEEL_COIN_25
								});
							t.setWorldSize(42.5, 44), Phaser.Display.Align.In.Center(t, this.iconContainer, 0, -5), Phaser.Display.Align.In.Center(e, this.iconContainer, 0, 20), this.treasureIconByKeys.Coin25 = {
								icon: t
							}, this.iconContainer.add([t, e])
						}, i.createIconContainerDay3 = function() {
							var e = ia.Z.addText(this.scene, {
									font: _a.Z.PRIMARY.KEY,
									size: this.scene.fontSize(16),
									text: this.scene.lang.getText({
										key: "{X}_bomb",
										variables: [40]
									}),
									maxWidth: 75,
									maxHeight: 16
								}),
								t = this.scene.make.image({
									key: tl,
									frame: il.ICON_WHEEL_COIN_25
								});
							t.setWorldSize(42.5, 44);
							var i = this.scene.make.image({
								key: tl,
								frame: il.BUY_ITEM_BOMB_BIG
							});
							i.setWorldSize(36.9, 38.7), Phaser.Display.Align.In.Center(t, this.iconContainer, -10, -5), Phaser.Display.Align.In.Center(i, t, 25, 10), Phaser.Display.Align.In.Center(e, this.iconContainer, 0, 20), this.treasureIconByKeys.BombBulletItem = {
								icon: i
							}, this.treasureIconByKeys.Coin25 = {
								icon: t
							}, this.iconContainer.add([t, i, e])
						}, i.createIconContainerDay4 = function() {
							var e = ia.Z.addText(this.scene, {
									font: _a.Z.PRIMARY.KEY,
									size: this.scene.fontSize(16),
									text: "60"
								}),
								t = this.scene.make.image({
									key: tl,
									frame: il.ICON_WHEEL_COIN_25
								});
							t.setWorldSize(42.5, 44), Phaser.Display.Align.In.Center(t, this.iconContainer, 0, -5), Phaser.Display.Align.In.Center(e, this.iconContainer, 0, 20), this.treasureIconByKeys.Coin25 = {
								icon: t
							}, this.iconContainer.add([t, e])
						}, i.createIconContainerDay5 = function() {
							var e = new nl(this.scene);
							this.iconContainer.add([e])
						}, i.createIconContainerDay6 = function() {
							var e = new nl(this.scene);
							this.iconContainer.add([e])
						}, i.createIconContainerDay7 = function() {
							var e = new nl(this.scene),
								t = new nl(this.scene),
								i = new nl(this.scene),
								n = ia.Z.addText(this.scene, {
									font: _a.Z.PRIMARY.KEY,
									size: this.scene.fontSize(26),
									text: "+"
								}),
								a = ia.Z.addText(this.scene, {
									font: _a.Z.PRIMARY.KEY,
									size: this.scene.fontSize(26),
									text: "+"
								});
							Phaser.Display.Align.To.LeftCenter(e, t, 15), Phaser.Display.Align.To.RightCenter(i, t, 15), Phaser.Display.Align.To.LeftCenter(n, t, 0, 2), Phaser.Display.Align.To.RightCenter(a, t, 0, 2), this.iconContainer.add([e, t, i, n, a]), Phaser.Display.Align.In.Center(this.iconContainer, this, 88)
						}, i.runAnimations = function() {
							this.runGlowAnimation()
						}, i.runGlowAnimation = function() {
							this.glowLight.setVisible(!0), this.glowAnimation || (this.glowAnimation = new Qr.Z({
								targets: [this.glowLight],
								repeat: -1,
								duration: 6e3
							})), this.glowAnimation.play()
						}, i.runScaleAnimation = function() {
							var e = this;
							this.scaleAnimation || (this.scaleAnimation = new $r.Z({
								targets: [this],
								delay: 1e3,
								duration: 1e3,
								ease: Phaser.Math.Easing.Elastic.Out,
								easeParams: [.1, .45],
								props: {
									scale: 1.2
								},
								onStart: function() {
									var t;
									null == (t = e.parentContainer) || t.bringToTop(e)
								}
							})), this.scaleAnimation.play()
						}, i.setStatus = function() {
							var e = this.payload.status,
								t = Hr.READY,
								i = Hr.REWARDED,
								n = Hr.SKIPPED;
							switch (this.overlayContainer.setVisible(!1), this.iconCheck.setVisible(!1), e) {
								case t:
									this.setStatusReady(), this.runAnimations();
									break;
								case n:
									this.setStatusSkipped();
									break;
								case i:
									this.setStatusRewarded()
							}
						}, i.setStatusReady = function() {
							7 === this.payload.day ? (this.titleBg.setFrame(il.DAILY_DAY_BOX_CLAIM_LONG), this.titleBg.setWorldSize(265, 34.5)) : (this.titleBg.setFrame(il.DAILY_DAY_CLAIM_BOX), this.titleBg.setWorldSize(86.5, 34.5)), this.titleText.setText(this.scene.lang.getText("today")), ia.Z.setFontSize(this.titleText, .8 * this.titleBg.width, this.titleBg.height)
						}, i.setStatusRewarded = function() {
							this.overlayContainer.setVisible(!0), this.iconCheck.setVisible(!0)
						}, i.setStatusSkipped = function() {
							this.overlayContainer.setVisible(!0)
						}, i.hideIconContainer = function() {
							this.iconContainer.kill()
						}, t
					}(Phaser.GameObjects.Container),
					sl = al,
					ol = aa.Z.DEFAULT,
					rl = ol.KEY,
					ll = ol.FRAME,
					cl = aa.Z.THEME,
					hl = cl.FRAME,
					ul = cl.DEFAULT,
					dl = GameCore.Configs,
					pl = dl.Network,
					ml = dl.DailyRewards,
					fl = {
						id: 0,
						items: {
							Coin: 0
						}
					},
					gl = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).onSkipAd = void 0, s.onNoAd = void 0, s.header = void 0, s.logDays = void 0, s.rewardsData = void 0, s.popup = void 0, s.loading = void 0, s.dayBlocks = void 0, s.currentDayBlocks = void 0, s.treasureBoxIcon = void 0, s.closeButton = void 0, s.claimButton = void 0, s.claimButton2X = void 0, s.backgroundFadeInAnimation = void 0, s.popupShowUpAnimation = void 0, s.popupExitsAnimation = void 0, s.contentShowUpAnimation = void 0, s.headerFadeInAnimation = void 0, s.headerFadeOutAnimation = void 0, s.adsTimer = void 0, s.treasureItemExplosivesByKey = {}, s.treasureExplosiveTimer = void 0, s.handleClosePopup = function() {
								s.runCloseAnimation()
							}, s.handleOnClaim = function() {
								var e = s.getCurrentRewardItemsByKey();
								s.scene.audio.playSound(sa.Z.GIFT_RECEIVED), s.claimReward(e)
							}, s.handleOnClaimX2 = (0, r.Z)(h().mark((function e() {
								var t, i, n, a, o, r;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.prev = 0, t = s.scene, i = t.audio, n = t.game, s.claimButton.setDisabled(!0), s.claimButton2X.setDisabled(!0), s.closeButton.setDisabled(!0), s.closeButton.setAlpha(1), n.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
												message: s.scene.lang.getText("loading"),
												duration: 0,
												loading: !0
											}), i.pauseMusic(), i.muteAllSound(), e.next = 11, new(oe())((function(e, t) {
												var i;
												null == (i = s.adsTimer) || i.remove(), s.adsTimer = s.scene.time.delayedCall(pl.Timeout, t), s.scene.ads.getAdStatus(GameCore.Ads.Types.REWARDED) === GameCore.Ads.Status.LOADING ? s.scene.ads.events.once(GameCore.Ads.Events.LOADED, e) : s.scene.ads.preloadRewardedVideoAsync().then(e).catch(t)
											}));
										case 11:
											return e.next = 13, s.scene.ads.showRewardedVideoAsync();
										case 13:
											n.globalScene.screen.close(Wn.o4.NOTIFY_SCREEN), a = s.getCurrentRewardItemsByKey(), o = {}, Yr.Z.forEach((function(e) {
												a[e] && (o[e] = 2 * (a[e] || 0))
											})), s.claimReward(o), e.next = 30;
											break;
										case 20:
											if (e.prev = 20, e.t0 = e.catch(0), s.claimButton.setDisabled(!1), s.claimButton2X.setDisabled(!1), s.closeButton.setDisabled(!1), !(e.t0 instanceof Object && GameCore.Utils.Object.hasOwn(e.t0, "code"))) {
												e.next = 29;
												break
											}
											if ("USER_INPUT" !== e.t0.code) {
												e.next = 29;
												break
											}
											return s.onSkipAd(), e.abrupt("return");
										case 29:
											s.onNoAd();
										case 30:
											return e.prev = 30, null == (r = s.adsTimer) || r.destroy(), s.scene.audio.playMusic(), s.scene.audio.unmuteAllSound(), e.finish(30);
										case 35:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[0, 20, 30, 35]
								])
							}))), s.claimReward = function() {
								var e = (0, r.Z)(h().mark((function e(t) {
									var i, n, a, o, r, l, c, u, d, p, m, f;
									return h().wrap((function(e) {
										for (;;) switch (e.prev = e.next) {
											case 0:
												if (t) {
													e.next = 2;
													break
												}
												return e.abrupt("return");
											case 2:
												if (!((null == (i = s.logDays) ? void 0 : i.length) < 1)) {
													e.next = 4;
													break
												}
												return e.abrupt("return");
											case 4:
												if (!s.logDays[s.logDays.length - 1]) {
													e.next = 6;
													break
												}
												return e.abrupt("return");
											case 6:
												if (s.claimButton.setDisabled(!0), s.claimButton2X.setDisabled(!0), s.closeButton.setDisabled(!0), s.closeButton.setAlpha(1), s.logDays[s.logDays.length - 1] = !0, s.scene.player.updatePlayerDailyRewarded(y()(n = []).call(n, s.logDays)), (r = s.currentDayBlocks).hideIconContainer(), !(s.logDays.length > 4)) {
													e.next = 17;
													break
												}
												return s.openTreasure(t), e.abrupt("return");
											case 17:
												return l = r.treasureIconByKeys, s.runHeaderFadeInAnimation(), c = s.scene.player.getBullets(), u = {}, d = s.scene.player.getCoins(), p = s.currentDayBlocks.getWorldPosition(), (null == (a = s.logDays) ? void 0 : a.length) === GameCore.Configs.DailyRewards.MaxDays && (p.x += 12), m = [], f = ["Coin10", "Coin25", "Coin50", "Coin100"], Yr.H.forEach((function(e) {
													var i, n, a, o, r = null == (i = l[e]) ? void 0 : i.icon;
													if (r) {
														o = ue()(f).call(f, e) ? "Coin" : e;
														var h = r.getWorldPosition();
														p.x = h.x, p.y = h.y, null == (n = s.treasureItemExplosivesByKey[e]) || n.setSizeIcon(r.width, r.height);
														var g = t[o];
														if (g) {
															var v = s.header.getIconBlockPosition(o);
															if (v && g) {
																if (m.push(s.runTreasuresExplodeEffect(p, v, e, o, g)), (null == (a = s.logDays) ? void 0 : a.length) === GameCore.Configs.DailyRewards.MaxDays && (p.x += 72), "Coin" === o) return d += g, void s.logEarnVirtualCurrency(g);
																var y = c[o] || 0;
																y += g, u[o] = y, s.logEarnItem(g, o)
															}
														}
													}
												})), s.scene.player.updateCustomFields({
													bullets: u,
													coin: d
												}), e.next = 30, oe().all(m);
											case 30:
												s.runHeaderFadeOutAnimation(0, 300), null == (o = s.treasureExplosiveTimer) || o.remove(), s.treasureExplosiveTimer = s.scene.time.delayedCall(300, (function() {
													s.setDepth(Wn.Ks.POPUP), s.runCloseAnimation()
												})), s.scene.audio.playSound(sa.Z.DAILY_REWARD);
											case 34:
											case "end":
												return e.stop()
										}
									}), e)
								})));
								return function(t) {
									return e.apply(this, arguments)
								}
							}(), s.updateRewardsData = (0, r.Z)(h().mark((function e() {
								var t, i, n, a, o, l, c, u, d, p, m, f;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return i = s.scene, n = i.storage, a = i.player, e.next = 3, n.dispatch(function() {
												var e = (0, r.Z)(h().mark((function e(t, i) {
													var n, a;
													return h().wrap((function(e) {
														for (;;) switch (e.prev = e.next) {
															case 0:
																if (n = i(), !Xr(n)) {
																	e.next = 4;
																	break
																}
																return e.abrupt("return");
															case 4:
																return t({
																	type: tn,
																	payload: {}
																}), e.next = 7, Kr();
															case 7:
																a = e.sent, t(Jr(a));
															case 9:
															case "end":
																return e.stop()
														}
													}), e)
												})));
												return function(t, i) {
													return e.apply(this, arguments)
												}
											}());
										case 3:
											if (o = n.getState(), !((null == (l = zr(o) || []) ? void 0 : l.length) < 1)) {
												e.next = 7;
												break
											}
											return e.abrupt("return");
										case 7:
											s.rewardsData = l, (c = s.getCurrentRewardItemsByKey()) && s.header.updateUI(c), u = a.getCustomData("dailyRewarded"), p = (d = u || {}).logDays, m = void 0 === p ? [] : p, f = d.lastRewarded, s.scene.player.updatePlayerDailyRewarded(m, f), s.logDays = y()(t = []).call(t, m);
										case 14:
										case "end":
											return e.stop()
									}
								}), e)
							}))), s.checkOpenable = function() {
								var e = s.scene.player.getCustomData("dailyRewarded") || {},
									t = e.logDays,
									i = void 0 === t ? [] : t,
									n = e.lastRewarded,
									a = void 0 === n ? 0 : n;
								if (i.length > ml.MaxDays) return !0;
								if (ml.MockTime > 0 && Date.now() - a >= 1e3 * ml.MockTime) return !0;
								return !(0, xo.Gm)(a)
							}, s.openTreasure = function(e) {
								var t = s.scene.rewardDailyItemScreen.getTreasureBoxClose(),
									i = s.treasureBoxIcon;
								i.setScale(0), i.revive();
								var n = t.getWorldPosition(),
									a = s.getWorldPosition(),
									o = {
										x: s.currentDayBlocks.x,
										y: s.currentDayBlocks.y + s.popup.y
									},
									r = {
										x: n.x - a.x,
										y: n.y - a.y
									};
								s.logDays.length === GameCore.Configs.DailyRewards.MaxDays && (o.x += 80);
								var l = .3 * (1 / s.scene.world.getPixelRatio()),
									c = t.scale;
								s.scene.add.tween({
									targets: i,
									ease: Phaser.Math.Easing.Sine.Out,
									duration: 600,
									props: {
										x: {
											from: o.x,
											to: r.x
										},
										y: {
											from: o.y,
											to: r.y
										},
										scale: {
											from: l,
											to: c
										}
									},
									onComplete: function() {
										i.setPosition(o.x, o.y), i.setScale(l), i.kill(), s.scene.screen.open(Wn.o4.REWARD_DAILY_ITEM_SCREEN, {
											treasure: e
										})
									}
								})
							}, s.runTreasuresExplodeEffect = function() {
								var e = (0, r.Z)(h().mark((function e(t, i, n, a, o) {
									var r, l, c, u, d, p, m;
									return h().wrap((function(e) {
										for (;;) switch (e.prev = e.next) {
											case 0:
												if (r = 1, l = s.treasureItemExplosivesByKey[n]) {
													e.next = 4;
													break
												}
												return e.abrupt("return");
											case 4:
												return c = l.explode(r, t.x, t.y, i.x, i.y), u = c.allTweens, d = c.longestTween, p = s.scene.player.getBullets(), m = s.scene.player.getCoins(), s.setDepth(jn.Z.ON_TOP), u.forEach((function(e) {
													e.on(Phaser.Tweens.Events.TWEEN_COMPLETE, (function() {
														if ("Coin" === a) return m += o / Math.ceil(r), void s.updateCurrentQuantityTreasure(a, m);
														var e = p[a] || 0;
														e += o / r, s.updateCurrentQuantityTreasure(a, e)
													}))
												})), e.abrupt("return", new(oe())((function(e) {
													d.on(Phaser.Tweens.Events.TWEEN_COMPLETE, e)
												})));
											case 10:
											case "end":
												return e.stop()
										}
									}), e)
								})));
								return function(t, i, n, a, s) {
									return e.apply(this, arguments)
								}
							}(), s.rewardsData = [], s.createPopup(), s.createCloseButton(), s.createPopupContents(), s.createHeader(), s.createEffect(), s.createTreasureBoxIcon(), s.setDepth(Wn.Ks.POPUP), s.background.setAlpha(.5), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createHeader = function() {
							this.header = new ta.Z(this.scene), this.add(this.header), Phaser.Display.Align.In.TopRight(this.header, this.zone, -22, -4)
						}, i.createTreasureBoxIcon = function() {
							this.treasureBoxIcon = this.scene.make.image({
								key: rl,
								frame: ll.TREASURE_CLOSE
							}), this.treasureBoxIcon.setWorldSize(53.5, 44.5), this.treasureBoxIcon.setDepth(jn.Z.PRIORITY), this.add(this.treasureBoxIcon)
						}, i.createEffect = function() {
							this.createTreasureExplosivesByKey()
						}, i.createTreasureExplosivesByKey = function() {
							var e = this;
							Yr.H.forEach((function(t) {
								var i = new Ba.Z(e.scene);
								i.setTreasureGroup(t), e.treasureItemExplosivesByKey[t] = i, i.setDepth(jn.Z.PRIORITY)
							}))
						}, i.setBlockInputOutsideEnabled = function(e) {
							this.scene.input.setTopOnly(!0)
						}, i.open = function() {
							var t = (0, r.Z)(h().mark((function t(i) {
								var n, a;
								return h().wrap((function(t) {
									for (;;) switch (t.prev = t.next) {
										case 0:
											if (n = (i || {}).readonly, a = void 0 !== n && n, this.checkOpenable() || a) {
												t.next = 4;
												break
											}
											return t.abrupt("return");
										case 4:
											return e.prototype.open.call(this), this.prepareOpenAnimation(), a && (this.claimButton.setDisabled(!0), this.claimButton2X.setDisabled(!0)), t.next = 9, this.updateRewardsData();
										case 9:
											this.createDayBlocks(), this.runOpenAnimation();
										case 11:
										case "end":
											return t.stop()
									}
								}), t, this)
							})));
							return function(e) {
								return t.apply(this, arguments)
							}
						}(), i.logEarnVirtualCurrency = function(e) {
							this.scene.analytics.event(Xt._.EARN_VIRTUAL_CURRENCY, {
								value: e,
								virtual_currency_name: "coin",
								earn_from: "DailyReward"
							})
						}, i.logEarnItem = function(e, t) {
							this.scene.analytics.event(Xt._.EARN_ITEM, {
								value: e,
								item_name: t,
								earn_from: "DailyReward"
							})
						}, i.getCurrentRewardItemsByKey = function() {
							var e, t = ye()(e = this.rewardsData).call(e, (function(e) {
								return e.status === Hr.READY
							}));
							return (null == t ? void 0 : t.items) || {}
						}, i.getRewardByDay = function(e) {
							var t;
							return ye()(t = this.rewardsData).call(t, (function(t) {
								return t.id === e
							})) || fl
						}, i.prepareOpenAnimation = function() {
							this.background.setAlpha(0), this.popup.setScale(0), this.treasureBoxIcon.kill(), this.header.kill(), this.closeButton.setDisabled(!1), this.claimButton.setDisabled(!1), this.claimButton2X.setDisabled(!1)
						}, i.runOpenAnimation = function() {
							this.scene.audio.playSound(sa.Z.POPUP_IN), this.runBackgroundEntrancesAnimation(0, 300), this.runPopupEntrancesAnimation(150, 400), this.runPopupContentEntrancesAnimation(300, 300)
						}, i.runCloseAnimation = function() {
							this.scene.audio.playSound(sa.Z.POPUP_OUT), this.runPopupExitsAnimation(0, 300)
						}, i.runBackgroundEntrancesAnimation = function(e, t) {
							this.backgroundFadeInAnimation || (this.backgroundFadeInAnimation = new Jn.Z({
								targets: [this.background],
								delay: e,
								duration: t,
								props: {
									alpha: {
										getStart: function() {
											return 0
										},
										getEnd: function() {
											return .8
										}
									}
								}
							})), this.backgroundFadeInAnimation.play()
						}, i.runPopupEntrancesAnimation = function(e, t) {
							this.popupShowUpAnimation || (this.popupShowUpAnimation = new cr.Z({
								targets: [this.popup],
								delay: e,
								duration: t,
								props: {
									y: {
										from: 250,
										to: -10
									},
									scale: {
										start: 0,
										from: 0,
										to: 1
									},
									alpha: {
										start: 1,
										from: 1,
										to: 1
									}
								}
							})), this.popupShowUpAnimation.play()
						}, i.runPopupContentEntrancesAnimation = function(e, t) {
							var i, n = this.dayBlocks.getChildren();
							n.length < 1 || (null == (i = this.contentShowUpAnimation) || i.remove(), this.contentShowUpAnimation = new Qn.Z({
								targets: n,
								duration: t,
								delay: this.scene.tweens.stagger(150, {
									start: e
								}),
								props: {
									alpha: {
										start: 0,
										from: 0,
										to: 1
									}
								}
							}), this.contentShowUpAnimation.play())
						}, i.runPopupExitsAnimation = function(e, t) {
							var i = this;
							this.popupExitsAnimation || (this.popupExitsAnimation = new qn.Z({
								targets: [this.popup],
								delay: e,
								duration: t,
								props: {
									y: 250,
									scale: 0
								},
								onComplete: function() {
									i.dayBlocks.destroy(!0, !0), i.scene.screen.close(i.name)
								}
							})), this.popupExitsAnimation.play()
						}, i.createCloseButton = function() {
							this.closeButton = new Ia.Z(this.scene, {
								key: ul.KEY,
								frame: hl.BUTTON_CLOSE,
								width: 37.5,
								height: 39
							}), this.popup.add(this.closeButton), this.closeButton.setName("Close"), this.closeButton.useSound = !1, this.closeButton.onClick = this.handleOnClaim, Phaser.Display.Align.In.TopRight(this.closeButton, this.popup, 15, 15)
						}, i.createPopup = function() {
							this.popup = new jr(this.scene, 0, 0, 287.25, 430), this.add(this.popup)
						}, i.createPopupContents = function() {
							this.createTitle(), this.createLoading(), this.createClaimButton(), this.createClaimX2Button()
						}, i.createTitle = function() {
							var e = this.scene.add.container(),
								t = this.scene.make.image({
									key: ul.KEY,
									frame: hl.POPUP_HEADER
								});
							t.setWorldSize(193, 57.5);
							var i = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(26),
								text: this.scene.lang.getText("daily_bonus"),
								maxWidth: 170,
								maxHeight: 40
							});
							Phaser.Display.Align.In.Center(i, t, 0, -2), e.add([t, i]), this.popup.add(e), Phaser.Display.Align.In.TopCenter(e, this.popup, 0, -3)
						}, i.createLoading = function() {
							this.loading = new yo.Z(this.scene), this.loading.setVisible(!1), this.loading.setTint(12237498), this.popup.add(this.loading), Phaser.Display.Align.In.Center(this.loading, this.popup)
						}, i.createDayBlocks = function() {
							var e, t, i = this;
							null == (e = this.dayBlocks) || e.destroy(!0, !0);
							var n = ml.MaxDays;
							this.dayBlocks = this.scene.make.group({
								maxSize: n
							}), ko()(t = new Array(n)).call(t, null).forEach((function(e, t) {
								var n = i.createDayBlock(t + 1);
								i.dayBlocks.add(n)
							})), Phaser.Actions.GridAlign(this.dayBlocks.getChildren(), {
								width: 3,
								height: 3,
								cellWidth: 89,
								cellHeight: 100,
								x: -44.5,
								y: -68
							})
						}, i.createDayBlock = function(e) {
							var t = this.getRewardByDay(e),
								i = t.items,
								n = t.status,
								a = void 0 === n ? "" : n,
								s = new sl(this.scene, {
									day: e,
									items: i,
									status: a
								});
							return s.setAlpha(0), this.popup.add(s), a === Hr.READY && (this.currentDayBlocks = s), s
						}, i.createClaimButton = function() {
							this.claimButton = new ea.Z(this.scene, rl, ll.BUTTON_GREEN, 153.5, 58.5), this.claimButton.setName("Claim");
							var e = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(25),
								text: this.scene.lang.getText("claim"),
								origin: {
									x: 0,
									y: .5
								}
							});
							this.claimButton.button.setAlpha(1e-4), Phaser.Display.Align.In.Center(e, this.claimButton, 0, -3), this.claimButton.add([e]), this.popup.add(this.claimButton), Phaser.Display.Align.In.BottomCenter(this.claimButton, this.popup, 0, 55), this.claimButton.onClick = this.handleOnClaim
						}, i.createClaimX2Button = function() {
							this.claimButton2X = new ea.Z(this.scene, rl, ll.BUTTON_GREEN, 153.5, 58.5), this.claimButton2X.setName("ClaimX2");
							var e = ia.Z.addText(this.scene, {
									font: _a.Z.PRIMARY.KEY,
									size: this.scene.fontSize(25),
									text: this.scene.lang.getText({
										key: "claim_x_{X}",
										variables: [2]
									}),
									origin: {
										x: .5,
										y: .5
									},
									maxWidth: 120,
									maxHeight: 45
								}),
								t = this.scene.make.image({
									key: rl,
									frame: ll.RESCUE_ICON_AD
								});
							t.setWorldSize(46.5, 40), this.claimButton2X.add([e, t]), Phaser.Display.Align.In.Center(t, this.claimButton2X, -70, -3), Phaser.Display.Align.In.Center(e, this.claimButton2X, 13, -3), this.popup.add(this.claimButton2X), Phaser.Display.Align.In.BottomCenter(this.claimButton2X, this.popup, 0, -18.5), this.claimButton2X.onClick = this.handleOnClaimX2
						}, i.runHeaderFadeInAnimation = function() {
							this.header.revive(), this.headerFadeInAnimation || (this.headerFadeInAnimation = new Jn.Z({
								targets: [this.header],
								duration: 300
							})), this.headerFadeInAnimation.play()
						}, i.runHeaderFadeOutAnimation = function(e, t) {
							var i = this;
							this.headerFadeOutAnimation || (this.headerFadeOutAnimation = new qn.Z({
								targets: [this.header],
								delay: e,
								duration: t,
								onComplete: function() {
									i.header.kill()
								}
							})), this.headerFadeOutAnimation.play()
						}, i.setDepth = function(t) {
							for (var i in e.prototype.setDepth.call(this, t), this.treasureItemExplosivesByKey) {
								var n, a = i;
								null == (n = this.treasureItemExplosivesByKey[a]) || n.setDepth(t + 1)
							}
							return this
						}, i.updateCurrentQuantityTreasure = function(e, t) {
							this.header.updateTextBlock(e, t)
						}, t
					}(GameCore.Screen),
					vl = gl,
					yl = function() {
						var e = GameCore.Utils.Device,
							t = window.navigator.vibrate;
						return e.isAndroid() && "function" === typeof t || e.isMobileWeb() && "function" === typeof t
					},
					bl = function() {
						var e = (0, r.Z)(h().mark((function e(t) {
							var i, n, a, s, o;
							return h().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										i = Math.round(t / 80), n = 0, a = function() {
											var e = (0, r.Z)(h().mark((function e() {
												return h().wrap((function(e) {
													for (;;) switch (e.prev = e.next) {
														case 0:
															return e.prev = 0, e.next = 3, FBInstant.performHapticFeedbackAsync();
														case 3:
															e.next = 8;
															break;
														case 5:
															e.prev = 5, e.t0 = e.catch(0);
														case 8:
														case "end":
															return e.stop()
													}
												}), e, null, [
													[0, 5]
												])
											})));
											return function() {
												return e.apply(this, arguments)
											}
										}();
									case 3:
										if (!(n < i)) {
											e.next = 11;
											break
										}
										return s = a(), o = (0, xo.qZ)(80), n += 1, e.next = 9, oe().all([s, o]);
									case 9:
										e.next = 3;
										break;
									case 11:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}(),
					El = function(e) {
						window.navigator.vibrate(0), window.navigator.vibrate(e)
					},
					Tl = function(e) {
						try {
							if (!yl()) return !1;
							var t = GameCore.Utils.Device;
							t.isAndroid() || t.isMobileWeb() ? El(e) : t.isIOS() && bl(e).catch((function(e) {}))
						} catch (i) {}
					},
					Al = aa.Z.DEFAULT.KEY,
					Sl = function(e) {
						function t(t, i) {
							var n;
							(n = e.call(this, t, Al, i.framePanelOn) || this).options = void 0, n.mainIcon = void 0, n.subIcon = void 0, n.label = void 0, n.getMainFrameByStatus = function() {
								var e = n.options,
									t = e.enable,
									i = e.frameMainOn,
									a = e.frameMainOff;
								return t ? i : a
							}, n.getSubFrameByStatus = function() {
								var e = n.options,
									t = e.enable,
									i = e.frameSubOn,
									a = e.frameSubOff;
								return t ? i : a
							}, n.getPanelFrameByStatus = function() {
								var e = n.options,
									t = e.enable,
									i = e.framePanelOn,
									a = e.framePanelOff;
								return t ? i : a
							}, n.options = i, n.createIcons(), n.createLabel();
							var a = n.options.enable;
							return n.updateStatus(a), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.processCallback = function(e) {
							var t = this.options.enable;
							this.updateStatus(!t), e(!t)
						}, i.updateStatus = function(e) {
							this.options.enable = e;
							var t = this.getMainFrameByStatus();
							this.mainIcon.setFrame(t, !1, !1);
							var i = this.getSubFrameByStatus();
							this.subIcon.setFrame(i);
							var n = this.getPanelFrameByStatus();
							this.button.setFrame(n, !1, !1), this.label.setText(e ? this.scene.lang.getText("on") : this.scene.lang.getText("off")), this.label.setTint(e ? 7380003 : 7303023), ia.Z.setFontSize(this.label, .52 * this.button.width), this.alignSwitch()
						}, i.createIcons = function() {
							this.createMainIcon(), this.createSubIcon(), this.add([this.mainIcon, this.subIcon])
						}, i.createMainIcon = function() {
							var e = this.getMainFrameByStatus();
							this.mainIcon = this.scene.make.image({
								key: Al,
								frame: e
							})
						}, i.createSubIcon = function() {
							var e = this.getSubFrameByStatus();
							this.subIcon = this.scene.make.image({
								key: Al,
								frame: e
							})
						}, i.createLabel = function() {
							this.label = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(22)
							}), this.add(this.label)
						}, i.alignSwitch = function() {
							this.options.enable ? (Phaser.Display.Align.In.RightCenter(this.mainIcon, this.button), Phaser.Display.Align.In.Center(this.label, this.button, -16)) : (Phaser.Display.Align.In.LeftCenter(this.mainIcon, this.button), Phaser.Display.Align.In.Center(this.label, this.button, 16)), Phaser.Display.Align.In.Center(this.subIcon, this.mainIcon)
						}, i.logButtonEvent = function() {
							var e = this.getParentName(),
								t = this.name,
								i = !this.options.enable;
							this.scene.analytics.event(Xt._.BUTTON_CLICK, {
								button_name: t,
								screen_name: e,
								enable: i
							})
						}, t
					}(ea.Z),
					_l = Sl,
					Cl = aa.Z.THEME,
					wl = Cl.FRAME,
					Bl = Cl.DEFAULT.KEY,
					Il = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).background = void 0, n.text = void 0, n.createTitle(), n.setText(i), n.scene.add.existing((0, Un.Z)(n)), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setText = function(e) {
							this.text.setText(e), ia.Z.setFontSize(this.text, 145, 30)
						}, i.createTitle = function() {
							this.background = this.scene.make.image({
								key: Bl,
								frame: wl.POPUP_HEADER
							}), this.background.setWorldSize(164.5, 47.5), this.text = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(22),
								origin: {
									x: .5,
									y: .5
								}
							}), Phaser.Display.Align.In.Center(this.text, this.background, 0, -2), this.add([this.background, this.text]), this.setSize(this.background.width, this.background.height)
						}, i.getText = function() {
							return this.text
						}, i.getBackground = function() {
							return this.background
						}, t
					}(Phaser.GameObjects.Container),
					Pl = Il,
					xl = aa.Z.DEFAULT,
					Ol = (xl.KEY, xl.FRAME),
					kl = aa.Z.THEME,
					Rl = kl.FRAME,
					Ml = kl.DEFAULT,
					Ll = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).scene = void 0, s.popup = void 0, s.popupShowUpAnimation = void 0, s.popupFadeOutAnimation = void 0, s.headerTitle = void 0, s.closeButton = void 0, s.subButtonsContainer = void 0, s.soundButton = void 0, s.soundText = void 0, s.musicButton = void 0, s.musicText = void 0, s.vibrateButton = void 0, s.vibrateText = void 0, s.open = function() {
								e.prototype.open.call((0, Un.Z)(s));
								var t = s.scene.player.getPlayerSettings(),
									i = t.music,
									n = t.sound,
									a = t.vibrate;
								s.musicButton.updateStatus(i), s.soundButton.updateStatus(n), yl() && s.vibrateButton.updateStatus(a), s.alignSubButtons(), s.runOpenAnimation()
							}, s.handleClosePopup = function() {
								s.scene.audio.playSound(sa.Z.POPUP_OUT), s.runCloseAnimation(), s.popupFadeOutAnimation.next((function() {
									s.scene.screen.close(s.name)
								}))
							}, s.handleMusicSetting = function(e) {
								s.scene.player.setSetting("music", e), e ? s.scene.audio.playMusic() : s.scene.audio.pauseMusic()
							}, s.handleSoundSetting = function(e) {
								s.scene.player.setSetting("sound", e)
							}, s.handleVibrateSetting = function(e) {
								s.scene.player.setSetting("vibrate", e)
							}, s.scene = t, s.createPopup(), s.createCloseButton(), s.createPopupContent(), s.setDepth(Wn.Ks.POPUP), s.background.setAlpha(.5), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createCloseButton = function() {
							this.closeButton = new ea.Z(this.scene, Ml.KEY, Rl.BUTTON_CLOSE, 35.5, 36.5), this.closeButton.setName("Close"), this.popup.add(this.closeButton), Phaser.Display.Align.In.TopRight(this.closeButton, this.popup, 14, 14), this.closeButton.onClick = this.handleClosePopup
						}, i.createSubButtons = function() {
							var e = this.scene.player.getPlayerSettings(),
								t = e.music,
								i = e.sound,
								n = e.vibrate;
							this.subButtonsContainer = this.scene.add.container();
							var a = this.scene.make.image({
								key: Ml.KEY,
								frame: Rl.SETTING_BOX
							});
							a.setWorldSize(243.5, 164.5), this.subButtonsContainer.setSize(a.width, a.height), this.subButtonsContainer.add(a), Phaser.Display.Align.In.Center(a, this.subButtonsContainer, 0, 0), this.soundButton = new _l(this.scene, {
								enable: i,
								frameMainOn: Ol.SWITCH_BUTTON_ON,
								frameMainOff: Ol.SWITCH_BUTTON_OFF,
								frameSubOn: Ol.ICON_SOUND_ON,
								frameSubOff: Ol.ICON_SOUND_OFF,
								framePanelOn: Ol.SWITCH_PANEL_ON,
								framePanelOff: Ol.SWITCH_PANEL_OFF
							}), this.soundButton.mainIcon.setWorldSize(37.5, 39), this.soundButton.subIcon.setWorldSize(21.5, 18), this.soundButton.button.setWorldSize(89.5, 31.5);
							var s = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(22),
								origin: {
									x: 0,
									y: .5
								},
								text: this.scene.lang.getText("sound")
							});
							this.soundButton.setName("SoundButton"), this.subButtonsContainer.add(s), this.subButtonsContainer.add([this.soundButton]), this.soundText = s, Phaser.Display.Align.In.Center(this.soundButton, this.subButtonsContainer, 50, -50), Phaser.Display.Align.In.LeftCenter(this.soundText, this.subButtonsContainer, -20, -50), this.soundButton.onClick = this.handleSoundSetting, this.musicButton = new _l(this.scene, {
								enable: t,
								frameMainOn: Ol.SWITCH_BUTTON_ON,
								frameMainOff: Ol.SWITCH_BUTTON_OFF,
								frameSubOn: Ol.ICON_MUSIC_ON,
								frameSubOff: Ol.ICON_MUSIC_OFF,
								framePanelOn: Ol.SWITCH_PANEL_ON,
								framePanelOff: Ol.SWITCH_PANEL_OFF
							}), this.musicButton.mainIcon.setWorldSize(37.5, 39), this.musicButton.subIcon.setWorldSize(17.5, 19.5), this.musicButton.button.setWorldSize(89.5, 31.5);
							var o = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(22),
								origin: {
									x: 0,
									y: .5
								},
								text: this.scene.lang.getText("music")
							});
							this.subButtonsContainer.add(o), this.musicButton.setName("MusicButton"), this.subButtonsContainer.add([this.musicButton]), this.musicText = o, Phaser.Display.Align.In.Center(this.musicButton, this.subButtonsContainer, 50), Phaser.Display.Align.In.LeftCenter(this.musicText, this.subButtonsContainer, -20), this.musicButton.onClick = this.handleMusicSetting, this.vibrateButton = new _l(this.scene, {
								enable: n,
								frameMainOn: Ol.SWITCH_BUTTON_ON,
								frameMainOff: Ol.SWITCH_BUTTON_OFF,
								frameSubOn: Ol.ICON_VIBRATE_ON,
								frameSubOff: Ol.ICON_VIBRATE_OFF,
								framePanelOn: Ol.SWITCH_PANEL_ON,
								framePanelOff: Ol.SWITCH_PANEL_OFF
							}), this.vibrateButton.mainIcon.setWorldSize(37.5, 39), n ? this.vibrateButton.subIcon.setWorldSize(21, 19.5) : this.vibrateButton.subIcon.setWorldSize(11, 19.5), this.vibrateButton.button.setWorldSize(89.5, 31.5);
							var r = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(22),
								origin: {
									x: 0,
									y: .5
								},
								text: this.scene.lang.getText("vibrate"),
								maxWidth: 100
							});
							this.subButtonsContainer.add(r), this.vibrateButton.setName("VibrateButton"), this.subButtonsContainer.add([this.vibrateButton]), this.vibrateText = r, Phaser.Display.Align.In.Center(this.vibrateButton, this.subButtonsContainer, 50, 50), Phaser.Display.Align.In.LeftCenter(this.vibrateText, this.subButtonsContainer, -20, 50), this.vibrateButton.onClick = this.handleVibrateSetting
						}, i.createPopup = function() {
							this.popup = new jr(this.scene, 0, 0, 280, 240), this.add(this.popup), Phaser.Display.Align.In.Center(this.popup, this.zone)
						}, i.createPopupContent = function() {
							this.createTitle(), this.createSubButtons(), this.popup.add([this.subButtonsContainer]), Phaser.Display.Align.In.TopCenter(this.subButtonsContainer, this.popup, 0, -40)
						}, i.createTitle = function() {
							this.headerTitle = new Pl(this.scene, this.scene.lang.getText("settings")), this.popup.add([this.headerTitle]), Phaser.Display.Align.In.TopCenter(this.headerTitle, this.popup, 0, 25)
						}, i.runOpenAnimation = function() {
							this.scene.audio.playSound(sa.Z.POPUP_IN), this.runPopupEntrancesAnimation(0, 300)
						}, i.runCloseAnimation = function() {
							this.runPopupExitsAnimation(0, 200)
						}, i.runPopupEntrancesAnimation = function(e, t) {
							if (!this.popupShowUpAnimation) {
								var i = this.popup,
									n = i.y,
									a = i.scale;
								this.popupShowUpAnimation = new cr.Z({
									targets: [this.popup],
									delay: e,
									duration: t,
									props: {
										y: {
											from: 350,
											to: n
										},
										alpha: {
											start: 1,
											from: 1,
											to: 1
										},
										scale: {
											start: 0,
											from: 0,
											to: a
										}
									}
								})
							}
							this.popupShowUpAnimation.play()
						}, i.runPopupExitsAnimation = function(e, t) {
							var i, n = this;
							this.popupFadeOutAnimation || (this.popupFadeOutAnimation = new qn.Z({
								targets: [this.popup],
								delay: e,
								duration: t,
								props: {
									y: 250,
									scale: 0
								},
								onComplete: function() {
									n.popup.setY(0)
								}
							})), null == (i = this.popupFadeOutAnimation) || i.play()
						}, i.alignSubButtons = function() {
							this.subButtonsContainer.setPosition(0, 0), yl() ? (this.vibrateButton.revive(), this.vibrateText.revive(), Phaser.Display.Align.In.Center(this.soundButton, this.subButtonsContainer, 50, -50), Phaser.Display.Align.In.LeftCenter(this.soundText, this.subButtonsContainer, -20, -50), Phaser.Display.Align.In.Center(this.musicButton, this.subButtonsContainer, 50), Phaser.Display.Align.In.LeftCenter(this.musicText, this.subButtonsContainer, -20), Phaser.Display.Align.In.Center(this.vibrateButton, this.subButtonsContainer, 50, 50), Phaser.Display.Align.In.LeftCenter(this.vibrateText, this.subButtonsContainer, -20, 50)) : (this.vibrateButton.kill(), this.vibrateText.kill(), Phaser.Display.Align.In.Center(this.soundButton, this.subButtonsContainer, 50, -25), Phaser.Display.Align.In.LeftCenter(this.soundText, this.subButtonsContainer, -20, -25), Phaser.Display.Align.In.Center(this.musicButton, this.subButtonsContainer, 50, 25), Phaser.Display.Align.In.LeftCenter(this.musicText, this.subButtonsContainer, -20, 25)), Phaser.Display.Align.In.TopCenter(this.subButtonsContainer, this.popup, 0, -40)
						}, t
					}(GameCore.Screen),
					Gl = Ll,
					Dl = i(25465),
					Fl = i(20494),
					Nl = i(47909),
					Zl = i(75318),
					Ul = function(e) {
						if ("string" !== typeof e || !e) throw new Nl.Z(null, {
							imageShare: e
						})
					},
					jl = function() {
						return (0, r.Z)(h().mark((function e() {
							var t, i, n, s, o, r, l, c, u, d;
							return h().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return t = window.game, i = t.player, n = t.analytics, s = t.facebook, o = t.globalScene, e.prev = 1, o.screen.open(Wn.o4.NOTIFY_SCREEN, {
											message: "Loading...",
											loading: !0
										}), e.next = 5, (0, Zl.mH)();
									case 5:
										return r = e.sent, Ul(r), l = i.getPlayer(), c = l.playerId, u = l.name, d = l.photo, e.next = 10, s.inviteAsync({
											template: Fl.W6,
											text: {
												default: "Great! I have reached a new high level!",
												localizations: {
													en_US: "Great! I have reached a new high level!",
													vi_VN: "Th\u1eadt tuy\u1ec7t! M\xecnh v\u1eeba ph\xe1 k\u1ef7 l\u1ee5c n\xe0y!"
												}
											},
											image: r || "",
											data: {
												playerId: c,
												playerName: u,
												playerPhoto: d,
												type: Fl.W6
											}
										});
									case 10:
										n.event(Xt._.INVITE, {
											invite_content_type: "BestScore",
											success: !0
										}), e.next = 17;
										break;
									case 13:
										e.prev = 13, e.t0 = e.catch(1), n.event(Xt._.INVITE, {
											invite_content_type: "BestScore",
											success: !1
										}), (0, a.tO)(e.t0);
									case 17:
										return e.prev = 17, o.screen.close(Wn.o4.NOTIFY_SCREEN), e.finish(17);
									case 20:
									case "end":
										return e.stop()
								}
							}), e, null, [
								[1, 13, 17, 20]
							])
						})))
					},
					Yl = function() {
						return function() {
							var e = (0, r.Z)(h().mark((function e(t, i) {
								var n, s, o, r, l, c, u, d, p, m, f;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return n = window.game, s = n.player, o = n.analytics, r = n.facebook, l = n.globalScene, e.prev = 1, l.screen.open(Wn.o4.NOTIFY_SCREEN, {
												message: "Loading...",
												loading: !0
											}), c = i(), e.next = 6, (0, Zl.Q_)(c);
										case 6:
											return u = e.sent, Ul(u), d = s.getPlayer(), p = d.playerId, m = d.name, f = d.photo, e.next = 11, r.inviteAsync({
												template: Fl.W6,
												cta: {
													default: "Join",
													localizations: {
														en_US: "Join",
														vi_VN: "Tham gia"
													}
												},
												text: {
													default: "Easy! I have a new score!",
													localizations: {
														en_US: "Easy! I have a new score!",
														vi_VN: "A ha! M\xecnh v\u1eeba \u0111\u1ea1t m\u1ed9t \u0111i\u1ec3m m\u1edbi!"
													}
												},
												image: u || "",
												data: {
													playerId: p,
													playerName: m,
													playerPhoto: f,
													type: Fl.nx
												}
											});
										case 11:
											o.event(Xt._.INVITE, {
												invite_content_type: "Tournament",
												success: !0
											}), e.next = 18;
											break;
										case 14:
											e.prev = 14, e.t0 = e.catch(1), o.event(Xt._.INVITE, {
												invite_content_type: "Tournament",
												success: !1
											}), (0, a.tO)(e.t0);
										case 18:
											return e.prev = 18, l.screen.close(Wn.o4.NOTIFY_SCREEN), e.finish(18);
										case 21:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[1, 14, 18, 21]
								])
							})));
							return function(t, i) {
								return e.apply(this, arguments)
							}
						}()
					},
					Wl = i(67239),
					Kl = aa.Z.DEFAULT,
					Hl = Kl.KEY,
					zl = Kl.FRAME,
					Xl = function(e) {
						function t(t) {
							var i, n = t.player.getPlayerId(),
								a = t.player.getPlayer().photo;
							return (i = e.call(this, t, {
								id: n,
								url: a,
								key: Hl,
								frame: zl.AVATAR_LEVEL_BG_MASK,
								background: zl.AVATAR_LEVEL_BG,
								width: 43,
								height: 53,
								octagon: .23,
								loadDelay: 100
							}) || this).bringToTop(i.photo), i.bringToTop(i.loading), i.avtFrame.setWorldSize(36.5, 36.5), i.align(), i.runAnimation(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.align = function() {
							Phaser.Display.Align.In.Center(this.loading, this.background, 0, -3), Phaser.Display.Align.In.Center(this.avtFrame, this.background, 0, -3)
						}, i.setPhoto = function(t) {
							e.prototype.setPhoto.call(this, t);
							var i = this.payload,
								n = i.width,
								a = i.height,
								s = Math.min(n, a) - 6.5;
							this.photo.setWorldSize(s, s), Phaser.Display.Align.In.Center(this.photo, this.background, 0, -2.8)
						}, i.runAnimation = function() {
							this.scene.tweens.add({
								targets: this,
								y: "-=7",
								ease: Phaser.Math.Easing.Quadratic.Out,
								duration: 600,
								yoyo: !0,
								repeat: -1
							})
						}, t
					}(Eo),
					Vl = (function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, "UpdateAbleObject") || this).updateInfo = void 0, i
						}(0, l.Z)(t, e)
					}(Phaser.GameObjects.GameObject), function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).classType = void 0, n.listConfigs = void 0, n.padding = void 0, n.startObjectIndex = void 0, n.endObjectIndex = void 0, n.listObjects = void 0, n.classType = i.classType, n.listConfigs = i.listConfigs, n.padding = i.padding ? i.padding : 0, n.objects.classType = n.classType, n.updateConfig(n.listConfigs), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.reset = function() {
							e.prototype.reset.call(this), this.killAndHideAll()
						}, i.getChildren = function() {
							var e;
							return A()(e = this.listObjects).call(e, (function(e) {
								return void 0 != e && e.active
							}))
						}, i.updateConfig = function(e) {
							var t;
							this.reset(), this.listConfigs = e, this.listObjects = ko()(t = new Array(e.length)).call(t, void 0), this.addObjectIndex(0, 0);
							var i = this.getEndObjectIndex();
							this.addObjectIndex(1, i), this.startObjectIndex = this.getStartObjectIndex(), this.endObjectIndex = this.getEndObjectIndex(), this.updateMaxHeight(), this.value = this.marginTop
						}, i.killAndHideAll = function() {
							var e, t = this;
							this.listObjects instanceof Array && _()(e = this.listObjects).call(e, (function(e) {
								void 0 !== e && t.objects.killAndHide(e)
							}))
						}, i.setItemPosition = function(e, t) {
							var i = e.height;
							e.setPosition(0, i / 2 + (i + this.padding) * t - this.height / 2)
						}, i.updateMaxHeight = function() {
							return this.maxValue = Math.max(this.listConfigs.length * (this.objHeight + this.padding) - this.padding + this.marginBottom - this.height, 0)
						}, i.updateObject = function(t) {
							e.prototype.updateObject.call(this, t);
							for (var i = this.getStartObjectIndex(), n = this.getEndObjectIndex(), a = this.startObjectIndex; a <= this.endObjectIndex; a++)(a < i || a > n) && this.killObjectIndex(a, a);
							for (var s = i; s <= n; s++)(s < this.startObjectIndex || s > this.endObjectIndex) && this.addObjectIndex(s, s);
							this.startObjectIndex = i, this.endObjectIndex = n
						}, i.killObjectIndex = function(e, t) {
							for (var i = e; i <= t; i++) {
								var n = this.listObjects[i];
								n && (this.objects.killAndHide(n), this.listObjects[i] = void 0)
							}
						}, i.addObjectIndex = function(e, t) {
							for (var i = e; i <= t; i++) {
								var n = this.padding,
									a = this.listConfigs;
								if (i >= a.length) return;
								var s = this.objects.getFirstDead(!0),
									o = s.height,
									r = o / 2 + (o + n) * i + this.value - this.height / 2;
								s.updateInfo(a[i]), s.setPosition(0, r), s.setActive(!0), s.setVisible(!0), this.addAt(s), this.listObjects[i] = s
							}
						}, i.getStartObjectIndex = function() {
							var e = this.objHeight,
								t = this.padding;
							return Math.max(Math.floor((0 - this.value) / (e + t)), 0)
						}, i.getEndObjectIndex = function() {
							var e = this.objHeight,
								t = this.padding,
								i = this.listConfigs,
								n = e + t;
							return Math.min(Math.floor((this.height - this.value) / n), i.length)
						}, (0, V.Z)(t, [{
							key: "objHeight",
							get: function() {
								var e = this.objects.getChildren();
								return 0 == e.length ? this.maxValue = 0 : e[0].height
							}
						}]), t
					}(hr.Z)),
					Jl = aa.Z.DEFAULT,
					ql = Jl.KEY,
					Ql = Jl.FRAME,
					$l = aa.Z.THEME,
					ec = $l.KEY,
					tc = $l.DEFAULT,
					ic = $l.HARD,
					nc = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, ql, Ql.BUTTON_LEVEL_BASE, 49, 45) || this).payload = void 0, i.box = void 0, i.overlay = void 0, i.text = void 0, i.star1 = void 0, i.star2 = void 0, i.star3 = void 0, i.skull = void 0, i.levelEnableMax = void 0, i.levelRoundContainer = void 0, i.levelRoundTween = void 0, i.handleClick = function() {
								var e;
								i.payload.enable && null != (e = i.payload.config) && e.level && (i.scene.screen.open(Wn.o4.INTRO_LEVEL_SCREEN, {
									level: i.payload.config.level,
									quantityStar: i.payload.quantityStar,
									missionType: i.payload.config.missionType
								}), i.updateTheme(i.payload.config.level))
							}, i.payload = {
								enable: !1,
								quantityStar: 0,
								config: {
									isHard: !1,
									missionType: "CollectBubbles",
									level: 0,
									colorButtonOverlay: "orange"
								}
							}, i.scene = t, i.setName("Level"), i.createUI(), i.align(), i.onClick = i.handleClick, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createUI = function() {
							this.createLevelRound(), this.createBox(), this.createButtonOverlay(), this.createStars(), this.createSkull(), this.createText(), this.sendToBack(this.levelRoundContainer)
						}, i.createButtonOverlay = function() {
							this.overlay = this.scene.make.image({
								key: ql,
								frame: Ql.BUTTON_LEVEL_GREY
							}), this.overlay.setWorldSize(37.5, 33.5), this.overlay.kill(), this.add(this.overlay)
						}, i.createText = function() {
							this.text = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								origin: {
									x: .5,
									y: .5
								},
								size: this.scene.fontSize(20)
							}), this.text.kill(), this.add(this.text)
						}, i.createSkull = function() {
							this.skull = this.scene.make.image({
								key: ql,
								frame: Ql.ICON_SKULLCAP
							}), this.skull.setWorldSize(28.5, 31.5), this.skull.kill(), this.add(this.skull)
						}, i.createStars = function() {
							this.star1 = this.scene.make.image({
								key: ql,
								frame: Ql.ICON_STAR_EMPTY_1
							}), this.star1.setWorldSize(18, 19), this.star1.kill(), this.star2 = this.scene.make.image({
								key: ql,
								frame: Ql.ICON_STAR_EMPTY_2
							}), this.star2.setWorldSize(21.5, 21.5), this.star2.kill(), this.star3 = this.scene.make.image({
								key: ql,
								frame: Ql.ICON_STAR_EMPTY_3
							}), this.star3.setWorldSize(18, 19), this.star3.kill(), this.add([this.star1, this.star2, this.star3])
						}, i.createBox = function() {
							this.box = this.scene.make.image({
								key: ql,
								frame: Ql.TREASURE_CLOSE
							}), this.box.setWorldSize(53.5, 44.5), this.box.kill(), this.add(this.box)
						}, i.createLevelRound = function() {
							this.levelRoundContainer = this.scene.add.container();
							var e = this.scene.make.image({
								key: ql,
								frame: Ql.MAP_LEVEL_FX_ROUND_1,
								alpha: 1
							});
							e.setWorldSize(61.5, 52.5);
							var t = this.scene.make.image({
								key: ql,
								frame: Ql.MAP_LEVEL_FX_ROUND_2
							});
							t.setWorldSize(76.5, 65.5), Phaser.Display.Align.In.Center(t, e, 0, 2), this.levelRoundContainer.add([e, t]), this.add(this.levelRoundContainer)
						}, i.align = function() {
							Phaser.Display.Align.In.Center(this.box, this.button, .5, -10), Phaser.Display.Align.In.BottomCenter(this.skull, this.button, 0, 8.35), Phaser.Display.Align.In.Center(this.overlay, this.button, 0, -7.5), Phaser.Display.Align.In.Center(this.text, this.button, .5, -7.5), Phaser.Display.Align.In.Center(this.levelRoundContainer, this.button), this.alignStars()
						}, i.alignStars = function() {
							Phaser.Display.Align.In.LeftCenter(this.star1, this.star2, 13, 10), Phaser.Display.Align.In.TopCenter(this.star2, this.button, 0, 29), Phaser.Display.Align.In.RightCenter(this.star3, this.star2, 13, 10)
						}, i.setConfig = function(e) {
							this.payload.config = e
						}, i.setEnable = function(e) {
							this.payload.enable = e
						}, i.setQuantityStar = function(e) {
							this.payload.quantityStar = e < 0 ? 0 : e > 3 ? 3 : e
						}, i.setPayload = function(e, t, i) {
							void 0 === t && (t = !0), void 0 === i && (i = 0), this.setConfig(e), this.setEnable(t), this.setQuantityStar(i)
						}, i.updateOverlay = function() {
							var e, t, i;
							if (null != (e = this.payload.config) && e.treasure && this.payload.config.level >= this.levelEnableMax) this.overlay.kill();
							else {
								if (this.payload.enable) switch (null == (t = this.payload.config) ? void 0 : t.colorButtonOverlay) {
									default:
										i = Ql.BUTTON_LEVEL_ORANGE;
										break;
									case "green":
										i = Ql.BUTTON_LEVEL_GREEN;
										break;
									case "pink":
										i = Ql.BUTTON_LEVEL_PINK;
										break;
									case "purple":
										i = Ql.BUTTON_LEVEL_PURPLE;
										break;
									case "blue":
										i = Ql.BUTTON_LEVEL_BLUE;
										break;
									case "skyblue":
										i = Ql.BUTTON_LEVEL_SKY_BLUE;
										break;
									case "yellow":
										i = Ql.BUTTON_LEVEL_YELLOW
								} else i = Ql.BUTTON_LEVEL_GREY;
								this.overlay.setFrame(i), this.overlay.revive(), this.overlay.setWorldSize(37.5, 33.5)
							}
						}, i.updateStars = function() {
							if (!this.payload.enable || !this.payload.config || this.payload.config.level >= this.levelEnableMax) return this.star1.kill(), this.star2.kill(), void this.star3.kill();
							switch (this.star1.setFrame(Ql.ICON_STAR_EMPTY_1), this.star2.setFrame(Ql.ICON_STAR_EMPTY_2), this.star3.setFrame(Ql.ICON_STAR_EMPTY_3), this.star1.revive(), this.star2.revive(), this.star3.revive(), this.payload.quantityStar) {
								case 1:
									this.star1.setFrame(Ql.ICON_STAR_1);
									break;
								case 2:
									this.star1.setFrame(Ql.ICON_STAR_1), this.star2.setFrame(Ql.ICON_STAR_2);
									break;
								case 3:
									this.star1.setFrame(Ql.ICON_STAR_1), this.star2.setFrame(Ql.ICON_STAR_2), this.star3.setFrame(Ql.ICON_STAR_3)
							}
							this.alignStars()
						}, i.updateTreasure = function() {
							var e;
							null != (e = this.payload.config) && e.treasure && this.payload.config.level >= this.levelEnableMax ? this.box.revive() : this.box.kill()
						}, i.updateLevelButton = function() {
							var e, t;
							(this.levelEnableMax = this.scene.player.getLevel(), this.scene.level.getLevel() === (null == (e = this.payload.config) ? void 0 : e.level)) ? (this.levelRoundContainer.revive(), this.runAnimation()) : (this.levelRoundContainer.kill(), null == (t = this.levelRoundTween) || t.remove(), this.levelRoundTween = void 0);
							this.updateOverlay(), this.updateStars(), this.updateTreasure(), this.payload.config ? (this.updateLevelButtonHard(), this.text.setText("" + this.payload.config.level), this.text.revive()) : (this.button.setTexture(ql, Ql.BUTTON_LEVEL_BG), this.button.setSize(36.5, 35), this.text.kill()), this.align()
						}, i.updateLevelButtonHard = function() {
							var e, t;
							null != (e = this.payload.config) && e.treasure && this.payload.config.level >= this.levelEnableMax || null == (t = this.payload.config) || !t.isHard ? (this.skull.kill(), this.button.setTexture(ql, Ql.BUTTON_LEVEL_BASE), this.button.setSize(39, 45)) : (this.skull.revive(), this.button.setTexture(ql, Ql.BUTTON_LEVEL_BASE_HARD), this.button.setSize(49, 45))
						}, i.updateEnable = function(e) {
							this.setEnable(e), this.updateLevelButton()
						}, i.runAnimation = function() {
							var e, t = 1 / this.scene.world.getPixelRatio();
							null == (e = this.levelRoundTween) || e.remove(), this.levelRoundTween = void 0, this.levelRoundTween = this.scene.tweens.add({
								targets: this.levelRoundContainer,
								scale: {
									start: t,
									from: t,
									to: 1.6,
									delay: 30,
									duration: 1e3,
									ease: zn
								},
								alpha: {
									start: 1,
									from: 1,
									to: 0,
									delay: 100,
									duration: 930
								},
								loop: -1
							})
						}, i.updateTheme = function(e) {
							this.scene.level.getLevelConfigMap()[e - 1].isHard ? (this.scene.theme.changeTheme(aa.Z.THEME_GAMEPLAY.KEY, aa.Z.THEME_GAMEPLAY.HARD.KEY), this.scene.theme.changeTheme(ec, ic.KEY), this.scene.theme.changeTheme(Yn.Z.GAME_BACKGROUND_THEME.KEY, Yn.Z.GAME_BACKGROUND_THEME.HARD.KEY)) : (this.scene.theme.changeTheme(aa.Z.THEME_GAMEPLAY.KEY, aa.Z.THEME_GAMEPLAY.DEFAULT.KEY), this.scene.theme.changeTheme(ec, tc.KEY), this.scene.theme.changeTheme(Yn.Z.GAME_BACKGROUND_THEME.KEY, Yn.Z.GAME_BACKGROUND_THEME.DEFAULT.KEY))
						}, t
					}(ea.Z),
					ac = nc,
					sc = aa.Z.DEFAULT,
					oc = sc.KEY,
					rc = sc.FRAME,
					lc = [{
						x: 90,
						y: 0
					}, {
						x: 80,
						y: -25
					}, {
						x: 50,
						y: -40
					}, {
						x: 10,
						y: -37
					}, {
						x: -30,
						y: -39
					}, {
						x: -60,
						y: -52
					}, {
						x: -75,
						y: -75
					}, {
						x: -70,
						y: -100
					}, {
						x: -40,
						y: -118
					}, {
						x: 0,
						y: -115
					}, {
						x: 45,
						y: -119
					}, {
						x: 75,
						y: -134
					}],
					cc = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).paths = [], i.createPaths(), i.setSize(208.5, 166), i.scene.add.existing((0, Un.Z)(i)), i
						}
						return (0, l.Z)(t, e), t.prototype.createPaths = function() {
							for (var e, t = !1, i = 0; i < 12; i++) {
								var n = this.scene.make.image({
									key: oc,
									frame: rc.MAP_PATH
								});
								n.setWorldSize(28.5, 19.5);
								var a = lc[i % 12];
								n.setPosition(a.x, a.y), n.flipX = t, t = !(i < 6), this.paths.push(n)
							}
							this.add(y()(e = []).call(e, this.paths))
						}, t
					}(Phaser.GameObjects.Container),
					hc = cc,
					uc = aa.Z.DEFAULT,
					dc = (uc.KEY, uc.FRAME, function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).background = void 0, i.buttons = [], i.payload = void 0, i.pathContainers = [], i.heightContainer = 0, i.init(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							this.payload = {
								index: -1,
								payloadLevelButtons: []
							}, this.createPathContainers(), this.setSize(208.5, this.heightContainer), this.addNewButtons(GameCore.Configs.LevelScroller.limitLevelButtonInContainer)
						}, i.createBackground = function() {}, i.updateSize = function() {
							this.setSize(174.5, 433)
						}, i.clear = function() {
							this.buttons = []
						}, i.createPathContainers = function() {
							for (var e, t = 0; t < 3; t++) {
								var i = new hc(this.scene);
								i.setPosition(0, this.heightContainer), this.heightContainer += i.height, this.pathContainers.push(i)
							}
							var n = -this.heightContainer / 5;
							this.pathContainers.forEach((function(e) {
								e.setPosition(0, n), n += e.height
							})), this.add(y()(e = []).call(e, this.pathContainers))
						}, i.addNewButtons = function(e) {
							for (var t = 0; t < e; t++) {
								var i = new ac(this.scene);
								this.buttons.push(i), this.add(i)
							}
						}, i.setButtons = function(e) {
							this.removeAll(), this.add(this.buttons), this.buttons = e
						}, i.updateButtons = function() {
							if (-1 !== this.payload.index) {
								for (var e = this.heightContainer / 2 - 22.5, t = 0, i = 0; i < this.pathContainers.length; i++) {
									for (var n = i % 3 ? 1 : i % 2 ? 2 : 0, a = t; a < (i + 1) * this.buttons.length / this.pathContainers.length && (this.buttons[a] && lc[n]); a++) this.buttons[a].setPosition(lc[n].x, lc[n].y + e), n += 3;
									t = (i + 1) * this.buttons.length / this.pathContainers.length, e -= this.pathContainers[i].height
								}
								for (var s = 0; s < this.buttons.length; s++) this.buttons[s].kill();
								for (var o = 0; o < this.payload.payloadLevelButtons.length; o++) {
									var r = this.payload.payloadLevelButtons[o];
									this.buttons[o].revive(), this.buttons[o].setPayload(r.config, r.enable, r.quantityStar), this.buttons[o].updateLevelButton()
								}
							}
						}, i.updateInfo = function(e) {
							this.payload = e, this.updateButtons()
						}, i.setVisible = function(t) {
							return e.prototype.setVisible.call(this, t), this
						}, t
					}(Phaser.GameObjects.Container)),
					pc = dc,
					mc = aa.Z.GAMEPLAY.EFFECTS,
					fc = mc.KEY,
					gc = mc.FRAME,
					vc = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, fc) || this).emitter = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.ON_TOP), i.createExplodeAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 32)
						}, i.createExplodeAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [gc.GLOW_7],
									scale: {
										start: .3 * e,
										end: .2 * e
									},
									speed: {
										min: 60,
										max: 120
									},
									lifespan: {
										min: 300,
										max: 500
									},
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: yc,
									on: !1
								};
							this.emitter = this.createEmitter(t)
						}, i.explode = function(e, t) {
							this.emitter.explode(4, e, t)
						}, i.stop = function() {
							this.emitter.forEachAlive((function(e) {
								return e.resetPosition()
							}), this.emitter), this.emitter.killAll(), this.emitter.stop()
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager),
					yc = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).angle2 = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var o = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								r = Math.atan2(this.y - i, this.x - t);
							this.velocityX = o * Math.cos(r), this.velocityY = o * Math.sin(r), this.rotation = r, this.angle2 = r
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.rotation = this.angle2, a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					bc = vc,
					Ec = aa.Z.GAMEPLAY.EFFECTS,
					Tc = Ec.KEY,
					Ac = Ec.FRAME,
					Sc = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, Tc) || this).emitter = void 0, n.emitZone = void 0, n.createEmitZone(i), n.setDepth(jn.Z.ON_TOP), n.createExplodeAnimation(), n.scene.add.existing((0, Un.Z)(n)), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function(e) {
							var t = new Phaser.Geom.Circle(0, 0, e);
							this.emitZone = {
								getRandomPoint: function(e) {
									var i = Phaser.Math.PI2 * Math.random(),
										n = Math.pow(Math.random(), -.1);
									return e.x = t.x + n * Math.cos(i) * t.radius, e.y = t.y + n * Math.sin(i) * t.radius, e
								}
							}
						}, i.createExplodeAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [Ac.PARTICLE_STAR],
									scale: {
										min: .6 * e,
										max: .8 * e
									},
									alpha: {
										start: 1,
										end: 0,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									speed: {
										min: 20,
										max: 40
									},
									lifespan: {
										min: 1500,
										max: 2e3
									},
									timeScale: 1,
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: _c,
									on: !1
								};
							this.emitter = this.createEmitter(t)
						}, i.explode = function(e, t, i, n) {
							void 0 === i && (i = 0), void 0 === n && (n = 0), i && n && this.emitter.setLifespan(Phaser.Math.RND.between(i, n)), this.emitter.setPosition(e, t), this.emitter.flow(300, 2)
						}, i.stop = function() {
							var e, t;
							null == (e = this.emitter) || e.killAll(), null == (t = this.emitter) || t.stop()
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager),
					_c = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).angle2 = void 0, i._scaleX = void 0, i._scaleY = void 0, i.split = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var o = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								r = Math.atan2(this.y - i, this.x - t);
							this.velocityX = o * Math.cos(r), this.velocityY = o * Math.sin(r), this.rotation = r, this.angle2 = r, this._scaleX = this.scaleX, this._scaleY = this.scaleY, this.split = Phaser.Math.RND.between(1, 2), this.scaleX = 0, this.scaleY = 0
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							this.rotation = this.angle2;
							var s = this.lifeT * this.split,
								o = Math.floor(s),
								r = s - o;
							return o % 2 == 0 ? (this.scaleX = Phaser.Math.Easing.Sine.InOut(r) * this._scaleX, this.scaleY = Phaser.Math.Easing.Sine.InOut(r) * this._scaleY) : (this.scaleX = (1 - Phaser.Math.Easing.Sine.InOut(r)) * this._scaleX, this.scaleY = (1 - Phaser.Math.Easing.Sine.InOut(r)) * this._scaleY), a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					Cc = Sc,
					wc = i(48911),
					Bc = aa.Z.DEFAULT,
					Ic = Bc.KEY,
					Pc = Bc.FRAME,
					xc = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS,
					Oc = xc.KEY,
					kc = xc.FRAME,
					Rc = aa.Z.GAMEPLAY.EFFECTS,
					Mc = Rc.KEY,
					Lc = Rc.FRAME,
					Gc = function(e) {
						function t(t, i, n) {
							var a;
							return void 0 === n && (n = !1), (a = e.call(this, t) || this).bubbleBackground = void 0, a.text = void 0, a.idleAnimation = void 0, a.particles = void 0, a.bonusBullets = [], a.explodeParticle = void 0, a.targetGlow = void 0, a.welcomeBackText = void 0, a.currentBonus = 0, a.createBubbleBackground(i), a.createBonusText(i), a.createIdleParticle(), a.createExplodeParticle(), a.createTargetGlow(), n ? a.createWelcomeBackText() : a.runAnimation(), a.setBonus(0), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setBonus = function(e) {
							e <= 0 ? this.kill() : (this.revive(), this.text.setText("+" + e))
						}, i.createBubbleBackground = function(e) {
							this.bubbleBackground = this.scene.add.image(0, 0, Ic, Pc.ICON_BONUS_BUBBLES), this.bubbleBackground.setWorldSize(87.5 * e, 89 * e), this.add(this.bubbleBackground)
						}, i.createBonusText = function(e) {
							this.text = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								text: "0",
								size: this.scene.fontSize(32 * e),
								origin: {
									x: .5,
									y: .5
								}
							}), this.add(this.text), Phaser.Display.Align.In.Center(this.text, this, 0, 14 * e)
						}, i.createIdleParticle = function() {
							this.particles = new Cc(this.scene, 10), this.add(this.particles)
						}, i.runIdleAnimation = function() {
							var e;
							null == (e = this.idleAnimation) || e.remove(), this.idleAnimation = this.scene.tweens.add({
								targets: this,
								y: "-=7",
								ease: Phaser.Math.Easing.Quadratic.Out,
								duration: 600,
								yoyo: !0,
								repeat: -1
							})
						}, i.runAnimation = function() {
							var e;
							this.runIdleAnimation(), null == (e = this.particles) || e.stop(), this.particles.explode(0, 0, 800, 1e3)
						}, i.createWelcomeBackText = function() {
							this.welcomeBackText = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(12),
								text: this.scene.lang.getText("offline_bonus"),
								origin: {
									x: .5,
									y: .5
								},
								maxWidth: 90
							}), this.add(this.welcomeBackText), Phaser.Display.Align.In.Center(this.welcomeBackText, this.bubbleBackground, 0, -55)
						}, i.createBonusBullets = function(e, t) {
							if (0 === this.bonusBullets.length)
								for (var i = 0; i < GameCore.Configs.ComebackBonus.maxBonus; i++) {
									var n = this.scene.make.image({
										key: Oc,
										frame: kc.BALL_RED
									});
									this.bonusBullets.push(n)
								}
							for (var a = 0; a < e; a++) {
								var s = this.bonusBullets[a];
								if (t.length) {
									var o = t[a % t.length];
									this.setBonusBulletColor(s, o)
								}
							}
							for (var r = 0; r < this.bonusBullets.length; r++) {
								var l = this.bonusBullets[r];
								l.setWorldSize(20.4, 20.4), l.kill()
							}
							this.currentBonus = e
						}, i.createExplodeParticle = function() {
							this.explodeParticle = new bc(this.scene), this.explodeParticle.setDepth(jn.Z.ON_TOP)
						}, i.createTargetGlow = function() {
							this.targetGlow = this.scene.make.image({
								key: Mc,
								frame: Lc.GLOW_3
							}), this.targetGlow.kill()
						}, i.setBonusBulletColor = function(e, t) {
							switch (t) {
								case wc.I.Red:
									e.setFrame(kc.BALL_RED);
									break;
								case wc.I.Green:
									e.setFrame(kc.BALL_GREEN);
									break;
								case wc.I.Blue:
									e.setFrame(kc.BALL_BLUE);
									break;
								case wc.I.Yellow:
									e.setFrame(kc.BALL_YELLOW);
									break;
								case wc.I.Pink:
									e.setFrame(kc.BALL_PINK);
									break;
								case wc.I.Violet:
									e.setFrame(kc.BALL_VIOLET);
									break;
								case wc.I.Cyan:
									e.setFrame(kc.BALL_CYAN);
									break;
								case wc.I.Orange:
									e.setFrame(kc.BALL_ORANGE)
							}
						}, i.runAddBubblesAnimation = function(e) {
							var t = this,
								i = this.getWorldPosition(),
								n = i.x,
								a = i.y,
								s = this.scene.gameManager.shooter.getWorldPosition(),
								o = s.x,
								r = s.y;
							this.targetGlow.setDepth(jn.Z.ON_TOP).setAlpha(0).setPosition(o, r).setWorldSize(122, 122);
							for (var l = new Phaser.Math.Vector2(n, a), c = new Phaser.Math.Vector2(o, r), h = function(i) {
									var s = t.bonusBullets[i];
									s.setPosition(n, a).setDepth(jn.Z.BULLET).setWorldSize(20.4, 20.4), s.kill();
									var h = new Phaser.Math.Vector2(n + (o - n) / 2, a - Phaser.Math.RND.between(60, 90)),
										u = new Phaser.Curves.CubicBezier(l, h, h, c);
									t.scene.tweens.addCounter({
										from: 0,
										to: 1,
										duration: 500,
										delay: 150 * i,
										onStart: function() {
											s.revive()
										},
										onUpdate: function(e) {
											var t = u.getPointAt(e.getValue());
											s.setPosition(t.x, t.y)
										},
										onComplete: function() {
											t.scene.audio.playSound(sa.Z.GOAL_PROGRESS), t.explodeParticle.explode(o, r), t.scene.gameManager.shooter.updateRemainingBullet(1), i == t.currentBonus - 1 && (t.scene.tweens.add({
												targets: t.targetGlow,
												duration: 100,
												yoyo: !0,
												props: {
													alpha: {
														from: 0,
														to: 1,
														ease: Phaser.Math.Easing.Linear
													}
												},
												onStart: function() {
													t.targetGlow.revive()
												},
												onComplete: function() {
													t.targetGlow.kill()
												}
											}), e && e()), s.kill()
										}
									})
								}, u = 0; u < this.currentBonus; u++) h(u)
						}, i.destroyOldObjects = function() {
							this.bonusBullets.forEach((function(e) {
								return e.kill()
							})), this.targetGlow.kill()
						}, t
					}(Phaser.GameObjects.Container),
					Dc = Gc,
					Fc = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, 0, 0, 210, 100) || this).createText(), i
						}
						return (0, l.Z)(t, e), t.prototype.createText = function() {
							var e = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(16),
								text: this.scene.lang.getText("you_have_passed_all_levels_we_will_update_soon"),
								maxWidth: .9 * this.width
							});
							Phaser.Display.Align.In.Center(e, this), this.add(e)
						}, t
					}(jr),
					Nc = function(e) {
						function t(t, i, n, a, s, o) {
							var r;
							return void 0 === a && (a = ""), void 0 === s && (s = ""), void 0 === o && (o = !1), (r = e.call(this, t, 0, 0, a, s) || this).isClicked = void 0, r.onHoldCallback = void 0, r.checkVisibility = void 0, r.update = function() {
								r.checkVisibility && r.checkVisibility(), r.isClicked && r.onHoldCallback()
							}, r.scene = t, r.isClicked = !1, r.setWorldSize(i, n), o && r.setAngle(180), r.setInteractive(r.scene.input.makePixelPerfect()), r.createEvents(), r.scene.add.existing((0, Un.Z)(r)), r
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEvents = function() {
							var e = this;
							this.scene.events.on(Phaser.Scenes.Events.UPDATE, this.update), this.on(Phaser.Input.Events.POINTER_DOWN, (function() {
								return e.isClicked = !0
							})), this.on(Phaser.Input.Events.POINTER_UP, (function() {
								return e.isClicked = !1
							}))
						}, i.setOnHoldCallback = function(e) {
							this.onHoldCallback = e
						}, i.setCheckVisibility = function(e) {
							this.checkVisibility = e
						}, (0, V.Z)(t, [{
							key: "handlePointerUp",
							set: function(e) {
								this.on(Phaser.Input.Events.POINTER_UP, e)
							}
						}]), t
					}(Phaser.GameObjects.Image);

				function Zc(e, t) {
					var i = "undefined" !== typeof uo() && mo()(e) || e["@@iterator"];
					if (i) return (i = i.call(e)).next.bind(i);
					if (Array.isArray(e) || (i = function(e, t) {
							var i;
							if (!e) return;
							if ("string" === typeof e) return Uc(e, t);
							var n = tt()(i = Object.prototype.toString.call(e)).call(i, 8, -1);
							"Object" === n && e.constructor && (n = e.constructor.name);
							if ("Map" === n || "Set" === n) return co()(e);
							if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Uc(e, t)
						}(e)) || t && e && "number" === typeof e.length) {
						i && (e = i);
						var n = 0;
						return function() {
							return n >= e.length ? {
								done: !0
							} : {
								done: !1,
								value: e[n++]
							}
						}
					}
					throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
				}

				function Uc(e, t) {
					(null == t || t > e.length) && (t = e.length);
					for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
					return n
				}
				var jc = function(e) {
						function t(t) {
							var i, n = t.world.getWorldSize(),
								a = n.width,
								s = n.height;
							return (i = e.call(this, t, {
								classType: pc,
								listConfigs: [],
								width: a,
								height: s,
								marginTop: 0,
								marginBottom: s / 2 - 115
							}) || this).levelConfigMap = [], i.levelEnableMax = void 0, i.levelStars = void 0, i.levelAvatar = void 0, i.levelAvatarContainer = void 0, i.bonusBubble = void 0, i.popupCompleteAllLevel = void 0, i.fastScrollDownButton = void 0, i.fastScrollUpButton = void 0, i.isFastScroll = !1, i.handleUIHeaderWhenScroll(), i.createLevelAvatar(), i.createLevelAvatarContainer(), i.createBonusBubble(), i.createPopupCompleteAllLevel(), i.createFastScrollButtons(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createPopupCompleteAllLevel = function() {
							this.popupCompleteAllLevel = new Fc(this.scene)
						}, i.createLevelAvatar = function() {
							this.levelAvatar = new Xl(this.scene)
						}, i.createLevelAvatarContainer = function() {
							this.levelAvatarContainer = this.scene.add.container(), this.levelAvatarContainer.setName("LevelAvatar"), this.levelAvatarContainer.add(this.levelAvatar)
						}, i.createBonusBubble = function() {
							this.bonusBubble = new Dc(this.scene, .5), this.levelAvatarContainer.add(this.bonusBubble), Phaser.Display.Align.To.LeftCenter(this.bonusBubble, this.levelAvatar, 30, -4)
						}, i.updateBonusBubbles = function(e) {
							this.bonusBubble.setBonus(e);
							var t = this.scene.world.getWorldSize().width;
							this.levelAvatar.getWorldPosition().x > t / 2 ? Phaser.Display.Align.To.RightCenter(this.bonusBubble, this.levelAvatar, 30, -4) : Phaser.Display.Align.To.LeftCenter(this.bonusBubble, this.levelAvatar, 30, -4)
						}, i.setLevelEnableMax = function(e) {
							this.levelEnableMax = e || 1
						}, i.setLevelStars = function(e) {
							this.levelStars = e || {}
						}, i.updateLevelScroller = function() {
							var e = this.scene.level.getLevelConfigMap();
							this.scene.level.getLevel();
							if (this.levelConfigMap = e, this.clearItem(), this.updateLevelButtonContainers(e), this.setEnable(!0), this.value = this.getCorrectValue(), !this.levelEnableMax || e.length < this.levelEnableMax) {
								this.value = -this.minValue, this.levelAvatarContainer.setVisible(!1), this.addItem(this.popupCompleteAllLevel), this.bringToTop(this.popupCompleteAllLevel);
								for (var t, i = Zc(this.getChildren()); !(t = i()).done;)
									for (var n, a = t.value, s = Zc(a.buttons); !(n = s()).done;) {
										var o = n.value;
										o.payload.config.level === this.levelConfigMap[this.levelConfigMap.length - 1].level && this.popupCompleteAllLevel.setPosition(0, o.y + a.y - 120)
									}
							} else {
								this.popupCompleteAllLevel.setVisible(!1), this.addItem(this.levelAvatarContainer), this.bringToTop(this.levelAvatarContainer), this.levelAvatarContainer.revive();
								for (var r, l = !1, c = Zc(this.getChildren()); !(r = c()).done;) {
									for (var h, u = r.value, d = Zc(u.buttons); !(h = d()).done;) {
										var p = h.value;
										if ((this.levelEnableMax - p.payload.config.level) % 12 === 0) {
											this.levelAvatarContainer.setPosition(p.x + u.x, p.y + u.y - 48.5 - (this.levelEnableMax - p.payload.config.level) / 12 * u.height), l = !0;
											break
										}
									}
									if (l) break
								}
							}
							this.updateMinValue(), this.value > -this.minValue && (this.value = -this.minValue), this.value < -this.maxValue && (this.value = -this.maxValue)
						}, i.clearItem = function() {
							this.reset(), this.objects.clear(!1, !1)
						}, i.updateLevelButtonContainers = function(e) {
							var t = this.getConfigButtonContainers(e, this.levelEnableMax);
							this.updateConfig(t)
						}, i.getConfigButtonContainers = function(e, t) {
							for (var i = GameCore.Configs.LevelScroller.limitLevelButtonInContainer, n = [], a = [], s = 1; s <= this.levelConfigMap.length; s++) {
								var o = !0,
									r = 3;
								t && this.levelStars && (o = s <= t, r = this.levelStars[e[s - 1].level] || 0);
								var l, c = {
									config: this.levelConfigMap[s - 1],
									enable: o,
									quantityStar: r
								};
								if (a.push(c), s % i === 0) n.unshift({
									index: s / i,
									payloadLevelButtons: y()(l = []).call(l, a)
								}), a = []
							}
							return a.length > 0 && (n.unshift({
								index: s,
								payloadLevelButtons: a
							}), s++), this.getIndexButtonContainer(this.levelConfigMap.length) * i - this.levelConfigMap.length < 4 && n.unshift({
								index: s,
								payloadLevelButtons: []
							}), n
						}, i.getIndexButtonContainer = function(e) {
							var t = GameCore.Configs.LevelScroller.limitLevelButtonInContainer;
							return Math.ceil(e / t)
						}, i.handleUIHeaderWhenScroll = function() {
							var e = this;
							this.onScroll((function(t, i, n) {
								Math.abs(n) > 2 ? e.scene.header.slideOut() : e.scene.header.slideIn()
							}))
						}, i.getCorrectValue = function(e) {
							void 0 === e && (e = !1);
							var t = GameCore.Configs.LevelScroller.limitLevelButtonInContainer,
								i = this.objHeight,
								n = this.padding,
								a = e ? this.levelEnableMax : this.scene.level.getLevel(),
								s = this.listObjects.length - this.getIndexButtonContainer(a),
								o = a % t,
								r = -(s * i) - 35 * (t / 2 - (o = 0 === o ? 12 : o));
							return r -= 0 !== s ? n * s : 0
						}, i.enableAllLevel = function() {
							var e = this.value,
								t = this.scene.level.getLevelConfigMap(),
								i = this.getConfigButtonContainers(t, t.length);
							this.updateConfig(i), this.setEnable(!0), this.value = e
						}, i.updateMinValue = function() {
							var e = GameCore.Configs.LevelScroller.limitLevelButtonInContainer,
								t = -250,
								i = this.scene.level.getLevelConfigMap().length;
							t += this.objHeight * ((this.listObjects.length * e - i) / e), this.minValue = t
						}, i.fastScroll = function(e) {
							this.isScrollingBack || (this.isScrolling = !0, this.isScrollingSmooth = !0, this.isFastScroll = !0, this.velocity = 2500 * e)
						}, i.stopFastScroll = function(e) {
							this.isFastScroll && (this.isFastScroll = !1, this.velocity = 50 * e)
						}, i.createFastScrollButtons = function() {
							var e = this;
							this.fastScrollDownButton = new Nc(this.scene, 52.5, 52, aa.Z.DEFAULT.KEY, aa.Z.DEFAULT.FRAME.BUTTON_FAST_SCROLL), Phaser.Display.Align.In.BottomCenter(this.fastScrollDownButton, this.scene.gameZone, 0, -30);
							this.fastScrollDownButton.setCheckVisibility((function() {
								if (e.value <= 300 - e.maxValue) {
									if (!e.fastScrollDownButton.active) return;
									e.fastScrollDownButton.setVisible(!1).setActive(!1), e.stopFastScroll(-20), e.fastScrollDownButton.isClicked && (e.fastScrollDownButton.isClicked = !1)
								} else e.fastScrollDownButton.setVisible(!0).setActive(!0)
							})), this.fastScrollDownButton.setOnHoldCallback((function() {
								e.fastScroll(-1)
							})), this.fastScrollDownButton.handlePointerUp = function() {
								e.stopFastScroll(-1)
							}, this.fastScrollUpButton = new Nc(this.scene, 52.5, 52, aa.Z.DEFAULT.KEY, aa.Z.DEFAULT.FRAME.BUTTON_FAST_SCROLL, !0), Phaser.Display.Align.In.TopCenter(this.fastScrollUpButton, this.scene.gameZone, 0, -30), this.fastScrollUpButton.setCheckVisibility((function() {
								if (e.getCorrectValue(!0) <= e.value + 300) {
									if (!e.fastScrollUpButton.active) return;
									e.stopFastScroll(20), e.fastScrollUpButton.setVisible(!1).setActive(!1), e.fastScrollUpButton.isClicked && (e.fastScrollUpButton.isClicked = !1)
								} else e.fastScrollUpButton.setVisible(!0).setActive(!0)
							})), this.fastScrollUpButton.setOnHoldCallback((function() {
								e.fastScroll(1)
							})), this.fastScrollUpButton.handlePointerUp = function() {
								e.stopFastScroll(1)
							}
						}, i.runFastScrollButtonsAnimation = function() {
							this.scene.tweens.add({
								targets: [this.fastScrollDownButton],
								duration: 600,
								yoyo: !0,
								repeat: -1,
								props: {
									y: "+=4"
								},
								ease: Phaser.Math.Easing.Linear
							}), this.scene.tweens.add({
								targets: [this.fastScrollUpButton],
								duration: 600,
								yoyo: !0,
								repeat: -1,
								props: {
									y: "-=4"
								},
								ease: Phaser.Math.Easing.Linear
							})
						}, t
					}(Vl),
					Yc = jc,
					Wc = i(79033),
					Kc = aa.Z.DEFAULT,
					Hc = Kc.KEY,
					zc = Kc.FRAME,
					Xc = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).itemImage = void 0, n.wheelClaim = void 0, n.text = void 0, n.fadeInWheelClaim = void 0, n.fadeOutWheelClaim = void 0, n.isSelect = !1, n.createContent(i), n.align(), n.setSize(n.wheelClaim.width, n.wheelClaim.height), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createContent = function(e) {
							switch (e) {
								case "RainbowSpinItem":
									this.createItemImage(zc.BUY_ITEM_RAINBOW_BIG, 37.5, 38.5), this.setName("RainbowSpinItem");
									break;
								case "BombSpinItem":
									this.createItemImage(zc.BUY_ITEM_BOMB_BIG, 41, 43), this.setName("BombSpinItem");
									break;
								case "RocketSpinItem":
									this.createItemImage(zc.BUY_ITEM_ROCKET_BIG, 37, 38.5), this.setName("RocketSpinItem");
									break;
								case "ElectricSpinItem":
									this.createItemImage(zc.BUY_ITEM_ELECTRIC_BIG, 38.5, 38.5), this.setName("ElectricSpinItem");
									break;
								case "Coin10SpinItem":
									this.createItemImage(zc.ICON_WHEEL_COIN_10, 38, 28.5), this.setName("Coin10SpinItem"), this.createText("10");
									break;
								case "Coin25SpinItem":
									this.createItemImage(zc.ICON_WHEEL_COIN_25, 42.5, 44), this.setName("Coin25SpinItem"), this.createText("25");
									break;
								case "Coin50SpinItem":
									this.createItemImage(zc.ICON_WHEEL_COIN_50, 54.5, 48.5), this.setName("Coin50SpinItem"), this.createText("50");
									break;
								case "Coin100SpinItem":
									this.createItemImage(zc.ICON_WHEEL_COIN_100, 59.5, 63), this.setName("Coin100SpinItem"), this.createText("100")
							}
							this.createWheelClaim()
						}, i.createWheelClaim = function() {
							this.wheelClaim = this.scene.make.image({
								key: Hc,
								frame: zc.DAILY_SPIN_WHEEL_CLAIM
							}), this.wheelClaim.setVisible(!1), this.wheelClaim.setWorldSize(92, 121.5), this.add(this.wheelClaim)
						}, i.createItemImage = function(e, t, i) {
							this.itemImage = this.scene.make.image({
								key: Hc,
								frame: e
							}), this.itemImage.setWorldSize(t, i), this.add(this.itemImage)
						}, i.createText = function(e) {
							this.text = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(22),
								text: e
							}), this.add(this.text), Phaser.Display.Align.In.Center(this.text, this.itemImage, 0, 33.5)
						}, i.align = function() {
							Phaser.Display.Align.In.Center(this.itemImage, this.wheelClaim, 0, -20), this.text && Phaser.Display.Align.In.Center(this.text, this.itemImage, 0, 33.5)
						}, i.select = function() {
							this.isSelect = !0, this.wheelClaim.setVisible(!0)
						}, i.unSelect = function() {
							this.isSelect = !1, this.wheelClaim.setVisible(!1)
						}, i.getIsSelect = function() {
							return this.isSelect
						}, t
					}(Phaser.GameObjects.Container),
					Vc = aa.Z.DEFAULT,
					Jc = Vc.KEY,
					qc = Vc.FRAME,
					Qc = -Math.PI / 7,
					$c = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).oldAngle = void 0, i.wheelSpinImage = void 0, i.wheelSlices = [], i.spinningTween = void 0, i.rewardTween = void 0, i.itemReward = void 0, i.indexItemReward = void 0, i.quantityItemReward = {}, i.createUI(), i.alignSlices(), i.oldAngle = Qc, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createUI = function() {
							this.createWheelSpinImage(), this.createWheelSlice()
						}, i.createWheelSpinImage = function() {
							this.wheelSpinImage = this.scene.make.image({
								key: Jc,
								frame: qc.DAILY_SPIN_WHEEL_SPIN
							}), this.wheelSpinImage.setWorldSize(253.5, 253.5), this.wheelSpinImage.setRotation(Phaser.Math.DegToRad(0)), this.add(this.wheelSpinImage)
						}, i.createWheelSlice = function() {
							var e = this;
							["Coin10SpinItem", "RainbowSpinItem", "Coin100SpinItem", "ElectricSpinItem", "Coin25SpinItem", "RocketSpinItem", "Coin50SpinItem", "BombSpinItem"].forEach((function(t) {
								var i = new Xc(e.scene, t);
								e.wheelSlices.push(i);
								var n = 1;
								switch (t) {
									case "Coin10SpinItem":
										n = 10;
										break;
									case "Coin25SpinItem":
										n = 25;
										break;
									case "Coin50SpinItem":
										n = 50;
										break;
									case "Coin100SpinItem":
										n = 100
								}
								e.quantityItemReward[t] = n
							})), this.add(this.wheelSlices)
						}, i.alignSlices = function() {
							var e = 0;
							this.wheelSlices.forEach((function(t) {
								var i = -60.5 * Math.sin(e),
									n = -60.5 * Math.cos(e);
								t.setPosition(i, n), t.setRotation(-e), e += Math.PI / 4
							}))
						}, i.startWheelSpinning = function() {
							var e, t;
							null == (e = this.spinningTween) || e.stop(), null == (t = this.spinningTween) || t.remove(), this.wheelSlices.forEach((function(e) {
								return e.unSelect()
							})), this.spinningTween = this.scene.tweens.add({
								targets: this,
								rotation: {
									to: Phaser.Math.DegToRad(360),
									from: Phaser.Math.DegToRad(0)
								},
								ease: "Linear",
								duration: 7e3,
								repeat: -1
							})
						}, i.stopWheelSpinning = function() {
							var e;
							null == (e = this.spinningTween) || e.pause()
						}, i.startRewardTween = function(e) {
							var t, i = this;
							this.stopWheelSpinning(), null == (t = this.rewardTween) || t.stop();
							var n = Phaser.Math.RND.between(0, this.wheelSlices.length - 1);
							this.indexItemReward = n;
							var a = Math.PI / 4 * n + Math.random() * Math.PI / 12 - Math.PI / 12,
								s = 2 * Phaser.Math.PI2 + a;
							this.itemReward = this.wheelSlices[n].name, this.rewardTween = this.scene.tweens.add({
								targets: this,
								rotation: {
									from: this.rotation,
									to: s
								},
								ease: "Sine.easeOut",
								duration: 4e3,
								onComplete: function() {
									i.wheelSlices[n].select(), e()
								}
							})
						}, i.getItemReward = function() {
							return this.itemReward
						}, i.getQuantityItemReward = function() {
							return this.quantityItemReward[this.itemReward]
						}, i.unSelectItemReward = function() {
							return this.wheelSlices[this.indexItemReward].unSelect()
						}, t
					}(Phaser.GameObjects.Container),
					eh = $c,
					th = aa.Z.DEFAULT,
					ih = th.KEY,
					nh = th.FRAME,
					ah = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).wheelBase = void 0, i.wheelCenter = void 0, i.wheelPoint = void 0, i.wheelSlices = void 0, i.glow = void 0, i.glowRotateAnimation = void 0, i.treasureTwinkle = void 0, i.createUI(), i.createEffect(), i.setSize(i.wheelBase.width, i.wheelBase.height), i.align(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createUI = function() {
							this.createGlow(), this.createWheelBase(), this.createWheelSlices(), this.createWheelCenter(), this.createWheelPoint()
						}, i.createEffect = function() {
							var e = 1 / this.scene.world.getPixelRatio();
							this.treasureTwinkle = new Wc.Z(this.scene, {
								scale: {
									min: .1 * e,
									max: 2 * e
								}
							}), this.add(this.treasureTwinkle), this.treasureTwinkle.setDepth(jn.Z.EFFECT)
						}, i.createWheelSlices = function() {
							this.wheelSlices = new eh(this.scene), Phaser.Display.Align.In.Center(this.wheelSlices, this.wheelBase, 0, -6), this.add(this.wheelSlices)
						}, i.createWheelPoint = function() {
							this.wheelPoint = this.scene.make.image({
								key: ih,
								frame: nh.DAILY_SPIN_WHEEL_POINT
							}), this.wheelPoint.setWorldSize(61.5, 59.5), Phaser.Display.Align.In.Center(this.wheelPoint, this.wheelSlices), this.add(this.wheelPoint)
						}, i.createWheelCenter = function() {
							this.wheelCenter = this.scene.make.image({
								key: ih,
								frame: nh.DAILY_SPIN_WHEEL_CENTER
							}), this.wheelCenter.setWorldSize(62.5, 62.5), this.add(this.wheelCenter)
						}, i.createWheelBase = function() {
							this.wheelBase = this.scene.make.image({
								key: ih,
								frame: nh.DAILY_SPIN_WHEEL_BASE
							}), this.wheelBase.setWorldSize(318, 318), this.add(this.wheelBase)
						}, i.createGlow = function() {
							this.glow = this.scene.make.image({
								key: aa.Z.EFFECTS.KEY,
								frame: aa.Z.EFFECTS.FRAME.FX_SPIN_GLOW_BIG
							}), this.glow.setWorldSize(430, 479), this.add(this.glow)
						}, i.align = function() {
							Phaser.Display.Align.In.Center(this.glow, this.wheelBase, 0, -2), Phaser.Display.Align.In.TopCenter(this.wheelPoint, this.wheelBase, 0, 6)
						}, i.runOpenAnimation = function() {
							this.wheelSlices.startWheelSpinning(), this.treasureTwinkle.stop(), this.runGlowAnimation()
						}, i.runEffectPreClaim = function() {
							this.stopGlowAnimation()
						}, i.runGlowAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio();
							this.glow.setRotation(0), this.glow.setScale(0), this.glow.setAlpha(0), this.glowRotateAnimation || (this.glowRotateAnimation = new Qr.Z({
								targets: [this.glow],
								props: {
									angle: {
										from: 360,
										to: 0
									}
								},
								duration: 7e3,
								repeat: -1
							})), this.glowRotateAnimation.play(), this.scene.tweens.add({
								targets: this.glow,
								delay: 100,
								duration: 400,
								alpha: {
									start: 0,
									from: 0,
									to: 1
								},
								scale: {
									start: 0,
									from: 0,
									to: 2 * e
								}
							})
						}, i.stopGlowAnimation = function() {
							var e = this;
							this.scene.tweens.add({
								targets: this.glow,
								delay: 100,
								duration: 500,
								alpha: {
									start: 1,
									from: 1,
									to: 0
								},
								scale: {
									start: this.glow.scale,
									from: this.glow.scale,
									to: 0
								},
								onComplete: function() {
									e.glowRotateAnimation.stop(), e.treasureTwinkle.stop()
								}
							})
						}, t
					}(Phaser.GameObjects.Container),
					sh = ah,
					oh = aa.Z.DEFAULT,
					rh = (oh.KEY, oh.FRAME, function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).text = void 0, i.watchAdsText = void 0, i.lastTimeSpin = 0, i.notifyAnimation = void 0, i.createUI(), i.align(), i.setName("LuckySpin"), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createUI = function() {
							this.createText()
						}, i.createText = function() {
							this.text = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(18),
								text: "36:45:26"
							}), this.add(this.text)
						}, i.createWatchAdsText = function() {
							this.watchAdsText = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(17),
								text: "Watch a video to get 1 free spin"
							}), this.add(this.watchAdsText)
						}, i.align = function() {
							Phaser.Display.Align.In.Center(this.text, this, 0, 0)
						}, i.updateText = function(e) {
							this.text.setText(e)
						}, i.setLastTimeSpin = function(e) {
							this.lastTimeSpin = e
						}, i.isCanSpin = function() {
							return !!((new Date).getTime() - this.lastTimeSpin > 864e5 || GameCore.Configs.DailySpin.forceSpin)
						}, i.unlockSpin = function() {
							this.updateText("00:00:00"), this.text.kill()
						}, i.updateClock = function() {
							if (this.isCanSpin()) this.unlockSpin();
							else {
								this.text.revive();
								var e = (new Date).getTime(),
									t = this.lastTimeSpin + 864e5 - e,
									i = Math.floor(t / 36e5) < 1 ? 0 : Math.floor(t / 36e5);
								i > 0 && (t -= 36e5 * i);
								var n = Math.floor(t / 6e4) < 1 ? 0 : Math.floor(t / 6e4);
								n > 0 && (t -= 60 * n * 1e3);
								var a = Math.floor(t / 1e3) < 1 ? 0 : Math.floor(t / 1e3);
								this.updateText(this.formatUnitTime(i) + ":" + this.formatUnitTime(n) + ":" + this.formatUnitTime(a))
							}
						}, i.formatUnitTime = function(e) {
							return e < 10 ? "0" + e : e.toString()
						}, t
					}(Phaser.GameObjects.Container)),
					lh = aa.Z.DEFAULT,
					ch = lh.KEY,
					hh = lh.FRAME,
					uh = aa.Z.THEME,
					dh = uh.KEY,
					ph = uh.FRAME,
					mh = uh.DEFAULT,
					fh = GameCore.Configs.Network,
					gh = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).main = void 0, s.title = void 0, s.closeButton = void 0, s.spinButton = void 0, s.backgroundFadeInAnimation = void 0, s.contentEntrancesAnimation = void 0, s.contentExitsAnimation = void 0, s.timerText = void 0, s.adsTimer = void 0, s.spinButtonIcon = void 0, s.spinButtonText = void 0, s.isWatchAds = void 0, s.handleCloseBtnClick = function() {
								s.runCloseAnimation()
							}, s.handleClickSpin = function() {
								s.isHaveFreeSpin() ? s.handleOnSpin() : s.handleShowRewardedVideoAd()
							}, s.handleOnSpin = function() {
								var e;
								GameCore.Configs.DailySpin.forceSpin || s.isWatchAds || s.scene.player.updateCustomFields({
									lastTimeSpin: (new Date).getTime()
								}), s.scene.audio.playSound(sa.Z.DAILY_SPIN), null == (e = s.spinButton) || e.kill(), s.closeButton.setDisabled(!0), s.isWatchAds = !1, s.main.wheelSlices.startRewardTween((function() {
									var e = s.main.wheelSlices.getItemReward(),
										t = s.main.wheelSlices.getQuantityItemReward();
									s.main.runEffectPreClaim(), s.scene.time.delayedCall(700, (function() {
										var i;
										s.scene.screen.open(Wn.o4.REWARD_SPIN_ITEM_SCREEN, {
											itemRewards: (i = {}, i[e] = t, i)
										})
									}))
								}))
							}, s.handleShowRewardedVideoAd = (0, r.Z)(h().mark((function e() {
								var t, i, n, a, o;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return t = s.scene, i = t.audio, n = t.game, e.prev = 1, null == (a = s.spinButton) || a.kill(), s.closeButton.setDisabled(!0), n.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
												message: s.scene.lang.getText("loading_ads"),
												duration: 0,
												loading: !0
											}), i.pauseMusic(), i.muteAllSound(), e.next = 9, new(oe())((function(e, t) {
												var i;
												null == (i = s.adsTimer) || i.remove(), s.adsTimer = s.scene.time.delayedCall(fh.Timeout, t), s.scene.ads.getAdStatus(GameCore.Ads.Types.REWARDED) === GameCore.Ads.Status.LOADING ? s.scene.ads.events.once(GameCore.Ads.Events.LOADED, e) : s.scene.ads.preloadRewardedVideoAsync().then(e).catch(t)
											}));
										case 9:
											return s.scene.audio.playSound(sa.Z.DAILY_REWARD), e.next = 12, s.scene.ads.showRewardedVideoAsync();
										case 12:
											n.globalScene.screen.close(Wn.o4.NOTIFY_SCREEN), s.isWatchAds = !0, s.handleOnSpin(), e.next = 28;
											break;
										case 17:
											if (e.prev = 17, e.t0 = e.catch(1), s.isWatchAds = !1, s.spinButton.setDisabled(!1), s.closeButton.setDisabled(!1), s.spinButton.revive(), !(e.t0 instanceof Object && GameCore.Utils.Object.hasOwn(e.t0, "code"))) {
												e.next = 27;
												break
											}
											if ("USER_INPUT" !== e.t0.code) {
												e.next = 27;
												break
											}
											return s.showNotifySkipAds(), e.abrupt("return");
										case 27:
											s.showNotifyNoAds();
										case 28:
											return e.prev = 28, null == (o = s.adsTimer) || o.destroy(), s.scene.audio.playMusic(), s.scene.audio.unmuteAllSound(), e.finish(28);
										case 33:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[1, 17, 28, 33]
								])
							}))), s.handleSpinScreenComplete = function() {
								if (s.main.wheelSlices.unSelectItemReward(), s.spinButton.revive(), s.closeButton.setDisabled(!1), s.timerText.isCanSpin()) {
									var e = s.scene.player.getLastTimeSpin();
									s.timerText.setLastTimeSpin(e)
								}
								s.main.runOpenAnimation()
							}, s.showNotifyNoAds = function() {
								s.scene.game.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
									message: s.scene.lang.getText("no_ads_to_display"),
									duration: 1200,
									loading: !1
								})
							}, s.showNotifySkipAds = function() {
								s.scene.game.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
									message: s.scene.lang.getText("sorry_no_rewards_you_have_cancelled_the_ad"),
									duration: 1500,
									loading: !1
								})
							}, s.createUI(), s.setDepth(Wn.Ks.POPUP), s.background.setAlpha(.5), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setBlockInputOutsideEnabled = function(e) {
							this.scene.input.setTopOnly(!0)
						}, i.open = function() {
							e.prototype.open.call(this), this.spinButton.revive(), this.runOpenAnimation();
							var t = this.scene.player.getLastTimeSpin();
							this.timerText.setLastTimeSpin(t)
						}, i.createUI = function() {
							this.createSpinWheel(), this.createTitle(), this.createCloseButton(), this.createTimerText(), this.createSpinButton(), this.createDebug(), this.isWatchAds = !1
						}, i.update = function() {
							this.timerText.updateClock(), this.handleSpinButtonText(this.isHaveFreeSpin())
						}, i.isHaveFreeSpin = function() {
							return this.timerText.isCanSpin()
						}, i.createSpinWheel = function() {
							this.main = new sh(this.scene), this.add(this.main), Phaser.Display.Align.In.Center(this.main, this.zone)
						}, i.createTitle = function() {
							this.title = this.scene.add.container();
							var e = this.scene.make.image({
								key: mh.KEY,
								frame: ph.POPUP_HEADER
							});
							e.setWorldSize(193, 57.5);
							var t = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(26),
								text: this.scene.lang.getText("daily_spin"),
								maxWidth: 170,
								maxHeight: 38
							});
							Phaser.Display.Align.In.Center(t, e, 0, -3), this.title.add([e, t]), this.title.setSize(e.width, e.height), this.main.add(this.title), Phaser.Display.Align.To.TopCenter(this.title, this.main, 0, 40)
						}, i.createTimerText = function() {
							this.timerText = new rh(this.scene), this.main.add(this.timerText), Phaser.Display.Align.In.BottomCenter(this.timerText, this.main, 0, 10)
						}, i.createSpinButton = function() {
							this.spinButtonText = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(26),
								text: this.scene.lang.getText("spin"),
								origin: .5
							}), this.spinButton = new ea.Z(this.scene, ch, hh.BUTTON_GREEN_SPIN, 151.5, 57), this.spinButton.onClick = this.handleClickSpin, this.spinButton.setName("Spin"), this.spinButtonIcon = this.scene.make.image({
								key: ch,
								frame: hh.RESCUE_ICON_AD
							}), this.spinButtonIcon.setWorldSize(46.5, 40), this.spinButton.add(this.spinButtonText), this.spinButton.add(this.spinButtonIcon), this.main.add(this.spinButton), Phaser.Display.Align.In.LeftCenter(this.spinButtonIcon, this.spinButton, 2, -2), Phaser.Display.Align.In.BottomCenter(this.spinButton, this.main, 0, 90)
						}, i.createCloseButton = function() {
							this.closeButton = new Ia.Z(this.scene, {
								key: mh.KEY,
								frame: ph.BUTTON_RED_CIRCLE,
								width: 37.5,
								height: 39,
								paddingZone: 20
							});
							var e = this.scene.make.image({
								key: ch,
								frame: hh.ICON_CLOSE
							});
							e.setWorldSize(13.5, 13.5), this.closeButton.add(e), this.main.add(this.closeButton), this.closeButton.setName("CloseButton"), this.closeButton.useSound = !1, this.closeButton.onClick = this.handleCloseBtnClick, Phaser.Display.Align.To.RightCenter(this.closeButton, this.title, 25.75, -5.5)
						}, i.createDebug = function() {
							var e, t = this;
							if (GameCore.Utils.Valid.isDebugger()) {
								var i = new ea.Z(this.scene, dh, ph.BUTTON_BLUE_CIRCLE, 37.5, 39);
								i.setName("debugButton"), null == i || null == (e = i.setAlpha(.8)) || e.setScale(.8), this.main.add(i), i.onClick = function() {
									var e = (new Date).getTime() - 864e5 + 6e3;
									t.scene.player.updateCustomFields({
										lastTimeSpin: e
									}), t.timerText.setLastTimeSpin(e)
								}, Phaser.Display.Align.To.RightCenter(i, this.spinButton, 0, 0)
							}
						}, i.runOpenAnimation = function() {
							this.setVisible(!0), this.scene.audio.playSound(sa.Z.POPUP_IN), this.runBackgroundEntrancesAnimation(0, 300), this.runContentEntrancesAnimation(200, 500), this.main.runOpenAnimation()
						}, i.runCloseAnimation = function() {
							this.scene.audio.playSound(sa.Z.POPUP_OUT), this.runContentExitsAnimation(0, 200), this.main.wheelSlices.stopWheelSpinning()
						}, i.runBackgroundEntrancesAnimation = function(e, t) {
							var i;
							if (!this.backgroundFadeInAnimation) {
								var n = this.background.alpha;
								this.backgroundFadeInAnimation = new Jn.Z({
									targets: [this.background],
									delay: e,
									duration: t,
									props: {
										alpha: {
											start: 0,
											from: 0,
											to: n
										}
									}
								})
							}
							null == (i = this.backgroundFadeInAnimation) || i.play()
						}, i.runContentEntrancesAnimation = function(e, t) {
							var i, n;
							if (!this.contentEntrancesAnimation) return this.contentEntrancesAnimation = new cr.Z({
								targets: [this.main],
								delay: e,
								duration: t,
								props: {
									y: {
										from: 350,
										to: this.main.y
									},
									scale: {
										start: 0,
										from: 0,
										to: 1
									},
									alpha: {
										start: 1,
										from: 1,
										to: 1
									}
								}
							}), void(null == (n = this.contentEntrancesAnimation) || n.play());
							null == (i = this.contentEntrancesAnimation) || i.play()
						}, i.runContentExitsAnimation = function(e, t) {
							var i, n = this;
							this.contentExitsAnimation || (this.contentExitsAnimation = new qn.Z({
								targets: [this.main],
								delay: e,
								duration: t,
								props: {
									y: 250,
									scale: 0
								},
								onComplete: function() {
									n.scene.screen.close(n.name), n.main.setY(0)
								}
							})), null == (i = this.contentExitsAnimation) || i.play()
						}, i.handleSpinButtonText = function(e) {
							e ? (this.spinButtonText.setText(this.scene.lang.getText("spin")), this.spinButtonText.setFontSize(this.scene.fontSize(26)), this.spinButtonIcon.setVisible(!1), this.spinButtonText.setPosition(0, -2)) : (this.spinButtonText.setText(this.scene.lang.getText("get_spin")), this.spinButtonIcon.setVisible(!0), ia.Z.setFontSize(this.spinButtonText, 100, 40), this.spinButtonText.setPosition(this.spinButtonIcon.x + this.spinButtonIcon.width / 2 + this.spinButtonText.width / 2, -2))
						}, t
					}(GameCore.Screen),
					vh = gh,
					yh = ["BombSpinItem", "ElectricSpinItem", "RainbowSpinItem", "RocketSpinItem", "Coin10SpinItem", "Coin25SpinItem", "Coin50SpinItem", "Coin100SpinItem"],
					bh = aa.Z.DEFAULT,
					Eh = bh.KEY,
					Th = bh.FRAME,
					Ah = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).itemImage = void 0, n.text = void 0, n.spinItemTwinkle = void 0, n.pulsateBubbleAnimation = void 0, n.createUI(i), n.createEffect(), n.align(), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEffect = function() {
							this.createSpinStarSparkle()
						}, i.createSpinStarSparkle = function() {
							var e = 1 / this.scene.world.getPixelRatio();
							this.spinItemTwinkle = new Wc.Z(this.scene, {
								scale: {
									min: .05 * e,
									max: .4 * e
								}
							}), this.spinItemTwinkle.setDepth(jn.Z.EFFECT), this.add(this.spinItemTwinkle)
						}, i.createUI = function(e) {
							this.createItemImage(e), this.createText();
							var t = 1 / this.scene.world.getPixelRatio();
							this.itemImage.setScale(1.6 * t), this.add([this.itemImage, this.text])
						}, i.createText = function() {
							this.text = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(30),
								text: "50"
							})
						}, i.createItemImage = function(e) {
							switch (e) {
								case "RainbowSpinItem":
									this.createRainBowSpinItem();
									break;
								case "BombSpinItem":
									this.createBombSpinItem();
									break;
								case "RocketSpinItem":
									this.createRocketSpinItem();
									break;
								case "ElectricSpinItem":
									this.createElectricSpinItem();
									break;
								case "Coin10SpinItem":
									this.createCoin10SpinItem();
									break;
								case "Coin25SpinItem":
									this.createCoin25SpinItem();
									break;
								case "Coin50SpinItem":
									this.createCoin50SpinItem();
									break;
								case "Coin100SpinItem":
									this.createCoin100SpinItem()
							}
						}, i.createCoin10SpinItem = function() {
							this.itemImage = this.scene.make.image({
								key: Eh,
								frame: Th.ICON_WHEEL_COIN_10
							}), this.itemImage.setWorldSize(38, 28.5)
						}, i.createCoin25SpinItem = function() {
							this.itemImage = this.scene.make.image({
								key: Eh,
								frame: Th.ICON_WHEEL_COIN_25
							}), this.itemImage.setWorldSize(42.5, 44)
						}, i.createCoin50SpinItem = function() {
							this.itemImage = this.scene.make.image({
								key: Eh,
								frame: Th.ICON_WHEEL_COIN_50
							}), this.itemImage.setWorldSize(54.5, 48.5)
						}, i.createCoin100SpinItem = function() {
							this.itemImage = this.scene.make.image({
								key: Eh,
								frame: Th.ICON_WHEEL_COIN_100
							}), this.itemImage.setWorldSize(59.5, 63)
						}, i.createRainBowSpinItem = function() {
							this.itemImage = this.scene.make.image({
								key: Eh,
								frame: Th.BUY_ITEM_RAINBOW_BIG
							}), this.itemImage.setWorldSize(37.5, 38.5)
						}, i.createRocketSpinItem = function() {
							this.itemImage = this.scene.make.image({
								key: Eh,
								frame: Th.BUY_ITEM_ROCKET_BIG
							}), this.itemImage.setWorldSize(37, 38.5)
						}, i.createBombSpinItem = function() {
							this.itemImage = this.scene.make.image({
								key: Eh,
								frame: Th.BUY_ITEM_BOMB_BIG
							}), this.itemImage.setWorldSize(41, 43)
						}, i.createElectricSpinItem = function() {
							this.itemImage = this.scene.make.image({
								key: Eh,
								frame: Th.BUY_ITEM_ELECTRIC_BIG
							}), this.itemImage.setWorldSize(38.5, 38.5)
						}, i.align = function() {
							Phaser.Display.Align.In.Center(this.text, this, 0, 55)
						}, i.updateText = function(e) {
							this.text.setText("" + e), Phaser.Display.Align.In.Center(this.text, this, 0, 55)
						}, i.runPulsateBubbleAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio();
							this.itemImage.setScale(1.6 * e), this.pulsateBubbleAnimation = new Vn({
								targets: [this.itemImage],
								duration: 800,
								delay: 3e3,
								props: {
									scale: {
										from: 1.6 * e,
										to: 2 * e
									}
								}
							}), this.pulsateBubbleAnimation.play()
						}, i.kill = function() {
							var t, i;
							e.prototype.kill.call(this), null == (t = this.pulsateBubbleAnimation) || t.remove(), this.pulsateBubbleAnimation = void 0, null == (i = this.spinItemTwinkle) || i.stop()
						}, i.revive = function() {
							e.prototype.revive.call(this), this.runPulsateBubbleAnimation(), this.spinItemTwinkle.run(2, this.x, this.y, 90, 80)
						}, i.getIcon = function() {
							return this.itemImage
						}, t
					}(Phaser.GameObjects.Container),
					Sh = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).spinItemBlocksByKey = void 0, i.spinItemBlocksByKey = {}, i.createSpinItemBlocksByKey(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createSpinItemBlocksByKey = function() {
							var e = this;
							yh.forEach((function(t) {
								var i = new Ah(e.scene, t);
								e.spinItemBlocksByKey[t] = i, i.kill(), e.add(i)
							}))
						}, i.updateUI = function(e) {
							var t = this;
							for (var i in yh.forEach((function(e) {
									var i;
									null == (i = t.spinItemBlocksByKey[e]) || i.kill()
								})), e) {
								var n = i,
									a = this.spinItemBlocksByKey[n];
								a && (a.revive(), a.updateText(e[n] || 0))
							}
						}, i.getBlockPosition = function(e) {
							var t;
							return null == (t = this.spinItemBlocksByKey[e]) ? void 0 : t.getWorldPosition()
						}, i.getBlock = function(e) {
							return this.spinItemBlocksByKey[e]
						}, i.kill = function() {
							for (var t in e.prototype.kill.call(this), this.spinItemBlocksByKey) {
								var i = t,
									n = this.spinItemBlocksByKey[i];
								n && n.kill()
							}
						}, t
					}(Phaser.GameObjects.Container),
					_h = aa.Z.DEFAULT,
					Ch = _h.KEY,
					wh = _h.FRAME,
					Bh = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).onReward = void 0, s.onClose = void 0, s.claimButton = void 0, s.header = void 0, s.contentContainer = void 0, s.glow = void 0, s.spinItemBlocks = void 0, s.glowRotate = void 0, s.contentEntrancesAnimation = void 0, s.contentsExitAnimation = void 0, s.backgroundFadeInAnimation = void 0, s.backgroundFadeOutAnimation = void 0, s.treasureData = void 0, s.spinItemData = void 0, s.treasureExplosiveTimer = void 0, s.spinItemExplosivesByKey = void 0, s.currentQuantityTreasuresByKey = void 0, s.handleOnClaim = function() {
								s.header.revive(), s.header.setAlpha(0), s.scene.tweens.add({
									targets: s.header,
									duration: 200,
									props: {
										alpha: {
											start: 0,
											from: 0,
											to: 1
										}
									}
								}), s.claimButton.kill(), s.scene.audio.playSound(sa.Z.GIFT_RECEIVED);
								var e = s.scene.player.getCoins(),
									t = s.scene.player.getBullets(),
									i = {},
									n = [];
								s.scene.world.getPixelRatio();
								yh.forEach((function(a) {
									var o, r = s.spinItemKeyToTreasureKey(a),
										l = s.spinItemData[a],
										c = s.spinItemBlocks.getBlock(a),
										h = s.header.getIconBlockPosition(r);
									if (l && c && h) {
										var u = c.getIcon(),
											d = u.getWorldPosition();
										null == (o = s.spinItemExplosivesByKey[a]) || o.setSizeIcon(u.displayWidth, u.displayHeight), c.kill();
										var p = s.runTreasuresExplodeEffect(d, h, a, l);
										if (n.push(p), "Coin" === r) return e += l, void s.logEarnVirtualCurrency(l);
										var m = t[r] || 0;
										m += l, i[r] = m, s.logEarnItem(l, r)
									}
								})), s.scene.player.updateCustomFields({
									bullets: i,
									coin: e
								}), oe().all(n).then((function() {
									var e;
									null == (e = s.treasureExplosiveTimer) || e.remove(), s.treasureExplosiveTimer = s.scene.time.delayedCall(700, (function() {
										s.setDepth(Wn.Ks.POPUP), s.runCloseAnimation((function() {
											s.onClose && s.onClose()
										}))
									}))
								}))
							}, s.runTreasuresExplodeEffect = function() {
								var e = (0, r.Z)(h().mark((function e(t, i, n, a) {
									var o, r, l, c, u, d;
									return h().wrap((function(e) {
										for (;;) switch (e.prev = e.next) {
											case 0:
												if (o = 1, r = s.spinItemExplosivesByKey[n], l = s.spinItemKeyToTreasureKey(n), r) {
													e.next = 5;
													break
												}
												return e.abrupt("return");
											case 5:
												return c = r.explode(o, t.x, t.y, i.x, i.y), u = c.allTweens, d = c.longestTween, s.setDepth(jn.Z.ON_TOP), u.forEach((function(e) {
													e.on(Phaser.Tweens.Events.TWEEN_COMPLETE, (function() {
														var e = s.currentQuantityTreasuresByKey[l] || 0;
														e += a / o, s.updateCurrentQuantityTreasure(l, e)
													}))
												})), e.abrupt("return", new(oe())((function(e) {
													d.on(Phaser.Tweens.Events.TWEEN_COMPLETE, e)
												})));
											case 9:
											case "end":
												return e.stop()
										}
									}), e)
								})));
								return function(t, i, n, a) {
									return e.apply(this, arguments)
								}
							}(), s.setDepth(Wn.Ks.POPUP), s.background.setAlpha(.5), s.init(), s.createUI(), s.createEffect(), s.align(), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setBlockInputOutsideEnabled = function(e) {
							this.scene.input.setTopOnly(!0)
						}, i.init = function() {
							this.spinItemData = {}, this.treasureData = {}, this.spinItemExplosivesByKey = {}, this.currentQuantityTreasuresByKey = {}
						}, i.setDepth = function(t) {
							for (var i in e.prototype.setDepth.call(this, t), this.spinItemExplosivesByKey) {
								var n, a = i;
								null == (n = this.spinItemExplosivesByKey[a]) || n.setDepth(t + 1)
							}
							return this
						}, i.open = function(t) {
							var i = this;
							e.prototype.open.call(this, t), this.treasureData = {};
							var n = this.scene.player.getCoins(),
								a = this.scene.player.getBullets();
							if (Yr.Z.forEach((function(e) {
									if ("Coin" !== e) {
										var t = a[e] || 0;
										i.currentQuantityTreasuresByKey[e] = t
									} else i.currentQuantityTreasuresByKey[e] = n
								})), t.itemRewards)
								for (var s in this.spinItemData = t.itemRewards, t.itemRewards) {
									var o = s,
										r = this.spinItemKeyToTreasureKey(o);
									this.treasureData[r] = t.itemRewards[o]
								}
							this.spinItemBlocks.updateUI(this.spinItemData), this.header.updateUI(this.treasureData), this.header.kill(), this.spinItemBlocks.revive(), this.claimButton.revive(), this.scene.audio.playSound(sa.Z.GIFT_EXPLODE), this.runOpenAnimation()
						}, i.createEffect = function() {
							this.createTreasureExplosivesByKey()
						}, i.createTreasureExplosivesByKey = function() {
							var e = this;
							yh.forEach((function(t) {
								var i = new Ba.Z(e.scene);
								i.setTreasureGroup(t), e.spinItemExplosivesByKey[t] = i, i.setDepth(jn.Z.EFFECT_HIGH)
							}))
						}, i.createUI = function() {
							this.createHeader(), this.createGlow(), this.createContentContainer(), this.createSpinItemBlocks(), this.createClaimButton(), this.contentContainer.add([this.glow, this.spinItemBlocks, this.claimButton]), this.add(this.header), this.add(this.contentContainer)
						}, i.createHeader = function() {
							this.header = new ta.Z(this.scene)
						}, i.createSpinItemBlocks = function() {
							this.spinItemBlocks = new Sh(this.scene)
						}, i.createContentContainer = function() {
							this.contentContainer = this.scene.add.container()
						}, i.createClaimButton = function() {
							var e = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(26),
								text: this.scene.lang.getText("claim"),
								maxWidth: 140
							});
							this.claimButton = new ea.Z(this.scene, Ch, wh.BUTTON_GREEN_SPIN, 151.5, 57), this.claimButton.setName("Claim"), this.claimButton.add(e), this.claimButton.onClick = this.handleOnClaim, Phaser.Display.Align.In.Center(e, this.claimButton, 0, -2)
						}, i.createGlow = function() {
							var e = 1 / this.scene.world.getPixelRatio();
							this.glow = this.scene.make.image({
								key: aa.Z.EFFECTS.KEY,
								frame: aa.Z.EFFECTS.FRAME.FX_SPIN_GLOW_BIG
							}), this.glow.setScale(e)
						}, i.align = function() {
							Phaser.Display.Align.In.Center(this.glow, this, 0, 3), Phaser.Display.Align.In.BottomCenter(this.claimButton, this.contentContainer, 0, 230), Phaser.Display.Align.In.TopRight(this.header, this.zone, -22, -4)
						}, i.runOpenAnimation = function() {
							this.revive(), this.header.kill(), this.claimButton.revive(), this.runGlowRotate(), this.runContentEntrancesAnimation(100, 1e3), this.runBackgroundFadeInAnimation(300, 300)
						}, i.runGlowRotate = function() {
							this.glow.setScale(0), this.glow.setRotation(0);
							var e = 1 / this.scene.world.getPixelRatio();
							this.glowRotate || (this.glowRotate = new Qr.Z({
								targets: [this.glow],
								duration: 6e3,
								repeat: -1
							})), this.glowRotate.play(), this.scene.tweens.add({
								targets: this.glow,
								duration: 300,
								props: {
									scale: {
										start: 0,
										from: 0,
										to: e
									}
								}
							})
						}, i.runContentEntrancesAnimation = function(e, t) {
							var i;
							this.contentEntrancesAnimation || (this.contentEntrancesAnimation = new cr.Z({
								targets: [this.contentContainer],
								delay: e,
								duration: t,
								props: {
									y: {
										from: this.contentContainer.y,
										to: this.contentContainer.y
									},
									scale: {
										start: 0,
										from: 0,
										to: 1
									},
									alpha: {
										start: 1,
										from: 1,
										to: 1
									}
								}
							})), null == (i = this.contentEntrancesAnimation) || i.play()
						}, i.runBackgroundFadeInAnimation = function(e, t) {
							var i = this.background.alpha;
							this.background.setAlpha(0), this.backgroundFadeInAnimation || (this.backgroundFadeInAnimation = new Jn.Z({
								targets: [this.background],
								delay: e,
								duration: t,
								props: {
									alpha: {
										start: 0,
										from: 0,
										to: i
									}
								}
							})), this.backgroundFadeInAnimation.play()
						}, i.runCloseAnimation = function(e) {
							var t = this;
							this.scene.tweens.add({
								targets: [this.header],
								duration: 150,
								props: {
									alpha: {
										start: 1,
										from: 1,
										to: 0
									}
								},
								onComplete: function() {
									t.header.kill(), t.runContentsExitFadeOutAnimation(0, 600, e), t.runBackgroundFadeOutAnimation(200, 300)
								}
							})
						}, i.runContentsExitFadeOutAnimation = function(e, t, i) {
							var n = this;
							this.contentsExitAnimation || (this.contentsExitAnimation = new qn.Z({
								targets: [this.contentContainer],
								delay: e,
								duration: t,
								props: {
									y: this.contentContainer.y,
									scale: 0
								},
								onComplete: function() {
									n.spinItemBlocks.kill(), n.contentContainer.setY(0), n.scene.screen.close(n.name), i && i()
								}
							})), this.contentsExitAnimation.play()
						}, i.runBackgroundFadeOutAnimation = function(e, t) {
							this.backgroundFadeOutAnimation || (this.backgroundFadeOutAnimation = new qn.Z({
								targets: [this.background],
								props: {
									alpha: {
										start: this.background.alpha,
										from: this.background.alpha,
										to: 0
									}
								},
								delay: e,
								duration: t
							})), this.backgroundFadeOutAnimation.play()
						}, i.logEarnVirtualCurrency = function(e) {
							this.scene.analytics.event(Xt._.EARN_VIRTUAL_CURRENCY, {
								value: e,
								virtual_currency_name: "coin",
								earn_from: "RewardSpin"
							})
						}, i.logEarnItem = function(e, t) {
							this.scene.analytics.event(Xt._.EARN_ITEM, {
								value: e,
								item_name: t,
								earn_from: "RewardSpin"
							})
						}, i.spinItemKeyToTreasureKey = function(e) {
							switch (e) {
								case "RainbowSpinItem":
									return "RainbowBulletBallItem";
								case "BombSpinItem":
									return "BombBulletItem";
								case "ElectricSpinItem":
									return "ElectricBulletBallItem";
								case "RocketSpinItem":
									return "RocketBulletItem";
								case "Coin10SpinItem":
								case "Coin25SpinItem":
								case "Coin50SpinItem":
								case "Coin100SpinItem":
									return "Coin"
							}
						}, i.updateCurrentQuantityTreasure = function(e, t) {
							this.currentQuantityTreasuresByKey[e] = t, this.header.updateTextBlock(e, t)
						}, t
					}(GameCore.Screen),
					Ih = Bh,
					Ph = aa.Z.THEME,
					xh = Ph.KEY,
					Oh = Ph.FRAME,
					kh = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, 0, 0, xh, Oh.ICON_HEADER) || this).setSize(53.5, 58.5), i.setDisplaySize(53.5, 58.5), i.init(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							var e = this;
							this.updateTextureTheme();
							var t = this.scene.theme,
								i = t.EVENTS;
							t.events.on(i.THEME_CHANGE + "-" + xh, (function(t) {
								e.updateTextureTheme()
							}))
						}, i.updateTextureTheme = function() {
							var e = this.scene.theme.getCurrentTheme(xh);
							if (this.scene.textures.get(e.textureKey).has(Oh.ICON_HEADER)) {
								var t = 1 / this.scene.world.getPixelRatio();
								this.setFrame(Oh.ICON_HEADER), this.revive(), this.setScale(t)
							} else this.kill()
						}, t
					}(Phaser.GameObjects.Image),
					Rh = aa.Z.THEME,
					Mh = Rh.KEY,
					Lh = Rh.FRAME,
					Gh = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).background = void 0, n.text = void 0, n.icon = void 0, n.createTitle(), n.setText(i), n.scene.add.existing((0, Un.Z)(n)), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setText = function(e) {
							this.text.setText(e)
						}, i.createTitle = function() {
							this.background = this.scene.make.image({
								key: Mh,
								frame: Lh.POPUP_HEADER
							}), this.background.setWorldSize(164.5, 47.5), this.text = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(23),
								origin: {
									x: .5,
									y: .5
								}
							}), this.icon = new kh(this.scene), this.icon.setWorldSize(53.5, 58.5), Phaser.Display.Align.In.Center(this.text, this.background, 0, -2), Phaser.Display.Align.To.TopCenter(this.icon, this.background, 0, -14), this.add([this.background, this.text, this.icon]), this.setSize(this.background.width, this.background.height)
						}, t
					}(Phaser.GameObjects.Container),
					Dh = Gh,
					Fh = aa.Z.GAMEPLAY.EFFECTS,
					Nh = Fh.KEY,
					Zh = Fh.FRAME,
					Uh = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, Nh) || this).emitter = void 0, n.emitZone = void 0, n.createEmitZone(), n.setDepth(jn.Z.ON_TOP), n.createExplodeAnimation(i), n.scene.add.existing((0, Un.Z)(n)), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 15)
						}, i.createExplodeAnimation = function(e) {
							var t = 1 / this.scene.world.getPixelRatio(),
								i = {
									frame: [Zh.PARTICLE_STARS],
									scale: {
										start: .5 * t,
										end: t,
										random: !0
									},
									lifespan: {
										min: 600,
										max: 900
									},
									alpha: {
										start: 1,
										end: .3
									},
									speed: {
										min: 50,
										max: 60
									},
									rotate: {
										start: 0,
										end: 360
									},
									tint: [16777215, 16776960, 16750848],
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: jh,
									on: !1
								};
							e && (i = (0, Ai.TS)(i, e)), this.emitter = this.createEmitter(i)
						}, i.explode = function(e, t, i) {
							void 0 === e && (e = 8), this.emitter.explode(e, t, i)
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager),
					jh = function(e) {
						function t(t) {
							var i;
							i = e.call(this, t) || this;
							var n = .18 * Math.random() + .01;
							return i.data = {
								tint: {
									min: 16777215,
									max: 16777215,
									current: 16777215
								},
								alpha: {
									min: 1,
									max: 1
								},
								rotate: {
									min: 0,
									max: 0
								},
								scaleX: {
									min: 1,
									max: n
								},
								scaleY: {
									min: 1,
									max: 1
								}
							}, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var o = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								r = Math.atan2(this.y - i, this.x - t);
							this.velocityX = o * Math.cos(r), this.velocityY = o * Math.sin(r), this.rotation = r
						}, i.update = function(t, i, n) {
							return e.prototype.update.call(this, t, i, n)
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					Yh = Uh,
					Wh = aa.Z.THEME,
					Kh = Wh.KEY,
					Hh = Wh.FRAME,
					zh = aa.Z.EFFECTS,
					Xh = zh.KEY,
					Vh = zh.FRAME,
					Jh = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).starsEmpty = [], i.starsFull = [], i.starsParticle = [], i.twinkle = void 0, i.glow = void 0, i.glowTween = void 0, i.createGlow(), i.createStarsEmpty(), i.createStarsFull(), i.createStarsParticle(), i.createEffect(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createStarsEmpty = function() {
							for (var e = 0; e < 3; e++) {
								var t = this.scene.make.image({
									key: Kh,
									frame: Hh.ICON_STAR_EMPTY
								});
								t.setWorldSize(78.5, 75.5), this.starsEmpty.push(t)
							}
							Phaser.Display.Align.In.LeftCenter(this.starsEmpty[0], this.starsEmpty[1], 68, 28), this.starsEmpty[0].setRotation(-Math.PI / 8), this.starsEmpty[0].scale *= .85, Phaser.Display.Align.In.RightCenter(this.starsEmpty[2], this.starsEmpty[1], 68, 28), this.starsEmpty[2].setRotation(Math.PI / 8), this.starsEmpty[2].scale *= .85, this.add(this.starsEmpty)
						}, i.createStarsFull = function() {
							for (var e = 0; e < 3; e++) {
								var t = this.scene.make.image({
									key: Kh,
									frame: Hh.ICON_STAR
								});
								t.setWorldSize(74.5, 73), t.kill(), this.starsFull.push(t)
							}
							Phaser.Display.Align.In.LeftCenter(this.starsFull[0], this.starsFull[1], 68, 28), this.starsFull[0].setRotation(-Math.PI / 8), this.starsFull[0].scale *= .85, Phaser.Display.Align.In.RightCenter(this.starsFull[2], this.starsFull[1], 68, 28), this.starsFull[2].setRotation(Math.PI / 8), this.starsFull[2].scale *= .85, this.add(this.starsFull)
						}, i.createStarsParticle = function() {
							for (var e = 0; e < 3; e++) {
								var t = new Yh(this.scene);
								this.starsParticle.push(t)
							}
							this.add(this.starsParticle)
						}, i.createGlow = function() {
							this.glow = this.scene.make.image({
								key: Xh,
								frame: Vh.FX_SPIN_GLOW_BIG
							}), this.glow.setPosition(0, 10), this.glow.setWorldSize(207.5, 205.5), this.glow.kill(), this.glowTween = this.scene.tweens.add({
								targets: this.glow,
								rotation: {
									from: 0,
									to: 2 * Math.PI
								},
								duration: 5e3,
								repeat: -1
							}), this.add(this.glow)
						}, i.createEffect = function() {
							var e = 1 / this.scene.world.getPixelRatio();
							this.twinkle = new Wc.Z(this.scene, {
								scale: {
									min: .05 * e,
									max: .4 * e
								}
							}), this.twinkle.setDepth(jn.Z.EFFECT), this.add(this.twinkle)
						}, i.runFillStarAnimation = function(e, t, i) {
							var n = this;
							this.resetScaleStars(), this.glow.kill(), this.twinkle.stop();
							for (var a = t, s = [sa.Z.STAR_PROGRESS_1, sa.Z.STAR_PROGRESS_2, sa.Z.STAR_PROGRESS_3], o = 0; o < 3; o++) this.starsFull[o].kill();
							for (var r = function(t) {
									var o = n.starsEmpty[t].x,
										r = n.starsEmpty[t].y;
									n.starsFull[t].revive();
									var l = n.starsFull[t].scale;
									n.starsFull[t].setAlpha(0), n.starsFull[t].setScale(0), new Jn.Z({
										targets: [n.starsFull[t]],
										duration: i / e,
										delay: a,
										ease: Phaser.Math.Easing.Sine.In,
										props: {
											alpha: {
												from: 0,
												to: 1
											},
											scale: {
												from: 5 * l,
												to: l
											},
											x: o,
											y: r
										},
										onComplete: function() {
											n.starsParticle[t].explode(15, n.starsFull[t].x, n.starsFull[t].y), n.scene.audio.playSound(s[t]), 2 === t && (n.scene.audio.setMusicVolume(.06), n.scene.audio.playSound(sa.Z.YOU_WIN), n.runEffect3Stars(), n.scene.game.globalScene.time.delayedCall(2100, (function() {
												n.scene.audio.setMusicVolume(.2)
											})))
										}
									}).play(), a += i / e + 100
								}, l = 0; l < e; l++) r(l)
						}, i.resetScaleStars = function() {
							for (var e = 0; e < 3; e++) this.starsFull[e].setWorldSize(74.5, 73);
							this.starsFull[0].scale *= .85, this.starsFull[2].scale *= .85
						}, i.runEffect3Stars = function() {
							var e = 1 / this.scene.world.getPixelRatio();
							this.glow.revive(), this.glow.setScale(0), this.scene.tweens.add({
								targets: this.glow,
								scale: {
									from: 0,
									to: e
								},
								duration: 500,
								ease: Phaser.Math.Easing.Sine.Out
							}), this.glowTween.restart(), this.twinkle.run(2, this.x, this.y + 120, 230, 80)
						}, i.fillStar = function(e) {
							for (var t = 0; t < 3; t++) this.starsFull[t].kill();
							for (var i = 0; i < e; i++) this.starsFull[i].revive()
						}, i.stopAnimation = function() {
							this.glow.kill(), this.twinkle.stop(), this.resetScaleStars()
						}, t
					}(Phaser.GameObjects.Container),
					qh = Jh,
					Qh = i(41038),
					$h = aa.Z.DEFAULT,
					eu = $h.KEY,
					tu = $h.FRAME,
					iu = aa.Z.THEME,
					nu = iu.KEY,
					au = iu.FRAME,
					su = GameCore.Configs.ComebackBonus,
					ou = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).level = void 0, s.popup = void 0, s.headerTitle = void 0, s.closeButton = void 0, s.playButton = void 0, s.stars = void 0, s.missionText = void 0, s.textGoal = void 0, s.bonusBubble = void 0, s.popupShowUpAnimation = void 0, s.popupFadeOutAnimation = void 0, s.handleClickStart = function() {
								s.scene.isDebugChooseLevel() && s.scene.level.setMaxLevel(s.level), s.playButton.setDisabled(!0), s.playButton.setAlpha(1), s.runCloseAnimation(), s.scene.time.delayedCall(200, (function() {
									s.scene.level.setLevel(s.level), s.handleShowAdWhenPlay(), s.scene.storage.dispatch((0, Ua.rq)())
								}))
							}, s.handleClosePopup = function() {
								s.scene.audio.playSound(sa.Z.POPUP_OUT), s.runCloseAnimation()
							}, s.handleShowAdWhenPlay = (0, r.Z)(h().mark((function e() {
								var t, i;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (t = s.scene, i = t.game, !1 !== t.ads.canbeShowInterstitialAd()) {
												e.next = 4;
												break
											}
											return e.abrupt("return");
										case 4:
											return t.audio.pauseMusic(), t.audio.muteAllSound(), i.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
												message: s.scene.lang.getText("loading_ads"),
												duration: 0,
												loading: !0
											}), e.prev = 7, e.next = 10, t.ads.showPreRollAdAsync();
										case 10:
											e.next = 15;
											break;
										case 12:
											e.prev = 12, e.t0 = e.catch(7);
										case 15:
											i.globalScene.screen.close(Wn.o4.NOTIFY_SCREEN), t.audio.playMusic(), t.audio.unmuteAllSound(), t.ads.preloadPreRollAdAsync().catch((function() {}));
										case 19:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[7, 12]
								])
							}))), s.createUI(), s.align(), s.setDepth(Wn.Ks.POPUP), s.background.setAlpha(.5), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setBlockInputOutsideEnabled = function(e) {
							this.scene.input.setTopOnly(!0)
						}, i.open = function(t) {
							e.prototype.open.call(this), this.playButton.setDisabled(!1), this.level = t.level, this.headerTitle.setText("" + this.scene.lang.getText({
								key: "level_{X}",
								variables: [this.level]
							})), this.stars.stopAnimation(), this.stars.fillStar(t.quantityStar), this.updateMissionText(t.missionType);
							var i = this.scene.player.getBonusBullets();
							i > su.maxBonus && (i = su.maxBonus), this.bonusBubble.setBonus(i), this.runOpenAnimation()
						}, i.createUI = function() {
							this.createPopup(), this.createPopupContent()
						}, i.createPopup = function() {
							this.popup = new ro(this.scene, 0, 0, 294.5, 363.5), this.add(this.popup), Phaser.Display.Align.In.Center(this.popup, this.zone)
						}, i.createPopupContent = function() {
							this.createTitle(), this.createMain(), this.createCloseButton(), this.createPlayButton(), this.createBonusBubbles(), this.popup.add([this.headerTitle, this.closeButton, this.playButton, this.missionText, this.textGoal, this.stars, this.bonusBubble])
						}, i.createTitle = function() {
							this.headerTitle = new Dh(this.scene, "" + this.scene.lang.getText({
								key: "level_{X}",
								variables: [1]
							}))
						}, i.createCloseButton = function() {
							this.closeButton = new ea.Z(this.scene, nu, au.BUTTON_CLOSE, 37.5, 39), this.closeButton.setName("Close"), this.closeButton.onClick = this.handleClosePopup
						}, i.createPlayButton = function() {
							this.playButton = new ea.Z(this.scene, eu, tu.BUTTON_GREEN, 153.5, 58.5), this.playButton.setName("Play");
							var e = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								text: this.scene.lang.getText("play"),
								size: this.scene.fontSize(25),
								origin: {
									x: .5,
									y: .5
								}
							});
							Phaser.Display.Align.In.Center(e, this.playButton, 0, -3), this.playButton.add(e), this.playButton.onClick = this.handleClickStart
						}, i.createBonusBubbles = function() {
							this.bonusBubble = new Dc(this.scene, .5)
						}, i.createMain = function() {
							this.createStars(), this.createTextGoal(), this.createMissionText()
						}, i.createStars = function() {
							this.stars = new qh(this.scene)
						}, i.createMissionText = function() {
							var e = this.popup.width;
							this.missionText = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(27),
								text: this.scene.lang.getText("pop_all_bubbles"),
								maxWidth: .85 * e
							}), this.missionText.setOrigin(.5), this.missionText.setTint(16772312)
						}, i.createTextGoal = function() {
							this.textGoal = new Qh.Z(this.scene, {
								font: _a.Z.NORMAL.KEY,
								size: this.scene.fontSize(27),
								text: this.scene.lang.getText("goal")
							}), this.add(this.textGoal)
						}, i.align = function() {
							Phaser.Display.Align.In.TopCenter(this.headerTitle, this.popup, 0, 20), Phaser.Display.Align.In.TopRight(this.closeButton, this.popup, 14, 14), Phaser.Display.Align.In.BottomCenter(this.playButton, this.popup, 0, -30), Phaser.Display.Align.In.TopLeft(this.bonusBubble, this.playButton, -12, -15), Phaser.Display.Align.In.TopCenter(this.stars, this.popup, 0, -80), Phaser.Display.Align.In.Center(this.textGoal, this.popup, 0, -20), Phaser.Display.Align.In.Center(this.missionText, this.textGoal, 0, 50)
						}, i.runOpenAnimation = function() {
							this.scene.audio.playSound(sa.Z.POPUP_IN), this.runPopupEntrancesAnimation(0, 300)
						}, i.runCloseAnimation = function() {
							this.runPopupExitsAnimation(0, 200)
						}, i.runPopupEntrancesAnimation = function(e, t) {
							var i;
							null == (i = this.popupShowUpAnimation) || i.remove(), this.popupShowUpAnimation = new cr.Z({
								targets: [this.popup],
								delay: e,
								duration: t,
								props: {
									y: {
										from: this.popup.y + 200,
										to: this.popup.y
									},
									scale: {
										start: 0,
										from: 0,
										to: 1
									},
									alpha: {
										start: .8,
										from: .8,
										to: 1
									}
								}
							}), this.popupShowUpAnimation.play()
						}, i.runPopupExitsAnimation = function(e, t) {
							var i, n = this;
							this.popupFadeOutAnimation || (this.popupFadeOutAnimation = new qn.Z({
								targets: [this.popup],
								delay: e,
								duration: t,
								props: {
									y: this.popup.y + 200,
									scale: 0
								},
								onComplete: function() {
									n.popup.setY(0), n.scene.screen.close(n.name)
								}
							})), null == (i = this.popupFadeOutAnimation) || i.play()
						}, i.updateMissionText = function(e) {
							"CollectBubbles" === e ? this.missionText.setText(this.scene.lang.getText("pop_all_bubbles")) : this.missionText.setText(this.scene.lang.getText("collect_gems")), ia.Z.setFontSize(this.missionText, 250.325, 80)
						}, t
					}(GameCore.Screen),
					ru = aa.Z.EFFECTS,
					lu = ru.KEY,
					cu = ru.FRAME,
					hu = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, lu, cu.FX_SPARKLE_SMALL) || this).emitZone = void 0, i.emitter = void 0, i.createEmitZone(), i.createEmitters(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 48)
						}, i.createEmitters = function() {
							var e = 1 / this.scene.world.getPixelRatio();
							this.emitter = this.createEmitter({
								on: !1,
								frame: cu.FX_SPARKLE_SMALL,
								emitZone: {
									source: this.emitZone,
									type: "random"
								},
								timeScale: 1,
								frequency: 400,
								alpha: {
									start: 1,
									end: 0,
									ease: Phaser.Math.Easing.Quadratic.In
								},
								scale: {
									min: .8 * e,
									max: 1 * e
								},
								speedY: -5,
								particleClass: uu,
								lifespan: {
									min: 1200,
									max: 2500
								}
							})
						}, i.run = function(e, t, i) {
							this.stop(), this.emitter.setPosition(t, i), this.emitter.setQuantity(e), this.emitter.start()
						}, i.stop = function() {
							var e, t;
							null == (e = this.emitter) || e.killAll(), null == (t = this.emitter) || t.stop()
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager),
					uu = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this)._scaleX = void 0, i._scaleY = void 0, i.split = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i), this._scaleX = this.scaleX, this._scaleY = this.scaleY, this.split = 2 * Phaser.Math.RND.between(1, 2), this.scaleX = 0, this.scaleY = 0
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n),
								s = this.lifeT * this.split,
								o = Math.floor(s),
								r = s - o;
							return o % 2 == 0 ? (this.scaleX = Phaser.Math.Easing.Sine.InOut(r) * this._scaleX, this.scaleY = Phaser.Math.Easing.Sine.InOut(r) * this._scaleY) : (this.scaleX = (1 - Phaser.Math.Easing.Sine.InOut(r)) * this._scaleX, this.scaleY = (1 - Phaser.Math.Easing.Sine.InOut(r)) * this._scaleY), a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					du = hu,
					pu = aa.Z.THEME,
					mu = (pu.KEY, pu.FRAME),
					fu = pu.DEFAULT,
					gu = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, fu.KEY, mu.BUTTON_CLOSE, 35.5, 36.5) || this).setName("Close"), i
						}
						return (0, l.Z)(t, e), t.prototype.setDisabled = function(e) {
							var t, i;
							e ? null == (t = this.hitArea) || t.disableInteractive() : null == (i = this.hitArea) || i.setInteractive()
						}, t
					}(ea.Z),
					vu = gu,
					yu = aa.Z.DEFAULT,
					bu = yu.KEY,
					Eu = yu.FRAME,
					Tu = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, bu, Eu.TICK_BOX, 22, 21.5) || this).tickIcon = void 0, i.isTick = !1, i.setName("TickBox"), i.createTick(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createTick = function() {
							this.tickIcon = this.scene.make.image({
								key: bu,
								frame: Eu.ICON_TICK,
								origin: {
									x: .35,
									y: .6
								}
							}), this.tickIcon.setWorldSize(20.5, 20.5), this.add(this.tickIcon), this.tickIcon.setVisible(!1)
						}, i.setDisabled = function(e) {
							var t, i;
							e ? null == (t = this.hitArea) || t.disableInteractive() : null == (i = this.hitArea) || i.setInteractive()
						}, i.toggleIsTick = function() {
							this.isTick = !this.isTick, this.tickIcon.setVisible(this.isTick)
						}, i.setIsTick = function(e) {
							this.isTick = e, this.tickIcon.setVisible(e)
						}, i.getIsTick = function() {
							return this.isTick
						}, t
					}(ea.Z),
					Au = Tu,
					Su = aa.Z.DEFAULT,
					_u = Su.KEY,
					Cu = Su.FRAME,
					wu = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, _u, Cu.BUTTON_GREEN, 153.5, 58.5) || this).setName("Buy"), i.createText(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createText = function() {
							var e = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(24),
								origin: {
									x: .5,
									y: .5
								},
								text: this.scene.lang.getText("buy_now"),
								maxWidth: 140,
								maxHeight: 40
							});
							this.add(e), Phaser.Display.Align.In.Center(e, this, 0, -3)
						}, i.setDisabled = function(e) {
							var t, i;
							e ? null == (t = this.hitArea) || t.disableInteractive() : null == (i = this.hitArea) || i.setInteractive()
						}, t
					}(ea.Z),
					Bu = wu,
					Iu = i(52714),
					Pu = aa.Z.DEFAULT,
					xu = Pu.KEY,
					Ou = Pu.FRAME,
					ku = aa.Z.THEME,
					Ru = (ku.KEY, ku.FRAME),
					Mu = ku.DEFAULT,
					Lu = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).scene = void 0, s.popup = void 0, s.closeButton = void 0, s.tickBox = void 0, s.tickIcon = void 0, s.adsIcon = void 0, s.adsGlow = void 0, s.buyButton = void 0, s.popupShowUpAnimation = void 0, s.popupFadeOutAnimation = void 0, s.glowAnimation = void 0, s.sparkleParticles = void 0, s.open = function() {
								e.prototype.open.call((0, Un.Z)(s)), s.tickBox.setIsTick(!1), s.runOpenAnimation()
							}, s.handleCloseScreen = function() {
								s.disableButtons(!0), s.runCloseAnimation(), s.popupFadeOutAnimation.next((function() {
									s.scene.screen.close(s.name)
								}))
							}, s.handleTick = function() {
								s.tickBox.toggleIsTick();
								var e = !s.tickBox.getIsTick();
								s.scene.player.updateCustomFields({
									showRemoveAds: e
								})
							}, s.handleBuyRemoveAds = (0, r.Z)(h().mark((function e() {
								var t, i;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return (t = s.scene.game.globalScene).screen.open(Wn.o4.NOTIFY_SCREEN, {
												message: s.scene.lang.getText("loading"),
												duration: 0,
												loading: !0
											}), e.prev = 2, e.next = 5, s.scene.payment.purchaseAsync(Iu.Z.ID.REMOVE_AD_30);
										case 5:
											if (e.sent) {
												e.next = 8;
												break
											}
											throw new Error(s.scene.lang.getText("you_have_canceled_payment"));
										case 8:
											return e.next = 10, t.consumePurchasesReward();
										case 10:
											if (i = e.sent, 0 !== K()(i).length) {
												e.next = 13;
												break
											}
											throw new Error(s.scene.lang.getText("there_was_an_error_during_the_payment_please_try_again"));
										case 13:
											return t.screen.close(Wn.o4.NOTIFY_SCREEN), s.handleCloseScreen(), e.next = 17, t.openProductReceiveScreen(i);
										case 17:
											e.next = 22;
											break;
										case 19:
											e.prev = 19, e.t0 = e.catch(2), t.screen.open(Wn.o4.NOTIFY_SCREEN, {
												message: e.t0.message,
												duration: 2e3,
												loading: !1
											});
										case 22:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[2, 19]
								])
							}))), s.scene = t, s.createPopup(), s.createCloseButton(), s.createTitle(), s.createImage(), s.createText(), s.createTickBoxContent(), s.createBuyButton(), s.createSparkleParticles(), s.setDepth(Wn.Ks.POPUP), s.background.setAlpha(.5), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createPopup = function() {
							this.popup = new jr(this.scene, 0, 0, 290, 370), this.add(this.popup), Phaser.Display.Align.In.Center(this.popup, this.zone)
						}, i.createCloseButton = function() {
							this.closeButton = new vu(this.scene), this.popup.add(this.closeButton), Phaser.Display.Align.In.TopRight(this.closeButton, this.popup, 14, 14), this.closeButton.onClick = this.handleCloseScreen
						}, i.createTitle = function() {
							var e = this.scene.make.image({
								key: Mu.KEY,
								frame: Ru.POPUP_HEADER
							});
							e.setWorldSize(193, 57.5);
							var t = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(26),
								origin: {
									x: .5,
									y: .5
								},
								text: this.scene.lang.getText("remove_ads"),
								maxWidth: 175,
								maxHeight: 40
							});
							this.popup.add([e, t]), Phaser.Display.Align.In.TopCenter(e, this.popup, 0, 25), Phaser.Display.Align.In.Center(t, e, 0, -3)
						}, i.createImage = function() {
							var e = this.scene.make.image({
								key: xu,
								frame: Ou.POPUP_BOX
							});
							e.setWorldSize(243.5, 131.5), this.adsIcon = this.scene.make.image({
								key: xu,
								frame: Ou.ICON_ADS
							}), this.adsIcon.setWorldSize(69.5, 72.5), this.adsGlow = this.scene.make.image({
								key: xu,
								frame: Ou.FX_ADS_GLOW
							}), this.adsGlow.setWorldSize(130.5, 129), this.popup.add([e, this.adsIcon, this.adsGlow]), this.popup.moveBelow(this.adsGlow, this.adsIcon), Phaser.Display.Align.In.TopCenter(e, this.popup, 0, -35), Phaser.Display.Align.In.Center(this.adsIcon, e), Phaser.Display.Align.In.Center(this.adsGlow, this.adsIcon)
						}, i.createText = function() {
							var e = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(22),
								origin: {
									x: .5,
									y: .5
								},
								text: this.scene.lang.getText("play_bubble_pop_classic_without_popup_ads_in_30_days"),
								maxHeight: 55
							});
							e.setTint(16772312), this.popup.add(e), Phaser.Display.Align.In.Center(e, this.popup, 0, 25)
						}, i.createTickBoxContent = function() {
							this.tickBox = new Au(this.scene);
							for (var e = ia.Z.addText(this.scene, {
									font: _a.Z.NORMAL.KEY,
									size: this.scene.fontSize(18),
									text: this.scene.lang.getText("do_not_show_again")
								}); e.width > 200;) e.setFontSize(.95 * e.fontSize);
							e.setTint(4864544), this.popup.add([this.tickBox, e]), Phaser.Display.Align.In.LeftCenter(this.tickBox, this.popup, -50, 75), Phaser.Display.Align.To.RightCenter(e, this.tickBox, 6, 0), this.tickBox.onClick = this.handleTick
						}, i.createBuyButton = function() {
							this.buyButton = new Bu(this.scene), this.popup.add(this.buyButton), Phaser.Display.Align.In.BottomCenter(this.buyButton, this.popup, 0, -30), this.buyButton.onClick = this.handleBuyRemoveAds
						}, i.runOpenAnimation = function() {
							var e = this;
							this.scene.audio.playSound(sa.Z.POPUP_IN), this.disableButtons(!0), this.runPopupEntrancesAnimation(0, 400), this.popupShowUpAnimation.next((function() {
								e.disableButtons(!1), e.runGlowAnimation(), e.sparkleParticles.run(2, e.adsIcon.x, e.adsIcon.y)
							}))
						}, i.runCloseAnimation = function() {
							var e, t = this;
							this.runPopupExitsAnimation(0, 300), null == (e = this.glowAnimation) || e.remove(), this.sparkleParticles.stop(), this.popupFadeOutAnimation.next((function() {
								t.adsGlow.setAngle(0)
							}))
						}, i.runPopupEntrancesAnimation = function(e, t) {
							if (!this.popupShowUpAnimation) {
								var i = this.popup,
									n = i.y,
									a = i.scale;
								this.popupShowUpAnimation = new cr.Z({
									targets: [this.popup],
									delay: e,
									duration: t,
									props: {
										y: {
											start: 350,
											from: 350,
											to: n
										},
										alpha: {
											start: 0,
											from: 0,
											to: 1
										},
										scale: {
											start: 0,
											from: 0,
											to: a
										}
									}
								})
							}
							this.popupShowUpAnimation.play()
						}, i.runPopupExitsAnimation = function(e, t) {
							var i, n = this;
							this.popupFadeOutAnimation || (this.popupFadeOutAnimation = new qn.Z({
								targets: [this.popup],
								delay: e,
								duration: t,
								props: {
									y: 250,
									alpha: {
										start: 1,
										from: 1,
										to: 0
									},
									scale: 0
								},
								onComplete: function() {
									n.popup.setY(0), n.scene.screen.close(n.name)
								}
							})), null == (i = this.popupFadeOutAnimation) || i.play()
						}, i.runGlowAnimation = function() {
							var e;
							this.glowAnimation || (this.glowAnimation = new Qr.Z({
								targets: [this.adsGlow],
								repeat: -1,
								duration: 6e3
							})), null == (e = this.glowAnimation) || e.play()
						}, i.createSparkleParticles = function() {
							this.sparkleParticles = new du(this.scene), this.popup.add(this.sparkleParticles)
						}, i.disableButtons = function(e) {
							this.tickBox.setDisabled(e), this.buyButton.setDisabled(e), this.closeButton.setDisabled(e)
						}, t
					}(GameCore.Screen),
					Gu = Lu,
					Du = aa.Z.DEFAULT,
					Fu = Du.KEY,
					Nu = Du.FRAME,
					Zu = aa.Z.THEME,
					Uu = (Zu.KEY, Zu.FRAME),
					ju = Zu.DEFAULT,
					Yu = (GameCore.Configs.ComebackBonus, function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).popup = void 0, s.headerTitle = void 0, s.closeButton = void 0, s.claimButton = void 0, s.bonusBubble = void 0, s.descriptionText = void 0, s.popupShowUpAnimation = void 0, s.popupFadeOutAnimation = void 0, s.handleClickClaim = function() {
								s.runCloseAnimation()
							}, s.handleClosePopup = function() {
								s.scene.audio.playSound(sa.Z.POPUP_OUT), s.runCloseAnimation()
							}, s.createUI(), s.align(), s.setDepth(Wn.Ks.POPUP), s.background.setAlpha(.5), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setBlockInputOutsideEnabled = function(e) {
							this.scene.input.setTopOnly(!0)
						}, i.open = function() {
							var t = this.getOfflineDays();
							if (0 !== t) {
								e.prototype.open.call(this), this.headerTitle.setText(this.scene.lang.getText("welcome_back"));
								var i = GameCore.Configs.ComebackBonus.maxBonus,
									n = Math.min(i, t);
								this.setDescriptionText(t), this.bonusBubble.setBonus(n), this.scene.player.updateBonusBubble(n), this.runOpenAnimation()
							}
						}, i.createUI = function() {
							this.createPopup(), this.createPopupContent()
						}, i.createPopup = function() {
							this.popup = new jr(this.scene, 0, 0, 294.5, 363.5), this.add(this.popup), Phaser.Display.Align.In.Center(this.popup, this.zone)
						}, i.createPopupContent = function() {
							this.createTitle(), this.createMain(), this.createCloseButton(), this.createPlayButton(), this.popup.add([this.headerTitle, this.closeButton, this.claimButton, this.descriptionText, this.bonusBubble])
						}, i.createTitle = function() {
							this.headerTitle = new Pl(this.scene, this.scene.lang.getText("welcome_back"))
						}, i.createCloseButton = function() {
							this.closeButton = new ea.Z(this.scene, ju.KEY, Uu.BUTTON_CLOSE, 37.5, 39), this.closeButton.setName("Close"), this.closeButton.onClick = this.handleClosePopup
						}, i.createPlayButton = function() {
							this.claimButton = new ea.Z(this.scene, Fu, Nu.BUTTON_GREEN, 153.5, 58.5), this.claimButton.setName("Claim");
							var e = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								text: this.scene.lang.getText("claim"),
								size: this.scene.fontSize(28),
								origin: {
									x: .5,
									y: .5
								},
								maxWidth: 140
							});
							Phaser.Display.Align.In.Center(e, this.claimButton, 0, -3), this.claimButton.add(e), this.claimButton.onClick = this.handleClickClaim
						}, i.createBonusBubbles = function() {
							this.bonusBubble = new Dc(this.scene, .75), this.bonusBubble.setScale(2)
						}, i.createMain = function() {
							this.createBonusBubbles(), this.createDescriptionText()
						}, i.createDescriptionText = function() {
							this.descriptionText = ia.Z.addText(this.scene, {
								font: _a.Z.NORMAL.KEY,
								size: this.scene.fontSize(18),
								text: this.scene.lang.getText({
									key: "you_have_been_away_for_more_than_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away",
									variables: [7]
								}),
								origin: .5
							}), this.descriptionText.setTint(4864544)
						}, i.setDescriptionText = function(e) {
							var t, i = GameCore.Configs.ComebackBonus.maxBonus;
							t = 1 === e ? this.scene.lang.getText("you_have_been_away_for_1_day_you_get_a_bonus_bubble_for_each_day_you_are_away") : e >= i ? this.scene.lang.getText({
								key: "you_have_been_away_for_more_than_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away",
								variables: [i]
							}) : this.scene.lang.getText({
								key: "you_have_been_away_for_{X}_days_you_get_a_bonus_bubble_for_each_day_you_are_away",
								variables: [e]
							}), this.descriptionText.setText(t), ia.Z.setFontSize(this.descriptionText, .96 * this.popup.width, 80)
						}, i.align = function() {
							Phaser.Display.Align.In.TopCenter(this.headerTitle, this.popup, 0, 20), Phaser.Display.Align.In.TopRight(this.closeButton, this.popup, 14, 14), Phaser.Display.Align.In.BottomCenter(this.claimButton, this.popup, 0, -30), Phaser.Display.Align.In.Center(this.bonusBubble, this.popup, 0, -60), Phaser.Display.Align.To.BottomCenter(this.descriptionText, this.bonusBubble, 0, 80)
						}, i.runOpenAnimation = function() {
							this.scene.audio.playSound(sa.Z.POPUP_IN), this.runPopupEntrancesAnimation(0, 300)
						}, i.runCloseAnimation = function() {
							this.runPopupExitsAnimation(0, 200)
						}, i.runPopupEntrancesAnimation = function(e, t) {
							var i;
							null == (i = this.popupShowUpAnimation) || i.remove(), this.popupShowUpAnimation = new cr.Z({
								targets: [this.popup],
								delay: e,
								duration: t,
								props: {
									y: {
										from: this.popup.y + 200,
										to: this.popup.y
									},
									scale: {
										start: 0,
										from: 0,
										to: 1
									},
									alpha: {
										start: .8,
										from: .8,
										to: 1
									}
								}
							}), this.popupShowUpAnimation.play()
						}, i.runPopupExitsAnimation = function(e, t) {
							var i, n = this;
							this.popupFadeOutAnimation || (this.popupFadeOutAnimation = new qn.Z({
								targets: [this.popup],
								delay: e,
								duration: t,
								props: {
									y: this.popup.y + 200,
									scale: 0
								},
								onComplete: function() {
									n.popup.setY(0), n.scene.screen.close(n.name)
								}
							})), null == (i = this.popupFadeOutAnimation) || i.play()
						}, i.getOfflineDays = function() {
							var e = this.scene.player,
								t = e.getLastTimePlayed();
							if (0 === t) return 0;
							var i = GameCore.Configs.ComebackBonus,
								n = new Date,
								a = i.mockTimeOff > 0 ? i.mockTimeOff : 864e5,
								s = Math.floor(Math.abs(n.getTime() - t) / a);
							return (!(0, xo.Gm)(t) || i.mockTimeOff > 0) && (t && s || i.mockTimeOff > 0) ? s < e.getBonusBullets() ? 0 : s : 0
						}, t
					}(GameCore.Screen)),
					Wu = aa.Z.EFFECTS,
					Ku = Wu.KEY,
					Hu = Wu.FRAME,
					zu = function(e, t, i) {
						return void 0 === t && (t = .1), void 0 === i && (i = .04), t * e + ra()(e) * i * e * e
					},
					Xu = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).airFrictionX = .05, i.airFrictionY = .01, i._lastRotation = 0, i.airFrictionX = .01 * Math.random() + .01, i.airFrictionY = .004 * Math.random() + .006, (0, Un.Z)(i) || (0, Un.Z)(i)
						}
						return (0, l.Z)(t, e), t.prototype.update = function(t, i, n) {
							for (var a = e.prototype.update.call(this, t, i, n), s = t; s > 16.67;) this.velocityX -= zu(this.velocityX, .2, this.airFrictionX) / 60, this.velocityY -= zu(this.velocityY, .2, this.airFrictionY) / 60, s -= 16.67;
							return this.velocityX -= zu(this.velocityX, .2, this.airFrictionX) * s / 1e3, this.velocityY -= zu(this.velocityY, .2, this.airFrictionY) * s / 1e3, this.rotation = this._lastRotation + Math.random() * Math.PI / 180 * 4, this._lastRotation = this.rotation, a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					Vu = function(e) {
						function t(t) {
							var i;
							return i = e.call(this, t) || this, (0, Un.Z)(i) || (0, Un.Z)(i)
						}
						return (0, l.Z)(t, e), t.prototype.update = function(t, i, n) {
							for (var a = e.prototype.update.call(this, t, i, n), s = Math.atan(this.velocityY / this.velocityX), o = t; o > 16.67;) {
								var r = Math.sqrt(Math.pow(this.velocityX, 2) + Math.pow(this.velocityY, 2));
								r -= zu(r, .2, .01) / 60, this.velocityX = ra()(this.velocityX) * r * Math.abs(Math.cos(s)), this.velocityY = ra()(this.velocityY) * r * Math.abs(Math.sin(s)), o -= 16.67
							}
							var l = Math.sqrt(Math.pow(this.velocityX, 2) + Math.pow(this.velocityY, 2));
							return l -= zu(l, .2, .01) * o / 1e3, this.velocityX = ra()(this.velocityX) * l * Math.abs(Math.cos(s)), this.velocityY = ra()(this.velocityY) * l * Math.abs(Math.sin(s)), this.rotation = s, a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					Ju = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, Ku) || this).ribbonEmitters = [], i.confettiEmitters = [], i.setDepth(jn.Z.ON_TOP), i.createExplodeAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createExplodeAnimation = function() {
							var e = this.scene.world.getWorldSize().width,
								t = [{}, {
									x: -e / 2 + 100,
									y: -30
								}],
								i = [{}, {
									y: -30,
									x: -e / 2 + 100
								}];
							this.createConfettiEmitters(t), this.createRibbonEmitters(i);
							var n = [{
									x: e / 2 - 85,
									angle: {
										start: 280,
										end: 360,
										steps: 30
									}
								}, {
									x: e / 2 - 100,
									y: -30,
									angle: {
										start: 280,
										end: 360,
										steps: 30
									}
								}],
								a = [{
									x: e / 2 - 85,
									angle: {
										start: 282,
										end: 360,
										steps: 7
									}
								}, {
									x: e / 2 - 100,
									y: -30,
									angle: {
										start: 282,
										end: 360,
										steps: 7
									}
								}];
							this.createConfettiEmitters(n), this.createRibbonEmitters(a)
						}, i.createConfettiEmitters = function(e) {
							var t = this,
								i = 1 / this.scene.world.getPixelRatio(),
								n = this.scene.world.getWorldSize().width,
								a = {
									frame: [Hu.CONFETTI_PARTICLE_1, Hu.CONFETTI_PARTICLE_2, Hu.CONFETTI_PARTICLE_3, Hu.CONFETTI_PARTICLE_4, Hu.CONFETTI_PARTICLE_5, Hu.CONFETTI_PARTICLE_6, Hu.CONFETTI_PARTICLE_7],
									tint: [13650134, 13650134, 3786091, 16739143, 15318614],
									x: -n / 2 + 85,
									y: 0,
									speed: {
										min: 180,
										max: 1e3
									},
									gravityY: 250,
									scale: {
										start: .1 * i,
										end: .8 * i,
										ease: Phaser.Math.Easing.Expo.Out
									},
									angle: {
										start: 180,
										end: 280,
										steps: 30
									},
									alpha: {
										start: 1,
										end: 0,
										ease: Phaser.Math.Easing.Expo.In
									},
									lifespan: {
										min: 1500,
										max: 2e3
									},
									maxParticles: 0,
									on: !1,
									particleClass: Xu
								};
							e.forEach((function(e) {
								var i = (0, Ai.TS)(a, e);
								t.confettiEmitters.push(t.createEmitter(i))
							}))
						}, i.createRibbonEmitters = function(e) {
							var t = this,
								i = 1 / this.scene.world.getPixelRatio(),
								n = this.scene.world.getWorldSize().width,
								a = {
									frame: [Hu.RIBBON_PARTICLE_1, Hu.RIBBON_PARTICLE_2, Hu.RIBBON_PARTICLE_3, Hu.RIBBON_PARTICLE_4, Hu.RIBBON_PARTICLE_5, Hu.RIBBON_PARTICLE_6],
									tint: [13650134, 13650134, 3786091, 16739143, 15318614],
									x: -n / 2 + 85,
									y: 0,
									speed: {
										min: 800,
										max: 1e3
									},
									angle: {
										start: 180,
										end: 288,
										steps: 7
									},
									gravityY: 0,
									gravityX: 0,
									lifespan: 400,
									scale: {
										start: .1 * i,
										end: .55 * i,
										ease: Phaser.Math.Easing.Expo.Out
									},
									alpha: {
										start: 1,
										end: 0,
										ease: Phaser.Math.Easing.Linear
									},
									maxParticles: 0,
									on: !1,
									particleClass: Vu
								};
							e.forEach((function(e) {
								var i = (0, Ai.TS)(a, e);
								t.confettiEmitters.push(t.createEmitter(i))
							}))
						}, i.explode = function(e, t) {
							this.setPosition(e, t), this.ribbonEmitters.forEach((function(e) {
								e.flow(1e5, 7)
							})), this.confettiEmitters.forEach((function(e) {
								e.flow(1e5, 30)
							})), this.scene.time.delayedCall(500, this.stop.bind(this))
						}, i.stop = function() {
							this.ribbonEmitters.forEach((function(e) {
								e.stop()
							})), this.confettiEmitters.forEach((function(e) {
								e.stop()
							}))
						}, i.killAll = function() {
							var e = this;
							this.ribbonEmitters.forEach((function(t) {
								t.killAll(), t.forEachDead((function(e) {
									e.resetPosition()
								}), e)
							})), this.confettiEmitters.forEach((function(t) {
								t.killAll(), t.forEachDead((function(e) {
									e.resetPosition()
								}), e)
							}))
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager),
					qu = Ju,
					Qu = aa.Z.DEFAULT,
					$u = Qu.KEY,
					ed = Qu.FRAME,
					td = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, 0, 0) || this).background = void 0, i.createBackground(), i.setSize(i.background.width, i.background.height), i
						}
						return (0, l.Z)(t, e), t.prototype.createBackground = function() {
							this.background = this.scene.make.image({
								key: $u,
								frame: ed.SPECIAL_EVENT_POPUP
							}), this.background.setWorldSize(290, 359.5), this.add(this.background)
						}, t
					}(Phaser.GameObjects.Container),
					id = aa.Z.DEFAULT,
					nd = id.KEY,
					ad = id.FRAME,
					sd = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).background = void 0, n.text = void 0, n.icon = void 0, n.glow = void 0, n.createTitle(i), n.createIcon(), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createTitle = function(e) {
							this.background = this.scene.make.image({
								key: nd,
								frame: ad.SPECIAL_EVENT_HEADER
							}), this.background.setWorldSize(193, 58), this.text = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(25),
								origin: {
									x: .5,
									y: .5
								},
								text: e
							}), Phaser.Display.Align.In.Center(this.text, this.background, 0, -2), this.add([this.background, this.text]), this.setSize(this.background.width, this.background.height)
						}, i.createIcon = function() {
							this.icon = this.scene.make.image({
								key: nd,
								frame: ad.SPECIAL_EVENT_SPEAKER
							}), this.icon.setWorldSize(102.5, 110), this.add(this.icon), Phaser.Display.Align.In.Center(this.icon, this.background, 27, -65)
						}, t
					}(Phaser.GameObjects.Container),
					od = aa.Z.DEFAULT,
					rd = od.KEY,
					ld = od.FRAME,
					cd = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).background = void 0, n.text = void 0, n.createBackground(), n.createText(i), n.setSize(n.background.width, n.background.height), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createBackground = function() {
							this.background = this.scene.make.image({
								key: rd,
								frame: ld.SPECIAL_EVENT_BADGE
							}), this.background.setWorldSize(61.75, 65.5 * .95), this.add(this.background)
						}, i.createText = function(e) {
							this.text = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(14.5),
								text: e,
								origin: {
									x: .5,
									y: .5
								}
							}), this.text.setPosition(1, -2), this.add(this.text)
						}, t
					}(Phaser.GameObjects.Container),
					hd = function(e) {
						function t(t, i, n, a, s) {
							var o;
							return (o = e.call(this, t) || this).value = void 0, o.icon = void 0, o.icon = o.scene.make.image({
								key: i,
								frame: n
							}), o.icon.setWorldSize(a, s), o.createValue(), o.add([o.icon, o.value]), o
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createValue = function() {
							this.value = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(14)
							}), this.value.setOrigin(0, .5), Phaser.Display.Align.In.Center(this.value, this.icon, 8, 6), this.setValue(0)
						}, i.setValue = function(e) {
							var t = GameCore.Utils.Number.numberWithCommas(e);
							this.value.setText(t)
						}, i.hideText = function() {
							this.value.setVisible(!1)
						}, t
					}(Phaser.GameObjects.Container),
					ud = aa.Z.DEFAULT,
					dd = ud.KEY,
					pd = ud.FRAME,
					md = aa.Z.THEME,
					fd = md.FRAME,
					gd = md.DEFAULT,
					vd = GameCore.Configs.SpecialEvent,
					yd = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).treasureTwinkle = void 0, i.glow = void 0, i.glowRotate = void 0, i.blocksByKey = {}, i.textPlus = void 0, i.createBackground(), i.createGlow(), i.createBundle(), i.createTextPlus(), i.createTreasureTwinkle(), i.align(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createBackground = function() {
							var e = this.scene.make.image({
								key: gd.KEY,
								frame: fd.SETTING_BOX
							});
							e.setWorldSize(231.325, 106.925), e.setTint(8947848), this.add(e)
						}, i.createTextPlus = function() {
							this.textPlus = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(30),
								text: "+"
							}), this.add(this.textPlus)
						}, i.createBundle = function() {
							this.createCoinBlock(), this.createRainbowBlock(), this.createElectricBlock(), this.createBombBlock(), this.createRocketBlock()
						}, i.createCoinBlock = function() {
							var e = vd.Treasure.Coin;
							if (void 0 !== e) {
								var t = new hd(this.scene, dd, pd.ICON_WHEEL_COIN_25, 42.5, 44);
								t.setSize(42.5, 44), t.setValue(e), Phaser.Display.Align.In.Center(t.value, t.icon, 0, 20), this.add(t), this.blocksByKey.Coin = t
							}
						}, i.createRainbowBlock = function() {
							var e = vd.Treasure.RainbowBulletBallItem;
							if (void 0 !== e) {
								var t = new hd(this.scene, dd, pd.BUY_ITEM_RAINBOW_BIG, 24 * 1.2, 30);
								t.setValue(e), this.add(t), this.blocksByKey.RainbowBulletBallItem = t
							}
						}, i.createElectricBlock = function() {
							var e = vd.Treasure.ElectricBulletBallItem;
							if (void 0 !== e) {
								var t = new hd(this.scene, dd, pd.BUY_ITEM_ELECTRIC_BIG, 30, 30);
								t.setValue(e), this.add(t), this.blocksByKey.ElectricBulletBallItem = t
							}
						}, i.createBombBlock = function() {
							var e = vd.Treasure.BombBulletItem;
							if (void 0 !== e) {
								var t = new hd(this.scene, dd, pd.BUY_ITEM_BOMB_BIG, 26.5 * 1.2, 33.6);
								t.setValue(e), this.add(t), this.blocksByKey.BombBulletItem = t
							}
						}, i.createRocketBlock = function() {
							var e = vd.Treasure.RocketBulletItem;
							if (void 0 !== e) {
								var t = new hd(this.scene, dd, pd.BUY_ITEM_ROCKET_BIG, 24 * 1.2, 30);
								t.setValue(e), this.add(t), this.blocksByKey.RocketBulletItem = t
							}
						}, i.createGlow = function() {
							this.glow = this.scene.make.image({
								key: aa.Z.EFFECTS.KEY,
								frame: aa.Z.EFFECTS.FRAME.FX_STORE_GLOW
							}), this.glow.setWorldSize(133.5 * .8, 106), this.glow.setTint(10526880), this.add(this.glow)
						}, i.createTreasureTwinkle = function() {
							this.treasureTwinkle = new Wc.Z(this.scene), this.add(this.treasureTwinkle)
						}, i.runGlowRotate = function() {
							this.glowRotate || (this.glowRotate = new Qr.Z({
								targets: [this.glow],
								repeat: -1,
								duration: 7e3
							})), this.glowRotate.play()
						}, i.stopGlowRotate = function() {
							var e;
							null == (e = this.glowRotate) || e.stop()
						}, i.align = function() {
							var e = this,
								t = [];
							Yr.Z.forEach((function(i) {
								var n = e.blocksByKey[i];
								n && ("Coin" !== i ? t.push(n) : Phaser.Display.Align.In.Center(n, e, -60))
							})), Phaser.Actions.GridAlign(t, {
								cellHeight: 35,
								cellWidth: 35,
								width: 2,
								height: 2,
								y: 0,
								x: 45
							}), Phaser.Display.Align.In.Center(this.textPlus, this), Phaser.Display.Align.In.Center(this.glow, this, 42.5)
						}, i.runTreasureTwinkle = function() {
							var e = this.blocksByKey.Coin;
							e && this.treasureTwinkle.run(.5, e.x, e.y + 10, e.width, e.height / 2)
						}, i.stopTreasureTwinkle = function() {
							this.treasureTwinkle.stop()
						}, t
					}(Phaser.GameObjects.Container),
					bd = aa.Z.THEME,
					Ed = bd.KEY,
					Td = bd.FRAME,
					Ad = function(e) {
						function t(t, i) {
							var n;
							(n = e.call(this, t) || this).payload = void 0, n.process = void 0, n.minProcess = void 0, n.maxProcess = void 0, n.progressAnimation = void 0, n.progressText = void 0, n.progressBg = void 0, n.progressBar = void 0, n.payload = (0, o.Z)({}, i), n.process = 0, n.minProcess = 0, n.maxProcess = 1;
							var a = i.width;
							return n.setSize(a, 22), n.createProgressBg(a, 22), n.createProgressBar(a - 6, 18), n.createProgressText(), n.createContainer(), n.payload.isUseThemeDefault || n.handleChangeTheme(), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.handleChangeTheme = function() {
							var e = this;
							this.updateTextureTheme();
							var t = this.scene.theme,
								i = t.EVENTS;
							t.events.on(i.THEME_CHANGE + "-" + Ed, (function(t) {
								e.updateTextureTheme()
							}))
						}, i.updateTextureTheme = function() {
							var e = this.scene.theme.getCurrentTheme(Ed);
							this.scene.textures.get(e.textureKey).has(Td.PROGRESS_BG) && (this.progressBg.setFrame(Td.PROGRESS_BG), this.progressBg.setWorldSize(this.payload.width, 23))
						}, i.createProgressBg = function(e, t) {
							var i = this.payload.isUseThemeDefault ? aa.Z.THEME.DEFAULT.KEY : Ed;
							this.progressBg = this.scene.make.image({
								key: i,
								frame: Td.PROGRESS_BG
							}), this.progressBg.setWorldSize(e, t)
						}, i.createProgressBar = function(e, t) {
							var i = this.payload.isUseThemeDefault ? aa.Z.THEME.DEFAULT.KEY : Ed;
							this.progressBar = this.scene.make.image({
								key: i,
								frame: Td.PROGRESS_BAR
							}), this.progressBar.setWorldSize(e, t)
						}, i.createProgressText = function() {
							this.progressText = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(15),
								origin: {
									x: .5,
									y: .5
								}
							}), this.progressText.setText(this.process + "/" + this.maxProcess)
						}, i.createContainer = function() {
							this.add([this.progressBg, this.progressBar, this.progressText]), this.scene.add.existing(this)
						}, i.updateProcess = function() {
							var e = 1,
								t = this.maxProcess - 1;
							e = this.process >= t ? .8 + .2 * (this.process - t) : this.process / Math.max(1, this.maxProcess - 1) * .8;
							var i = this.process / this.maxProcess;
							e = e > i ? i : e;
							var n = this.scene.world.getPixelRatio(),
								a = 224 * e * n;
							this.progressBar.setCrop(0, 0, a, 17 * n)
						}, i.runProgressAnimation = function(e, t) {
							var i, n = this;
							null == (i = this.progressAnimation) || i.stop(), this.progressAnimation = this.scene.tweens.addCounter({
								from: this.process,
								to: this.process + 1,
								duration: 500,
								delay: e,
								ease: Phaser.Math.Easing.Quadratic.InOut,
								onUpdate: function(e) {
									var t = e.getValue();
									n.process = t, n.updateProcess()
								},
								onComplete: function() {
									n.progressText.setText(n.process + "/" + n.maxProcess), n.updateProcess(), t && t()
								}
							})
						}, i.setProgress = function(e, t, i) {
							this.process = e, t && (this.maxProcess = t), i && (this.minProcess = i), this.updateProgressText(), this.updateProcess()
						}, i.updateProgressText = function() {
							this.progressText.setText(this.process + "/" + this.maxProcess)
						}, t
					}(Phaser.GameObjects.Container),
					Sd = Ad,
					_d = aa.Z.DEFAULT,
					Cd = _d.KEY,
					wd = _d.FRAME,
					Bd = aa.Z.THEME,
					Id = Bd.KEY,
					Pd = Bd.FRAME,
					xd = GameCore.Configs,
					Od = xd.SpecialEvent,
					kd = xd.Network,
					Rd = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).popup = void 0, s.headerTitle = void 0, s.badge = void 0, s.descriptionText = void 0, s.bundle = void 0, s.watchAdsButton = void 0, s.closeButton = void 0, s.progressBar = void 0, s.progress = 0, s.treasureBoxIcon = void 0, s.popupShowUpAnimation = void 0, s.popupFadeOutAnimation = void 0, s.adsTimer = void 0, s.specialEventParticle = void 0, s.countDownTimer = void 0, s.countDownContainer = void 0, s.countDownText = void 0, s.open = function() {
								if (Od.Enable) {
									e.prototype.open.call((0, Un.Z)(s));
									var t = s.getWatchAdsTimes();
									s.setAlphaAllContents(1), s.closeButton.setDisabled(!1), s.getRemainingTime() <= 0 && (s.scene.player.updateSpecialEvents(Od.Type, 0), t = 0), s.updateUI(t), s.runOpenAnimation()
								}
							}, s.handleClosePopup = function() {
								s.scene.audio.playSound(sa.Z.POPUP_OUT), s.closeButton.setDisabled(!0), s.closeButton.setAlpha(1), s.runCloseAnimation(), s.popupFadeOutAnimation.next((function() {
									s.scene.screen.close(s.name)
								}))
							}, s.handleShowRewardedVideoAd = (0, r.Z)(h().mark((function e() {
								var t, i, n, a, o;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return t = s.scene, i = t.audio, n = t.game, e.prev = 1, s.closeButton.setDisabled(!0), s.closeButton.setAlpha(1), s.watchAdsButton.setDisabled(!0), s.watchAdsButton.setAlpha(1), n.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
												message: s.scene.lang.getText("loading_ads"),
												duration: 0,
												loading: !0
											}), i.pauseMusic(), i.muteAllSound(), e.next = 11, new(oe())((function(e, t) {
												var i;
												null == (i = s.adsTimer) || i.remove(), s.adsTimer = s.scene.time.delayedCall(kd.Timeout, t), s.scene.ads.getAdStatus(GameCore.Ads.Types.REWARDED) === GameCore.Ads.Status.LOADING ? s.scene.ads.events.once(GameCore.Ads.Events.LOADED, e) : s.scene.ads.preloadRewardedVideoAsync().then(e).catch(t)
											}));
										case 11:
											return e.next = 13, s.scene.ads.showRewardedVideoAsync();
										case 13:
											s.scene.audio.playSound(sa.Z.DAILY_REWARD), n.globalScene.screen.close(Wn.o4.NOTIFY_SCREEN), a = function() {
												s.closeButton.setDisabled(!1), s.watchAdsButton.setDisabled(!1), s.updateDescription(s.progress)
											}, s.progress += 1, s.progress === Od.WatchAdsTimes && (a = function() {
												s.bundle.stopTreasureTwinkle(), s.openTreasure()
											}), s.scene.player.updateSpecialEvents(Od.Type, s.progress), s.progressBar.runProgressAnimation(400, a), e.next = 31;
											break;
										case 22:
											if (e.prev = 22, e.t0 = e.catch(1), s.closeButton.setDisabled(!1), s.watchAdsButton.setDisabled(!1), !(e.t0 instanceof Object && GameCore.Utils.Object.hasOwn(e.t0, "code"))) {
												e.next = 30;
												break
											}
											if ("USER_INPUT" !== e.t0.code) {
												e.next = 30;
												break
											}
											return s.showNotifySkipAds(), e.abrupt("return");
										case 30:
											s.showNotifyNoAds();
										case 31:
											return e.prev = 31, null == (o = s.adsTimer) || o.destroy(), s.scene.audio.playMusic(), s.scene.audio.unmuteAllSound(), e.finish(31);
										case 36:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[1, 22, 31, 36]
								])
							}))), s.showNotifyNoAds = function() {
								s.scene.game.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
									message: s.scene.lang.getText("no_ads_to_display"),
									duration: 1200,
									loading: !1
								})
							}, s.openTreasure = function() {
								var e, t = s.scene.specialEventRewardsScreen.getTreasureBoxClose(),
									i = s.treasureBoxIcon,
									n = t.getWorldPosition(),
									a = i.parentContainer.getWorldPosition(),
									o = {
										x: i.x,
										y: i.y
									},
									r = {
										x: n.x - a.x,
										y: n.y - a.y
									},
									l = i.scale,
									c = t.scale,
									h = A()(e = s.popup.getAll()).call(e, (function(e) {
										return e !== i
									}));
								s.scene.add.tween({
									targets: h,
									ease: Phaser.Math.Easing.Sine.Out,
									duration: 300,
									alpha: 0
								}), s.scene.add.tween({
									targets: i,
									ease: Phaser.Math.Easing.Sine.Out,
									duration: 600,
									props: {
										x: {
											from: o.x,
											to: r.x
										},
										y: {
											from: o.y,
											to: r.y
										},
										scale: {
											from: l,
											to: c
										}
									},
									onComplete: function() {
										i.setPosition(o.x, o.y), i.setScale(l), i.kill(), s.scene.screen.open(Wn.o4.SPECIAL_EVENT_REWARDS_SCREEN, {
											treasure: Od.Treasure
										})
									}
								})
							}, s.scene = t, s.setDepth(Wn.Ks.POPUP), s.createPopup(), s.createPopupContent(), s.createSpecialEventParticle(), s.align(), s.background.setAlpha(.5), s.on(GameCore.Screens.Events.CLOSE, (function() {
								var e;
								null == (e = s.countDownTimer) || e.remove()
							})), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createPopup = function() {
							this.popup = new td(this.scene), this.add(this.popup), Phaser.Display.Align.In.Center(this.popup, this.zone)
						}, i.createPopupContent = function() {
							this.createTitle(), this.createDescription(), this.createWatchAdsButton(), this.createCloseButton(), this.createProgressBar(), this.createTreasureBoxIcon(), this.createBadge(), this.createBundle(), this.createCountDownContainer(), this.popup.add([this.headerTitle, this.descriptionText, this.watchAdsButton, this.closeButton, this.progressBar, this.treasureBoxIcon, this.bundle, this.countDownContainer, this.badge])
						}, i.createCountDownContainer = function() {
							var e;
							this.countDownContainer = this.scene.add.container(), this.countDownText = ia.Z.addText(this.scene, {
								font: _a.Z.NORMAL.KEY,
								size: this.scene.fontSize(18),
								text: "00:00:00"
							}), this.countDownContainer.add(this.countDownText);
							var t = (null == (e = this.scene.theme.getCurrentTheme(Id).params) ? void 0 : e.color) || 12686939;
							this.countDownText.setTint(t)
						}, i.createSpecialEventParticle = function() {
							this.specialEventParticle = new qu(this.scene), this.add(this.specialEventParticle)
						}, i.createBundle = function() {
							this.bundle = new yd(this.scene)
						}, i.createBadge = function() {
							this.badge = new cd(this.scene, this.scene.lang.getText({
								key: "{X}_more",
								variables: [333]
							})), this.badge.setAngle(-13)
						}, i.createTreasureBoxIcon = function() {
							this.treasureBoxIcon = this.scene.make.image({
								key: Cd,
								frame: wd.TREASURE_CLOSE
							}), this.treasureBoxIcon.setWorldSize(53.5, 44.5)
						}, i.createProgressBar = function() {
							this.progressBar = new Sd(this.scene, {
								width: 187,
								isUseThemeDefault: !0
							}), this.progressBar.setProgress(0, Od.WatchAdsTimes, 0)
						}, i.createCloseButton = function() {
							this.closeButton = new ea.Z(this.scene, aa.Z.THEME.DEFAULT.KEY, Pd.BUTTON_CLOSE, 37.5, 39), this.closeButton.setName("Close"), this.closeButton.onClick = this.handleClosePopup
						}, i.createWatchAdsButton = function() {
							this.watchAdsButton = new ea.Z(this.scene, Cd, wd.BUTTON_GREEN_LONG, 182, 57), this.watchAdsButton.setName("WatchAds"), this.watchAdsButton.onClick = this.handleShowRewardedVideoAd;
							var e = this.scene.make.image({
								key: Cd,
								frame: wd.RESCUE_ICON_AD
							});
							e.setWorldSize(46.5, 40);
							var t = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(27)
							});
							t.setText(this.scene.lang.getText("get")), this.watchAdsButton.add([e, t]), Phaser.Display.Align.In.Center(e, this.watchAdsButton, -50, -3), Phaser.Display.Align.In.Center(t, this.watchAdsButton, 25, -3)
						}, i.createDescription = function() {
							var e;
							this.descriptionText = ia.Z.addText(this.scene, {
								font: _a.Z.NORMAL.KEY,
								size: this.scene.fontSize(16)
							});
							var t = this.scene.lang.getText(Od.Title);
							this.descriptionText.setText(this.scene.lang.getText({
								key: "limited_time_reward_{X}_watch_{Y}_video_to_receive_rewards",
								variables: [t, Od.WatchAdsTimes]
							}));
							var i = (null == (e = this.scene.theme.getCurrentTheme(Id).params) ? void 0 : e.color) || 12686939;
							this.descriptionText.setTint(i)
						}, i.createTitle = function() {
							var e = this.scene.lang.getText(Od.Title);
							this.headerTitle = new sd(this.scene, e), this.popup.add(this.headerTitle)
						}, i.align = function() {
							Phaser.Display.Align.In.TopCenter(this.headerTitle, this.popup, 0, 25), Phaser.Display.Align.In.TopRight(this.closeButton, this.popup, 14, 14), Phaser.Display.Align.In.Center(this.descriptionText, this.popup), Phaser.Display.Align.In.BottomRight(this.progressBar, this.popup, -50, -110), Phaser.Display.Align.In.RightCenter(this.treasureBoxIcon, this.progressBar, 5, -5), Phaser.Display.Align.In.BottomCenter(this.watchAdsButton, this.popup, 0, -30)
						}, i.getWatchAdsTimes = function() {
							var e = this.scene.player.getSpecialEvents();
							return e.events && e.events[Od.Type] || 0
						}, i.runOpenAnimation = function() {
							this.scene.audio.playSound(sa.Z.POPUP_IN), this.runPopupEntrancesAnimation(0, 500), this.bundle.runGlowRotate()
						}, i.runPopupEntrancesAnimation = function(e, t) {
							var i = this;
							if (!this.popupShowUpAnimation) {
								var n = this.popup,
									a = n.y,
									s = n.scale;
								this.popupShowUpAnimation = new cr.Z({
									targets: [this.popup],
									delay: e,
									duration: t,
									props: {
										y: {
											from: 350,
											to: a
										},
										alpha: {
											start: 1,
											from: 1,
											to: 1
										},
										scale: {
											start: 0,
											from: 0,
											to: s
										}
									},
									onComplete: function() {
										i.bundle.runTreasureTwinkle()
									}
								})
							}
							this.popupShowUpAnimation.play()
						}, i.runConfettiEffect = function() {
							this.scene.audio.playSound(sa.Z.CONFETTI), this.specialEventParticle.explode(this.headerTitle.x, this.headerTitle.y)
						}, i.runPopupExitsAnimation = function(e, t) {
							var i, n = this;
							this.popupFadeOutAnimation || (this.popupFadeOutAnimation = new qn.Z({
								targets: [this.popup],
								delay: e,
								duration: t,
								props: {
									y: 250,
									scale: 0
								},
								onComplete: function() {
									n.popup.setY(0)
								}
							})), null == (i = this.popupFadeOutAnimation) || i.play()
						}, i.runCloseAnimation = function() {
							this.runPopupExitsAnimation(0, 300), this.bundle.stopGlowRotate(), this.bundle.stopTreasureTwinkle()
						}, i.runFadeInContents = function() {
							var e = this,
								t = this.popup.getAll();
							this.scene.add.tween({
								targets: t,
								ease: Phaser.Math.Easing.Sine.Out,
								duration: 300,
								alpha: 1,
								onComplete: function() {
									e.setAlphaAllContents(1)
								}
							})
						}, i.setAlphaAllContents = function(e) {
							this.popup.getAll().forEach((function(t) {
								return t.setAlpha(e)
							}))
						}, i.showNotifySkipAds = function() {
							this.scene.game.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
								message: this.scene.lang.getText("sorry_no_rewards_you_have_cancelled_the_ad"),
								duration: 1500,
								loading: !1
							})
						}, i.updateUI = function(e) {
							this.updateDescription(e), e >= Od.WatchAdsTimes ? (this.handleCountDownTimer(), this.countDownContainer.revive(), this.watchAdsButton.kill(), this.treasureBoxIcon.kill(), this.progressBar.kill(), Phaser.Display.Align.In.Center(this.bundle, this.popup, 0, -60), Phaser.Display.Align.In.Center(this.countDownText, this.descriptionText, 0, 25), Phaser.Display.Align.In.TopLeft(this.badge, this.popup, -8, -45)) : (this.countDownContainer.kill(), this.watchAdsButton.setDisabled(!1), this.watchAdsButton.revive(), this.treasureBoxIcon.revive(), this.progressBar.revive(), this.progress = e, this.progressBar.setProgress(this.progress, Od.WatchAdsTimes, 0), Phaser.Display.Align.In.TopCenter(this.bundle, this.popup, 0, -100), Phaser.Display.Align.In.TopLeft(this.badge, this.popup, -8, -25))
						}, i.updateDescription = function(e) {
							if (e >= Od.WatchAdsTimes) this.descriptionText.setText(this.scene.lang.getText("you_have_received_the_rewards")), this.descriptionText.setFontSize(this.scene.fontSize(19)), Phaser.Display.Align.In.Center(this.descriptionText, this.popup, 0, 75);
							else {
								var t = this.scene.lang.getText(Od.Title);
								this.descriptionText.setText(this.scene.lang.getText({
									key: "limited_time_reward_{X}_watch_{Y}_video_to_receive_rewards",
									variables: [t, Od.WatchAdsTimes - e]
								})), this.descriptionText.setFontSize(this.scene.fontSize(16)), Phaser.Display.Align.In.Center(this.descriptionText, this.popup, 0, 10)
							}
						}, i.handleCountDownTimer = function() {
							var e, t = this;
							null == (e = this.countDownTimer) || e.remove();
							var i = this.getRemainingTime();
							this.updateCountdownTimer(i);
							var n = this.scene.game.loop.raf.target;
							this.countDownTimer = this.scene.time.addEvent({
								delay: n,
								callback: function() {
									var e, i = t.getRemainingTime();
									i > 0 ? t.updateCountdownTimer(i) : (t.scene.player.updateSpecialEvents(GameCore.Configs.SpecialEvent.Type, 0), t.updateUI(0), null == (e = t.countDownTimer) || e.remove())
								},
								loop: !0
							})
						}, i.updateCountdownTimer = function(e) {
							var t = Math.floor(e % 864e5 / 36e5),
								i = Math.floor(e % 36e5 / 6e4),
								n = Math.floor(e % 6e4 / 1e3),
								a = this.formatUnitTime(t) + ":" + this.formatUnitTime(i) + ":" + this.formatUnitTime(n);
							this.countDownText.setText(this.scene.lang.getText({
								key: "please_come_back_after_{X}",
								variables: [a]
							}))
						}, i.formatUnitTime = function(e) {
							return e < 10 ? "0" + e : "" + e
						}, i.getRemainingTime = function() {
							var e = this.scene.player.getSpecialEvents().lastUpdateAt || 0,
								t = (new Date).getTime();
							return 60 * Od.bonusDurationMins * 1e3 + e - t
						}, t
					}(GameCore.Screen),
					Md = Rd,
					Ld = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).onClose = void 0, s.treasureBox = void 0, s.popupFadeOutAnimation = void 0, s.nameTreasures = [], s.treasure = void 0, s.header = void 0, s.main = void 0, s.treasureExplosiveTimer = void 0, s.treasureItemExplosivesByKey = {}, s.open = function(t) {
								e.prototype.open.call((0, Un.Z)(s), t), s.setAlpha(1), s.nameTreasures = [];
								var i = t.treasure;
								i && (s.nameTreasures = K()(i), s.treasure = i), 0 !== s.nameTreasures.length ? (i && s.updateUI(i), s.runOpenAnimation()) : s.closePopup()
							}, s.closePopup = function() {
								s.scene.audio.playSound(sa.Z.POPUP_OUT), s.treasureBox.reset(), s.scene.screen.close(s.name)
							}, s.handleClaim = function() {
								s.header.revive(), s.header.setAlpha(0), s.scene.tweens.add({
									targets: s.header,
									duration: 200,
									props: {
										alpha: {
											start: 0,
											from: 0,
											to: 1
										}
									}
								});
								var e = s.scene.player.getBullets(),
									t = {},
									i = s.scene.player.getCoins(),
									n = [];
								Yr.Z.forEach((function(a) {
									var o, r = s.treasure[a];
									if (r) {
										var l = s.main.getBlock(a),
											c = s.header.getIconBlockPosition(a);
										if (l && c) {
											l.kill();
											var h = l.getIcon(),
												u = h.getWorldPosition();
											null == (o = s.treasureItemExplosivesByKey[a]) || o.setSizeIcon(h.width, h.height);
											var d = s.runTreasuresExplodeEffect(u, c, a, r);
											if (n.push(d), "Coin" !== a) {
												var p = e[a] || 0;
												p += r, t[a] = p
											} else i += r
										}
									}
								})), s.scene.player.updateCustomFields({
									bullets: t,
									coin: i
								}), oe().all(n).then((function() {
									var e;
									null == (e = s.treasureExplosiveTimer) || e.remove(), s.treasureExplosiveTimer = s.scene.time.delayedCall(700, (function() {
										s.setDepth(Wn.Ks.POPUP), s.runCloseAnimation()
									}))
								}))
							}, s.runTreasuresExplodeEffect = function() {
								var e = (0, r.Z)(h().mark((function e(t, i, n, a) {
									var o, r, l, c, u, d, p;
									return h().wrap((function(e) {
										for (;;) switch (e.prev = e.next) {
											case 0:
												if (o = 1, r = s.treasureItemExplosivesByKey[n]) {
													e.next = 4;
													break
												}
												return e.abrupt("return");
											case 4:
												return l = r.explode(o, t.x, t.y, i.x, i.y), c = l.allTweens, u = l.longestTween, d = s.scene.player.getBullets(), p = s.scene.player.getCoins(), s.setDepth(jn.Z.ON_TOP), c.forEach((function(e) {
													e.on(Phaser.Tweens.Events.TWEEN_COMPLETE, (function() {
														if ("Coin" === n) return p += a / Math.ceil(o), void s.updateCurrentQuantityTreasure(n, p);
														var e = d[n] || 0;
														e += a / Math.ceil(o), s.updateCurrentQuantityTreasure(n, e)
													}))
												})), e.abrupt("return", new(oe())((function(e) {
													u.on(Phaser.Tweens.Events.TWEEN_COMPLETE, e)
												})));
											case 10:
											case "end":
												return e.stop()
										}
									}), e)
								})));
								return function(t, i, n, a) {
									return e.apply(this, arguments)
								}
							}(), s.setDepth(Wn.Ks.POPUP), s.background.setAlpha(.5), s.createTreasureBox(), s.createMain(), s.createHeader(), s.createEffect(), s.add([s.treasureBox, s.main, s.header]), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setDepth = function(t) {
							for (var i in e.prototype.setDepth.call(this, t), this.treasureItemExplosivesByKey) {
								var n, a = i;
								null == (n = this.treasureItemExplosivesByKey[a]) || n.setDepth(t + 1)
							}
							return this
						}, i.getTreasureBoxClose = function() {
							return this.treasureBox.getTreasureClose()
						}, i.createTreasureBox = function() {
							this.treasureBox = new ya(this.scene)
						}, i.align = function() {
							Phaser.Display.Align.In.Center(this.treasureBox, this.zone, 0, -30.5), Phaser.Display.Align.To.TopRight(this.header, this.zone, -22, -4)
						}, i.runOpenAnimation = function() {
							var e = this;
							this.scene.audio.playSound(sa.Z.POPUP_IN), this.fadeInBackground(), this.treasureBox.playOpenAnimation((function() {
								e.main.revive(), e.main.playAnimation(), e.scene.time.delayedCall(1e3, (function() {
									e.handleClaim()
								}))
							})), this.main.kill(), this.header.kill()
						}, i.updateUI = function(e) {
							this.main.updateUI(e), this.header.updateUI(e), this.align()
						}, i.createMain = function() {
							this.main = new na.Z(this.scene)
						}, i.createHeader = function() {
							this.header = new ta.Z(this.scene)
						}, i.createEffect = function() {
							this.createTreasureExplosivesByKey()
						}, i.createTreasureExplosivesByKey = function() {
							var e = this;
							Yr.Z.forEach((function(t) {
								var i = new Ba.Z(e.scene);
								"Coin" === t ? i.setTreasureGroup("Coin10") : i.setTreasureGroup(t), e.treasureItemExplosivesByKey[t] = i, i.setDepth(jn.Z.PRIORITY)
							}))
						}, i.updateCurrentQuantityTreasure = function(e, t) {
							this.header.updateTextBlock(e, t)
						}, i.runCloseAnimation = function() {
							var e = this;
							this.scene.tweens.add({
								targets: [this],
								duration: 150,
								props: {
									alpha: {
										start: 1,
										from: 1,
										to: 0
									}
								},
								onComplete: function() {
									e.onClose && e.onClose(), e.header.kill(), e.closePopup()
								}
							})
						}, i.fadeInBackground = function() {
							this.background.setAlpha(0), this.scene.tweens.add({
								targets: this.background,
								duration: 200,
								props: {
									alpha: {
										start: 0,
										from: 0,
										to: .5
									}
								}
							})
						}, t
					}(GameCore.Screen),
					Gd = Ld,
					Dd = aa.Z.DEFAULT,
					Fd = Dd.KEY,
					Nd = Dd.FRAME,
					Zd = aa.Z.THEME.FRAME,
					Ud = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).onClose = void 0, s.treasureBox = void 0, s.claimButton = void 0, s.treasure = void 0, s.coinBar = void 0, s.main = void 0, s.treasureExplosiveTimer = void 0, s.treasureItemExplosivesByKey = {}, s.open = function(t) {
								e.prototype.open.call((0, Un.Z)(s), t);
								var i = t.treasure;
								i && 0 !== K()(i).length ? (s.setAlpha(1), s.treasure = i, s.updateUI(i), s.runOpenAnimation()) : s.closePopup()
							}, s.handleClaim = function() {
								s.scene.audio.playSound(sa.Z.GIFT_RECEIVED), s.claimButton.kill(), s.coinBar.revive(), s.coinBar.setAlpha(0), s.scene.tweens.add({
									targets: s.coinBar,
									duration: 100,
									props: {
										alpha: {
											start: 0,
											from: 0,
											to: 1
										}
									}
								});
								var e = [],
									t = s.scene.player.getBullets(),
									i = {},
									n = s.scene.player.getCoins();
								Yr.Z.forEach((function(a) {
									var o, r = s.treasure[a];
									if (r) {
										var l = s.main.getBlock(a),
											c = s.coinBar.getIcon().getWorldPosition();
										if (l && c) {
											l.kill();
											var h = l.getIcon(),
												u = h.getWorldPosition();
											null == (o = s.treasureItemExplosivesByKey[a]) || o.setSizeIcon(h.width, h.height);
											var d = s.runTreasuresExplodeEffect(u, c, a, r);
											if (e.push(d), "Coin" !== a) {
												var p = t[a] || 0;
												p += r, i[a] = p
											} else n += r
										}
									}
								})), s.scene.player.updateCustomFields({
									bullets: i,
									coin: n
								}), oe().all(e).then((function() {
									var e;
									null == (e = s.treasureExplosiveTimer) || e.remove(), s.treasureExplosiveTimer = s.scene.time.delayedCall(700, (function() {
										s.setDepth(Wn.Ks.POPUP), s.runCloseAnimation()
									}))
								}))
							}, s.closePopup = function() {
								s.scene.audio.playSound(sa.Z.POPUP_OUT), s.treasureBox.reset(), s.scene.screen.close(s.name), s.onClose && s.onClose()
							}, s.runTreasuresExplodeEffect = function() {
								var e = (0, r.Z)(h().mark((function e(t, i, n, a) {
									var o, r, l, c, u, d;
									return h().wrap((function(e) {
										for (;;) switch (e.prev = e.next) {
											case 0:
												if (o = 1, r = s.treasureItemExplosivesByKey[n]) {
													e.next = 4;
													break
												}
												return e.abrupt("return");
											case 4:
												return l = r.explode(o, t.x, t.y, i.x, i.y), c = l.allTweens, u = l.longestTween, d = s.scene.player.getCoins(), s.setDepth(jn.Z.ON_TOP), c.forEach((function(e) {
													e.on(Phaser.Tweens.Events.TWEEN_COMPLETE, (function() {
														if ("Coin" === n) return d += a / Math.ceil(o), void s.coinBar.setValue(d)
													}))
												})), e.abrupt("return", new(oe())((function(e) {
													u.on(Phaser.Tweens.Events.TWEEN_COMPLETE, e)
												})));
											case 9:
											case "end":
												return e.stop()
										}
									}), e)
								})));
								return function(t, i, n, a) {
									return e.apply(this, arguments)
								}
							}(), s.setDepth(Wn.Ks.POPUP), s.background.kill(), s.createTreasureBox(), s.createClaimButton(), s.createMain(), s.createCoinBar(), s.createEffect(), s.add([s.treasureBox, s.claimButton, s.main, s.coinBar]), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createTreasureBox = function() {
							this.treasureBox = new ya(this.scene)
						}, i.createEffect = function() {
							this.createTreasureExplosivesByKey()
						}, i.createTreasureExplosivesByKey = function() {
							var e = this;
							Yr.Z.forEach((function(t) {
								var i = new Ba.Z(e.scene);
								"Coin" === t ? i.setTreasureGroup("Coin10") : i.setTreasureGroup(t), e.treasureItemExplosivesByKey[t] = i, i.setDepth(jn.Z.PRIORITY)
							}))
						}, i.createMain = function() {
							this.main = new na.Z(this.scene)
						}, i.createCoinBar = function() {
							this.coinBar = new ps.Z(this.scene, Fd, {
								background: {
									key: aa.Z.THEME.DEFAULT.KEY,
									frame: Zd.BG_VALUE_BAR
								},
								icon: Nd.ICON_COIN
							}), this.coinBar.getBackground().setWorldSize(121.5, 48.5), this.coinBar.getIcon().setWorldSize(24, 24.5), this.coinBar.getText().setFontSize(this.scene.fontSize(18)), this.coinBar.alignObject()
						}, i.createClaimButton = function() {
							this.claimButton = new ea.Z(this.scene, Fd, Nd.BUTTON_GREEN, 134.5, 51), this.claimButton.setName("Claim");
							var e = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								text: this.scene.lang.getText("claim"),
								size: this.scene.fontSize(25),
								origin: {
									x: .5,
									y: .5
								},
								y: -3
							});
							this.claimButton.add(e), this.claimButton.onClick = this.handleClaim
						}, i.updateUI = function(e) {
							this.main.updateUI(e), this.coinBar.setValue(this.scene.player.getCoins()), this.align()
						}, i.align = function() {
							Phaser.Display.Align.In.Center(this.treasureBox, this.zone, 0, -30.5), Phaser.Display.Align.In.TopRight(this.coinBar, this.zone, -22, -8.5), Phaser.Display.Align.To.BottomCenter(this.claimButton, this.treasureBox, 0, 40)
						}, i.runOpenAnimation = function() {
							var e = this;
							this.scene.audio.playSound(sa.Z.POPUP_IN), this.treasureBox.playOpenAnimation((function() {
								e.main.revive(), e.claimButton.revive(), e.main.playAnimation()
							})), this.claimButton.kill(), this.main.kill(), this.coinBar.kill()
						}, i.runCloseAnimation = function() {
							var e = this;
							this.scene.tweens.add({
								targets: [this],
								duration: 150,
								props: {
									alpha: {
										start: 1,
										from: 1,
										to: 0
									}
								},
								onComplete: function() {
									e.coinBar.kill(), e.closePopup()
								}
							})
						}, i.setDepth = function(t) {
							for (var i in e.prototype.setDepth.call(this, t), this.treasureItemExplosivesByKey) {
								var n, a = i;
								null == (n = this.treasureItemExplosivesByKey[a]) || n.setDepth(t + 1)
							}
							return this
						}, i.getTreasureBoxClose = function() {
							return this.treasureBox.getTreasureClose()
						}, t
					}(GameCore.Screen),
					jd = Ud,
					Yd = aa.Z.DEFAULT,
					Wd = Yd.KEY,
					Kd = Yd.FRAME,
					Hd = aa.Z.THEME,
					zd = Hd.KEY,
					Xd = Hd.DEFAULT,
					Vd = Hd.HARD,
					Jd = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).main = void 0, i.header = void 0, i.footer = void 0, i.levelScroller = void 0, i.rewardScreen = void 0, i.dailyMissionScreen = void 0, i.dailyRewardsScreen = void 0, i.offlineRewardScreen = void 0, i.dailySpinScreen = void 0, i.rewardSpinItemScreen = void 0, i.introLevelScreen = void 0, i.specialEventScreen = void 0, i.rewardDailyItemScreen = void 0, i.specialEventRewardsScreen = void 0, i.currentCoins = void 0, i.timerDailyRewards = void 0, i.coinsExplosive2 = void 0, i.coinsExplosiveTimer = void 0, i.debugChooseLevel = void 0, i.isFirstOpen = !0, i.isFirstOpenAutoSpecialEventScreen = !0, i.run = function() {
								var e;
								i.payment.getPaymentEnable() ? (i.header.shopButton.revive(), i.header.removeAdsButton.revive()) : (i.header.shopButton.kill(), i.header.removeAdsButton.kill()), i.header.inviteFriendButton.kill(), i.level.getLevelConfigMap().length < i.player.getLevel() ? i.footer.playLevelButton.kill() : i.footer.playLevelButton.revive(), i.updateTheme(), i.input.setTopOnly(!0), i.debugChooseLevel = !1;
								var t = i.player.getLastTimeSpin();
								i.header.luckySpinButton.setLastTimeSpin(t);
								var n = i.player.getLevel();
								i.footer.playLevelButton.updateTextLevel(n);
								var a = i.player.getLevelStars();
								i.levelScroller.setLevelEnableMax(n), i.levelScroller.setLevelStars(a), i.levelScroller.updateLevelScroller(), i.levelScroller.runFastScrollButtonsAnimation(), null == (e = i.timerDailyRewards) || e.remove(), i.timerDailyRewards = i.time.delayedCall(300, (function() {
									var e = [];
									i.checkCanOpenDailyReward() && e.push(Wn.o4.DAILY_REWARD_SCREEN), 0 != i.getOfflineDays() && e.push(Wn.o4.OFFLINE_REWARD_SCREEN);
									var t = i.shouldAutoShowSpecialEventScreen();
									e.length < 2 && t && (e.push(Wn.o4.SPECIAL_EVENT_SCREEN), i.isFirstOpenAutoSpecialEventScreen = !1), i.showScreens(e)
								})), i.updateCurrentCoins(), i.updateBonusBubble();
								var s = [{
									selector: pt,
									callback: function(e) {
										var t = i.player.getLevel();
										i.levelScroller.setLevelEnableMax(t), i.levelScroller.setLevelStars(e), i.levelScroller.updateLevelScroller()
									}
								}, {
									selector: ft,
									callback: function(e) {
										e && i.header.coinBar.setValue(e)
									}
								}, {
									selector: gt,
									callback: function(e) {
										e && i.header.luckySpinButton.setLastTimeSpin(e)
									}
								}, {
									selector: yt,
									callback: function() {
										i.updateBonusBubble()
									}
								}];
								i.handleStateChange(s), i.facebook.attemptToAddShortcut(), i.isFirstOpen || i.isCanShowRemoveAds() && i.screen.open(Wn.o4.REMOVE_ADS_SCREEN), i.handleConsumeProducts(), i.isFirstOpen = !1
							}, i.eatCoins = function(e) {
								var t = i.currentCoins + e;
								i.player.setCustomData("coin", t)
							}, i.earnAdsRewardAnimation = function(e) {
								var t = i.gameZone.width / 2,
									n = i.gameZone.height / 2;
								i.runCoinsExplodeEffect({
									x: t,
									y: n
								}, e)
							}, i.runCoinsExplodeEffect = function(e, t) {
								var n = i.header.coinBar.getCoinIconPosition(),
									a = n.x,
									s = n.y,
									o = t / 25 > 15 ? 15 : t / 25;
								i.coinsExplosive2.explode(o, e.x, e.y, a, s).forEach((function(e) {
									e.on(Phaser.Tweens.Events.TWEEN_START, (function() {
										i.header.setDepth(jn.Z.ON_TOP)
									})), e.on(Phaser.Tweens.Events.TWEEN_COMPLETE, (function(e) {
										var n, a = i.currentCoins + t / o;
										i.setCoins(a), null == (n = i.coinsExplosiveTimer) || n.remove(), e.totalProgress < 1 ? i.header.setDepth(jn.Z.ITEM) : i.coinsExplosiveTimer = i.time.delayedCall(1e3, (function() {
											i.header.setDepth(jn.Z.ITEM)
										}))
									}))
								}))
							}, i.showNotifyNoAds = function() {
								i.game.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
									message: i.lang.getText("no_ads_to_display"),
									duration: 1200,
									loading: !1
								})
							}, i.showNotifySkipAds = function() {
								i.game.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
									message: i.lang.getText("sorry_no_rewards_you_have_cancelled_the_ad"),
									duration: 1500,
									loading: !1
								})
							}, i.handlePlayOnline = function() {
								i.storage.dispatch((0, Ua.Ds)())
							}, i.handlePlaySingle = function() {
								i.storage.dispatch((0, Ua.rq)())
							}, i.handlePlayWithFriend = (0, r.Z)(h().mark((function e() {
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, i.storage.dispatch((0, ja.Es)(!0));
										case 2:
											return e.next = 4, i.storage.dispatch((0, Ua.hJ)());
										case 4:
											return e.next = 6, i.storage.dispatch((0, ja.Es)(!1));
										case 6:
										case "end":
											return e.stop()
									}
								}), e)
							}))), i.handleSettingClick = function() {
								i.screen.open(Wn.o4.SETTINGS_SCREEN)
							}, i.handleRankIconClick = function() {
								i.scene.switch(In.C.TOURNAMENT_SCENE)
							}, i.handleDailyIconClick = function() {
								i.screen.open(Wn.o4.DAILY_MISSIONS_SCREEN)
							}, i.handleInviteIconClick = function() {
								var e = i.storage.getState();
								(0, Rn.F)(e) === Wl.kC ? i.storage.dispatch(Yl()) : i.storage.dispatch(jl())
							}, i.handleCoinBarClick = function() {
								i.payment.getPaymentEnable() ? i.payment.openStore() : i.screen.open(Wn.o4.REWARD_SCREEN, {
									awardCoins: GameCore.Configs.Gameplay.AwardCoins
								})
							}, i.handleDinoClick = function() {
								i.scene.switch(In.C.TOURNAMENT_SCENE)
							}, i.handlePlayLevelEnableMax = function() {
								var e = i.player.getLevel(),
									t = i.player.getLevelStars();
								if (!(i.level.getLevelConfigMap().length < e)) {
									var n = Phaser.Math.Clamp(t[e], 0, 3),
										a = i.level.getLevelConfigMap()[e - 1].missionType;
									i.screen.open(Wn.o4.INTRO_LEVEL_SCREEN, {
										level: e,
										quantityStar: n,
										missionType: a
									})
								}
							}, i.handleLuckySpinBtnClick = function() {
								i.screen.open(Wn.o4.DAILY_SPIN_SCREEN)
							}, i.handleRemoveAdsClick = function() {
								i.ads.isDisabledInterstitialAds() ? i.header.removeAdsButton.showDaysLeft() : i.screen.open(Wn.o4.REMOVE_ADS_SCREEN)
							}, i.handleDailyRewardClick = function() {
								i.header.dailyRewardButton.showRewardText()
							}, i.handleShopBtnClick = function() {
								i.payment.openStore()
							}, i.handleSpecialEventButtonClick = function() {
								i.screen.open(Wn.o4.SPECIAL_EVENT_SCREEN)
							}, i.checkCanOpenDailyReward = function() {
								var e = GameCore.Configs,
									t = (e.Network, e.DailyRewards),
									n = (0, Un.Z)(i).player.getCustomData("dailyRewarded") || {},
									a = n.logDays,
									s = void 0 === a ? [] : a,
									o = n.lastRewarded,
									r = void 0 === o ? 0 : o;
								if (s.length > t.MaxDays) return !0;
								if (t.MockTime > 0 && Date.now() - r >= 1e3 * t.MockTime) return !0;
								return !(0, xo.Gm)(r)
							}, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.shouldAutoShowSpecialEventScreen = function() {
							var e, t = (null == (e = this.player.getSpecialEvents().events) ? void 0 : e[GameCore.Configs.SpecialEvent.Type]) || 0;
							return this.isFirstOpenAutoSpecialEventScreen && GameCore.Configs.SpecialEvent.Enable && this.header.specialEventButton.active && t < GameCore.Configs.SpecialEvent.WatchAdsTimes
						}, i.updateCurrentBestScore = function() {
							this.player.getBestScore();
							var e = this.storage.getState();
							(0, Ya.Vb)(e).bestScore
						}, i.updateCurrentCoins = function() {
							var e = this.player.getCoins();
							this.setCoins(e)
						}, i.preload = function() {
							var e = this;
							this.events.on("wake", this.run), this.events.on("resume", this.run), this.events.on("create", this.run), this.events.on(Phaser.Scenes.Events.PAUSE, (function() {
								var t;
								null == (t = e.timerDailyRewards) || t.remove()
							})), GameCore.Utils.Valid.isDebugger() && (this.input.keyboard.on("keydown-E", (function() {
								e.unlockAllLevels()
							})), this.input.keyboard.on("keydown-M", (function() {
								e.screen.open(Wn.o4.DAILY_REWARD_SCREEN)
							})), this.input.keyboard.on("keydown-X", (function() {
								e.player.updateBonusBubble(10)
							})))
						}, i.create = function() {
							e.prototype.create.call(this), this.createBackground(Yn.Z.BACKGROUND.KEY), this.createLevelMap(), this.createHeaderBar(), this.createFooterBar(), this.createOverlay(), this.createEffects(), this.createSettingsScreen(), this.createRewardScreen(), this.createDailyRewardsScreen(), this.createDailySpinScreen(), this.createRewardSpinItemScreen(), this.createRemoveAdsScreen(), this.createIntroLevelScreen(), this.createRewardDailyItemScreen(), this.createOfflineRewardScreen(), this.createSpecialEventScreen(), this.createSpecialEventRewardsScreen()
						}, i.isDebugChooseLevel = function() {
							return !!GameCore.Utils.Valid.isDebugger() && this.debugChooseLevel
						}, i.unlockAllLevels = function() {
							if (!GameCore.Utils.Valid.isDebugger()) return !1;
							this.levelScroller.enableAllLevel(), this.debugChooseLevel = !0
						}, i.createOverlay = function() {
							var e = this.gameZone,
								t = e.width,
								i = e.height,
								n = this.add.container();
							n.setSize(t, i);
							var a = this.make.image({
								key: Wd,
								frame: Kd.MAP_BG_UI
							});
							a.setWorldSize(375, 96), a.setOrigin(0, 0);
							var s = this.make.image({
								key: Wd,
								frame: Kd.MAP_BG_UI
							});
							s.setFlipY(!0), s.setWorldSize(375, 96), s.setPosition(0, i), s.setOrigin(0, 0), n.add([a, s])
						}, i.createLevelMap = function() {
							this.levelScroller = new Yc(this), Phaser.Display.Align.In.Center(this.levelScroller, this.gameZone, 0, 0)
						}, i.createTournamentButton = function() {
							this.main.dinoTitle.dino.setInteractive({
								useHandCursor: !1
							}), this.main.dinoTitle.dino.on(Phaser.Input.Events.GAMEOBJECT_POINTER_DOWN, this.handleDinoClick)
						}, i.setCoins = function(e) {
							var t = e < 0 ? 0 : e;
							this.currentCoins = t, this.header.coinBar.setValue(t)
						}, i.createSettingsScreen = function() {
							this.screen.add(Wn.o4.SETTINGS_SCREEN, Gl)
						}, i.createRewardDailyItemScreen = function() {
							var e = this;
							this.rewardDailyItemScreen = this.screen.add(Wn.o4.REWARD_DAILY_ITEM_SCREEN, Gd), this.rewardDailyItemScreen.onClose = function() {
								e.dailyRewardsScreen.visible && e.time.delayedCall(200, (function() {
									e.dailyRewardsScreen.runCloseAnimation()
								}))
							}
						}, i.createRewardScreen = function() {
							this.rewardScreen = this.screen.add(Wn.o4.REWARD_SCREEN, Za)
						}, i.createDailySpinScreen = function() {
							this.dailySpinScreen = this.screen.add(Wn.o4.DAILY_SPIN_SCREEN, vh)
						}, i.createIntroLevelScreen = function() {
							var e = this;
							this.introLevelScreen = this.screen.add(Wn.o4.INTRO_LEVEL_SCREEN, ou), this.introLevelScreen.on(GameCore.Screens.Events.CLOSE, (function() {
								e.updateTheme()
							}))
						}, i.createRewardSpinItemScreen = function() {
							var e = this;
							this.rewardSpinItemScreen = this.screen.add(Wn.o4.REWARD_SPIN_ITEM_SCREEN, Ih), this.rewardSpinItemScreen.onClose = function() {
								e.dailySpinScreen.handleSpinScreenComplete()
							}
						}, i.createRemoveAdsScreen = function() {
							this.screen.add(Wn.o4.REMOVE_ADS_SCREEN, Gu)
						}, i.createDailyMissionScreen = function() {
							var e = this;
							this.dailyMissionScreen = this.screen.add(Wn.o4.DAILY_MISSIONS_SCREEN, Dr), this.dailyMissionScreen.onReward = function(t, i) {
								"coin" === t && e.eatCoins(i)
							}
						}, i.createDailyRewardsScreen = function() {
							this.dailyRewardsScreen = this.screen.add(Wn.o4.DAILY_REWARD_SCREEN, vl), this.dailyRewardsScreen.onNoAd = this.showNotifyNoAds, this.dailyRewardsScreen.onSkipAd = this.showNotifySkipAds
						}, i.createOfflineRewardScreen = function() {
							this.offlineRewardScreen = this.screen.add(Wn.o4.OFFLINE_REWARD_SCREEN, Yu)
						}, i.createSpecialEventScreen = function() {
							this.specialEventScreen = this.screen.add(Wn.o4.SPECIAL_EVENT_SCREEN, Md)
						}, i.createSpecialEventRewardsScreen = function() {
							var e = this;
							this.specialEventRewardsScreen = this.screen.add(Wn.o4.SPECIAL_EVENT_REWARDS_SCREEN, jd), this.specialEventRewardsScreen.onClose = function() {
								e.screen.close(Wn.o4.SPECIAL_EVENT_SCREEN)
							}
						}, i.listenEvents = function() {
							this.events.on("claim-reward", this.runCoinsExplodeEffect)
						}, i.createHeaderBar = function() {
							this.header = new qs(this), this.header.setDepth(jn.Z.BUTTON), this.header.coinBar.onClick = this.handleCoinBarClick, this.header.shopButton.onClick = this.handleShopBtnClick, this.header.luckySpinButton.onClick = this.handleLuckySpinBtnClick, this.header.removeAdsButton.onClick = this.handleRemoveAdsClick, this.header.dailyRewardButton.onClick = this.handleDailyRewardClick, this.header.inviteFriendButton.onClick = this.handleInviteIconClick, this.header.specialEventButton.onClick = this.handleSpecialEventButtonClick, Phaser.Display.Align.In.TopCenter(this.header, this.gameZone, 0, -8)
						}, i.createMainContent = function() {
							this.main = new lr(this), this.main.setDepth(jn.Z.LOGO), this.main.playSingleButton.onClick = this.handlePlaySingle, this.main.playWithFriendsButton.onClick = this.handlePlayWithFriend, Phaser.Display.Align.In.Center(this.main, this.gameZone, 0, -5)
						}, i.createFooterBar = function() {
							this.footer = new os(this), this.footer.setDepth(jn.Z.BUTTON), this.footer.settingButton.onClick = this.handleSettingClick, this.footer.playLevelButton.onClick = this.handlePlayLevelEnableMax, Phaser.Display.Align.In.BottomCenter(this.footer, this.gameZone)
						}, i.createEffects = function() {
							this.coinsExplosive2 = new Dl.Z(this), this.coinsExplosive2.setDepth(jn.Z.ON_TOP)
						}, i.updateBonusBubble = function() {
							var e = this.player.getBonusBullets();
							this.levelScroller.updateBonusBubbles(e)
						}, i.update = function(t, i) {
							e.prototype.update.call(this, t, i), this.header.luckySpinButton.updateClock(), this.header.dailyRewardButton.updateClock(), this.isAllowOpenSpecialEventScreen() && this.header.specialEventButton.updateClock(), this.dailySpinScreen.update()
						}, i.updateTheme = function() {
							var e = this.level.getLevelConfigMap(),
								t = this.player.getLevel();
							e.length >= t && e[t - 1].isHard ? (this.theme.changeTheme(aa.Z.THEME_GAMEPLAY.KEY, aa.Z.THEME_GAMEPLAY.HARD.KEY), this.theme.changeTheme(zd, Vd.KEY), this.theme.changeTheme(Yn.Z.GAME_BACKGROUND_THEME.KEY, Yn.Z.GAME_BACKGROUND_THEME.HARD.KEY), this.footer.playLevelButton.setThemeHard()) : (this.theme.changeTheme(aa.Z.THEME_GAMEPLAY.KEY, aa.Z.THEME_GAMEPLAY.DEFAULT.KEY), this.theme.changeTheme(zd, Xd.KEY), this.theme.changeTheme(Yn.Z.GAME_BACKGROUND_THEME.KEY, Yn.Z.GAME_BACKGROUND_THEME.DEFAULT.KEY), this.footer.playLevelButton.setThemeDefault())
						}, i.isCanShowRemoveAds = function() {
							var e = this.player.getShowRemoveAds(),
								t = this.ads.isDisabledInterstitialAds();
							return e && this.payment.getPaymentEnable() && !t
						}, i.handleConsumeProducts = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, i;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return t = this.game.globalScene, e.prev = 1, e.next = 4, t.consumePurchasesReward();
										case 4:
											if (i = e.sent, 0 !== K()(i).length) {
												e.next = 7;
												break
											}
											throw new Error("There was an error\nduring the payment!\nPlease try again.");
										case 7:
											return t.screen.close(Wn.o4.NOTIFY_SCREEN), e.next = 10, t.openProductReceiveScreen(i);
										case 10:
											e.next = 14;
											break;
										case 12:
											e.prev = 12, e.t0 = e.catch(1);
										case 14:
										case "end":
											return e.stop()
									}
								}), e, this, [
									[1, 12]
								])
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.isAllowOpenSpecialEventScreen = function() {
							var e = (new Date).getTime();
							return !!(GameCore.Configs.SpecialEvent.Enable && e > GameCore.Configs.SpecialEvent.StartAt && e < GameCore.Configs.SpecialEvent.FinishAt)
						}, i.getOfflineDays = function() {
							var e = this.player,
								t = e.getLastTimePlayed();
							if (0 === t) return 0;
							var i = GameCore.Configs.ComebackBonus,
								n = new Date,
								a = i.mockTimeOff > 0 ? i.mockTimeOff : 864e5,
								s = Math.floor(Math.abs(n.getTime() - t) / a);
							return (!(0, xo.Gm)(t) || i.mockTimeOff > 0) && (t && s || i.mockTimeOff > 0) ? s < e.getBonusBullets() ? 0 : s : 0
						}, t
					}(En.Z);
				var qd = Jd,
					Qd = i(62462),
					$d = i.n(Qd),
					ep = i(92762),
					tp = i.n(ep),
					ip = i(62157),
					np = i(45353),
					ap = i(97172),
					sp = i(96772),
					op = i(55791),
					rp = function(e) {
						var t = e ? e.split("_") : [],
							i = t.length > 0 ? t[0] : "en_US";
						switch (i) {
							case "id":
							case "in":
								i = "id"
						}
						return i
					},
					lp = {
						targets: [],
						props: {
							alpha: {
								duration: 500,
								value: {
									start: 0,
									from: 0,
									to: 1
								},
								ease: Phaser.Math.Easing.Cubic.Out
							},
							scale: {
								duration: 1e3,
								value: {
									start: .8,
									from: .8,
									to: 1
								},
								ease: Phaser.Math.Easing.Elastic.Out,
								easeParams: [.1, .45]
							}
						}
					},
					cp = function(e) {
						function t(t) {
							return e.call(this, lp, t) || this
						}
						return (0, l.Z)(t, e), t
					}(Kn.Z),
					hp = aa.Z.DEFAULT,
					up = hp.KEY,
					dp = hp.FRAME,
					pp = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, {
								key: up,
								frame: dp.AVATAR_FRAME_PURPLE,
								background: dp.AVATAR_BG,
								width: 67,
								height: 67,
								loadDelay: 100
							}) || this).scene = void 0, i.rankIcon = void 0, i.scene = t, i.createRankIcon(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setHighlight = function() {
							this.avtFrame.setFrame(dp.AVATAR_FRAME_BLUE_BIG), this.avtFrame.setWorldSize(67, 67)
						}, i.updateLeaderRankIcon = function(e) {
							1 === e || 2 === e || 3 === e ? this.rankIcon.setFrame(dp.BLANK) : this.rankIcon.kill()
						}, i.createRankIcon = function() {
							this.rankIcon = this.scene.make.image({
								key: up,
								frame: dp.BLANK
							}), this.rankIcon.setWorldSize(39, 47.5), this.add(this.rankIcon), Phaser.Display.Align.In.TopLeft(this.rankIcon, this, 15, 15)
						}, t
					}(Eo),
					mp = pp,
					fp = aa.Z.DEFAULT,
					gp = fp.KEY,
					vp = fp.FRAME,
					yp = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).scene = void 0, n.payload = void 0, n.isCurrentPlayer = !1, n.avatar = void 0, n.block = void 0, n.playerScore = void 0, n.label = void 0, n.playerNameText = void 0, n.shareButton = void 0, n.shareButtonLabel = void 0, n.playButton = void 0, n.playButtonLabel = void 0, n.showItems = void 0, n.showPopUp = void 0, n.scaleAnimation = void 0, n.scene = t, n.createAvatar(), n.createPlayButton(), n.createPlayerName(), n.createPlayerScore(), n.updateInfo(i), n.scene.add.existing((0, Un.Z)(n)), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.updateInfo = function(e) {
							e && (this.payload = e), this.updateAvatar(), this.updateButton(), this.updatePlayerName(), this.updatePlayerScore(), this.updateLeaderRankIcon(), e && e.playerId === this.scene.player.getPlayerId() && this.setHighLight()
						}, i.setLabel = function(e) {
							this.label.setText(e)
						}, i.setScore = function(e) {
							this.playerScore.setText(e)
						}, i.showAnimations = function(e, t) {
							void 0 === e && (e = 0), void 0 === t && (t = 300);
							var i = 200 * e;
							this.runShowItemAnimation(i, t), this.runShowPopUpAnimation(i, t)
						}, i.updateLeaderRankIcon = function() {
							var e;
							null != (e = this.payload) && e.rank ? this.avatar.updateLeaderRankIcon(this.payload.rank) : this.avatar.updateLeaderRankIcon(0)
						}, i.updateButton = function() {
							var e, t;
							null == (e = this.playButton) || e.revive(), null == (t = this.shareButton) || t.kill(), this.payload || (this.playButton.kill(), this.playButton = new ea.Z(this.scene, gp, vp.BUTTON_GREEN_SHORT, 70, 31), this.playButton.setName("Random"), this.playButtonLabel.setText("Random"), this.playButton.add(this.playButtonLabel), this.add(this.playButton), Phaser.Display.Align.In.Center(this.playButtonLabel, this.playButton), Phaser.Display.Align.In.Center(this.playButton, this.avatar, 0, 90))
						}, i.runShowPopUpAnimation = function(e, t) {
							this.scene.tweens.killTweensOf(this), this.showPopUp = new vo({
								targets: [this],
								delay: e,
								duration: t,
								props: {
									y: {
										start: this.y + 70,
										to: this.y
									}
								}
							}), this.showPopUp.play()
						}, i.runShowItemAnimation = function(e, t) {
							var i = this.getAll();
							this.scene.tweens.killTweensOf(i), this.showItems = new cp({
								targets: i,
								duration: t,
								delay: this.scene.tweens.stagger(50, {
									start: e + 50
								}),
								props: {
									scale: {
										duration: 1e3,
										getStart: function(e) {
											return .8 * e.scale
										},
										getEnd: function(e) {
											return e.scale
										},
										ease: Phaser.Math.Easing.Elastic.Out,
										easeParams: [.1, .45]
									}
								}
							}), this.showItems.play()
						}, i.createAvatar = function() {
							this.avatar = new mp(this.scene), this.add(this.avatar), Phaser.Display.Align.In.TopCenter(this.avatar, this, 0, 35 + this.avatar.displayHeight / 2)
						}, i.updateAvatar = function() {
							var e, t;
							if (null != (e = this.payload) && e.playerId && null != (t = this.payload) && t.photo) {
								var i = this.payload,
									n = i.playerId,
									a = i.photo;
								this.avatar.loadPhoto(n, a, 50)
							} else this.avatar.loadPhoto(Yn.Z.ICON_EARTH.KEY, Yn.Z.ICON_EARTH.FILE, 50)
						}, i.createPlayerScore = function() {
							this.playerScore = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(18),
								origin: {
									x: .5,
									y: .5
								}
							}), this.playerScore.setTint(16777215), Phaser.Display.Align.In.Center(this.playerScore, this.avatar, 0, 60), this.add(this.playerScore)
						}, i.updatePlayerScore = function() {
							var e;
							null != (e = this.payload) && e.score ? (this.playerScore.setText(Math.floor(this.payload.score).toString()), Phaser.Display.Align.In.Center(this.playerScore, this.avatar, 0, 62)) : this.playerScore.kill()
						}, i.updatePlayerName = function() {
							var e;
							if (null != (e = this.payload) && e.name) {
								var t = this.payload.name,
									i = GameCore.Utils.String.getShortName(t, 9),
									n = GameCore.Utils.String.removeDiacritics(i);
								this.playerNameText.setText(n), Phaser.Display.Align.In.Center(this.playerNameText, this.avatar, 0, 44)
							}
						}, i.createPlayButton = function() {
							var e = this;
							this.playButton = new ea.Z(this.scene, gp, vp.BUTTON_GREEN_SHORT, 60, 31), this.playButton.setName("Play"), this.playButton.onClick = function() {
								var t, i = null == (t = e.payload) ? void 0 : t.playerId;
								i && e.scene.storage.dispatch((0, Ua.Xp)(i))
							}, this.add(this.playButton), this.playButtonLabel = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(13),
								text: "Play",
								origin: {
									x: .5,
									y: .5
								}
							}), this.playButton.add(this.playButtonLabel), Phaser.Display.Align.In.Center(this.playButtonLabel, this.playButton, 0, -1), Phaser.Display.Align.In.Center(this.playButton, this.avatar, 0, 90)
						}, i.setHighLight = function() {
							this.isCurrentPlayer = !0, this.avatar.setHighlight(), this.useShareButton()
						}, i.useShareButton = function() {
							var e = this;
							this.playButton.kill(), this.shareButton ? this.shareButton.revive() : (this.shareButton = new ea.Z(this.scene, gp, vp.BUTTON_BLUE_LONG, 60, 31), this.shareButton.setName("Share"), this.shareButton.onClick = function() {
								e.scene.storage.dispatch((0, Zl.uF)())
							}, this.add(this.shareButton), this.shareButtonLabel = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(13),
								text: "Share",
								origin: {
									x: .5,
									y: .5
								}
							}), this.shareButton.add(this.shareButtonLabel), Phaser.Display.Align.In.Center(this.shareButtonLabel, this.shareButton, 0, -1), Phaser.Display.Align.In.Center(this.shareButton, this.avatar, 0, 90))
						}, i.setCurrentUserLeader = function() {
							this.runScaleAnimation()
						}, i.runScaleAnimation = function() {
							!this.scaleAnimation && this.isCurrentPlayer && (this.scaleAnimation = new $r.Z({
								targets: [this.avatar],
								delay: 1e3,
								duration: 2e3,
								ease: Phaser.Math.Easing.Elastic.Out,
								easeParams: [.1, .45],
								props: {
									scale: 1.15,
									y: this.avatar.y - 3
								}
							}), this.scaleAnimation.play())
						}, i.createPlayerName = function() {
							this.playerNameText = this.scene.make.text({
								style: {
									fontFamily: _a.Z.FONT_FAMILY
								},
								text: "Global"
							}), this.playerNameText.setTint(12700904), this.playerNameText.setHighQuality(), this.playerNameText.setFontSize(14), this.add(this.playerNameText), Phaser.Display.Align.In.Center(this.playerNameText, this.avatar, 0, 55)
						}, (0, V.Z)(t, [{
							key: "onClick",
							set: function(e) {
								var t = this.block,
									i = t.width,
									n = t.height;
								this.setSize(i, n + this.avatar.height), this.setInteractive({
									useHandCursor: !0
								}), this.off(Phaser.Input.Events.GAMEOBJECT_POINTER_DOWN), this.on(Phaser.Input.Events.GAMEOBJECT_POINTER_DOWN, e)
							}
						}]), t
					}(Phaser.GameObjects.Container),
					bp = yp,
					Ep = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).scene = void 0, n.payload = void 0, n.leaderBlocks = void 0, n.loading = void 0, n.globalBlock = void 0, n.tournamentBlock = void 0, n.background = void 0, n.entrancesAnimation = void 0, n.handleMatchingGroup = (0, r.Z)(h().mark((function e() {
								var t, i, a, s, o, r, l, c, u;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return t = n.scene, i = t.player, a = t.storage, s = t.game, o = t.facebook, e.prev = 1, s.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
												message: "Matching...",
												loading: !0
											}), r = i.getPlayer(), l = "global", "en" === (c = rp(r.locale)) && (l = "en"), "in" === c && (l = "in"), e.next = 10, o.matchPlayerAsync(l, !0, !0);
										case 10:
											if (u = e.sent, s.globalScene.screen.close(Wn.o4.NOTIFY_SCREEN), u) {
												e.next = 14;
												break
											}
											return e.abrupt("return");
										case 14:
											a.dispatch((0, Ua.b6)()), e.next = 21;
											break;
										case 17:
											e.prev = 17, e.t0 = e.catch(1), s.globalScene.screen.close(Wn.o4.NOTIFY_SCREEN);
										case 21:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[1, 17]
								])
							}))), n.handleInviteTournament = (0, r.Z)(h().mark((function e() {
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											n.scene.storage.dispatch(jl());
										case 2:
										case "end":
											return e.stop()
									}
								}), e)
							}))), n.scene = t, i && n.updateInfo(i), n.setName("LeadersBar"), n.createBackground(), n.createLoading(), n.createLeaderBlocks(), n.createGlobalMatchBlock(), n.createTournamentBlock(), n.createEntrancesAnimation(), n.scene.add.existing((0, Un.Z)(n)), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.updateAnimations = function() {
							this.leaderBlocks.getChildren().forEach((function(e, t) {
								e.active && e instanceof bp && (e.showAnimations(t, 1e3), e.setCurrentUserLeader())
							}))
						}, i.updateInfo = function(e) {
							var t = this;
							this.payload = e;
							var i = this.payload.leaders;
							this.leaderBlocks.clear(!0), i.forEach((function(e, i) {
								if (e.rank = i + 1, t.leaderBlocks.countActive(!1) > 0) {
									var n = t.leaderBlocks.get();
									return n.revive(), void n.updateInfo(e)
								}
								var a = new bp(t.scene, e);
								a.revive(), a.updateInfo(e), t.background.add(a), t.leaderBlocks.add(a)
							})), this.updateSpecialBlock(), this.alignBlocks(), this.runAnimation()
						}, i.killAndHideAll = function() {
							var e = this;
							this.removeAll(!1), this.leaderBlocks.getChildren().forEach((function(t) {
								return e.leaderBlocks.killAndHide(t)
							}))
						}, i.showLoading = function(e) {
							this.loading.setVisible(e)
						}, i.runAnimation = function() {
							this.leaderBlocks.setAlpha(0), this.updateAnimations()
						}, i.createGlobalMatchBlock = function() {
							var e = new bp(this.scene);
							e.updateInfo(), e.playButton.setName("JoinGroup"), e.playButton.onClick = this.handleMatchingGroup, e.kill(), this.background.add(e), this.globalBlock = e
						}, i.createTournamentBlock = function() {
							var e = new bp(this.scene);
							e.useShareButton(), e.shareButton.revive(), e.shareButton.setName("InviteTournament"), e.shareButton.onClick = this.handleInviteTournament, e.playButton.kill(), e.playerNameText.setText("Friends"), e.shareButtonLabel.setText("Invite"), e.playerNameText.setX(e.playerNameText.x - 3), e.kill(), this.background.add(e), this.tournamentBlock = e
						}, i.createBackground = function() {
							this.background = new ro(this.scene, 0, 0, 375, 170), this.add(this.background), Phaser.Display.Align.In.Center(this.background, this.scene.gameZone, 0, 90)
						}, i.createEntrancesAnimation = function() {
							this.entrancesAnimation = new op.Z({
								targets: this.leaderBlocks.getChildren(),
								delay: this.scene.tweens.stagger(50, {
									start: 400
								})
							})
						}, i.createLoading = function() {
							this.loading = new yo.Z(this.scene), this.loading.setTint(5982858), this.loading.setWorldSize(55, 55), this.loading.setDepth(jn.Z.POPUP), this.add(this.loading), Phaser.Display.Align.In.Center(this.loading, this.background)
						}, i.updateSpecialBlock = function() {
							var e = this.scene.storage.getState();
							(0, sp.fQ)(e) === Wl.kC ? (this.tournamentBlock.revive(), this.leaderBlocks.add(this.tournamentBlock)) : (this.globalBlock.revive(), this.leaderBlocks.add(this.globalBlock))
						}, i.alignBlocks = function() {
							var e = -(this.leaderBlocks.getLength() - 1) / 2 * 90;
							this.leaderBlocks.setX(e, 90)
						}, i.createLeaderBlocks = function() {
							this.leaderBlocks = this.scene.add.group({
								classType: bp
							})
						}, t
					}(Phaser.GameObjects.Container),
					Tp = Ep,
					Ap = aa.Z.DEFAULT,
					Sp = Ap.KEY,
					_p = Ap.FRAME,
					Cp = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, Sp, _p.BUTTON_BLUE_LONG) || this).scene = t, i.button.setWorldSize(63, 58), i.createIcon(), i.setName("Home"), i
						}
						return (0, l.Z)(t, e), t.prototype.createIcon = function() {
							var e = this.scene.add.image(0, 0, Sp, _p.ICON_HOME);
							e.setWorldSize(31, 26), this.add(e), Phaser.Display.Align.In.Center(e, this.button, 0, -2)
						}, t
					}(ea.Z),
					wp = Cp,
					Bp = aa.Z.DEFAULT,
					Ip = Bp.KEY,
					Pp = Bp.FRAME,
					xp = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, Ip, Pp.BUTTON_BLUE_LONG) || this).scene = t, i.button.setWorldSize(63, 58), i.createIcon(), i.setName("Share"), i
						}
						return (0, l.Z)(t, e), t.prototype.createIcon = function() {
							var e = this.scene.add.image(0, 0, Ip, Pp.BLANK);
							e.setWorldSize(28.5, 27), this.add(e), Phaser.Display.Align.In.Center(e, this.button, 0, -2)
						}, t
					}(ea.Z),
					Op = xp,
					kp = aa.Z.DEFAULT,
					Rp = kp.KEY,
					Mp = kp.FRAME,
					Lp = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, Rp, Mp.BUTTON_GREEN) || this).scene = t, i.button.setWorldSize(134, 68), i.createIcon(), i.createText(), i.setName("Play"), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createIcon = function() {
							var e = this.scene.make.image({
								key: Rp,
								frame: Mp.BLANK
							});
							e.setWorldSize(26.5, 27), Phaser.Display.Align.In.LeftCenter(e, this.button, -15), this.add(e)
						}, i.createText = function() {
							var e = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(16),
								text: "Play With",
								origin: {
									x: 1,
									y: .5
								}
							});
							Phaser.Display.Align.In.RightCenter(e, this.button, -15), this.add(e)
						}, t
					}(ea.Z),
					Gp = Lp,
					Dp = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).homeButton = void 0, i.playButton = void 0, i.shareButton = void 0, i.scene = t, i.createButtons(), i.alignButtons(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.alignButtons = function() {
							Phaser.Display.Align.In.Center(this.homeButton, this, -110), Phaser.Display.Align.In.Center(this.playButton, this, 0), Phaser.Display.Align.In.Center(this.shareButton, this, 110)
						}, i.createButtons = function() {
							this.createHomeButton(), this.createPlayButton(), this.createShareButton()
						}, i.createHomeButton = function() {
							this.homeButton = new wp(this.scene), this.homeButton.setName("Home"), this.add(this.homeButton)
						}, i.createPlayButton = function() {
							this.playButton = new Gp(this.scene), this.homeButton.setName("PlayWithFriend"), this.add(this.playButton)
						}, i.createShareButton = function() {
							this.shareButton = new Op(this.scene), this.shareButton.setName("Share"), this.add(this.shareButton)
						}, t
					}(Phaser.GameObjects.Container),
					Fp = Dp,
					Np = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.entrancesAnimation = void 0, i.runAnimation = function() {
								i.entrancesAnimation.play()
							}, i.scene = t, i.createEntrancesAnimation(), i
						}
						return (0, l.Z)(t, e), t.prototype.createEntrancesAnimation = function() {
							this.entrancesAnimation = new op.Z({
								targets: [this],
								delay: 800,
								props: {
									y: "-=5",
									alpha: {
										start: 0,
										from: 0,
										to: 1
									}
								}
							})
						}, t
					}(Fp),
					Zp = Np,
					Up = {
						targets: [],
						yoyo: !0,
						duration: 120,
						ease: Phaser.Math.Easing.Circular.Out,
						props: {
							scale: {
								from: 1,
								to: 1.3
							}
						}
					},
					jp = function(e) {
						function t(t) {
							return e.call(this, Up, t) || this
						}
						return (0, l.Z)(t, e), t
					}(Kn.Z),
					Yp = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).dinoPulsateAnimation = void 0, n.removeBackground(), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.updateCongratsTitle = function() {
							this.updateCongratsBackground(), this.isDinoSad(!1)
						}, i.removeBackground = function() {
							this.background.kill()
						}, i.updateCongratsBackground = function() {
							this.background.revive(), this.background.setPosition(0, -10)
						}, i.runAnimations = function() {
							e.prototype.runAnimations.call(this), this.runDinoPulsateAnimation()
						}, i.runDinoPulsateAnimation = function() {
							this.dinoPulsateAnimation || (this.dinoPulsateAnimation = new Vn({
								targets: [this.dino, this.leaves],
								duration: 1400,
								repeatDelay: 200,
								props: {
									scale: "+=0.08"
								}
							})), this.dinoPulsateAnimation.play()
						}, t
					}(io),
					Wp = Yp,
					Kp = aa.Z.DEFAULT,
					Hp = Kp.KEY,
					zp = Kp.FRAME,
					Xp = GameCore.Configs.Gameplay,
					Vp = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.bestScore = void 0, i.payload = void 0, i.dino = void 0, i.yourScoreText = void 0, i.bestScoreText = void 0, i.currentScoreText = void 0, i.entrancesAnimation = void 0, i.scoreAnimation = void 0, i.counterAnimation = void 0, i.bestScoreIcon = void 0, i.scene = t, i.bestScore = 0, i.createDinoTitle(), i.createCurrentScore(), i.createBestScore(), i.createScoreAnimation(), i.createEntrancesAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.updateData = function(e) {
							this.payload = e;
							var t = e.bestScore;
							e.currentScore < t && (this.setBestScore(t), this.runScoreAnimation()), this.runAnimation()
						}, i.runAnimation = function() {
							var e = this,
								t = this.payload.currentScore;
							this.setCurrentScore(0), t > 0 ? (this.runScoreCounter(), this.scene.time.delayedCall(1300, (function() {
								e.entrancesAnimation.play()
							}))) : (this.setCurrentScore(t), this.entrancesAnimation.play())
						}, i.runScoreCounter = function() {
							var e, t = this,
								i = this.payload,
								n = i.bestScore,
								a = i.currentScore;
							null == (e = this.counterAnimation) || e.remove(), this.counterAnimation = this.scene.tweens.addCounter({
								from: 0,
								to: a,
								delay: 500,
								duration: 2e3,
								completeDelay: 300,
								onUpdate: function(e) {
									var i = Math.floor(e.getValue());
									t.runScoreAnimation(), t.setCurrentScore(i)
								},
								onComplete: function() {
									t.bestScore = n, t.setCurrentScore(a), (a > n || Xp.AlwayShowBestScore) && (t.bestScore = a, t.scene.screen.open(Wn.o4.BEST_SCORE_SCREEN, {
										bestScore: a
									}), t.updateCongratsTitle(), t.scene.runConfettiEffects()), t.setBestScore(t.bestScore)
								}
							})
						}, i.runScoreAnimation = function() {
							this.scoreAnimation.play()
						}, i.setBestScore = function(e) {
							this.bestScoreText.setText("" + e), Phaser.Display.Align.In.Center(this.bestScoreText, this.currentScoreText, 5, 50), Phaser.Display.Align.In.LeftCenter(this.bestScoreIcon, this.bestScoreText, 30)
						}, i.setCurrentScore = function(e) {
							this.currentScoreText.setText("" + e)
						}, i.createDinoTitle = function() {
							this.dino = new Wp(this.scene, {
								title: "Your Score!",
								titleSize: 25
							}), this.dino.isDinoSad(!0), this.dino.changeBackground(zp.BLANK, 278.5, 82), Phaser.Display.Align.In.TopCenter(this.dino, this, 0, 20), this.add(this.dino)
						}, i.updateCongratsTitle = function() {
							this.dino.updateCongratsTitle()
						}, i.createCurrentScore = function() {
							this.currentScoreText = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(43),
								origin: {
									x: .5,
									y: .5
								}
							}), this.currentScoreText.setTint(15779090), Phaser.Display.Align.In.Center(this.currentScoreText, this, 0, 110), this.add(this.currentScoreText)
						}, i.createBestScore = function() {
							this.createBestScoreText(), this.createBestScoreIcon(), this.setBestScore(this.bestScore)
						}, i.createBestScoreText = function() {
							this.bestScoreText = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(30),
								origin: {
									x: 0,
									y: .5
								}
							}), this.add(this.bestScoreText)
						}, i.createBestScoreIcon = function() {
							this.bestScoreIcon = this.scene.make.image({
								key: Hp,
								frame: zp.BLANK
							}), this.bestScoreIcon.setWorldSize(26, 24.5), this.add(this.bestScoreIcon)
						}, i.createEntrancesAnimation = function() {
							this.entrancesAnimation = new Vn({
								targets: [this],
								repeat: 0,
								duration: 200,
								props: {
									scale: "+=0.03"
								}
							})
						}, i.createScoreAnimation = function() {
							this.scoreAnimation = new jp({
								targets: [this.currentScoreText],
								props: {
									scale: {
										from: 1,
										to: 1.3
									}
								}
							})
						}, t
					}(Phaser.GameObjects.Container),
					Jp = Vp,
					qp = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.bestScoreBlock = void 0, i.scene = t, i.createBestScoreBlock(), i.scene.add.existing((0, Un.Z)(i)), i
						}
						return (0, l.Z)(t, e), t.prototype.createBestScoreBlock = function() {
							this.bestScoreBlock = new Jp(this.scene), this.add(this.bestScoreBlock)
						}, t
					}(Phaser.GameObjects.Container),
					Qp = qp,
					$p = i(45576),
					em = aa.Z.DEFAULT,
					tm = em.KEY,
					im = em.FRAME,
					nm = aa.Z.THEME,
					am = nm.KEY,
					sm = nm.FRAME,
					om = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).scoreText = void 0, s.shareButton = void 0, s.cupImage = void 0, s.bigStarExplosive = void 0, s.open = function(t) {
								e.prototype.open.call((0, Un.Z)(s), t);
								var i = s.getData("bestScore");
								s.setBestScore(i), s.runOpenAnimation(), s.scene.audio.playSound(sa.Z.CONGRATULATION)
							}, s.handleClose = function() {
								s.scene.screen.close(s.name)
							}, s.handleShareBestScore = function() {
								s.scene.storage.dispatch((0, Zl.uF)())
							}, s.runBigStarExplosive = function() {
								var e = s.cupImage,
									t = e.x,
									i = e.y;
								s.bigStarExplosive.setPosition(t, i), s.bigStarExplosive.run()
							}, s.setDepth(Wn.Ks.POPUP), s.background.setAlpha(.5), s.createObjects(), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createObjects = function() {
							this.createClose(), this.createBestScoreTitle(), this.createGlowEffect(), this.createCupImage(), this.createBestScoreNumber(), this.createShareButton(), this.createBigStarExplosive()
						}, i.setBestScore = function(e) {
							this.scoreText.setText("" + e)
						}, i.createClose = function() {
							var e = new ea.Z(this.scene, am, sm.BUTTON_CLOSE, 48.5, 43);
							e.setName("Close"), this.add(e), Phaser.Display.Align.In.TopRight(e, this.zone, -15, -15), e.onClick = this.handleClose
						}, i.createBestScoreTitle = function() {
							var e = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(50),
								text: "HIGH SCORE"
							});
							this.add(e), e.setTint(15911443), Phaser.Display.Align.In.TopCenter(e, this.zone, 0, -100)
						}, i.createBestScoreNumber = function() {
							this.scoreText = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(80),
								origin: {
									x: .5,
									y: .5
								}
							}), this.add(this.scoreText), this.scoreText.setTint(16777215), this.scoreText.letterSpacing = 5, Phaser.Display.Align.In.Center(this.scoreText, this.zone, 0, 60)
						}, i.createCupImage = function() {
							this.cupImage = this.scene.add.image(0, 0, tm, im.BLANK), this.cupImage.setWorldSize(100, 100), this.add(this.cupImage), Phaser.Display.Align.In.Center(this.cupImage, this.zone, 0, -80)
						}, i.createGlowEffect = function() {
							var e = aa.Z.EFFECTS,
								t = e.KEY,
								i = e.FRAME,
								n = this.scene.make.image({
									key: t,
									frame: i.FX_GLOW_LIGHT
								});
							n.setWorldSize(246, 246), this.add(n), this.moveDown(n), Phaser.Display.Align.In.Center(n, this, 0, -80), this.scene.tweens.add({
								targets: [n],
								duration: 6e3,
								repeat: -1,
								props: {
									angle: 360,
									scale: {
										value: "+=0.01",
										yoyo: !0,
										duration: 800,
										ease: Phaser.Math.Easing.Sine.InOut
									}
								}
							})
						}, i.createShareButton = function() {
							this.shareButton = new ea.Z(this.scene, tm, im.BUTTON_BLUE_LONG, 134, 68), this.shareButton.setName("Share");
							var e = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(25),
								text: "SHARE",
								origin: {
									x: .5,
									y: .5
								}
							});
							this.shareButton.add(e), this.add(this.shareButton), Phaser.Display.Align.In.Center(e, this.shareButton, 0, -2), Phaser.Display.Align.In.BottomCenter(this.shareButton, this.zone, 0, -130), this.shareButton.onClick = this.handleShareBestScore
						}, i.createBigStarExplosive = function() {
							this.bigStarExplosive = new $p.Z(this.scene), this.add(this.bigStarExplosive)
						}, i.runOpenAnimation = function() {
							this.runBigStarExplosive(), this.runScoreEntrancesAnimation(), this.runShareEntrancesAnimation()
						}, i.runScoreEntrancesAnimation = function() {
							this.scene.tweens.killTweensOf(this.scoreText), new cr.Z({
								targets: [this.scoreText],
								duration: 300,
								props: {
									y: {
										from: 0,
										to: this.scoreText.y
									}
								}
							}).play()
						}, i.runShareEntrancesAnimation = function() {
							this.scene.tweens.killTweensOf(this.shareButton), this.shareButton.setAlpha(0), new Jn.Z({
								targets: [this.shareButton],
								delay: 300
							}).play()
						}, t
					}(GameCore.Screen),
					rm = om,
					lm = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).bestScore = void 0, i.currentScore = void 0, i.leadersBar = void 0, i.footerBar = void 0, i.main = void 0, i.countdownText = void 0, i.confettiEffect = void 0, i.confettiLeftEffect = void 0, i.confettiRightEffect = void 0, i.run = function() {
								i.updateScore(), i.updateLeaders(), i.main.bestScoreBlock.counterAnimation && i.main.bestScoreBlock.counterAnimation.state !== Phaser.Tweens.REMOVED ? i.main.bestScoreBlock.counterAnimation.on(Phaser.Tweens.Events.TWEEN_COMPLETE, (function() {
									i.handleShowBestScorePopup()
								})) : i.time.delayedCall(800, (function() {
									i.handleShowBestScorePopup()
								})), i.footerBar.setAlpha(0), i.footerBar.runAnimation(), i.audio.pauseMusic(), i.audio.playSound(sa.Z.GAME_OVER_SCENE), i.time.delayedCall(3600, i.audio.playMusic, void 0, i.audio)
							}, i.runConfettiEffects = function() {
								var e = i.gameZone.displayWidth,
									t = e;
								i.confettiLeftEffect.stop(), i.confettiRightEffect.stop(), i.children.bringToTop(i.confettiLeftEffect), i.children.bringToTop(i.confettiRightEffect), i.children.bringToTop(i.confettiEffect), i.confettiEffect.run(0, 675, 380, 675), i.time.delayedCall(1e3, (function() {
									i.confettiLeftEffect.run(1, 0, -100), i.confettiRightEffect.run(1, 0 + t, -100), i.tweens.addCounter({
										delay: 1e4,
										from: 100,
										to: 0,
										ease: Phaser.Math.Easing.Cubic.Out,
										duration: 400,
										onUpdate: function(e) {
											var t, n, a = e.getValue() / 100;
											null == (t = i.confettiLeftEffect.emitter) || t.setAlpha(a), null == (n = i.confettiRightEffect.emitter) || n.setAlpha(a)
										},
										onComplete: function() {
											var e, t;
											null == (e = i.confettiLeftEffect.emitter) || e.setAlpha(1), null == (t = i.confettiRightEffect.emitter) || t.setAlpha(1), i.confettiLeftEffect.stop(), i.confettiRightEffect.stop()
										}
									})
								}))
							}, i.handlePlayWithFriend = (0, r.Z)(h().mark((function e() {
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											i.storage.dispatch((0, Ua.H)());
										case 1:
										case "end":
											return e.stop()
									}
								}), e)
							}))), i.handleShareYourScore = function() {
								i.audio.playSound(sa.Z.BUTTON), i.storage.dispatch((0, Zl.uF)())
							}, i.handleHomeClick = function() {
								i.audio.stopSound(sa.Z.GAME_OVER_SCENE), i.audio.playMusic(), i.scene.switch(In.C.DASHBOARD_SCENE)
							}, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.preload = function() {
							var e = this;
							this.events.on("resume", (function() {
								e.updateScore()
							})), this.events.on("sleep", (function() {
								e.storage.dispatch((0, ja.Tb)())
							})), this.events.on("wake", this.run), this.events.on("create", this.run)
						}, i.create = function() {
							e.prototype.create.call(this), this.createBackground(Yn.Z.OTHER_BACKGROUND.KEY);
							var t = this.player.getBestScore();
							this.bestScore = t, this.currentScore = 0, this.createMain(), this.createLeadersBar(), this.createFooterBar(), this.createBestScoreScreen(), this.createConfettiAnimations(), this.createClock()
						}, i.updateLeaders = function() {
							var e = this.storage.getState();
							this.leadersBar.killAndHideAll();
							var t = rt(e);
							this.updateLeaderBar(t)
						}, i.updateScore = function() {
							var e = this.storage.getState(),
								t = (0, Ya.Vb)(e),
								i = t.score,
								n = void 0 === i ? 0 : i,
								a = t.bestScore,
								s = void 0 === a ? 0 : a;
							this.bestScore = s < this.bestScore ? this.bestScore : s, this.currentScore = n, this.main.bestScoreBlock.updateData({
								bestScore: this.bestScore,
								currentScore: this.currentScore
							})
						}, i.createConfettiAnimations = function() {
							this.confettiLeftEffect = new ip.Z(this, {
								speedX: {
									min: -20,
									max: 100
								},
								rotate: {
									start: -1080,
									end: 0
								}
							}), this.confettiRightEffect = new ip.Z(this, {
								speedX: {
									min: 20,
									max: -100
								},
								rotate: {
									start: 0,
									end: 1080
								}
							}), this.confettiEffect = new np.Z(this), this.confettiEffect.setDepth(jn.Z.ON_TOP), this.confettiLeftEffect.setDepth(jn.Z.ON_TOP), this.confettiRightEffect.setDepth(jn.Z.ON_TOP)
						}, i.createMain = function() {
							this.bestScore = 0, this.main = new Qp(this), Phaser.Display.Align.In.TopCenter(this.main, this.gameZone, 0, -130)
						}, i.createLeadersBar = function() {
							this.leadersBar = new Tp(this), Phaser.Display.Align.In.Center(this.leadersBar, this.gameZone, 0, 70)
						}, i.processLeader = function(e, t) {
							var i = $d()(e).call(e, (function(e) {
								return e.playerId === t
							}));
							return i = $d()(e).call(e, (function(e) {
								return e.playerId === t
							})), e[0].playerId === t ? tp()(e).call(e, 0, 3) : t === e[e.length - 1].playerId ? tp()(e).call(e, -3) : tp()(e).call(e, i - 1, 3)
						}, i.updateLeaderBar = function() {
							var e = (0, r.Z)(h().mark((function e(t) {
								var i, n, a, s, o, r, l, c, u;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return n = this.player.getPlayer(), a = {
												playerId: n.playerId,
												leaders: []
											}, s = Zi()(t) || [], o = this.currentScore > this.bestScore ? this.currentScore : this.bestScore, r = {
												playerId: n.playerId,
												photo: n.photo,
												score: o,
												rank: 1,
												name: n.name
											}, l = _()(s).call(s, (function(e) {
												return e.playerId
											})), e.next = 8, (0, fo.tu)({
												playerIds: l,
												limit: l.length
											});
										case 8:
											(c = e.sent).push(r), u = ji()(i = _()(c).call(c, (function(e) {
												var t = e.playerId,
													i = e.score,
													n = A()(s).call(s, (function(e) {
														return e.playerId === t
													})),
													a = n[0] ? n[0] : e,
													o = a.photo,
													r = a.name;
												return {
													playerId: t,
													name: r,
													photo: o,
													score: i,
													rank: 1
												}
											}))).call(i, (function(e, t) {
												return t.score - e.score
											})), this.leadersBar.showLoading(!1), this.processLeader(u, n.playerId).forEach((function(e) {
												var t = e.playerId,
													i = e.photo,
													n = e.score,
													s = e.rank,
													o = e.name;
												a.leaders.push({
													playerId: t,
													photo: i,
													score: n,
													rank: s,
													name: o
												})
											})), this.leadersBar.updateInfo(a);
										case 15:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), i.createFooterBar = function() {
							this.footerBar = new Zp(this), Phaser.Display.Align.In.BottomCenter(this.footerBar, this.gameZone, 0, -60), this.footerBar.homeButton.onClick = this.handleHomeClick, this.footerBar.playButton.onClick = this.handlePlayWithFriend, this.footerBar.shareButton.onClick = this.handleShareYourScore
						}, i.createBestScoreScreen = function() {
							this.screen.add(Wn.o4.BEST_SCORE_SCREEN, rm)
						}, i.handleShowBestScorePopup = function() {
							var e;
							this.currentScore > this.bestScore && this.storage.dispatch((0, ap.eG)({
								bestScore: this.currentScore
							}));
							var t = this.storage.getState(),
								i = (0, sp.fQ)(t),
								n = Se()(e = [Wl.oN, Wl.kC]).call(e, i) >= 0;
							this.currentScore > this.bestScore && !n && this.main.bestScoreBlock.updateCongratsTitle()
						}, i.createClock = function() {
							var e = this;
							GameCore.Configs.GameOver.ShowClock && (this.countdownText = this.add.text(this.gameZone.width - 10, 10, "0", {
								fontSize: "13px",
								fontFamily: _a.Z.FONT_FAMILY,
								color: "#b4b9c4"
							}), this.countdownText.setOrigin(1, 0), this.countdownText.setHighQuality(), this.events.on("update", (function() {
								var t = new Date;
								e.countdownText.setText(t.toLocaleTimeString())
							})))
						}, t
					}(En.Z);
				var cm, hm = lm,
					um = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, _a.Z.PRIMARY.KEY) || this).setText("").setOrigin(.5).setFontSize(a.scene.fontSize(20)).setDepth(jn.Z.EFFECT), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setDefault = function() {
							this.setScale(0).setAlpha(1).setNormalFloating().revive()
						}, i.playAnimation = function() {
							var e = this,
								t = this.scene.tweens.timeline();
							return t.add({
								targets: this,
								scale: 1,
								duration: 73,
								delay: 0
							}), t.add({
								targets: this,
								alpha: 0,
								scale: .8,
								y: "-=10",
								duration: 400,
								onComplete: function() {
									e.setInactiveAndHide()
								}
							}), t.play(), this
						}, i.setBigFloating = function() {
							return this.setFontSize(this.scene.fontSize(24)), this
						}, i.setNormalFloating = function() {
							return this.setFontSize(this.scene.fontSize(20)), this
						}, i.setInactiveAndHide = function() {
							this.kill(), this.setPosition()
						}, t
					}(Phaser.GameObjects.BitmapText),
					dm = um,
					pm = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, {
								classType: dm,
								frame: [],
								maxSize: -1
							}) || this).init(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							var e, t, i = this;
							_()(e = ko()(t = Array(50)).call(t, null)).call(e, (function() {
								return i.get(0, 0)
							})).forEach((function(e) {
								e.kill()
							}))
						}, i.spawn = function(e, t, i) {
							var n = this.get(e, t);
							return n.setDefault(), n.setText("" + i), n
						}, i.despawn = function(e) {
							this.killAndHide(e)
						}, i.reset = function() {
							this.getChildren().forEach((function(e) {
								e.active && e.kill()
							}))
						}, i.getChildren = function() {
							return e.prototype.getChildren.call(this)
						}, t
					}(Phaser.GameObjects.Group),
					mm = pm,
					fm = i(14665),
					gm = aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES,
					vm = gm.KEY,
					ym = gm.FRAME,
					bm = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, vm, ym.GLOW_3) || this).emitter = void 0, i.createEmitters(), i.setDepth(jn.Z.EFFECT), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitters = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [ym.GLOW_3],
									scale: {
										start: .2 * e,
										end: 0
									},
									alpha: {
										start: 1,
										end: 0
									},
									lifespan: 700,
									tint: [15046173, 15781951],
									on: !1
								};
							this.emitter = this.createEmitter(t)
						}, i.runSparkle = function(e, t) {
							this.emitter.emitParticleAt(e, t)
						}, i.stop = function() {
							this.emitter.forEachAlive((function(e) {
								return e.resetPosition()
							}), this.emitter), this.emitter.killAll(), this.emitter.stop()
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager),
					Em = bm,
					Tm = Phaser.Utils.Objects.GetValue,
					Am = Phaser.Math.Vector2,
					Sm = Phaser.Math.DegToRad,
					_m = Phaser.Math.Angle.Between,
					Cm = Phaser.Math.Linear,
					wm = function() {
						function e(e, t) {
							this.gameObjects = void 0, this._t = void 0, this.pathVector = void 0, this.path = void 0, this.rotateToPath = void 0, this.rotationOffset = void 0, this.angleOffset = void 0, this.spacedPoints = void 0, this.pathFollowTween = void 0, this.setGameObjects(e || []), this._t = 0, this.pathVector = new Am, this.resetFromJSON(t || {})
						}
						var t = e.prototype;
						return t.resetFromJSON = function(e) {
							this.setPath(Tm(e, "path", void 0));
							var t = Tm(e, "rotateToPath", !1),
								i = Tm(e, "rotationOffset", void 0);
							void 0 === i && (i = Sm(Tm(e, "angleOffset", 0))), this.setRotateToPath(t, i), this.setSpacedPointsMode(Tm(e, "division", void 0));
							var n = Tm(e, "t", void 0);
							return void 0 !== n && this.setT(n), this
						}, t.toJSON = function() {
							return {
								path: this.path,
								t: this.t,
								rotateToPath: this.rotateToPath,
								rotationOffset: this.rotationOffset
							}
						}, t.setPath = function(e) {
							return this.path = e, this
						}, t.setGameObjects = function(e) {
							return this.gameObjects = e, this
						}, t.setT = function(e) {
							return this.t = e, this
						}, t.getPathLength = function() {
							return this.path.getLength()
						}, t.setRotateToPath = function(e, t) {
							return this.rotateToPath = e, this.rotationOffset = t, this
						}, t.setSpacedPointsMode = function(e) {
							return e ? (this.spacedPoints = this.path.getSpacedPoints(e), this.spacedPoints.push(this.path.getPoint(1))) : this.spacedPoints = void 0, this
						}, t.getPoints = function(e) {
							var t, i = this;
							return _()(t = this.gameObjects).call(t, (function(t, n) {
								return i.pathVector = new Phaser.Math.Vector2(t.x, t.y), i.getPoint(e, n)
							}))
						}, t.getPoint = function(e, t) {
							for (var i = t / this.gameObjects.length + e; i > 1;) i -= 1;
							if (void 0 === this.spacedPoints) {
								var n = new Am,
									a = this.path.getPoint(i, this.pathVector);
								return n.set(a.x, a.y), n
							}
							var s = this.spacedPoints.length,
								o = (this.spacedPoints.length - 1) * i,
								r = Math.floor(o),
								l = this.spacedPoints[r % s],
								c = this.spacedPoints[(r + 1) % s],
								h = o - r;
							return this.pathVector.x = Cm(l.x, c.x, h), this.pathVector.y = Cm(l.y, c.y, h), this.pathVector
						}, t.update = function() {
							var e = this;
							void 0 !== this.path && this.gameObjects.forEach((function(t, i) {
								var n = t.x,
									a = t.y;
								e.pathVector = e.getPoint(e._t, i);
								var s = e.pathVector.x,
									o = e.pathVector.y;
								n === s && a === o || (t.setPosition(s, o), e.rotateToPath && (t.rotation = _m(n, a, s, o) + e.rotationOffset))
							}))
						}, t.start = function(e, t) {
							if (void 0 === e && (e = 100), 0 !== this.gameObjects.length) {
								var i = this.gameObjects[0].scene,
									n = this.getPathLength() / e * 1e3;
								this.pathFollowTween = i.add.tween((0, o.Z)({
									targets: this,
									t: {
										start: 0,
										from: 0,
										to: 1
									},
									ease: Phaser.Math.Easing.Linear,
									duration: n,
									yoyo: !1
								}, t))
							}
						}, t.stop = function() {
							var e;
							null == (e = this.pathFollowTween) || e.stop()
						}, (0, V.Z)(e, [{
							key: "t",
							get: function() {
								return this._t
							},
							set: function(e) {
								this._t = e, this.update()
							}
						}]), e
					}(),
					Bm = wm,
					Im = aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES,
					Pm = aa.Z.THEME_GAMEPLAY,
					xm = Pm.KEY,
					Om = Pm.FRAME,
					km = 0,
					Rm = function(e) {
						function t(t, i) {
							var n, a = i.enable ? Om.BUTTON_NAVY : Om.BUTTON_GRAY;
							return (n = e.call(this, t, xm, a, 47, 42.5) || this).isFreeItem = !1, n.progressFillItem = 0, n.scene = void 0, n.payload = void 0, n.bulletItem = void 0, n.bgCount = void 0, n.textCount = void 0, n.bgOrange = void 0, n.ring = void 0, n.bgWhite = void 0, n.unlimited = void 0, n.ringFadeOutAnimation = void 0, n.bgWhiteFlickerAnimation = void 0, n.freeItemGottenCount = 0, n.freeItemSparkle = void 0, n.freeItemSparkleImage = void 0, n.lines = void 0, n.pathFollower = void 0, n.backgroundWidth = 47, n.backgroundHeight = 42.5, n.handleUseItem = function() {
								var e = n.getIsFreeItem();
								n.payload.limitCount <= 0 && !e ? n.scene.screen.open(Wn.o4.BUY_ITEM_SCREEN, {
									itemName: n.name
								}) : (n.scene.bulletItemManager.activeItem((0, Un.Z)(n)) && n.playSoundWhenUse(), e && n.scene.events.emit(fm.s.USE_FREE_ITEM, n.name))
							}, n.scene = t, n.payload = i, n.createBgOrange(), n.createBgWhite(), n.createBulletItem(), n.createBgCount(), n.createTextCount(), n.createRing(), n.createUnlimited(), n.createSparkle(), n.payload.enable || (n.bgCount.kill(), n.textCount.kill()), n.setDepth(jn.Z.UI - 1), n.scene.add.existing((0, Un.Z)(n)), n.onClick = n.handleUseItem, n.createSparkleImage(), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.playSoundWhenUse = function() {}, i.createBulletItem = function() {
							this.bulletItem = this.scene.make.image({
								key: Im.KEY,
								frame: this.payload.frameItem
							}), this.bulletItem.setWorldSize(this.payload.widthItem, this.payload.heightItem), this.add(this.bulletItem), Phaser.Display.Align.In.Center(this.bulletItem, this.button)
						}, i.createBgCount = function() {
							this.bgCount = this.scene.make.image({
								key: Im.KEY,
								frame: Im.FRAME.ICON_COUNT
							}), this.bgCount.setWorldSize(20.5, 21), this.add(this.bgCount), Phaser.Display.Align.In.BottomRight(this.bgCount, this.button, 9, 3)
						}, i.createTextCount = function() {
							this.textCount = ia.Z.addText(this.scene, {
								font: _a.Z.NUMBERS_SYMBOLS.KEY,
								size: this.scene.fontSize(12),
								origin: {
									x: .5,
									y: .5
								}
							});
							var e = this.payload.limitCount <= 0 ? "+" : "" + this.payload.limitCount;
							this.textCount.setText(e), this.add(this.textCount), Phaser.Display.Align.In.Center(this.textCount, this.bgCount, 0, -1)
						}, i.createBgOrange = function() {
							this.bgOrange = this.scene.make.image({
								key: xm,
								frame: Om.BUTTON_ORANGE
							}), this.bgOrange.setWorldSize(47, 42.5), this.add(this.bgOrange), this.bgOrange.setCrop(0, 94, 85, 0)
						}, i.createRing = function() {
							this.ring = this.scene.make.image({
								key: Im.KEY,
								frame: Im.FRAME.RING_EFFECT
							}), this.ring.setWorldSize(64, 64), this.ring.setScale(0), this.add(this.ring)
						}, i.createBgWhite = function() {
							this.bgWhite = this.scene.make.image({
								key: xm,
								frame: Om.BUTTON_BG
							}), this.bgWhite.setWorldSize(40.5, 35.5), this.bgWhite.setTint(15046173, 15046173, 15781951, 15781951), this.bgWhite.kill(), this.add(this.bgWhite)
						}, i.createUnlimited = function() {
							this.unlimited = this.scene.make.image({
								key: Im.KEY,
								frame: Im.FRAME.ICON_UNLIMITED
							}), this.unlimited.setWorldSize(12.8, 7.2), this.unlimited.kill(), Phaser.Display.Align.In.Center(this.unlimited, this.bgCount, 0, -1), this.add(this.unlimited)
						}, i.updateStatus = function(e) {
							if (this.payload.enable !== e) {
								this.payload.enable = e;
								var t = this.getBackgroundFrameByStatus(e);
								this.button.setFrame(t), this.bulletItem.revive(), this.updateFrame(e), this.setDisabled(!e), e ? (this.bgCount.revive(), this.textCount.revive()) : (this.bgCount.kill(), this.textCount.kill(), this.unlimited.kill())
							}
						}, i.updateTextCount = function() {
							var e = this.payload.limitCount <= 0 ? "+" : "" + this.payload.limitCount;
							this.textCount.setText(e)
						}, i.getBackgroundFrameByStatus = function(e) {
							return e ? Om.BUTTON_NAVY : Om.BUTTON_GRAY
						}, i.setLimitCount = function(e) {
							this.payload.limitCount = e < 0 || !e ? 0 : e, this.updateTextCount()
						}, i.getLimitCount = function() {
							return this.payload.limitCount
						}, i.decreateLimitCount = function() {
							this.payload.limitCount <= 0 || (this.payload.limitCount -= 1, this.updateTextCount())
						}, i.increateLimitCount = function() {
							this.payload.limitCount += 1, this.updateTextCount()
						}, i.updateFillProgress = function(e) {
							if (e >= 1) return this.progressFillItem = 1, this.isFreeItem = !0, this.textCount.kill(), this.bgCount.kill(), void this.bgOrange.setCrop(0, 0, 94, 85);
							this.progressFillItem = e, e >= .87 && (e = .87);
							var t = 85 * e,
								i = 85 - t;
							this.bgOrange.setCrop(0, i, 94, t)
						}, i.getIsFreeItem = function() {
							return this.isFreeItem || 1 === this.getLimitItemStatus()
						}, i.resetProgressFillItem = function() {
							this.payload.enable && 1 !== this.payload.limitUseItem && (this.progressFillItem = 0, this.isFreeItem = !1, this.textCount.revive(), this.bgCount.revive(), this.bgWhite.kill(), this.ring.setScale(0), this.hideFreeItemSparkle(), this.updateFillProgress(0))
						}, i.runBgWhiteFlickerAnimation = function(e, t) {
							void 0 === e && (e = 0), void 0 === t && (t = 600), this.bgWhite.revive(), this.bgWhiteFlickerAnimation || (this.bgWhiteFlickerAnimation = new qn.Z({
								targets: [this.bgWhite],
								delay: e,
								duration: t,
								repeat: -1,
								yoyo: !0,
								ease: Phaser.Math.Easing.Sine.Out
							})), this.bgWhiteFlickerAnimation.play()
						}, i.runRingFadeOutAnimation = function(e, t) {
							if (void 0 === e && (e = 0), void 0 === t && (t = 700), !this.ringFadeOutAnimation) {
								var i = 1 / this.scene.world.getPixelRatio();
								this.ringFadeOutAnimation = new qn.Z({
									targets: [this.ring],
									delay: e,
									duration: t,
									props: {
										scale: {
											start: 0,
											from: 0,
											to: 1.7 * i
										}
									}
								})
							}
							this.ringFadeOutAnimation.play()
						}, i.setLimitUseItem = function(e) {
							if (void 0 === e) return this.payload.limitUseItem = 0, this.updateStatus(!0), this.unlimited.kill(), this.hideFreeItemSparkle(), void this.resetProgressFillItem();
							switch (this.payload.limitUseItem = e, e) {
								case -1:
									this.resetProgressFillItem(), this.updateStatus(!1);
									break;
								case 0:
									this.resetProgressFillItem(), this.updateStatus(!0), this.unlimited.kill(), this.hideFreeItemSparkle();
									break;
								case 1:
									this.resetProgressFillItem(), this.updateStatus(!0), this.unlimited.revive(), this.isFreeItem = !0, this.textCount.kill(), this.showFreeItemSparkle()
							}
						}, i.getLimitItemStatus = function() {
							return this.payload.limitUseItem
						}, i.getStatus = function() {
							return this.payload.enable
						}, i.setDisabled = function(t) {
							(this.payload.enable || t) && (e.prototype.setDisabled.call(this, t), this.setAlpha(1))
						}, i.updateFrame = function(e) {}, i.logGetFreeItem = function() {
							this.freeItemGottenCount += 1;
							var e = this.scene.level.getLevel();
							this.scene.analytics.event(Xt._.GET_FREE_ITEM, {
								item_name: this.name,
								level: e
							})
						}, i.resetFreeItemGottenCount = function() {
							this.freeItemGottenCount = 0
						}, i.getFreeItemGottenCount = function() {
							return this.freeItemGottenCount
						}, i.createSparkle = function() {
							var e = 1.5;
							this.lines = [{
								x: this.backgroundWidth / 2 - 5,
								y: -this.backgroundHeight / 2 + e
							}, {
								x: this.backgroundWidth / 2 - e,
								y: -this.backgroundHeight / 2 + 5
							}, {
								x: this.backgroundWidth / 2 - e,
								y: this.backgroundHeight / 2 - 5
							}, {
								x: this.backgroundWidth / 2 - 5,
								y: this.backgroundHeight / 2 - e
							}, {
								x: -this.backgroundWidth / 2 + 5,
								y: this.backgroundHeight / 2 - e
							}, {
								x: -this.backgroundWidth / 2 + e,
								y: this.backgroundHeight / 2 - 5
							}, {
								x: -this.backgroundWidth / 2 + e,
								y: -this.backgroundHeight / 2 + 5
							}, {
								x: -this.backgroundWidth / 2 + 5,
								y: -this.backgroundHeight / 2 + e
							}, {
								x: this.backgroundWidth / 2 - 5,
								y: -this.backgroundHeight / 2 + e
							}]
						}, i.createSparkleImage = function() {
							var e = 1 / this.scene.world.getPixelRatio();
							this.freeItemSparkleImage = this.scene.make.image({
								key: Im.KEY,
								frame: Im.FRAME.GLOW_3
							}), this.freeItemSparkleImage.setScale(.2 * e), this.freeItemSparkleImage.setTint(15046173, 15046173, 15781951, 15781951), this.freeItemSparkle = new Em(this.scene), this.add([this.freeItemSparkleImage, this.freeItemSparkle]), this.moveBelow(this.freeItemSparkleImage, this.bgCount), this.moveBelow(this.freeItemSparkle, this.bgCount)
						}, i.startPathFollower = function() {
							var e = this;
							this.pathFollower = new Bm;
							for (var t = new Phaser.Curves.Path(this.lines[0].x, this.lines[0].y), i = 1; i < this.lines.length; i++) t.lineTo(this.lines[i].x, this.lines[i].y);
							this.pathFollower.setGameObjects([this.freeItemSparkleImage]), this.pathFollower.setPath(t);
							var n = this.scene.time.now;
							this.pathFollower.start(100, {
								repeat: -1,
								onUpdate: function() {
									var t = e.scene.time.now;
									if (!(t - n < 14)) {
										n = t;
										var i = e.pathFollower.t,
											a = i + .5,
											s = e.pathFollower.getPoint(i, 0),
											o = e.pathFollower.getPoint(a, 0);
										e.freeItemSparkleImage.visible && (e.runFreeItemSparkle(s.x, s.y), e.runFreeItemSparkle(o.x, o.y))
									}
								}
							})
						}, i.runFreeItemSparkle = function(e, t) {
							this.freeItemSparkle.runSparkle(e, t)
						}, i.pauseFreeItemSparkle = function() {
							this.freeItemSparkle.pause()
						}, i.resumeFreeItemSparkle = function() {
							this.freeItemSparkle.resume()
						}, i.hideFreeItemSparkle = function() {
							this.freeItemSparkleImage.setVisible(!1), this.freeItemSparkle.stop()
						}, i.showFreeItemSparkle = function() {
							this.freeItemSparkleImage.setVisible(!0)
						}, i.runReachedProgressAnimation = function() {
							this.getIsFreeItem() && (this.showFreeItemSparkle(), this.runRingFadeOutAnimation(), this.runBgWhiteFlickerAnimation(), this.scene.events.emit(fm.s.GET_FREE_ITEM, this.name))
						}, t
					}(ea.Z),
					Mm = Rm,
					Lm = "BombBulletItem",
					Gm = "ElectricBulletBallItem",
					Dm = "RainbowBulletBallItem",
					Fm = "RocketBulletItem",
					Nm = aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES,
					Zm = Nm.KEY,
					Um = Nm.FRAME,
					jm = GameCore.Configs.FillBulletItem,
					Ym = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, {
								enable: !0,
								frameItem: Um.BULLET_ITEM_BOMB,
								widthItem: 34.5,
								heightItem: 35.5,
								limitCount: 0,
								limitUseItem: 0
							}) || this).scene = void 0, i.bombCombo = 0, i.scene = t, i.setName(Lm), i.bulletItem.setTexture(Zm, Um.BULLET_ITEM_BOMB), i.bulletItem.setWorldSize(34.5, 35.5), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.updateFrame = function(e) {
							e ? this.bulletItem.setFrame(Um.BULLET_ITEM_BOMB) : this.bulletItem.setFrame(Um.BULLET_ITEM_BOMB_DISABLED)
						}, i.updateFillItemBomb = function(e) {
							if (!(this.progressFillItem >= 1 || 0 === e)) {
								this.increaseBombCombo(), this.bombCombo == jm.DropObject && this.scene.runBombItemFadeInAnimation();
								var t = this.progressFillItem + e / jm.DropObject;
								1 == Math.floor(t) && (this.scene.vibrateController.handleBombCreated(), this.logGetFreeItem()), this.updateFillProgress(t)
							}
						}, i.increaseBombCombo = function() {
							this.bombCombo += 1
						}, i.resetBombCombo = function() {
							this.bombCombo = 0
						}, i.resetProgressFillItem = function() {
							e.prototype.resetProgressFillItem.call(this), this.resetBombCombo()
						}, i.playSoundWhenUse = function() {
							this.scene.audio.playSound(sa.Z.LEAVES_EXPLODE)
						}, t
					}(Mm),
					Wm = Ym,
					Km = aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES.FRAME,
					Hm = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, {
								enable: !0,
								frameItem: Km.BULLET_ITEM_LIGHTNING,
								widthItem: 31,
								heightItem: 31.5,
								limitCount: 0,
								limitUseItem: 0
							}) || this).scene = void 0, i.scene = t, i.setName(Gm), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.updateFrame = function(e) {
							e ? this.bulletItem.setFrame(Km.BULLET_ITEM_LIGHTNING) : this.bulletItem.setFrame(Km.BULLET_ITEM_LIGHTNING_DISABLED)
						}, i.playSoundWhenUse = function() {
							this.scene.audio.playSound(sa.Z.ELECTRIC_EXPLODE)
						}, t
					}(Mm),
					zm = Hm,
					Xm = aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES.FRAME,
					Vm = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, {
								enable: !0,
								frameItem: Xm.BULLET_ITEM_RAINBOW,
								widthItem: 31,
								heightItem: 31.5,
								limitCount: 0,
								limitUseItem: 0
							}) || this).scene = void 0, i.scene = t, i.setName(Dm), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.updateFrame = function(e) {
							e ? this.bulletItem.setFrame(Xm.BULLET_ITEM_RAINBOW) : this.bulletItem.setFrame(Xm.BULLET_ITEM_RAINBOW_DISABLED)
						}, i.playSoundWhenUse = function() {
							this.scene.audio.playSound(sa.Z.RAINBOW_ITEM_EXPLODE)
						}, t
					}(Mm),
					Jm = Vm,
					qm = aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES.FRAME,
					Qm = GameCore.Configs.FillBulletItem,
					$m = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, {
								enable: !0,
								frameItem: qm.BULLET_ITEM_ROCKET,
								widthItem: 31,
								heightItem: 32.5,
								limitCount: 0,
								limitUseItem: 0
							}) || this).scene = void 0, i.rocketCombo = void 0, i.scene = t, i.setName(Fm), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.updateFrame = function(e) {
							e ? this.bulletItem.setFrame(qm.BULLET_ITEM_ROCKET) : this.bulletItem.setFrame(qm.BULLET_ITEM_ROCKET_DISABLED)
						}, i.updateFillItemRocket = function() {
							if (!(this.progressFillItem >= 1)) {
								this.rocketCombo == Qm.Combo && this.scene.runRocketItemFadeInAnimation();
								var e = this.rocketCombo / Qm.Combo;
								1 == Math.floor(e) && (this.scene.vibrateController.handleBombCreated(), this.logGetFreeItem()), this.updateFillProgress(e)
							}
						}, i.increaseRocketCombo = function() {
							0 === this.payload.limitUseItem && (this.rocketCombo += 1)
						}, i.resetRocketCombo = function() {
							this.rocketCombo = 0
						}, i.getRocketCombo = function() {
							return this.rocketCombo
						}, i.resetProgressFillItem = function() {
							e.prototype.resetProgressFillItem.call(this), this.resetRocketCombo()
						}, i.playSoundWhenUse = function() {
							this.scene.audio.playSound(sa.Z.LEAVES_EXPLODE)
						}, t
					}(Mm),
					ef = $m;
				! function(e) {
					e[e.LOADING = 0] = "LOADING", e[e.SWAPPING = 1] = "SWAPPING", e[e.READY = 2] = "READY", e[e.SHOOTING = 3] = "SHOOTING"
				}(cm || (cm = {}));
				var tf, nf = cm,
					af = aa.Z.DEFAULT,
					sf = af.KEY,
					of = af.FRAME,
					rf = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, sf, of.BUTTON_GREEN, 153.5, 58.5) || this).setName("Cancel"), i
						}
						return (0, l.Z)(t, e), t.prototype.setDisabled = function(e) {
							var t, i;
							e ? null == (t = this.hitArea) || t.disableInteractive() : null == (i = this.hitArea) || i.setInteractive()
						}, t
					}(ea.Z),
					lf = rf,
					cf = aa.Z.THEME_GAMEPLAY,
					hf = cf.KEY,
					uf = cf.FRAME,
					df = function(e) {
						function t(t, i, n) {
							var a;
							return void 0 === i && (i = 30.5), void 0 === n && (n = 32), (a = e.call(this, t, hf, uf.BUTTON_RED_CIRCLE, i, n) || this).setName("Pause"), a
						}
						return (0, l.Z)(t, e), t.prototype.setDisabled = function(e) {
							var t, i;
							e ? null == (t = this.hitArea) || t.disableInteractive() : null == (i = this.hitArea) || i.setInteractive()
						}, t
					}(ea.Z),
					pf = df,
					mf = aa.Z.THEME_GAMEPLAY,
					ff = mf.KEY,
					gf = mf.FRAME,
					vf = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, 0, 0) || this).scene = void 0, i.bulletItemContainer = void 0, i.pauseButton = void 0, i.cancelButton = void 0, i.bombBulletItem = void 0, i.rainbowBulletItem = void 0, i.electricBulletBallItem = void 0, i.rocketBulletItem = void 0, i.itemObjects = void 0, i.addLimitCountButton = void 0, i.rocketComboText = void 0, i.baseRocketComboTextY = void 0, i.rocketComboTextTween = void 0, i.fadeOutAnimation = void 0, i.scene = t, i.setName("footer"), i.createButtonPause(), i.createAddLimitCountButton(), i.createBulletItem(), i.createCancelButton(), i.createListItemContainer(), i.createRocketComboText(), i.setDepth(jn.Z.UI), t.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createAddLimitCountButton = function() {
							var e = this;
							GameCore.Utils.Valid.isDebugger() && (this.addLimitCountButton = new pf(this.scene, 19, 20), this.add(this.addLimitCountButton), Phaser.Display.Align.In.Center(this.addLimitCountButton, this.pauseButton, 0, -30), this.addLimitCountButton.onClick = function() {
								var t;
								e.scene.player.updateCustomFields({
									bullets: (t = {}, t.BombBulletItem = 10, t.RainbowBulletBallItem = 10, t.ElectricBulletBallItem = 10, t.RocketBulletItem = 10, t)
								})
							})
						}, i.createListItemContainer = function() {
							this.itemObjects = this.scene.make.group({}), this.itemObjects.addMultiple([this.bombBulletItem, this.electricBulletBallItem, this.rocketBulletItem, this.rainbowBulletItem])
						}, i.createButtonPause = function() {
							this.pauseButton = new pf(this.scene);
							var e = this.scene.make.image({
								key: ff,
								frame: gf.ICON_PAUSE
							});
							e.setWorldSize(12.5, 14), this.pauseButton.add(e), this.add(this.pauseButton), Phaser.Display.Align.In.Center(this.pauseButton, this, -140)
						}, i.createBulletItem = function() {
							this.bulletItemContainer = this.scene.add.container(), this.bombBulletItem = new Wm(this.scene), this.rainbowBulletItem = new Jm(this.scene), this.electricBulletBallItem = new zm(this.scene), this.rocketBulletItem = new ef(this.scene), this.bulletItemContainer.add([this.bombBulletItem, this.rainbowBulletItem, this.electricBulletBallItem, this.rocketBulletItem]), this.add(this.bulletItemContainer);
							Phaser.Display.Align.In.Center(this.bombBulletItem, this.bulletItemContainer, -30), Phaser.Display.Align.In.Center(this.rainbowBulletItem, this.bulletItemContainer, 30), Phaser.Display.Align.In.Center(this.electricBulletBallItem, this.bulletItemContainer, 90), Phaser.Display.Align.In.Center(this.rocketBulletItem, this.bulletItemContainer, 150)
						}, i.createCancelButton = function() {
							var e = this;
							this.cancelButton = new lf(this.scene), this.add(this.cancelButton);
							var t = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(24),
								origin: {
									x: .5,
									y: .5
								}
							});
							t.setText(this.scene.lang.getText("cancel")), this.cancelButton.add(t), this.cancelButton.setScale(.85 * this.cancelButton.scale), this.add(this.cancelButton), Phaser.Display.Align.In.Center(this.cancelButton, this, 0, -3.5), Phaser.Display.Align.In.Center(t, this.cancelButton.button, 0, -3), this.cancelButton.kill(), this.cancelButton.onClick = function() {
								var t = e.scene,
									i = t.bulletItemManager;
								t.gameManager.shooter.getShooterState() === nf.READY && i.deActiveItem()
							}
						}, i.createRocketComboText = function() {
							this.rocketComboText = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(18),
								text: this.scene.lang.getText({
									key: "combo_x_{X}",
									variables: [1]
								}),
								origin: {
									x: .5,
									y: .5
								}
							}), this.rocketComboText.setAlpha(0), this.add(this.rocketComboText), this.moveBelow(this.rocketComboText, this.bulletItemContainer), Phaser.Display.Align.To.TopCenter(this.rocketComboText, this.rocketBulletItem, 0, -20), this.rocketComboText.kill(), this.baseRocketComboTextY = this.rocketComboText.y
						}, i.runComboTextAnimation = function() {
							var e, t = this;
							null == (e = this.rocketComboTextTween) || e.remove(), this.rocketComboText.revive(), this.rocketComboText.y = this.baseRocketComboTextY, this.rocketComboText.setAlpha(0), this.rocketComboText.setText("" + this.scene.lang.getText({
								key: "combo_x_{X}",
								variables: [this.rocketBulletItem.getRocketCombo()]
							})), this.rocketComboTextTween = this.scene.tweens.add({
								targets: this.rocketComboText,
								duration: 300,
								ease: Phaser.Math.Easing.Sine.In,
								yoyo: !0,
								hold: 500,
								props: {
									alpha: {
										from: 0,
										to: 1
									},
									y: "-=40"
								},
								onComplete: function() {
									t.rocketComboText.kill()
								}
							})
						}, i.updateRocketCombo = function() {
							this.rocketBulletItem.updateFillItemRocket(), this.rocketBulletItem.getRocketCombo() > 1 && this.runComboTextAnimation()
						}, i.destroyOldObjects = function() {
							this.rocketComboText.kill()
						}, i.setDisabled = function(e, t) {
							void 0 === t && (t = !1), t || this.scene.bulletItemManager.setDisabledItems(e), this.pauseButton.setDisabled(e), this.cancelButton.setDisabled(e)
						}, i.startFreeItemSparkle = function() {
							this.bombBulletItem.startPathFollower(), this.rainbowBulletItem.startPathFollower(), this.electricBulletBallItem.startPathFollower(), this.rocketBulletItem.startPathFollower()
						}, i.pauseFreeItemSparkle = function() {
							this.bombBulletItem.pauseFreeItemSparkle(), this.rainbowBulletItem.pauseFreeItemSparkle(), this.electricBulletBallItem.pauseFreeItemSparkle(), this.rocketBulletItem.pauseFreeItemSparkle()
						}, i.resumeFreeItemSparkle = function() {
							this.bombBulletItem.resumeFreeItemSparkle(), this.rainbowBulletItem.resumeFreeItemSparkle(), this.electricBulletBallItem.resumeFreeItemSparkle(), this.rocketBulletItem.resumeFreeItemSparkle()
						}, i.hideFreeItemSparkle = function() {
							this.bombBulletItem.hideFreeItemSparkle(), this.rainbowBulletItem.hideFreeItemSparkle(), this.electricBulletBallItem.hideFreeItemSparkle(), this.rocketBulletItem.hideFreeItemSparkle()
						}, i.runFadeOutAnimation = function() {
							var e;
							this.fadeOutAnimation || (this.fadeOutAnimation = new qn.Z({
								targets: [this],
								duration: 200
							})), null == (e = this.fadeOutAnimation) || e.play()
						}, t
					}(Phaser.GameObjects.Container),
					yf = vf;
				! function(e) {
					e.INITIALIZED = "initialized", e.SHOOT_BALL = "shoot-ball", e.GAME_OVER = "game-over", e.TIMER_CREATED = "timer-created", e.SCORE_CHANGED = "scoreChanged"
				}(tf || (tf = {}));
				var bf, Ef = tf,
					Tf = function() {
						function e(e) {
							this.scene = void 0, this.scene = e, this.initGlobalData()
						}
						var t = e.prototype;
						return t.initGlobalData = function() {
							var e = this.scene.registry,
								t = this.scene.data,
								i = this.scene.gameZone.height,
								n = (i - 160 - 80) / 380;
							e.set("level", 0), e.set("levelUpSetting", {
								levelUpMethodByTime: !0,
								timeInterval: 6e4,
								shotsCount: 40,
								speed: -.075,
								levelUpSpeedRate: 1.15,
								duration: 2e4
							}), e.set("bullet", {
								speed: 1800
							}), e.set("zones", {
								speed: {
									fast: 15.2,
									medium: 10.2,
									slow: 5.6,
									stand: 0
								},
								zones: {
									zone1: {
										topY: 80,
										bottomY: 150 * n
									},
									zone2: {
										topY: 150 * n,
										bottomY: 230 * n
									},
									zone3: {
										topY: 230 * n,
										bottomY: 330 * n
									},
									zone4: {
										topY: 330 * n,
										bottomY: 410 * n
									},
									zone5: {
										topY: i - 210,
										bottomY: i
									}
								}
							}), e.set("bombForce", {
								distance: 100,
								duration: 300
							}), e.set("dangerTimer", 8e3), e.set("timerForNextRandomHeavingBall", 7e3), e.set("heavingBallTimer", 1e4), e.set("stampTimer", 2e4), e.set("maxCombos", 9), e.set("rescueCoins", 1e3), e.set("gameData", {
								baseScore: 10,
								levelScores: [10, 20, 30, 50, 80, 130, 210],
								score: 0,
								combosCount: 0,
								multiplier: 1
							}), e.set("bonusRate", [25, 20, 15, 20, 15, 10, 15]), t.set("ball", {
								width: 34,
								height: 34
							}), t.set("bomb", {
								width: 35,
								height: 37
							}), t.set("grid", {
								width: 34,
								height: 34,
								rowSize: 11
							});
							var a = this.scene.world.getPixelRatio();
							t.set("physicsWorld", {
								bound: 8,
								worldBoundWidth: 375,
								bulletCollisionRadius: 17 * a,
								gridBallCollisionRadius: 17 * a
							}), t.set("numEggDestroyedToEmitParticle", 15), t.set("shootingAngle", 5)
						}, t.resetData = function() {
							var e = this.scene.registry;
							e.get("gameData").score = 0, e.get("gameData").combosCount = 0, e.get("gameData").multiplier = 1, e.set("level", 1), this.scene.events.emit(Ef.SCORE_CHANGED)
						}, e
					}(),
					Af = Tf,
					Sf = {
						STATUS: {
							READY: "ready",
							RUNNING: "running",
							STOPPED: "stopped"
						}
					},
					_f = Sf.STATUS,
					Cf = function() {
						function e(e) {
							this.state = void 0, this.scene = void 0, this.scene = e
						}
						var t = e.prototype;
						return t.init = function() {
							this.setState(_f.READY)
						}, t.start = function() {
							this.isRunning() || this.setState(_f.RUNNING)
						}, t.stop = function() {
							this.isRunning() && this.setState(_f.STOPPED)
						}, t.setState = function(e) {
							this.state = e
						}, t.isReady = function() {
							return this.state === _f.READY
						}, t.isRunning = function() {
							return this.state === _f.RUNNING
						}, t.isStopped = function() {
							return this.state === _f.STOPPED
						}, e
					}(),
					wf = Cf,
					Bf = i(19208),
					If = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).name = "LeaderboardNotFound", n.message = t || "Leaderboard not found", n.payload = i, n
						}
						return (0, l.Z)(t, e), t
					}((0, P.Z)(Error)),
					Pf = GameCore.Configs,
					xf = Pf.AppId,
					Of = Pf.OtherHost,
					kf = Pf.LeadersBoard,
					Rf = function() {
						var e = (0, r.Z)(h().mark((function e(t) {
							var i, n;
							return h().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										if (i = {
												appId: xf,
												resetScore: 0,
												numberOfLeaders: 15,
												timezone: "utc+0",
												sortOrder: "desc",
												statistics: "max",
												resettable: "manually",
												description: "no description"
											}, !kf.UseMock) {
											e.next = 5;
											break
										}
										return e.next = 4, (0, xo.qZ)(1e3);
									case 4:
										return e.abrupt("return", (0, o.Z)({}, i, t, {
											_id: kf.LeaderboardId,
											type: "app_leaderboard",
											description: "mockup_leaderboard",
											createdAt: new Date(Date.now()).toISOString(),
											updatedAt: new Date(Date.now()).toISOString()
										}));
									case 5:
										return "leaderboards", e.next = 8, (0, _e.v)("leaderboards", (0, o.Z)({}, i, t), {}, Of);
									case 8:
										return n = e.sent, e.abrupt("return", (null == n ? void 0 : n.data) || {});
									case 10:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}(),
					Mf = function() {
						var e = (0, r.Z)(h().mark((function e(t, i) {
							var n, a, s, o, r, l, c, u, d, p, m, f;
							return h().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										if (void 0 === i && (i = {}), n = [], !kf.UseMock) {
											e.next = 7;
											break
										}
										return e.next = 5, (0, xo.qZ)(1e3);
									case 5:
										return r = (o = i).limit, l = void 0 === r ? 10 : r, c = o.offset, u = void 0 === c ? 0 : c, e.abrupt("return", _()(a = ko()(s = new Array(l)).call(s, null)).call(a, (function(e, t) {
											var i = (t + 1) * (u + 1);
											return {
												playerId: "player-0" + i,
												name: "MPlayer " + i,
												photo: "./assets/images/others/avatar.jpg",
												rank: i,
												score: Math.floor(1e5 / i + 1e4 * Math.random())
											}
										})));
									case 7:
										return d = GameCore.Utils.String.params(i), p = "leaderboards/" + t + "/leaders", e.next = 11, (0, _e.U)(p + "?" + d, {}, Of);
									case 11:
										if ((m = e.sent) && (null == m || !m.error)) {
											e.next = 14;
											break
										}
										throw new If;
									case 14:
										if (!((f = (null == m ? void 0 : m.data) || []).length < 1)) {
											e.next = 17;
											break
										}
										return e.abrupt("return", n);
									case 17:
										return n = f, e.abrupt("return", n);
									case 19:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t, i) {
							return e.apply(this, arguments)
						}
					}(),
					Lf = function() {
						var e = (0, r.Z)(h().mark((function e(t, i, n) {
							var a;
							return h().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return e.next = 2, (0, _e.v)("leaderboards/" + t + "/players/" + i, {
											score: n
										}, {}, Of);
									case 2:
										return a = e.sent, e.abrupt("return", (null == a ? void 0 : a.data) || {});
									case 4:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t, i, n) {
							return e.apply(this, arguments)
						}
					}(),
					Gf = Sf.STATUS,
					Df = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.gameMode = void 0, i.runLeaderUpdate = function() {
								i.scene.header.leaders.run()
							}, i.updateLeaderScores = function() {
								var e = i.scene,
									t = e.header,
									n = e.scoreCounter.getScore();
								t.leaders.updatePlayer(n)
							}, i.updatePlayerScore = function() {
								var e = i.scene.header.challengeBlock,
									t = i.scene.registry.get("gameData").score;
								e.leftPlayer.setScore(t)
							}, i.scene = t, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this)
						}, i.start = function() {
							if (!this.isRunning()) {
								switch (this.scene.handleGameModeChange(), this.gameMode) {
									case Wl.oN:
										this.startSingleMode();
										break;
									case Wl.RK:
										this.startOnlineMode();
										break;
									case Wl.kC:
										this.startTournamentMode();
										break;
									case Wl.jt:
										this.startChallengeMode();
										break;
									default:
										this.stopOnlineMode(), this.stopChallengeMode(), this.stopTournamentMode()
								}
								this.setState(Gf.RUNNING)
							}
						}, i.stop = function() {
							switch (this.gameMode) {
								case Wl.oN:
									this.stopSingleMode();
									break;
								case Wl.RK:
									this.stopOnlineMode();
									break;
								case Wl.kC:
									this.stopTournamentMode();
									break;
								case Wl.jt:
									this.stopChallengeMode()
							}
							this.setState(Gf.STOPPED)
						}, i.setGameMode = function(e) {
							this.isRunning() || (this.gameMode = e)
						}, i.startSingleMode = function() {}, i.stopSingleMode = function() {}, i.startOnlineMode = function() {
							var e = this.scene.header.leaders;
							e.revive(), e.reset(), this.scene.events.once(Ef.SHOOT_BALL, this.runLeaderUpdate), this.scene.events.once(Ef.GAME_OVER, this.runLeaderUpdate), this.scene.events.on(Ef.SHOOT_BALL, this.updateLeaderScores)
						}, i.stopOnlineMode = function() {
							var e = this.scene.header.leaders;
							e.kill(), e.reset(), this.scene.events.off(Ef.SHOOT_BALL, this.runLeaderUpdate), this.scene.events.off(Ef.GAME_OVER, this.runLeaderUpdate), this.scene.events.off(Ef.SHOOT_BALL, this.updateLeaderScores)
						}, i.startTournamentMode = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, i, n, s, o, r, l, c, u, d;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return t = this.scene.header.tournamentPlayers, e.prev = 1, t.kill(), e.next = 5, this.scene.facebook.getTournamentAsync();
										case 5:
											if (n = e.sent) {
												e.next = 8;
												break
											}
											return e.abrupt("return");
										case 8:
											if (s = n.getPayload()) {
												e.next = 11;
												break
											}
											return e.abrupt("return");
										case 11:
											if ((o = JSON.parse(s)).leaderboardId) {
												e.next = 14;
												break
											}
											return e.abrupt("return");
										case 14:
											return e.next = 16, Mf(o.leaderboardId, {
												limit: 5
											});
										case 16:
											if (!((r = e.sent).length < 1)) {
												e.next = 19;
												break
											}
											return e.abrupt("return");
										case 19:
											return l = _()(r).call(r, (function(e) {
												return e.playerId
											})), e.next = 22, this.scene.profile.requestProfiles(l);
										case 22:
											if (c = this.scene.profile.getProfiles(), u = _()(r).call(r, (function(e) {
													var t = e.playerId,
														i = e.score,
														n = e.rank,
														a = c[t];
													if (!a) return null;
													var s = a.name;
													return {
														playerId: t,
														photo: a.photo,
														score: i,
														rank: n,
														name: s
													}
												})), !((d = ji()(i = A()(u).call(u, (function(e) {
													return null !== e
												}))).call(i, (function(e, t) {
													return t.score - e.score
												}))).length < 1)) {
												e.next = 27;
												break
											}
											return e.abrupt("return");
										case 27:
											t.revive(), t.updateData(d), e.next = 36;
											break;
										case 31:
											if (e.prev = 31, e.t0 = e.catch(1), !(e.t0 instanceof If)) {
												e.next = 35;
												break
											}
											return e.abrupt("return");
										case 35:
											(0, a.tO)(e.t0);
										case 36:
										case "end":
											return e.stop()
									}
								}), e, this, [
									[1, 31]
								])
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.stopTournamentMode = function() {
							this.scene.header.tournamentPlayers.kill()
						}, i.startChallengeMode = function() {
							var e = this.scene.header.challengeBlock;
							e.revive();
							var t = this.scene.storage.getState(),
								i = this.scene.player.getPlayer(),
								n = i.playerId,
								a = i.photo;
							e.leftPlayer.loadPhoto(n, a);
							var s = (0, Bf.oN)(t),
								o = s.playerId,
								r = s.photo;
							e.rightPlayer.loadPhoto(o, r);
							var l = (0, Bf.iq)(t),
								c = l.whitePlayerId,
								h = l.whitePlayerScore,
								u = l.blackPlayerScore,
								d = n === c;
							e.leftPlayer.setScore(d ? h : u), e.rightPlayer.setScore(d ? u : h), this.scene.events.on(Ef.SCORE_CHANGED, this.updatePlayerScore)
						}, i.stopChallengeMode = function() {
							this.scene.header.challengeBlock.kill(), this.scene.events.off(Ef.SCORE_CHANGED, this.updatePlayerScore)
						}, t
					}(wf),
					Ff = Df,
					Nf = function() {
						function e(e) {
							this.allowVibration = void 0, this.initAllowVibrate(e)
						}
						var t = e.prototype;
						return t.setAllowVibrate = function(e) {
							this.allowVibration = e
						}, t.initAllowVibrate = function(e) {
							var t = e.player.getPlayerSettings().vibrate;
							this.allowVibration = t
						}, t.handleCombosIncreased = function(e) {
							if (this.allowVibration) switch (e) {
								case 3:
									Tl(50);
									break;
								case 4:
									Tl(100);
									break;
								case 5:
									Tl(150);
									break;
								case 6:
									Tl(200);
									break;
								case 7:
									Tl(250);
									break;
								case 8:
									Tl(300);
									break;
								case 9:
									Tl(350)
							}
						}, t.handleRocketCreated = function() {
							this.allowVibration && Tl(350)
						}, t.handleBombCreated = function() {
							this.allowVibration && Tl(350)
						}, t.handleCompleteLevel = function() {
							this.allowVibration && Tl(350)
						}, t.handleUseItem = function() {
							this.allowVibration && Tl(350)
						}, t.handleWarning = function() {
							this.allowVibration && Tl(350)
						}, e
					}(),
					Zf = Nf,
					Uf = i(36308),
					jf = aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES,
					Yf = jf.KEY,
					Wf = jf.FRAME,
					Kf = function(e) {
						function t(t, i, n) {
							var a;
							return void 0 === i && (i = 37), void 0 === n && (n = 37), (a = e.call(this, t, {
								key: Yf,
								frame: Wf.BLANK,
								background: Wf.BLANK,
								width: i,
								height: n,
								loadDelay: 100
							}) || this).scene.add.existing((0, Un.Z)(a)), a
						}
						return (0, l.Z)(t, e), t.prototype.loadPhoto = function(t, i, n) {
							void 0 === n && (n = 0), i && (t === this.payload.id && i === this.payload.url || e.prototype.loadPhoto.call(this, t, i, n))
						}, t
					}(Eo),
					Hf = Kf,
					zf = aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES,
					Xf = zf.KEY,
					Vf = zf.FRAME,
					Jf = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.currentPlayer = void 0, i.slideDuration = void 0, i.floatInBlock = void 0, i.floatOutBlock = void 0, i.deltaX = 5, i.avatar = void 0, i.rankFlag = void 0, i.rankNumber = void 0, i.updateLeader = function(e, t) {
								"photo" === t && i.updateAvatar(), "rank" === t && i.updateRankNumber()
							}, i.show = function() {
								i.setVisible(!0)
							}, i.hide = function() {
								i.setVisible(!1)
							}, i.scene = t, i.setSize(50, 50), i.setDurationAnimation(2e3), i.setDataEnabled(), i.createAvatar(), i.createRank(), i.listenEvents(), i.setDepth(jn.Z.UI), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.isCurrentPlayer = function() {
							return this.currentPlayer
						}, i.setCurrentPlayer = function(e) {
							this.currentPlayer = e, this.updateRankFlag()
						}, i.listenEvents = function() {
							this.on(Phaser.Data.Events.SET_DATA, this.updateLeader), this.on(Phaser.Data.Events.CHANGE_DATA, this.updateLeader)
						}, i.setDurationAnimation = function(e) {
							this.slideDuration = e
						}, i.runFloatInAnimation = function(e, t, i) {
							var n, a, s, o = this.deltaX;
							null == (n = this.floatOutBlock) || null == (a = n.tween) || a.complete();
							var r = t ? e - o : e + o;
							this.floatInBlock = new Jn.Z({
								targets: [this],
								delay: 25 * i,
								duration: this.slideDuration,
								props: {
									x: {
										start: r,
										from: r,
										to: e
									}
								}
							}), this.setVisible(!0), null == (s = this.floatInBlock) || s.play()
						}, i.runFloatOutAnimation = function(e, t, i) {
							var n, a, s, o = this,
								r = this.deltaX;
							null == (n = this.floatInBlock) || null == (a = n.tween) || a.complete();
							var l = t ? e + r : e - r;
							this.floatOutBlock = new qn.Z({
								targets: [this],
								delay: 50 * i,
								duration: this.slideDuration,
								props: {
									x: {
										start: e,
										from: e,
										to: l
									}
								},
								onComplete: function() {
									o.setVisible(!1), o.x = e
								}
							}), null == (s = this.floatOutBlock) || s.play()
						}, i.stopFloatAnimation = function() {
							var e, t, i, n, a, s;
							null == (e = this.floatInBlock) || null == (t = e.tween) || t.stop(1), null == (i = this.floatInBlock) || i.remove(), null == (n = this.floatOutBlock) || null == (a = n.tween) || a.stop(1), null == (s = this.floatOutBlock) || s.remove()
						}, i.createAvatar = function() {
							this.avatar = new Hf(this.scene), Phaser.Display.Align.In.Center(this.avatar, this), this.add(this.avatar)
						}, i.createRank = function() {
							this.rankFlag = this.scene.make.image({
								key: Xf,
								frame: Vf.BLANK
							}), this.rankFlag.setWorldSize(25, 20), this.rankNumber = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(16),
								origin: {
									x: .5,
									y: .5
								},
								text: "1"
							}), Phaser.Display.Align.In.TopCenter(this.rankFlag, this, 0, 4), Phaser.Display.Align.In.Center(this.rankNumber, this.rankFlag, -2, -1), this.add([this.rankFlag, this.rankNumber])
						}, i.updateAvatar = function() {
							var e = this.getData("playerId"),
								t = this.getData("photo");
							this.avatar.loadPhoto(e, t)
						}, i.updateRankFlag = function() {
							this.isCurrentPlayer(), this.rankFlag.setFrame(Vf.BLANK)
						}, i.updateRankNumber = function() {
							var e = this.getData("rank");
							this.rankNumber.setText("" + e)
						}, t
					}(Phaser.GameObjects.Container),
					qf = Jf,
					Qf = GameCore.Configs.Gameplay.MockScoreDifficult,
					$f = function(e) {
						function t(t) {
							var i;
							(i = e.call(this, t) || this).playerId = void 0, i.currentScore = void 0, i.maxBlocks = 5, i.xArray = void 0, i.lastUpdate = 0, i.durationAnimation = 400, i.timer = void 0, i.lastScore = void 0, i.playersScore = void 0, i.playersDifficult = void 0, i.leaders = void 0;
							var n = i.scene.player;
							return i.playerId = n.getPlayerId(), i.initMockData(), i.createPosition(), i.createLeaders(), i.alignLeaders(), i.run(), i.setDepth(jn.Z.LEADERBOARD), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.run = function() {
							var e = this;
							if (this.revive(), this.timer) {
								this.timer.remove();
								var t = this.getLeadersData();
								if (t.length < 1) return;
								var i = this.mockupLeaderScores(this.currentScore, t);
								this.updateScores(i), this.updateLeaders(i)
							}
							this.timer = this.scene.time.addEvent({
								delay: 5e3,
								repeat: -1,
								callback: function() {
									var t = e.getLeadersData();
									if (!(t.length < 1)) {
										var i = e.mockupLeaderScores(e.currentScore, t);
										e.updateScores(i), e.updateLeaders(i)
									}
								}
							})
						}, i.reset = function() {
							var e;
							this.lastScore = 0, this.currentScore = 0, this.playersScore = {}, this.kill(), null == (e = this.timer) || e.destroy(), this.leaders.getChildren().forEach((function(e, t) {
								e.setData("rank", t + 1), e.stopFloatAnimation(), e.setAlpha(1)
							})), this.alignLeaders()
						}, i.alignLeaders = function() {
							var e = this;
							this.leaders.setVisible(!1), this.leaders.getChildren().forEach((function(t, i) {
								var n = t,
									a = e.xArray[i];
								n.setX(a), n.setVisible(!0)
							}))
						}, i.getPosX = function(e) {
							var t = this.getCurrentPlayer();
							if (!t) return 0;
							var i = t.getData("rank") || 0,
								n = e.getData("rank");
							i > this.maxBlocks ? n -= this.maxBlocks : n -= i;
							var a = n / Math.abs(n),
								s = .5 * t.displayWidth - .5 * e.displayWidth;
							return t.x + (10 + e.displayWidth) * n + s * a
						}, i.getLeadersData = function() {
							var e = this.scene.storage.getState(),
								t = (0, Bf.Ez)(e);
							return Zi()(t)
						}, i.updatePlayer = function(e) {
							var t = this,
								i = this.getLeadersData();
							if (!(i.length < 1) && ye()(i).call(i, (function(e) {
									return e.playerId === t.playerId
								}))) {
								var n = this.mockupLeaderScores(e, i);
								this.updateLeaders(n), this.currentScore = e
							}
						}, i.initMockData = function() {
							var e = this;
							this.playersScore = {}, this.playersDifficult = {}, Uf.forEach((function(t) {
								var i = t.playerId,
									n = t.difficult;
								e.playersDifficult[i] = n
							}))
						}, i.mockupLeaderScores = function(e, t) {
							var i = this,
								n = e - this.lastScore;
							n = n <= 0 ? Phaser.Math.RND.between(0, 200) : n, this.lastScore = e;
							var a = _()(t).call(t, (function(t) {
									var a = (0, o.Z)({}, t, {
										rank: 0,
										score: e
									});
									if (a.playerId === i.playerId) return a;
									var s = 0,
										r = Phaser.Math.RND.between(0, 100);
									s = (s = r <= 20 ? .5 * n : r <= 60 ? 1 * n : r < 90 ? 1.4 * n : 2.5 * n) > 2500 ? 2500 : s;
									var l = (s = Phaser.Math.RND.between(0, s)) * i.playersDifficult[a.playerId],
										c = 10 * Math.round(l * Qf / 10);
									if (!GameCore.Utils.Object.hasOwn(i.playersScore, a.playerId)) {
										var h;
										if (!i.playersScore) i.playersScore = ((h = {})[a.playerId] = 0, h);
										i.playersScore[a.playerId] = 0
									}
									return i.playersScore[a.playerId] += c, a.score = i.playersScore[a.playerId], a
								})),
								s = ji()(a).call(a, (function(e, t) {
									return t.score - e.score
								}));
							return s.forEach((function(e, t) {
								e.rank = t + 1
							})), s
						}, i.updateLeaders = function(e) {
							var t = this,
								i = Date.now();
							if (!(i - this.lastUpdate < this.durationAnimation + 1e3)) {
								this.lastUpdate = i;
								var n = $d()(e).call(e, (function(e) {
									return e.playerId === t.playerId
								}));
								if (!(n < 0)) {
									var a = Math.floor(this.maxBlocks / 2),
										s = n - a,
										o = n + a;
									s < 0 && (s = 0), o >= e.length && (o = e.length);
									var r = tt()(e).call(e, s, o + 1);
									this.processLogicUpdateOrder(r, n - s)
								}
							}
						}, i.updateScores = function(e) {
							this.scene.storage.dispatch((0, ap.DU)(e))
						}, i.processLogicUpdateOrder = function(e, t) {
							var i = this,
								n = this.leaders.getChildren(),
								a = this.getCurrentPlayer(),
								s = null == a ? void 0 : a.getData("rank"),
								o = e[t].rank,
								r = Math.floor(this.maxBlocks / 2),
								l = s > o;
							s != o ? (n.forEach((function(e, t) {
								if (!e.isCurrentPlayer()) {
									var n = i.xArray[t];
									e.setDurationAnimation(i.durationAnimation), e.runFloatOutAnimation(n, l, t)
								}
							})), this.scene.time.delayedCall(this.durationAnimation, (function() {
								e.forEach((function(e, a) {
									var s = n[a + r - t],
										o = i.playerId === e.playerId,
										c = i.xArray[a + r - t];
									s.setData(e), o ? s.setCurrentPlayer(!0) : s.runFloatInAnimation(c, l, a)
								}))
							}))) : e.forEach((function(e, i) {
								n[i + r - t].setData(e)
							}))
						}, i.createPosition = function() {
							for (var e = Math.floor(this.maxBlocks / 2), t = [], i = 0; i < this.maxBlocks; i++) {
								var n = i - e,
									a = 50 * n;
								n < 0 ? a -= 5 : n > 0 && (a += 5), t.push(a)
							}
							this.xArray = t
						}, i.createLeaders = function() {
							this.leaders = this.scene.make.group({
								maxSize: this.maxBlocks
							});
							for (var e = Math.floor(this.maxBlocks / 2), t = 0; t < this.maxBlocks; t++) {
								var i = new qf(this.scene);
								i.setData({
									playerId: "" + t,
									score: 0,
									photo: "",
									rank: t + 1
								}), t === e ? (i.setDisplaySize(50, 50), i.setCurrentPlayer(!0), i.setData("playerId", this.playerId)) : (i.setPosition(0, 5), i.setDisplaySize(40, 40), i.setCurrentPlayer(!1)), this.leaders.add(i)
							}
							var n = this.leaders.getChildren();
							this.add(n), this.bringToTop(n[0])
						}, i.getCurrentPlayer = function() {
							var e = this.leaders.getChildren();
							return ye()(e).call(e, (function(e) {
								return e.isCurrentPlayer()
							}))
						}, t
					}(Phaser.GameObjects.Container),
					eg = $f,
					tg = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).avatar = void 0, i.scoreText = void 0, i.createAvatar(), i.createScore(), i.setScore(0), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setScore = function(e) {
							var t = GameCore.Utils.Number.toAbbreviatedString(e || 0, {
								fractionalDigits: 1,
								startAbbreviate: 1e5
							});
							this.scoreText.setText(t)
						}, i.loadPhoto = function(e, t) {
							this.avatar.loadPhoto(e, t)
						}, i.createAvatar = function() {
							this.avatar = new Hf(this.scene, 40, 40), this.add(this.avatar)
						}, i.createScore = function() {
							this.scoreText = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(13)
							}), this.scoreText.setOrigin(.5, .5), Phaser.Display.Align.In.BottomCenter(this.scoreText, this.avatar), this.add(this.scoreText)
						}, t
					}(Phaser.GameObjects.Container),
					ig = tg,
					ng = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).vsText = void 0, i.leftPlayer = void 0, i.rightPlayer = void 0, i.createVsText(), i.createLeftAvatar(), i.createRightAvatar(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createVsText = function() {
							this.vsText = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(25),
								text: "VS",
								origin: {
									x: .5,
									y: .5
								}
							}), this.vsText.setPosition(4.5, 2), this.add(this.vsText)
						}, i.createLeftAvatar = function() {
							this.leftPlayer = new ig(this.scene), this.leftPlayer.setX(-46), this.add(this.leftPlayer)
						}, i.createRightAvatar = function() {
							this.rightPlayer = new ig(this.scene), this.rightPlayer.setX(56), this.add(this.rightPlayer)
						}, t
					}(Phaser.GameObjects.Container),
					ag = ng,
					sg = aa.Z.DEFAULT,
					og = sg.KEY,
					rg = sg.FRAME,
					lg = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).topOnePlayer = void 0, i.topTwoPlayer = void 0, i.topThreePlayer = void 0, i.topOneScore = void 0, i.topTwoScore = void 0, i.topThreeScore = void 0, i.createTopOnePlayer(), i.createTopTwoPlayer(), i.createThreeTwoPlayer(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.updateData = function(e) {
							var t = Yn.Z.AVATAR,
								i = t.KEY,
								n = t.FILE,
								a = e[0],
								s = e[1],
								o = e[2];
							if (a) {
								var r = GameCore.Utils.Number.toAbbreviatedString(+a.score, {
									startAbbreviate: 1e5
								});
								this.topOneScore.setText(r), this.topOnePlayer.loadPhoto(a.playerId, a.photo)
							} else this.topOneScore.setText("???"), this.topOnePlayer.loadPhoto(i, n);
							if (s) {
								var l = GameCore.Utils.Number.toAbbreviatedString(+s.score, {
									startAbbreviate: 1e5
								});
								this.topTwoScore.setText(l), this.topTwoPlayer.loadPhoto(s.playerId, s.photo)
							} else this.topTwoScore.setText("???"), this.topTwoPlayer.loadPhoto(i, n);
							if (o) {
								var c = GameCore.Utils.Number.toAbbreviatedString(+o.score, {
									startAbbreviate: 1e5
								});
								this.topThreeScore.setText(c), this.topThreePlayer.loadPhoto(o.playerId, o.photo)
							} else this.topThreeScore.setText("???"), this.topThreePlayer.loadPhoto(i, n)
						}, i.createTopOnePlayer = function() {
							this.topOnePlayer = new Hf(this.scene);
							var e = this.scene.make.image({
								key: og,
								frame: rg.BLANK
							});
							e.setPosition(-18, -9), e.setWorldSize(28, 27), this.topOneScore = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(14),
								text: "99999",
								origin: {
									x: .5,
									y: 0
								}
							}), this.topOneScore.setY(12), this.topOnePlayer.add([this.topOneScore, e]), this.topOnePlayer.setX(-68), this.add(this.topOnePlayer)
						}, i.createTopTwoPlayer = function() {
							this.topTwoPlayer = new Hf(this.scene);
							var e = this.scene.make.image({
								key: og,
								frame: rg.BLANK
							});
							e.setPosition(-18, -9), e.setWorldSize(28, 27), this.topTwoScore = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(13),
								text: "99999",
								origin: {
									x: .5,
									y: 0
								}
							}), this.topTwoScore.setY(12), this.topTwoPlayer.add([this.topTwoScore, e]), Phaser.Display.Align.In.Center(this.topTwoPlayer, this.topOnePlayer, 68), this.add(this.topTwoPlayer)
						}, i.createThreeTwoPlayer = function() {
							this.topThreePlayer = new Hf(this.scene);
							var e = this.scene.make.image({
								key: og,
								frame: rg.BLANK
							});
							e.setPosition(-18, -9), e.setWorldSize(28, 27), this.topThreeScore = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(13),
								text: "99999",
								origin: {
									x: .5,
									y: 0
								}
							}), this.topThreeScore.setY(12), this.topThreePlayer.add([this.topThreeScore, e]), Phaser.Display.Align.In.Center(this.topThreePlayer, this.topTwoPlayer, 68), this.add(this.topThreePlayer)
						}, t
					}(Phaser.GameObjects.Container),
					cg = lg,
					hg = aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES,
					ug = hg.KEY,
					dg = hg.FRAME,
					pg = aa.Z.THEME,
					mg = (pg.KEY, pg.FRAME, aa.Z.THEME_GAMEPLAY),
					fg = mg.KEY,
					gg = mg.FRAME,
					vg = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).bg = void 0, i.icon = void 0, i.text = void 0, i.createBlock(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createBlock = function() {
							this.bg = this.scene.make.image({
								key: fg,
								frame: gg.BG_MISSION_BAR,
								origin: {
									x: .5,
									y: .5
								}
							}), this.bg.setWorldSize(113, 48.5), this.setSize(113, 48.5), this.icon = this.scene.make.image({
								key: ug,
								frame: dg.ICON_MISSION_BALLS
							}), this.icon.setWorldSize(27.5, 24.5), Phaser.Display.Align.In.LeftCenter(this.icon, this, -10, -1), this.text = ia.Z.addText(this.scene, {
								font: _a.Z.NUMBERS_SYMBOLS.KEY,
								text: "0",
								origin: {
									x: .5,
									y: .5
								},
								size: this.scene.fontSize(18)
							}), Phaser.Display.Align.In.Center(this.text, this, 12, -2), this.add([this.bg, this.icon, this.text])
						}, i.setModeCollectGems = function() {
							this.icon.setFrame(dg.ICON_MISSION_GEMS), this.icon.setWorldSize(25.5, 23)
						}, i.setModeCollectBubbles = function() {
							this.icon.setFrame(dg.ICON_MISSION_BALLS), this.icon.setWorldSize(27.5, 24.5)
						}, i.setText = function(e) {
							this.text.setText(e)
						}, i.getIconWorldPosition = function() {
							return this.icon.getWorldPosition()
						}, t
					}(Phaser.GameObjects.Container),
					yg = vg,
					bg = aa.Z.THEME_GAMEPLAY,
					Eg = bg.KEY,
					Tg = bg.FRAME,
					Ag = 144,
					Sg = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).progress = void 0, n.starTargets = void 0, n.starTarget1 = void 0, n.starTarget2 = void 0, n.starTarget3 = void 0, n.starTarget1Process = void 0, n.starTarget2Process = void 0, n.centerStar1 = void 0, n.centerStar2 = void 0, n.centerStar3 = void 0, n.target1Reached = !1, n.target2Reached = !1, n.target3Reached = !1, n.updateStarProcess = function(e) {
								n.starTarget1 && n.starTarget2 && n.starTarget3 && (e >= n.starTarget1Process && !n.target1Reached && (n.target1Reached = !0, n.runProgressStarAnimation(n.centerStar1, n.starTarget1)), e >= n.starTarget2Process && !n.target2Reached && (n.target2Reached = !0, n.runProgressStarAnimation(n.centerStar2, n.starTarget2)), 1 !== e || n.target3Reached || (n.target3Reached = !0, n.runProgressStarAnimation(n.centerStar3, n.starTarget3)), 0 === e && (n.target1Reached = !1, n.target2Reached = !1, n.target3Reached = !1))
							}, i && (n.starTargets = i), n.progress = new Ar(n.scene, {
								width: Ag,
								key: Eg,
								frames: Tg,
								onUpdate: n.updateStarProcess
							}), n.createStarTargets(), n.createCenterStars(), n.createContent(), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createStarTargets = function() {
							this.starTarget1 = this.scene.make.image({
								key: Eg,
								frame: Tg.STAR_EMPTY
							}), this.starTarget1.setOrigin(0, .5), this.starTarget1.setWorldSize(23, 23.5), this.starTarget1.setName("StarTarget1"), this.starTarget2 = this.scene.make.image({
								key: Eg,
								frame: Tg.STAR_EMPTY
							}), this.starTarget2.setOrigin(0, .5), this.starTarget2.setWorldSize(23, 23.5), this.starTarget2.setName("StarTarget2"), this.starTarget3 = this.scene.make.image({
								key: Eg,
								frame: Tg.STAR_EMPTY
							}), this.starTarget3.setOrigin(0, .5), this.starTarget3.setWorldSize(23, 23.5), this.starTarget3.setName("StarTarget3"), Phaser.Display.Align.In.LeftCenter(this.starTarget3, this.progress, -128, 0), this.alignStars(this.starTargets)
						}, i.createCenterStars = function() {
							var e = 1 / this.scene.world.getPixelRatio();
							this.centerStar1 = this.scene.make.image({
								key: Eg,
								frame: Tg.STAR_FULL
							}), this.centerStar1.setWorldSize(23, 23.5), this.centerStar1.setAlpha(0), this.centerStar1.setScale(.8 * e), this.centerStar1.setDepth(jn.Z.PROGRESS_STAR), Phaser.Display.Align.In.Center(this.centerStar1, this.scene.gameZone), this.centerStar1.kill(), this.centerStar2 = this.scene.make.image({
								key: Eg,
								frame: Tg.STAR_FULL
							}), this.centerStar2.setWorldSize(23, 23.5), this.centerStar2.setAlpha(0), this.centerStar2.setScale(.8 * e), this.centerStar2.setDepth(jn.Z.PROGRESS_STAR), Phaser.Display.Align.In.Center(this.centerStar2, this.scene.gameZone), this.centerStar2.kill(), this.centerStar3 = this.scene.make.image({
								key: Eg,
								frame: Tg.STAR_FULL
							}), this.centerStar3.setWorldSize(23, 23.5), this.centerStar3.setAlpha(0), this.centerStar3.setScale(.8 * e), this.centerStar3.setDepth(jn.Z.PROGRESS_STAR), Phaser.Display.Align.In.Center(this.centerStar3, this.scene.gameZone), this.centerStar3.kill()
						}, i.createContent = function() {
							this.progress.add([this.starTarget1, this.starTarget2, this.starTarget3]), this.add(this.progress), this.scene.add.existing(this)
						}, i.runProgressStarAnimation = function(e, t) {
							this.scene.getIsSkipLevelComplete() || this.runStarShowUpAnimation(e, t)
						}, i.runStarShowUpAnimation = function(e, t) {
							var i = this,
								n = 1 / this.scene.world.getPixelRatio();
							null == e || e.revive(), Phaser.Display.Align.In.Center(e, this.scene.gameZone), this.scene.tweens.add({
								targets: [e],
								duration: 300,
								ease: Phaser.Math.Easing.Sine.In,
								props: {
									alpha: {
										from: .4,
										to: 1
									},
									scale: {
										from: .8 * n,
										to: 2.2 * n
									}
								},
								onStart: function() {
									i.scene.audio.playSound(sa.Z.STAR_PROGRESS)
								},
								onComplete: function() {
									i.scene.getIsSkipLevelComplete() ? e.kill() : i.runStarFlyingDownAnimation(e, t)
								}
							})
						}, i.runStarFlyingDownAnimation = function(e, t) {
							var i = this;
							this.scene.tweens.add({
								targets: [e],
								duration: 200,
								ease: Phaser.Math.Easing.Sine.Out,
								props: {
									x: "+=30",
									y: "+=30",
									angle: {
										from: 0,
										to: 180
									}
								},
								onComplete: function() {
									i.scene.getIsSkipLevelComplete() ? e.kill() : i.runStarFlyingUpAnimation(e, t)
								}
							})
						}, i.runStarFlyingUpAnimation = function(e, t) {
							var i = this,
								n = 1 / this.scene.world.getPixelRatio(),
								a = e.angle,
								s = e.getWorldPosition(),
								o = s.x,
								r = s.y;
							this.scene.tweens.add({
								targets: [e],
								duration: 400,
								ease: Phaser.Math.Easing.Sine.Out,
								props: {
									x: {
										from: o,
										to: t.getWorldPosition().x + 11
									},
									y: {
										from: r,
										to: t.getWorldPosition().y
									},
									angle: {
										from: a,
										to: 360
									},
									scale: {
										from: 2.2 * n,
										to: .8 * n
									}
								},
								onComplete: function() {
									i.scene.getIsSkipLevelComplete() ? e.kill() : (i.scene.audio.playSound(sa.Z.GOAL_PROGRESS), i.scene.gameManager.particlePool.spawn("ProgressStarParticle").explode(t.getWorldPosition().x + 11, t.getWorldPosition().y), t.setFrame(Tg.STAR_FULL), e.setAlpha(0).setScale(.8 * n).setAngle(0), e.kill())
								}
							})
						}, i.destroyOldObjects = function() {
							var e, t, i, n, a, s;
							null == (e = this.starTarget1) || e.setFrame(Tg.STAR_EMPTY), null == (t = this.starTarget2) || t.setFrame(Tg.STAR_EMPTY), null == (i = this.starTarget3) || i.setFrame(Tg.STAR_EMPTY), this.scene.tweens.killTweensOf(this.centerStar1), null == (n = this.centerStar1) || n.kill(), this.scene.tweens.killTweensOf(this.centerStar2), null == (a = this.centerStar2) || a.kill(), this.scene.tweens.killTweensOf(this.centerStar3), null == (s = this.centerStar3) || s.kill()
						}, i.alignStars = function(e) {
							this.starTarget1Process = e[0] / e[e.length - 1], this.starTarget2Process = e[1] / e[e.length - 1];
							var t = this.starTarget1Process * Ag;
							Phaser.Display.Align.In.LeftCenter(this.starTarget1, this.progress, 11 - t, 0);
							var i = this.starTarget2Process * Ag;
							Phaser.Display.Align.In.LeftCenter(this.starTarget2, this.progress, 11 - i, 0)
						}, t
					}(Phaser.GameObjects.Container),
					_g = Sg,
					Cg = aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES,
					wg = Cg.KEY,
					Bg = Cg.FRAME,
					Ig = aa.Z.THEME,
					Pg = (Ig.KEY, Ig.FRAME, aa.Z.THEME_GAMEPLAY),
					xg = Pg.KEY,
					Og = Pg.FRAME,
					kg = function(e) {
						function t(t) {
							var i;
							(i = e.call(this, t) || this).scene = void 0, i.scoreText = void 0, i.leaders = void 0, i.challengeBlock = void 0, i.tournamentPlayers = void 0, i.scoreBlock = void 0, i.missionBlock = void 0, i.progressBar = void 0, i.updateScoreTimer = void 0, i.topY = void 0, i.background = void 0, i.lineLimitTop = void 0, i.isFade = void 0, i.updateScore = function(e) {
								void 0 === e && (e = 0);
								var t = GameCore.Utils.Number.numberWithCommas(e);
								i.scoreText.setText(t)
							}, i.scene = t;
							var n = t.getCorrectGameSize(),
								a = n.width,
								s = n.height;
							return i.setSize(a, 50), i.topY = -(s - 667) / 2 - 2, i.createBackground(), i.createLeaders(), i.createTournamentPlayers(), i.createChallengeBlock(), i.createScoreBar(), i.createMissionBlock(), i.createLineLimitTop(), i.listenEvents(), i.setDepth(jn.Z.UI), t.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createLineLimitTop = function() {
							this.lineLimitTop = this.scene.make.image({
								key: wg,
								frame: Bg.BLANK
							}), this.lineLimitTop.setWorldSize(375, .5), this.lineLimitTop.setVisible(!1), this.add(this.lineLimitTop), Phaser.Display.Align.In.BottomCenter(this.lineLimitTop, this.background, 0, -9.8)
						}, i.createBackground = function() {
							this.background = this.scene.add.image(0, -this.height / 2, xg, Og.BG_TOP), this.background.setWorldSize(512, 147), this.background.setTint(8355711), Phaser.Display.Align.In.TopCenter(this.background, this, 0, this.topY + 147), this.add(this.background)
						}, i.createLeaders = function() {
							this.leaders = new eg(this.scene), this.leaders.setY(-2), this.leaders.kill(), this.add(this.leaders)
						}, i.createTournamentPlayers = function() {
							this.tournamentPlayers = new cg(this.scene), this.tournamentPlayers.setPosition(20, -4), this.tournamentPlayers.kill(), this.add(this.tournamentPlayers)
						}, i.createChallengeBlock = function() {
							this.challengeBlock = new ag(this.scene), this.challengeBlock.kill(), this.challengeBlock.setY(-3), this.add(this.challengeBlock)
						}, i.createScoreBar = function() {
							var e;
							this.scoreBlock = this.scene.add.container();
							var t = this.scene.make.image({
								key: xg,
								frame: Og.BG_BAR_TOP,
								origin: {
									x: .5,
									y: .5
								}
							});
							t.setWorldSize(229.5, 48.5), this.progressBar = new _g(this.scene, null == (e = this.scene.level.getLevelData()) ? void 0 : e.starsTarget), this.scoreText = ia.Z.addText(this.scene, {
								font: _a.Z.NUMBERS_SYMBOLS.KEY,
								size: this.scene.fontSize(16),
								origin: {
									x: 1,
									y: .5
								}
							}), Phaser.Display.Align.In.LeftCenter(this.scoreText, t, -60, -3), Phaser.Display.Align.In.Center(this.progressBar, t, 30, -3), this.scoreBlock.add([t, this.progressBar, this.scoreText]), this.scoreBlock.setSize(229.5, 48.5), this.add(this.scoreBlock), Phaser.Display.Align.In.TopLeft(this.scoreBlock, this, -10, this.topY + 37), this.topY > -36 && Phaser.Display.Align.In.LeftCenter(this.scoreBlock, this, -10, 5)
						}, i.createMissionBlock = function() {
							this.missionBlock = new yg(this.scene), this.add(this.missionBlock), Phaser.Display.Align.In.TopRight(this.missionBlock, this, -10, this.topY + 37), this.topY > -36 && Phaser.Display.Align.In.RightCenter(this.missionBlock, this, -10, 5)
						}, i.listenEvents = function() {
							this.scene.events.on(Ef.SCORE_CHANGED, this.updateScore)
						}, i.playFadeOutAnimation = function() {
							this.isFade || (this.isFade = !0, this.scene.tweens.add({
								targets: [this.scoreBlock, this.missionBlock],
								duration: 460,
								alpha: .1,
								ease: Phaser.Math.Easing.Quadratic.Out
							}))
						}, i.playFadeInAnimation = function() {
							this.isFade && (this.isFade = !1, this.scene.tweens.add({
								targets: [this.scoreBlock, this.missionBlock],
								duration: 460,
								alpha: 1,
								ease: Phaser.Math.Easing.Quadratic.In
							}))
						}, i.getTopY = function() {
							return this.topY
						}, t
					}(Phaser.GameObjects.Container),
					Rg = kg,
					Mg = aa.Z.DEFAULT,
					Lg = Mg.KEY,
					Gg = Mg.FRAME,
					Dg = aa.Z.THEME,
					Fg = Dg.KEY,
					Ng = Dg.FRAME,
					Zg = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).popup = void 0, s.dinoTitle = void 0, s.popupShowUpAnimation = void 0, s.popupFadeOutAnimation = void 0, s.bgTitle = void 0, s.levelText = void 0, s.closeButton = void 0, s.retryButton = void 0, s.stars = void 0, s.line = void 0, s.levelFailedText = void 0, s.missionDetail = void 0, s.failIcon = void 0, s.missionDetailText = void 0, s.open = function() {
								e.prototype.open.call((0, Un.Z)(s)), s.closeButton.setDisabled(!1), s.updateLevelText(), s.updateMissionDetail(), s.scene.audio.playSound(sa.Z.YOU_LOSE), s.runOpenAnimation()
							}, s.closePopup = function() {
								s.scene.audio.playSound(sa.Z.POPUP_OUT), s.runCloseAnimation()
							}, s.handleGotoDashboard = function() {
								s.closeButton.setDisabled(!0), s.closeButton.setAlpha(1), s.runCloseAnimation(), s.popupFadeOutAnimation.next((function() {
									s.scene.screen.close(s.name), s.scene.scene.switch(In.C.DASHBOARD_SCENE)
								}))
							}, s.handleReplayGame = function() {
								s.scene.player.getLevel() > GameCore.Configs.Ads.MinLevelToShow && s.scene.handleShowMidRollAd(), s.runCloseAnimation(), s.popupFadeOutAnimation.next((0, r.Z)(h().mark((function e() {
									return h().wrap((function(e) {
										for (;;) switch (e.prev = e.next) {
											case 0:
												return s.scene.screen.close(s.name), s.scene.stateManager.ready(), e.next = 4, s.scene.storage.dispatch((0, Ua.PB)());
											case 4:
											case "end":
												return e.stop()
										}
									}), e)
								}))))
							}, s.createPopup(), s.createTitle(), s.createStars(), s.createLevelFailedText(), s.createMissionDetail(), s.createRetryButton(), s.createCloseButton(), s.setDepth(Wn.Ks.POPUP), s.setY(-50), s.background.setAlpha(.5), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createPopup = function() {
							this.popup = new ro(this.scene, 0, 0, 294.5, 363.5), this.add(this.popup), Phaser.Display.Align.In.Center(this.popup, this.zone)
						}, i.createTitle = function() {
							this.bgTitle = this.scene.make.image({
								key: Fg,
								frame: Ng.POPUP_HEADER
							}), this.bgTitle.setWorldSize(193, 57.5), this.levelText = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(28),
								origin: {
									x: .5,
									y: .5
								}
							}), this.popup.add([this.bgTitle, this.levelText]), Phaser.Display.Align.In.TopCenter(this.bgTitle, this.popup, 0, 25), Phaser.Display.Align.In.Center(this.levelText, this.bgTitle, 0, -3)
						}, i.createCloseButton = function() {
							this.closeButton = new ea.Z(this.scene, Fg, Ng.BUTTON_CLOSE, 37.5, 39), this.closeButton.setName("Close"), this.popup.add(this.closeButton), Phaser.Display.Align.In.TopRight(this.closeButton, this.popup, 14, 14), this.closeButton.onClick = this.handleGotoDashboard
						}, i.createRetryButton = function() {
							this.retryButton = new ea.Z(this.scene, Lg, Gg.BUTTON_GREEN, 153.5, 57.5), this.retryButton.setName("Retry");
							var e = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								text: this.scene.lang.getText("retry"),
								size: this.scene.fontSize(25),
								origin: {
									x: .5,
									y: .5
								},
								maxWidth: 130,
								maxHeight: 40
							});
							this.retryButton.add(e), Phaser.Display.Align.In.Center(e, this.retryButton, 0, -3), this.popup.add(this.retryButton), Phaser.Display.Align.In.BottomCenter(this.retryButton, this.popup, 0, -30), this.retryButton.onClick = this.handleReplayGame
						}, i.createStars = function() {
							this.stars = new qh(this.scene), this.popup.add(this.stars), Phaser.Display.Align.In.TopCenter(this.stars, this.popup, 0, -80)
						}, i.createLevelFailedText = function() {
							this.levelFailedText = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(28),
								text: this.scene.lang.getText("level_failed"),
								maxWidth: .9 * this.popup.width,
								maxHeight: 50
							}), this.popup.add(this.levelFailedText), Phaser.Display.Align.In.Center(this.levelFailedText, this.popup, 0, 0)
						}, i.createMissionDetail = function() {
							this.missionDetail = this.scene.add.container(), this.failIcon = this.scene.make.image({
								key: Lg,
								frame: Gg.RESCUE_ICON_FAIL
							}), this.failIcon.setWorldSize(24.5, 23.5), this.failIcon.setPosition(0, 5), this.missionDetailText = ia.Z.addText(this.scene, {
								font: _a.Z.NORMAL.KEY,
								size: this.scene.fontSize(20),
								text: this.scene.lang.getText("pop_all_bubbles"),
								maxWidth: 160
							}, !0), this.missionDetailText.setOrigin(.5), this.missionDetail.add([this.failIcon, this.missionDetailText]), Phaser.Display.Align.In.Center(this.failIcon, this.missionDetail, -80, 0), Phaser.Display.Align.In.Center(this.missionDetailText, this.missionDetail, 15, 0), this.popup.add(this.missionDetail), Phaser.Display.Align.To.BottomCenter(this.missionDetail, this.levelFailedText, 0, 40)
						}, i.updateLevelText = function() {
							var e = this.scene.level.getLevel();
							this.levelText.setText("" + this.scene.lang.getText({
								key: "level_{X}",
								variables: [e]
							}))
						}, i.runOpenAnimation = function() {
							this.scene.audio.playSound(sa.Z.POPUP_IN), this.runPopupEntrancesAnimation(0, 500)
						}, i.runCloseAnimation = function() {
							this.runPopupExitsAnimation(0, 300)
						}, i.runPopupEntrancesAnimation = function(e, t) {
							if (!this.popupShowUpAnimation) {
								var i = this.popup,
									n = i.y,
									a = i.scale;
								this.popupShowUpAnimation = new cr.Z({
									targets: [this.popup],
									delay: e,
									duration: t,
									props: {
										y: {
											start: 350,
											from: 350,
											to: n
										},
										alpha: {
											start: 0,
											from: 0,
											to: 1
										},
										scale: {
											start: 0,
											from: 0,
											to: a
										}
									}
								})
							}
							this.popupShowUpAnimation.play()
						}, i.runPopupExitsAnimation = function(e, t) {
							var i, n = this;
							this.popupFadeOutAnimation || (this.popupFadeOutAnimation = new qn.Z({
								targets: [this.popup],
								delay: e,
								duration: t,
								props: {
									y: 250,
									alpha: {
										start: 1,
										from: 1,
										to: 0
									},
									scale: 0
								},
								onComplete: function() {
									n.popup.setY(0), n.scene.screen.close(n.name)
								}
							})), null == (i = this.popupFadeOutAnimation) || i.play()
						}, i.updateMissionDetail = function() {
							var e = this.scene.level.getLevelData();
							"CollectBubbles" == (null == e ? void 0 : e.missionType) ? this.missionDetailText.setText(this.scene.lang.getText("pop_all_bubbles")): this.missionDetailText.setText(this.scene.lang.getText("collect_gems"))
						}, t
					}(GameCore.Screen),
					Ug = Zg,
					jg = aa.Z.DEFAULT.FRAME,
					Yg = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).popup = void 0, s.dinoTitle = void 0, s.tutorialText = void 0, s.popupShowUpAnimation = void 0, s.popupFadeOutAnimation = void 0, s.open = function() {
								e.prototype.open.call((0, Un.Z)(s)), s.runOpenAnimation()
							}, s.closePopup = function() {
								s.scene.audio.playSound(sa.Z.POPUP_OUT), s.runCloseAnimation(), s.popupFadeOutAnimation.next((function() {
									s.scene.screen.close(s.name)
								}))
							}, s.createBackground(), s.createPopup(), s.createDinoTitle(), s.createPopupContent(), s.setDepth(Wn.Ks.POPUP), s.setY(-50), s.background.setAlpha(1), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createBackground = function() {
							var e = this.scene.make.image({
								key: Yn.Z.GAME_BACKGROUND_THEME.KEY,
								origin: {
									x: .5,
									y: .5
								}
							});
							e.setWorldSize(this.zone.width, this.zone.height), this.add(e), Phaser.Display.Align.In.Center(e, this.zone)
						}, i.createPopup = function() {
							this.popup = new ro(this.scene, 0, 0, 395, 120), this.add(this.popup), Phaser.Display.Align.In.Center(this.popup, this.zone)
						}, i.createDinoTitle = function() {
							this.dinoTitle = new io(this.scene, {
								title: "EGG SHOOT",
								titleSize: 25
							}), this.dinoTitle.background.kill(), this.dinoTitle.changeRibbon(jg.RIBBON_RED, 276.5, 68.5), Phaser.Display.Align.In.TopCenter(this.dinoTitle, this.popup, 0, 78), this.popup.add(this.dinoTitle)
						}, i.createPopupContent = function() {
							this.createTutorialText()
						}, i.createTutorialText = function() {
							this.tutorialText = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(34),
								text: "Ready!",
								origin: {
									x: .5,
									y: .5
								}
							}), Phaser.Display.Align.In.Center(this.tutorialText, this.popup, 0, 0), this.popup.add(this.tutorialText)
						}, i.runOpenAnimation = function() {
							this.scene.audio.playSound(sa.Z.POPUP_IN), this.runPopupEntrancesAnimation(0, 400)
						}, i.runCloseAnimation = function() {
							this.runPopupExitsAnimation(0, 400)
						}, i.runPopupEntrancesAnimation = function(e, t) {
							var i = this;
							this.background.setAlpha(1), this.popupShowUpAnimation || (this.popupShowUpAnimation = new Jn.Z({
								targets: [this.popup],
								delay: e,
								duration: t,
								props: {
									alpha: {
										from: 0,
										to: 1
									}
								},
								onComplete: function() {
									i.background.setAlpha(0)
								}
							})), this.popupShowUpAnimation.play()
						}, i.runPopupExitsAnimation = function(e, t) {
							var i;
							this.popupFadeOutAnimation || (this.popupFadeOutAnimation = new qn.Z({
								targets: [this.popup],
								delay: e,
								duration: t,
								props: {
									alpha: 0
								}
							})), null == (i = this.popupFadeOutAnimation) || i.play()
						}, i.logPageviewOnOpen = function() {}, i.logPageviewOnClose = function() {}, t
					}(GameCore.Screen),
					Wg = Yg,
					Kg = aa.Z.DEFAULT,
					Hg = Kg.KEY,
					zg = Kg.FRAME,
					Xg = aa.Z.THEME,
					Vg = Xg.KEY,
					Jg = Xg.FRAME,
					qg = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).scene = void 0, s.popup = void 0, s.popupShowUpAnimation = void 0, s.popupFadeOutAnimation = void 0, s.buttonReleaseTimer = void 0, s.isButtonReleased = !1, s.headerTitle = void 0, s.closeButton = void 0, s.subButtonsContainer = void 0, s.soundButton = void 0, s.soundText = void 0, s.musicButton = void 0, s.musicText = void 0, s.vibrateButton = void 0, s.vibrateText = void 0, s.mainButtonsContainer = void 0, s.retryButton = void 0, s.backButton = void 0, s.resumeButton = void 0, s.subButtonsBackground = void 0, s.open = function() {
								e.prototype.open.call((0, Un.Z)(s));
								var t = s.scene.player.getPlayerSettings(),
									i = t.music,
									n = t.sound,
									a = t.vibrate;
								s.musicButton.updateStatus(i), s.soundButton.updateStatus(n), yl() && s.vibrateButton.updateStatus(a), s.alignSubButtons(), s.runOpenAnimation()
							}, s.handleClosePopup = function() {
								s.scene.audio.playSound(sa.Z.POPUP_OUT), s.runCloseAnimation(), s.popupFadeOutAnimation.next((function() {
									s.scene.screen.close(s.name), s.scene.stateManager.play()
								}))
							}, s.handleReplayGame = function() {
								s.isButtonReleased || (s.isButtonReleased = !0, s.handleShowInterstitialAd(), s.scene.analytics.event(Xt._.LEVEL_RETRY, {
									level: s.scene.level.getLevel()
								}), s.runCloseAnimation(), s.popupFadeOutAnimation.next((0, r.Z)(h().mark((function e() {
									return h().wrap((function(e) {
										for (;;) switch (e.prev = e.next) {
											case 0:
												return s.scene.tweens.getTweensOf(s.retryButton).forEach((function(e) {
													return e.complete()
												})), s.isButtonReleased = !1, s.scene.screen.close(s.name), s.scene.stateManager.ready(), e.next = 6, s.scene.storage.dispatch((0, Ua.PB)());
											case 6:
											case "end":
												return e.stop()
										}
									}), e)
								})))))
							}, s.handleGotoDashboard = function() {
								s.isButtonReleased || (s.isButtonReleased = !0, s.handleShowInterstitialAd(), s.runCloseAnimation(), s.popupFadeOutAnimation.next((function() {
									s.scene.tweens.getTweensOf(s.backButton).forEach((function(e) {
										return e.complete()
									})), s.isButtonReleased = !1, s.scene.screen.close(s.name), s.scene.scene.switch(In.C.DASHBOARD_SCENE)
								})))
							}, s.handleShowInterstitialAd = (0, r.Z)(h().mark((function e() {
								var t;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (!1 !== (t = s.scene).ads.canbeShowInterstitialAd()) {
												e.next = 3;
												break
											}
											return e.abrupt("return");
										case 3:
											return t.audio.pauseMusic(), t.audio.muteAllSound(), s.scene.game.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
												message: s.scene.lang.getText("loading_ads"),
												duration: 0,
												loading: !0
											}), e.prev = 6, e.next = 9, t.ads.showPreRollAdAsync();
										case 9:
											e.next = 14;
											break;
										case 11:
											e.prev = 11, e.t0 = e.catch(6);
										case 14:
											s.scene.game.globalScene.screen.close(Wn.o4.NOTIFY_SCREEN), t.audio.playMusic(), t.audio.unmuteAllSound(), t.ads.preloadPreRollAdAsync().catch((function() {}));
										case 18:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[6, 11]
								])
							}))), s.handleMusicSetting = function(e) {
								s.scene.player.setSetting("music", e), e ? s.scene.audio.playMusic() : s.scene.audio.pauseMusic()
							}, s.handleSoundSetting = function(e) {
								s.scene.player.setSetting("sound", e)
							}, s.handleVibrateSetting = function(e) {
								s.scene.player.setSetting("vibrate", e)
							}, s.scene = t, s.createPopup(), s.createCloseButton(), s.createPopupContent(), s.setDepth(Wn.Ks.POPUP), s.background.setAlpha(.5), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createCloseButton = function() {
							this.closeButton = new ea.Z(this.scene, Vg, Jg.BUTTON_CLOSE, 35.5, 36.5), this.closeButton.setName("Close"), this.popup.add(this.closeButton), Phaser.Display.Align.In.TopRight(this.closeButton, this.popup, 14, 14), this.closeButton.onClick = this.handleClosePopup
						}, i.createSubButtons = function() {
							var e = this.scene.player.getPlayerSettings(),
								t = e.music,
								i = e.sound,
								n = e.vibrate;
							this.subButtonsContainer = this.scene.add.container();
							var a = this.scene.make.image({
								key: Vg,
								frame: Jg.SETTING_BOX
							});
							a.setWorldSize(243.5, 164.5), this.subButtonsContainer.setSize(a.width, a.height), this.subButtonsContainer.add(a), Phaser.Display.Align.In.Center(a, this.subButtonsContainer, 0, 0), this.soundButton = new _l(this.scene, {
								enable: i,
								frameMainOn: zg.SWITCH_BUTTON_ON,
								frameMainOff: zg.SWITCH_BUTTON_OFF,
								frameSubOn: zg.ICON_SOUND_ON,
								frameSubOff: zg.ICON_SOUND_OFF,
								framePanelOn: zg.SWITCH_PANEL_ON,
								framePanelOff: zg.SWITCH_PANEL_OFF
							}), this.soundButton.mainIcon.setWorldSize(37.5, 39), this.soundButton.subIcon.setWorldSize(21.5, 18), this.soundButton.button.setWorldSize(89.5, 31.5);
							var s = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(22),
								origin: {
									x: 0,
									y: .5
								},
								text: this.scene.lang.getText("sound")
							});
							this.soundButton.setName("SoundButton"), this.subButtonsContainer.add(s), this.subButtonsContainer.add([this.soundButton]), this.soundText = s, Phaser.Display.Align.In.Center(this.soundButton, this.subButtonsContainer, 50, -50), Phaser.Display.Align.In.LeftCenter(this.soundText, this.subButtonsContainer, -20, -50), this.soundButton.onClick = this.handleSoundSetting, this.musicButton = new _l(this.scene, {
								enable: t,
								frameMainOn: zg.SWITCH_BUTTON_ON,
								frameMainOff: zg.SWITCH_BUTTON_OFF,
								frameSubOn: zg.ICON_MUSIC_ON,
								frameSubOff: zg.ICON_MUSIC_OFF,
								framePanelOn: zg.SWITCH_PANEL_ON,
								framePanelOff: zg.SWITCH_PANEL_OFF
							}), this.musicButton.mainIcon.setWorldSize(37.5, 39), this.musicButton.subIcon.setWorldSize(17.5, 19.5), this.musicButton.button.setWorldSize(89.5, 31.5);
							var o = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(22),
								origin: {
									x: 0,
									y: .5
								},
								text: this.scene.lang.getText("music")
							});
							this.subButtonsContainer.add(o), this.musicButton.setName("MusicButton"), this.subButtonsContainer.add([this.musicButton]), this.musicText = o, Phaser.Display.Align.In.Center(this.musicButton, this.subButtonsContainer, 50), Phaser.Display.Align.In.LeftCenter(this.musicText, this.subButtonsContainer, -20), this.musicButton.onClick = this.handleMusicSetting, this.vibrateButton = new _l(this.scene, {
								enable: n,
								frameMainOn: zg.SWITCH_BUTTON_ON,
								frameMainOff: zg.SWITCH_BUTTON_OFF,
								frameSubOn: zg.ICON_VIBRATE_ON,
								frameSubOff: zg.ICON_VIBRATE_OFF,
								framePanelOn: zg.SWITCH_PANEL_ON,
								framePanelOff: zg.SWITCH_PANEL_OFF
							}), this.vibrateButton.mainIcon.setWorldSize(37.5, 39), n ? this.vibrateButton.subIcon.setWorldSize(21, 19.5) : this.vibrateButton.subIcon.setWorldSize(11, 19.5), this.vibrateButton.button.setWorldSize(89.5, 31.5);
							var r = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(22),
								origin: {
									x: 0,
									y: .5
								},
								text: this.scene.lang.getText("vibrate"),
								maxWidth: 100
							});
							this.subButtonsContainer.add(r), this.vibrateButton.setName("VibrateButton"), this.subButtonsContainer.add([this.vibrateButton]), this.vibrateText = r, Phaser.Display.Align.In.Center(this.vibrateButton, this.subButtonsContainer, 50, 50), Phaser.Display.Align.In.LeftCenter(this.vibrateText, this.subButtonsContainer, -20, 50), this.vibrateButton.onClick = this.handleVibrateSetting
						}, i.createMainButtons = function() {
							this.mainButtonsContainer = this.scene.add.container(), this.retryButton = new ea.Z(this.scene, Hg, zg.BUTTON_GREEN, 153.5, 58.5), this.retryButton.setName("Retry");
							var e = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								text: this.scene.lang.getText("retry"),
								size: this.scene.fontSize(26),
								maxWidth: 130,
								maxHeight: 40
							});
							this.retryButton.add(e), Phaser.Display.Align.In.Center(e, this.retryButton, 0, -2), this.mainButtonsContainer.add(this.retryButton), Phaser.Display.Align.In.Center(this.retryButton, this.mainButtonsContainer, 0, -65), this.retryButton.onClick = this.handleReplayGame, this.backButton = new ea.Z(this.scene, Hg, zg.BUTTON_GREEN, 153.5, 58.5), this.backButton.setName("Back");
							var t = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								text: this.scene.lang.getText("back"),
								size: this.scene.fontSize(26),
								origin: {
									x: .5,
									y: .5
								},
								maxWidth: 130,
								maxHeight: 40
							});
							this.backButton.add(t), Phaser.Display.Align.In.Center(t, this.backButton, 0, -2), this.mainButtonsContainer.add(this.backButton), Phaser.Display.Align.In.Center(this.backButton, this.mainButtonsContainer, 0, 0), this.backButton.onClick = this.handleGotoDashboard, this.resumeButton = new ea.Z(this.scene, Hg, zg.BUTTON_BLUE, 153.5, 58.5), this.resumeButton.setName("Resume");
							var i = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								text: this.scene.lang.getText("resume"),
								size: this.scene.fontSize(26),
								origin: {
									x: .5,
									y: .5
								},
								maxWidth: 130,
								maxHeight: 40
							});
							this.resumeButton.add(i), Phaser.Display.Align.In.Center(i, this.resumeButton, 0, -2), this.mainButtonsContainer.add(this.resumeButton), Phaser.Display.Align.In.Center(this.resumeButton, this.mainButtonsContainer, 0, 65), this.resumeButton.onClick = this.handleClosePopup
						}, i.createPopup = function() {
							this.popup = new ro(this.scene, 0, 0, 280, 430), this.add(this.popup), Phaser.Display.Align.In.Center(this.popup, this.zone)
						}, i.createPopupContent = function() {
							this.createTitle(), this.createSubButtons(), this.createMainButtons(), this.popup.add([this.subButtonsContainer, this.mainButtonsContainer]), Phaser.Display.Align.In.TopCenter(this.subButtonsContainer, this.popup, 0, -40), Phaser.Display.Align.In.BottomCenter(this.mainButtonsContainer, this.popup, 0, -120)
						}, i.createTitle = function() {
							this.headerTitle = new Dh(this.scene, this.scene.lang.getText("pause")), this.popup.add([this.headerTitle]), Phaser.Display.Align.In.TopCenter(this.headerTitle, this.popup, 0, 25)
						}, i.runOpenAnimation = function() {
							this.scene.audio.playSound(sa.Z.POPUP_IN), this.runPopupEntrancesAnimation(0, 300)
						}, i.runCloseAnimation = function() {
							this.runPopupExitsAnimation(0, 200)
						}, i.runPopupEntrancesAnimation = function(e, t) {
							if (!this.popupShowUpAnimation) {
								var i = this.popup,
									n = i.y,
									a = i.scale;
								this.popupShowUpAnimation = new cr.Z({
									targets: [this.popup],
									delay: e,
									duration: t,
									props: {
										y: {
											from: 350,
											to: n
										},
										alpha: {
											start: 0,
											from: 0,
											to: 1
										},
										scale: {
											start: 0,
											from: 0,
											to: a
										}
									}
								})
							}
							this.popupShowUpAnimation.play()
						}, i.runPopupExitsAnimation = function(e, t) {
							var i, n = this;
							this.popupFadeOutAnimation || (this.popupFadeOutAnimation = new qn.Z({
								targets: [this.popup],
								delay: e,
								duration: t,
								props: {
									y: 250,
									scale: 0
								},
								onComplete: function() {
									n.popup.setY(0)
								}
							})), null == (i = this.popupFadeOutAnimation) || i.play()
						}, i.alignSubButtons = function() {
							this.subButtonsContainer.setPosition(0, 0), yl() ? (this.vibrateButton.revive(), this.vibrateText.revive(), Phaser.Display.Align.In.Center(this.soundButton, this.subButtonsContainer, 50, -50), Phaser.Display.Align.In.LeftCenter(this.soundText, this.subButtonsContainer, -20, -50), Phaser.Display.Align.In.Center(this.musicButton, this.subButtonsContainer, 50), Phaser.Display.Align.In.LeftCenter(this.musicText, this.subButtonsContainer, -20), Phaser.Display.Align.In.Center(this.vibrateButton, this.subButtonsContainer, 50, 50), Phaser.Display.Align.In.LeftCenter(this.vibrateText, this.subButtonsContainer, -20, 50)) : (this.vibrateButton.kill(), this.vibrateText.kill(), Phaser.Display.Align.In.Center(this.soundButton, this.subButtonsContainer, 50, -25), Phaser.Display.Align.In.LeftCenter(this.soundText, this.subButtonsContainer, -20, -25), Phaser.Display.Align.In.Center(this.musicButton, this.subButtonsContainer, 50, 25), Phaser.Display.Align.In.LeftCenter(this.musicText, this.subButtonsContainer, -20, 25)), Phaser.Display.Align.In.TopCenter(this.subButtonsContainer, this.popup, 0, -40)
						}, t
					}(GameCore.Screen),
					Qg = qg,
					$g = aa.Z.DEFAULT,
					ev = $g.KEY,
					tv = $g.FRAME,
					iv = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).coinsText = void 0, s.contentHolder = void 0, s.popupShowUpAnimation = void 0, s.popupFadeOutAnimation = void 0, s.open = function(t) {
								e.prototype.open.call((0, Un.Z)(s)), s.updateInteractive(t.isWatchAdsButtonClicked), s.updateCoinsNumber(t), s.runOpenAnimation()
							}, s.handleClose = function() {
								s.runCloseAnimation()
							}, s.createTexts(), s.setDepth(Wn.Ks.PRIORITY), s.setY(-50), s.updateBackground(), s.setInteractiveZone(), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setInteractiveZone = function() {
							this.zone.setInteractive({
								useHandCursor: !0
							}), this.zone.on(Phaser.Input.Events.GAMEOBJECT_POINTER_DOWN, this.handleClose)
						}, i.updateBackground = function() {
							this.background.setAlpha(.7)
						}, i.createTexts = function() {
							this.contentHolder = new Phaser.GameObjects.Container(this.scene, 0, 0);
							var e = this.scene.make.bitmapText({
									size: this.scene.fontSize(26),
									text: "you don't have \n enough coins",
									font: _a.Z.PRIMARY.KEY,
									origin: {
										x: .5,
										y: .5
									}
								}),
								t = this.scene.make.bitmapText({
									size: this.scene.fontSize(26),
									text: "you have:",
									font: _a.Z.PRIMARY.KEY,
									origin: {
										x: .5,
										y: .5
									}
								});
							t.setTint(13467442);
							var i = this.scene.make.image({
								key: ev,
								frame: tv.ICON_COIN
							});
							i.setWorldSize(26, 26), this.coinsText = this.scene.make.bitmapText({
								size: this.scene.fontSize(26),
								text: "0",
								font: _a.Z.PRIMARY.KEY,
								origin: {
									x: 0,
									y: .5
								}
							}), this.coinsText.setTint(16766720), this.contentHolder.add([t, i, this.coinsText, e]), this.add(this.contentHolder), Phaser.Display.Align.In.Center(t, this.zone, -40, 40), Phaser.Display.Align.In.Center(i, t, 77), Phaser.Display.Align.In.Center(this.coinsText, i, 20), Phaser.Display.Align.In.Center(e, this, 0, -40)
						}, i.runCloseAnimation = function() {
							var e, t;
							null != (e = this.popupFadeOutAnimation) && null != (t = e.tween) && t.isPlaying() || (this.scene.audio.playSound(sa.Z.POPUP_OUT), this.runPopupExitsAnimation(0, 200))
						}, i.runOpenAnimation = function() {
							var e, t;
							null != (e = this.popupShowUpAnimation) && null != (t = e.tween) && t.isPlaying() || (this.scene.audio.playSound(sa.Z.POPUP_IN), this.runPopupEntrancesAnimation(0, 400))
						}, i.updateInteractive = function(e) {
							var t = this;
							this.zone.disableInteractive(), e || this.scene.time.delayedCall(500, (function() {
								t.zone.setInteractive()
							}))
						}, i.updateCoinsNumber = function(e) {
							var t = e.coins;
							"number" === typeof t && null !== t ? this.coinsText.setText("" + t) : this.coinsText.setText("0")
						}, i.runPopupEntrancesAnimation = function(e, t) {
							if (!this.popupShowUpAnimation) {
								var i = this.scale;
								this.popupShowUpAnimation = new cr.Z({
									targets: [this.contentHolder],
									delay: e,
									duration: t,
									props: {
										y: {
											from: 350,
											to: this.contentHolder.y
										},
										scale: {
											start: 0,
											from: 0,
											to: i
										}
									}
								})
							}
							this.popupShowUpAnimation.play()
						}, i.runPopupExitsAnimation = function(e, t) {
							var i = this;
							this.popupFadeOutAnimation || (this.popupFadeOutAnimation = new qn.Z({
								targets: [this.contentHolder],
								delay: e,
								duration: t,
								props: {
									y: 250,
									scale: 0
								},
								onComplete: function() {
									i.scene.screen.close(i.name)
								}
							})), this.popupFadeOutAnimation.play()
						}, t
					}(GameCore.Screen),
					nv = iv,
					av = i(17063),
					sv = aa.Z.THEME,
					ov = sv.KEY,
					rv = sv.FRAME,
					lv = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).bar.setTexture(ov, rv.BG_VALUE_BAR), i
						}
						return (0, l.Z)(t, e), t
					}(ds.Z),
					cv = lv,
					hv = aa.Z.DEFAULT,
					uv = hv.KEY,
					dv = hv.FRAME,
					pv = aa.Z.THEME,
					mv = pv.KEY,
					fv = pv.FRAME,
					gv = GameCore.Configs,
					vv = (gv.Network, gv.Gameplay),
					yv = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).scene = void 0, s.isSuccessfulRescue = void 0, s.isFailedRescue = !1, s.isClosed = !0, s.watchAdsButton = void 0, s.useCoinButton = void 0, s.coinsNeeded = void 0, s.isWatchAdsButtonClicked = !1, s.isUseCoinButtonClicked = !1, s.scaleUpAnimation = void 0, s.notifyScreen = void 0, s.notEnoughCoinScreen = void 0, s.popup = void 0, s.headerTitle = void 0, s.screenBackground = void 0, s.outOfBubblesText = void 0, s.missionDetail = void 0, s.missionDetailText = void 0, s.failIcon = void 0, s.closeButton = void 0, s.screenContent = void 0, s.coinBulletsRescueText = void 0, s.adBulletsRescueText = void 0, s.coinText = void 0, s.coinBulletsRescue = void 0, s.adBulletsRescue = void 0, s.coinBar = void 0, s.coinBlock = void 0, s.coinBlockBg = void 0, s.coinBlockIcon = void 0, s.coinBlockText = void 0, s.screenEntranceAnimation = void 0, s.screenExitAnimation = void 0, s.coinBarFadeInAnimation = void 0, s.coinBarFadeOutAnimation = void 0, s.currentRescuePrice = void 0, s.popupShowUpAnimation = void 0, s.popupFadeOutAnimation = void 0, s.open = function() {
								e.prototype.open.call((0, Un.Z)(s)), s.scene.storage.dispatch((0, Ua.Wv)()), s.getNotifyScreen(), s.isClosed = !1, s.isSuccessfulRescue = !1, s.isFailedRescue = !1, s.updateLevelText(), s.updateButtonsState(), s.updateMissionDetail(), s.updateRescueBullets(s.scene.gameManager.rescueTime), s.updatePlayerCoin(), s.runOpenAnimation(), s.runCoinBlockEntrancesAnimation()
							}, s.handleShowRewardedVideoAd = (0, r.Z)(h().mark((function e() {
								var t;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (!(s.isWatchAdsButtonClicked || s.isUseCoinButtonClicked || s.isFailedRescue)) {
												e.next = 2;
												break
											}
											return e.abrupt("return");
										case 2:
											return s.isWatchAdsButtonClicked = !0, s.watchAdsButton.setDisabled(!0), s.useCoinButton.setDisabled(!0), t = s.scene.game.globalScene, e.prev = 6, s.scene.audio.pauseMusic(), s.scene.audio.muteAllSound(), t.screen.open(Wn.o4.NOTIFY_SCREEN, {
												message: s.scene.lang.getText("loading_ads"),
												duration: 0,
												loading: !0
											}), e.next = 12, new(oe())((function(e, t) {
												s.scene.ads.getAdStatus(GameCore.Ads.Types.REWARDED) === GameCore.Ads.Status.LOADING ? s.scene.ads.events.once(GameCore.Ads.Events.LOADED, e) : s.scene.ads.preloadRewardedVideoAsync().then(e).catch(t)
											}));
										case 12:
											return e.next = 14, s.scene.ads.showRewardedVideoAsync();
										case 14:
											s.scene.gameManager.setIsUseCoinRescue(!1), t.screen.close(Wn.o4.NOTIFY_SCREEN), s.handleSuccessfulRescue(s.adBulletsRescue), e.next = 26;
											break;
										case 19:
											if (e.prev = 19, e.t0 = e.catch(6), !(e.t0 instanceof Object && GameCore.Utils.Object.hasOwn(e.t0, "code"))) {
												e.next = 25;
												break
											}
											if ("USER_INPUT" !== e.t0.code) {
												e.next = 25;
												break
											}
											return s.showNotifySkipAds(), e.abrupt("return");
										case 25:
											s.showNotifyNoAds();
										case 26:
											return e.prev = 26, s.scene.audio.playMusic(), s.scene.audio.unmuteAllSound(), s.scene.ads.preloadRewardedVideoAsync().catch((function(e) {})), e.finish(26);
										case 31:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[6, 19, 26, 31]
								])
							}))), s.showNotifyNoAds = function(e) {
								e && e.name !== Wn.o4.NOTIFY_SCREEN || (s.scene.game.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
									message: s.scene.lang.getText("no_ads_to_display"),
									duration: 2e3,
									loading: !1
								}), s.notifyScreen.once(GameCore.Screens.Events.CLOSE, s.handleFailedAds))
							}, s.handleFailedAds = function() {
								s.useCoinButton.setDisabled(!1), s.watchAdsButton.setDisabled(!1), s.isWatchAdsButtonClicked = !1
							}, s.showNotifyInsufficientCoins = function(e) {
								s.isWatchAdsButtonClicked ? (s.notEnoughCoinScreen.once(GameCore.Screens.Events.CLOSE, s.handleFailedRescue), s.scene.screen.open(Wn.o4.NOT_ENOUGH_COINS_SCREEN, {
									coins: e,
									isWatchAdsButtonClicked: s.isWatchAdsButtonClicked
								}), s.scene.time.delayedCall(2e3, (function() {
									s.scene.screen.close(Wn.o4.NOT_ENOUGH_COINS_SCREEN)
								})), s.isClosed = !0, s.scene.screen.close(s.name)) : (s.notEnoughCoinScreen.once(GameCore.Screens.Events.CLOSE, s.handleCloseNotifyInsufficientCoins), s.scene.screen.open(Wn.o4.NOT_ENOUGH_COINS_SCREEN, {
									coins: e,
									isWatchAdsButtonClicked: s.isWatchAdsButtonClicked
								}))
							}, s.handleCloseNotifyInsufficientCoins = function() {
								var e, t;
								null == (e = s.scaleUpAnimation) || null == (t = e.tween) || t.on(Phaser.Tweens.Events.TWEEN_COMPLETE, (function() {}))
							}, s.showNotifySkipAds = function() {
								s.scene.game.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
									message: s.scene.lang.getText("sorry_no_rewards_you_have_cancelled_the_ad"),
									duration: 2e3,
									loading: !1
								}), s.notifyScreen.once(GameCore.Screens.Events.CLOSE, s.handleFailedAds)
							}, s.handleFailedRescue = function() {
								if (!s.isFailedRescue) {
									if (s.isFailedRescue = !0, !s.isClosed) return s.isClosed = !0, s.runCloseAnimation((function() {
										s.scene.bulletItemManager.stop(), s.scene.stateManager.gameOver()
									})), void s.runCoinBlockExitsAnimation();
									s.scene.bulletItemManager.stop(), s.scene.stateManager.gameOver()
								}
							}, s.handleSuccessfulRescue = function() {
								var e = (0, r.Z)(h().mark((function e(t, i) {
									return h().wrap((function(e) {
										for (;;) switch (e.prev = e.next) {
											case 0:
												if (void 0 === i && (i = 1), !s.isSuccessfulRescue) {
													e.next = 3;
													break
												}
												return e.abrupt("return");
											case 3:
												s.isSuccessfulRescue = !0, s.scene.audio.playSound(sa.Z.DAILY_REWARD), s.scene.gameManager.shooter.updateRemainingBullet(t, !0), s.runCloseAnimation((function() {
													s.scene.bulletItemManager.start(), s.scene.stateManager.play(), s.scene.footer.setDisabled(!1, !0), s.scene.gameManager.shooter.attachBullet()
												})), s.runCoinBlockExitsAnimation();
											case 8:
											case "end":
												return e.stop()
										}
									}), e)
								})));
								return function(t, i) {
									return e.apply(this, arguments)
								}
							}(), s.handleRescueUsingCoin = function() {
								if (!(s.isUseCoinButtonClicked || s.isWatchAdsButtonClicked || s.isFailedRescue)) {
									s.isUseCoinButtonClicked = !0, s.watchAdsButton.setDisabled(!0), s.useCoinButton.setDisabled(!0);
									var e = s.scene.player.getCoins();
									if (e >= s.currentRescuePrice) {
										var t = e - s.currentRescuePrice;
										s.scene.gameManager.setIsUseCoinRescue(!0), s.scene.player.setCustomData("coin", t), s.handleSuccessfulRescue(s.coinBulletsRescue);
										var i = "Rescue_" + (s.scene.gameManager.rescueTime - 1);
										s.logSpendVirtualCurrency(s.currentRescuePrice, i)
									} else {
										if (s.scene.payment.getPaymentEnable()) s.scene.payment.openStore();
										else s.scene.game.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
											message: s.scene.lang.getText("not_enough_coin"),
											duration: 1500,
											loading: !1
										});
										s.notifyScreen.once(GameCore.Screens.Events.CLOSE, (function() {
											s.isUseCoinButtonClicked = !1, s.watchAdsButton.setDisabled(!1), s.useCoinButton.setDisabled(!1)
										}))
									}
								}
							}, s.handleCoinBarClick = function() {
								s.scene.payment.getPaymentEnable() ? s.scene.payment.openStore() : s.scene.screen.open(Wn.o4.REWARD_SCREEN, {
									awardCoins: GameCore.Configs.Gameplay.AwardCoins
								})
							}, s.scene = t, s.coinsNeeded = s.scene.registry.get("rescueCoins"), s.setDepth(Wn.Ks.POPUP), s.background.setAlpha(.5), s.createContent(), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.getNotifyScreen = function() {
							var e = this.scene.game.globalScene;
							if (!this.notifyScreen) {
								var t = e.screen.get(Wn.o4.NOTIFY_SCREEN);
								t instanceof av.Z && (this.notifyScreen = t)
							}
						}, i.updateLevelText = function() {
							var e = this.scene.level.getLevel();
							this.headerTitle.setText("" + this.scene.lang.getText({
								key: "level_{X}",
								variables: [e]
							}))
						}, i.updateButtonsState = function() {
							this.watchAdsButton.revive(), this.watchAdsButton.setAlpha(1), this.watchAdsButton.setDisabled(!1), this.isWatchAdsButtonClicked = !1, this.useCoinButton.revive(), this.useCoinButton.setAlpha(1), this.isUseCoinButtonClicked = !1, this.scene.player.getCustomData("coin") >= this.coinsNeeded ? this.useCoinButton.setDisabled(!1) : this.useCoinButton.setDisabled(!0)
						}, i.createContent = function() {
							this.createPopup(), this.createTitle(), this.createOutOfBubblesText(), this.createMissionDetail(), this.createCloseButton(), this.createUseCoinButton(), this.createWatchAdsButton(), this.createCoinBar()
						}, i.createNotEnoughCoinsScreen = function() {
							this.notEnoughCoinScreen = this.scene.screen.add(Wn.o4.NOT_ENOUGH_COINS_SCREEN, nv)
						}, i.logSpendVirtualCurrency = function(e, t) {
							this.scene.analytics.event(Xt._.SPEND_VIRTUAL_CURRENCY, {
								value: e,
								item_name: t,
								virtual_currency_name: "coin"
							})
						}, i.createUseCoinButton = function() {
							this.useCoinButton = new ea.Z(this.scene, uv, dv.BUTTON_GREEN_LONG, 182, 57), this.useCoinButton.setName("UseCoin");
							var e = ia.Z.addText(this.scene, {
									font: _a.Z.PRIMARY.KEY,
									size: this.scene.fontSize(22),
									text: this.scene.lang.getText("play_on"),
									maxWidth: 100,
									maxHeight: 35
								}),
								t = this.scene.make.image({
									key: uv,
									frame: dv.ICON_MISSION_BALLS_BIG
								});
							t.setWorldSize(40.5, 35), this.coinBulletsRescueText = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(18),
								text: "+0"
							});
							var i = aa.Z.DEFAULT,
								n = i.KEY,
								a = i.FRAME,
								s = this.scene.make.image({
									key: n,
									frame: a.ICON_COIN
								});
							s.setWorldSize(24, 24.5), this.coinText = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(22),
								text: "100"
							}), this.useCoinButton.add([e, t, this.coinBulletsRescueText, s, this.coinText]), this.popup.add(this.useCoinButton), Phaser.Display.Align.In.Center(e, this.useCoinButton, -24, -2), Phaser.Display.Align.To.RightCenter(s, e, 2, 0), Phaser.Display.Align.To.RightCenter(this.coinText, s, 2, 0), Phaser.Display.Align.In.LeftCenter(t, this.useCoinButton, 24, -6), Phaser.Display.Align.In.Center(this.coinBulletsRescueText, t, 0, -2), Phaser.Display.Align.In.BottomCenter(this.useCoinButton, this.popup, 0, -90), this.useCoinButton.onClick = this.handleRescueUsingCoin
						}, i.createPopup = function() {
							this.popup = new ro(this.scene, 0, 0, 294.5, 363.5), this.add(this.popup), Phaser.Display.Align.In.Center(this.popup, this.zone, 0, 0)
						}, i.createTitle = function() {
							this.headerTitle = new Dh(this.scene, "" + this.scene.lang.getText({
								key: "level_{X}",
								variables: [1]
							})), this.popup.add(this.headerTitle), Phaser.Display.Align.In.TopCenter(this.headerTitle, this.popup, 0, 20)
						}, i.createOutOfBubblesText = function() {
							this.outOfBubblesText = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(28),
								text: this.scene.lang.getText("out_of_bubbles"),
								origin: {
									x: .5,
									y: .5
								},
								maxWidth: 230
							}), this.popup.add(this.outOfBubblesText), Phaser.Display.Align.In.TopCenter(this.outOfBubblesText, this.popup, 0, -40)
						}, i.createMissionDetail = function() {
							var e = this.scene.make.image({
								key: mv,
								frame: fv.SETTING_BOX
							});
							e.setWorldSize(243.5, 95.5), this.missionDetail = this.scene.add.container(), this.missionDetail.add(e), this.failIcon = this.scene.make.image({
								key: uv,
								frame: dv.RESCUE_ICON_FAIL
							}), this.failIcon.setWorldSize(25, 28), this.missionDetailText = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(20),
								text: this.scene.lang.getText("pop_all_bubbles"),
								maxWidth: 160
							}), this.missionDetailText.setOrigin(.5, .5), this.missionDetail.add([this.failIcon, this.missionDetailText]), Phaser.Display.Align.In.Center(e, this.missionDetail), Phaser.Display.Align.In.Center(this.failIcon, this.background, -80, -5), Phaser.Display.Align.In.Center(this.missionDetailText, this.background, 15, 0), this.popup.add(this.missionDetail), Phaser.Display.Align.In.Center(this.missionDetail, this.popup, 0, -30)
						}, i.createCloseButton = function() {
							this.closeButton = new ea.Z(this.scene, mv, fv.BUTTON_CLOSE, 37.5, 39), this.closeButton.setName("Close"), this.popup.add(this.closeButton), this.closeButton.onClick = this.handleFailedRescue, Phaser.Display.Align.In.TopRight(this.closeButton, this.popup, 14, 14)
						}, i.createCoinBar = function() {
							this.coinBar = new cv(this.scene), this.coinBar.onClick = this.handleCoinBarClick, Phaser.Display.Align.In.TopRight(this.coinBar, this.zone, -12, -10), this.add(this.coinBar)
						}, i.createWatchAdsButton = function() {
							this.watchAdsButton = new ea.Z(this.scene, uv, dv.BUTTON_BLUE_LONG, 182, 57), this.watchAdsButton.setName("ViewAd");
							var e = ia.Z.addText(this.scene, {
									font: _a.Z.PRIMARY.KEY,
									size: this.scene.fontSize(22),
									text: this.scene.lang.getText("continue"),
									maxWidth: 115
								}),
								t = this.scene.make.image({
									key: uv,
									frame: dv.ICON_MISSION_BALLS_BIG
								});
							t.setWorldSize(40.5, 35), this.adBulletsRescueText = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(18),
								text: "+0"
							});
							var i = this.scene.make.image({
								key: uv,
								frame: dv.RESCUE_ICON_AD
							});
							i.setWorldSize(46.5, 40), this.watchAdsButton.add([e, t, this.adBulletsRescueText, i]), this.popup.add(this.watchAdsButton), Phaser.Display.Align.In.Center(e, this.watchAdsButton, 24, -2), Phaser.Display.Align.To.LeftCenter(i, this.watchAdsButton, -63, -2), Phaser.Display.Align.In.LeftCenter(t, this.watchAdsButton, 24, -6), Phaser.Display.Align.In.Center(this.adBulletsRescueText, t, 0, -2), Phaser.Display.Align.In.BottomCenter(this.watchAdsButton, this.popup, 0, -20), this.watchAdsButton.onClick = this.handleShowRewardedVideoAd
						}, i.runOpenAnimation = function() {
							this.scene.audio.playSound(sa.Z.POPUP_IN), this.runPopupEntrancesAnimation(0, 500)
						}, i.runCloseAnimation = function(e) {
							this.runPopupExitsAnimation(0, 300), this.popupFadeOutAnimation.next((function() {
								e && e()
							}))
						}, i.runPopupEntrancesAnimation = function(e, t) {
							var i = this;
							if (this.useCoinButton.setDisabled(!0), this.watchAdsButton.setDisabled(!0), this.closeButton.setDisabled(!0), this.useCoinButton.setAlpha(1), this.watchAdsButton.setAlpha(1), this.closeButton.setAlpha(1), !this.popupShowUpAnimation) {
								var n = this.popup,
									a = n.y,
									s = n.scale;
								this.popupShowUpAnimation = new cr.Z({
									targets: [this.popup],
									delay: e,
									duration: t,
									props: {
										y: {
											start: 350,
											from: 350,
											to: a
										},
										alpha: {
											start: 0,
											from: 0,
											to: 1
										},
										scale: {
											start: 0,
											from: 0,
											to: s
										}
									},
									onComplete: function() {
										i.useCoinButton.setDisabled(!1), i.watchAdsButton.setDisabled(!1), i.closeButton.setDisabled(!1)
									}
								})
							}
							this.popupShowUpAnimation.play()
						}, i.runPopupExitsAnimation = function(e, t) {
							var i, n = this;
							this.useCoinButton.setDisabled(!0), this.watchAdsButton.setDisabled(!0), this.closeButton.setDisabled(!0), this.popupFadeOutAnimation || (this.popupFadeOutAnimation = new qn.Z({
								targets: [this.popup],
								delay: e,
								duration: t,
								props: {
									y: 250,
									alpha: {
										start: 1,
										from: 1,
										to: 0
									},
									scale: 0
								},
								onComplete: function() {
									n.popup.setY(0), n.scene.screen.close(n.name)
								}
							})), null == (i = this.popupFadeOutAnimation) || i.play()
						}, i.runCoinBlockEntrancesAnimation = function() {
							this.coinBarFadeInAnimation || (this.coinBarFadeInAnimation = new Jn.Z({
								targets: [this.coinBar],
								duration: 400
							})), this.coinBarFadeInAnimation.play()
						}, i.runCoinBlockExitsAnimation = function() {
							this.coinBarFadeOutAnimation || (this.coinBarFadeOutAnimation = new qn.Z({
								targets: [this.coinBar],
								duration: 200
							})), this.coinBarFadeOutAnimation.play()
						}, i.updateMissionDetail = function() {
							var e = this.scene.level.getLevelData();
							"CollectBubbles" == (null == e ? void 0 : e.missionType) ? this.missionDetailText.setText(this.scene.lang.getText("pop_all_bubbles")): this.missionDetailText.setText(this.scene.lang.getText("collect_gems"))
						}, i.updateRescueBullets = function(e) {
							var t = 0,
								i = 0,
								n = 0;
							t = vv.RescueBulletByAd.length > e ? vv.RescueBulletByAd[e - 1] : vv.RescueBulletByAd[vv.RescueBulletByAd.length - 1], vv.RescueByCoin.length > e ? (i = vv.RescueByCoin[e - 1].bullet, n = vv.RescueByCoin[e - 1].coin) : (i = vv.RescueByCoin[vv.RescueByCoin.length - 1].bullet, n = vv.RescueByCoin[vv.RescueByCoin.length - 1].coin), this.currentRescuePrice = n, this.adBulletsRescue = t, this.coinBulletsRescue = i, this.adBulletsRescueText.setText("+" + t), this.coinBulletsRescueText.setText("+" + i), this.coinText.setText("" + n)
						}, i.updatePlayerCoin = function() {
							var e = this.scene.player.getCoins();
							this.coinBar.setValue(e)
						}, i.getTotalUseRescue = function() {
							return +this.isSuccessfulRescue
						}, t
					}(GameCore.Screen),
					bv = yv,
					Ev = aa.Z.GAMEPLAY.GAME_OBJECTS,
					Tv = Ev.KEY,
					Av = Ev.FRAME,
					Sv = function(e) {
						function t(t) {
							var i = {
								frameRate: 35,
								frames: t.generateFrameNames(Tv, {
									prefix: Av.PREFIX_IRON_SHELL,
									start: 5,
									end: 0
								})
							};
							return e.call(this, t, Tv, i) || this
						}
						return (0, l.Z)(t, e), t
					}(Phaser.Animations.Animation),
					_v = Sv,
					Cv = aa.Z.GAMEPLAY.EFFECTS,
					wv = Cv.KEY,
					Bv = Cv.FRAME,
					Iv = function(e) {
						function t(t) {
							var i = {
								frameRate: 28,
								frames: t.generateFrameNames(wv, {
									prefix: Bv.COLOR_BALL_EXPLOSIVE,
									end: 19,
									zeroPad: 2
								}),
								showOnStart: !0,
								hideOnComplete: !0
							};
							return e.call(this, t, wv, i) || this
						}
						return (0, l.Z)(t, e), t
					}(Phaser.Animations.Animation),
					Pv = Iv,
					xv = aa.Z.GAMEPLAY.EFFECTS,
					Ov = xv.KEY,
					kv = xv.FRAME,
					Rv = function(e) {
						function t(t) {
							var i = {
								frameRate: 20,
								frames: t.generateFrameNames(Ov, {
									prefix: kv.COLOR_BALL_EXPLOSIVE_BOMB,
									start: 0,
									end: 8,
									zeroPad: 1
								}),
								showOnStart: !0,
								hideOnComplete: !0
							};
							return e.call(this, t, Ov, i) || this
						}
						return (0, l.Z)(t, e), t
					}(Phaser.Animations.Animation),
					Mv = Rv,
					Lv = aa.Z.GAMEPLAY.GAME_OBJECTS,
					Gv = Lv.KEY,
					Dv = Lv.FRAME,
					Fv = function(e) {
						function t(t) {
							var i = {
								frameRate: 35,
								frames: t.generateFrameNames(Gv, {
									prefix: Dv.PREFIX_IRON_SHELL,
									start: 0,
									end: 5
								})
							};
							return e.call(this, t, Gv, i) || this
						}
						return (0, l.Z)(t, e), t
					}(Phaser.Animations.Animation),
					Nv = Fv,
					Zv = aa.Z.GAMEPLAY.EFFECTS,
					Uv = Zv.KEY,
					jv = Zv.FRAME,
					Yv = function(e) {
						function t(t) {
							var i = {
								frameRate: 20,
								frames: t.generateFrameNames(Uv, {
									prefix: jv.PREFIX_SHINE,
									start: 1,
									end: 9
								}),
								hideOnComplete: !0
							};
							return e.call(this, t, Uv, i) || this
						}
						return (0, l.Z)(t, e), t
					}(Phaser.Animations.Animation),
					Wv = Yv,
					Kv = aa.Z.GAMEPLAY.EFFECTS,
					Hv = Kv.KEY,
					zv = Kv.FRAME,
					Xv = function(e) {
						function t(t) {
							var i = {
								duration: 300,
								frames: t.generateFrameNames(Hv, {
									prefix: zv.LUCKY_POUCH_PREFIX,
									start: 1,
									end: 4
								}),
								showOnStart: !0,
								hideOnComplete: !0
							};
							return e.call(this, t, Hv, i) || this
						}
						return (0, l.Z)(t, e), t
					}(Phaser.Animations.Animation),
					Vv = Xv,
					Jv = aa.Z.GAMEPLAY.GAME_OBJECTS,
					qv = Jv.KEY,
					Qv = Jv.FRAME,
					$v = function(e) {
						function t(t) {
							var i = {
								duration: 300,
								frames: t.generateFrameNames(qv, {
									prefix: Qv.FIREFLY_PREFIX,
									start: 0,
									end: 23
								}),
								showOnStart: !0,
								hideOnComplete: !0
							};
							return e.call(this, t, qv, i) || this
						}
						return (0, l.Z)(t, e), t
					}(Phaser.Animations.Animation),
					ey = $v,
					ty = aa.Z.GAMEPLAY.EFFECTS,
					iy = ty.KEY,
					ny = ty.FRAME,
					ay = function(e) {
						function t(t) {
							var i = {
								duration: 300,
								frames: t.generateFrameNames(iy, {
									prefix: ny.BAT_FLYING_PREFIX,
									start: 0,
									end: 11
								}),
								showOnStart: !0,
								hideOnComplete: !0
							};
							return e.call(this, t, iy, i) || this
						}
						return (0, l.Z)(t, e), t
					}(Phaser.Animations.Animation),
					sy = ay,
					oy = aa.Z.GAMEPLAY.EFFECTS,
					ry = oy.KEY,
					ly = oy.FRAME,
					cy = function(e) {
						function t(t) {
							var i = {
								frameRate: 35,
								frames: t.generateFrameNames(ry, {
									prefix: ly.PREFIX_COMEBACK_BALL,
									start: 1,
									end: 16
								})
							};
							return e.call(this, t, ry, i) || this
						}
						return (0, l.Z)(t, e), t
					}(Phaser.Animations.Animation),
					hy = cy,
					uy = aa.Z.GAMEPLAY.GAME_OBJECTS,
					dy = uy.KEY,
					py = uy.FRAME,
					my = (uy.TEXTURE, function(e) {
						function t(t) {
							var i = {
								duration: 600,
								frames: t.generateFrameNames(dy, {
									prefix: py.ELECTRIC_A_PREFIX,
									start: 1,
									end: 8,
									zeroPad: 1
								}),
								repeat: -1,
								showOnStart: !0
							};
							return e.call(this, t, dy, i) || this
						}
						return (0, l.Z)(t, e), t
					}(Phaser.Animations.Animation)),
					fy = my,
					gy = aa.Z.GAMEPLAY.GAME_OBJECTS,
					vy = gy.KEY,
					yy = gy.FRAME,
					by = function(e) {
						function t(t) {
							var i = {
								duration: 600,
								frames: t.generateFrameNames(vy, {
									prefix: yy.ELECTRIC_B_PREFIX,
									start: 1,
									end: 7,
									zeroPad: 1
								}),
								showOnStart: !0
							};
							return e.call(this, t, vy, i) || this
						}
						return (0, l.Z)(t, e), t
					}(Phaser.Animations.Animation),
					Ey = by,
					Ty = aa.Z.GAMEPLAY.GAME_OBJECTS,
					Ay = Ty.KEY,
					Sy = Ty.FRAME,
					_y = function(e) {
						function t(t) {
							var i = {
								duration: 600,
								frames: t.generateFrameNames(Ay, {
									prefix: Sy.ELECTRIC_C_PREFIX,
									start: 1,
									end: 8,
									zeroPad: 1
								}),
								showOnStart: !0
							};
							return e.call(this, t, Ay, i) || this
						}
						return (0, l.Z)(t, e), t
					}(Phaser.Animations.Animation),
					Cy = _y,
					wy = aa.Z.GAMEPLAY.GAME_OBJECTS,
					By = wy.KEY,
					Iy = wy.FRAME,
					Py = function(e) {
						function t(t) {
							var i = {
								duration: 600,
								frames: t.generateFrameNames(By, {
									prefix: Iy.ELECTRIC_D_PREFIX,
									start: 1,
									end: 8,
									zeroPad: 1
								}),
								showOnStart: !0
							};
							return e.call(this, t, By, i) || this
						}
						return (0, l.Z)(t, e), t
					}(Phaser.Animations.Animation),
					xy = Py,
					Oy = aa.Z.GAMEPLAY.GAME_OBJECTS,
					ky = Oy.KEY,
					Ry = Oy.FRAME,
					My = function(e) {
						function t(t) {
							var i = {
								duration: 600,
								frames: t.generateFrameNames(ky, {
									prefix: Ry.ELECTRIC_E_PREFIX,
									start: 1,
									end: 9,
									zeroPad: 1
								}),
								showOnStart: !0
							};
							return e.call(this, t, ky, i) || this
						}
						return (0, l.Z)(t, e), t
					}(Phaser.Animations.Animation),
					Ly = My,
					Gy = function() {
						function e(e) {
							this.scene = void 0, this.scene = e, this.addGlobalAnims()
						}
						return e.prototype.addGlobalAnims = function() {
							var e = this.scene.anims,
								t = new Pv(e);
							e.add("color-ball-explosion", t);
							var i = new Mv(e);
							e.add("color-ball-explosion-by-bomb", i);
							var n = new Nv(e);
							e.add("open-iron-shell", n);
							var a = new _v(e);
							e.add("close-iron-shell", a);
							var s = new Wv(e);
							e.add("color-ball-shine", s);
							var o = new Vv(e);
							e.add("open-lucky-pouch", o);
							var r = new ey(e);
							e.add("firefly-flying", r);
							var l = new sy(e);
							e.add("bat-flying", l);
							var c = new hy(e);
							e.add("comeback-ball-shine", c);
							var h = new fy(e);
							e.add("electric-a", h);
							var u = new Ey(e);
							e.add("electric-b", u);
							var d = new Cy(e);
							e.add("electric-c", d);
							var p = new xy(e);
							e.add("electric-d", p);
							var m = new Ly(e);
							e.add("electric-e", m)
						}, e
					}(),
					Dy = Gy,
					Fy = function(e) {
						this.scene = void 0, this.scene = e
					},
					Ny = function() {
						var e = (0, r.Z)(h().mark((function e(t, i) {
							return h().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return e.abrupt("return", new(oe())((function(e) {
											t.time.delayedCall(i, e)
										})));
									case 1:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t, i) {
							return e.apply(this, arguments)
						}
					}(),
					Zy = Ny,
					Uy = function(e) {
						function t(t) {
							var i;
							return i = e.call(this, t) || this, t.destroyGamePlay(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.ready = function() {
							var e = new sb(this.scene);
							this.scene.stateManager.transitionTo(e)
						}, i.play = function() {}, i.pause = function() {}, i.rescue = function() {}, i.gameOver = function() {}, i.quit = function() {}, i.nextLevel = function() {}, i.update = function(e) {}, t
					}(Fy),
					jy = Uy,
					Yy = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).handleFinishGame = function() {
								i.scene.storage.dispatch((0, Ua.RM)())
							}, i.handleGameOver(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.handleGameOver = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return t = this.scene, this.logLevelFailed(), t.events.emit(Ef.GAME_OVER), t.screen.open(Wn.o4.GAME_OVER_SCREEN), e.next = 6, Zy(t, 1e3);
										case 6:
											this.handleFinishGame();
										case 7:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.logLevelFailed = function() {
							var e = this.scene,
								t = e.gameManager,
								i = t.scoreManager.getStar(),
								n = t.scoreManager.getScore(),
								a = e.level.getLevel(),
								s = e.player.getLastTimePlayed(),
								o = Math.round(((new Date).getTime() - s) / 1e3),
								r = t.getShootTimes(),
								l = t.getSwapBallsTime(),
								c = e.footer.bombBulletItem.getFreeItemGottenCount(),
								h = e.footer.rocketBulletItem.getFreeItemGottenCount(),
								u = t.shooter.getItemUsedCount("BombBulletItem"),
								d = t.shooter.getItemUsedCount("RainbowBulletBallItem"),
								p = t.shooter.getItemUsedCount("ElectricBulletBallItem"),
								m = t.shooter.getItemUsedCount("RocketBulletItem"),
								f = t.getMatchCountSuccess(),
								g = t.getMatchCountFail(),
								v = this.scene.gameManager.getMissionBalls().length,
								y = this.scene.gameManager.getAllBallsOnGrid().length;
							e.analytics.event(Xt._.LEVEL_END, {
								success: !1,
								level: a,
								score: n,
								level_stars: i,
								level_play_time: o,
								turn_moves: r,
								swap_balls: l,
								free_bomb_item_gotten: c,
								free_rocket_item_gotten: h,
								bomb_item_used: u,
								rainbow_item_used: d,
								electric_item_used: p,
								rocket_item_used: m,
								match_count: f,
								match_failed_count: g,
								mission_balls: v,
								all_balls_on_grid: y
							}), e.facebook.log(Xt._.LEVEL_END, a, {
								level: a,
								success: !1
							})
						}, i.ready = function() {
							var e = new sb(this.scene);
							this.scene.stateManager.transitionTo(e)
						}, i.play = function() {}, i.pause = function() {}, i.rescue = function() {}, i.gameOver = function() {}, i.quit = function() {
							var e = new jy(this.scene);
							this.scene.stateManager.transitionTo(e)
						}, i.nextLevel = function() {}, i.update = function(e) {}, t
					}(Fy),
					Wy = Yy,
					Ky = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).handleFinishGame = function() {
								i.scene.storage.dispatch((0, Ua.RM)())
							}, i.handleNextLevel(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.handleNextLevel = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return t = this.scene, this.logLevelComplete(), this.scene.skipLevelCompleteButton.kill(), t.screen.open(Wn.o4.NEXT_LEVEL_SCREEN), e.next = 6, Zy(t, 1500);
										case 6:
											this.handleFinishGame();
										case 7:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.logLevelComplete = function() {
							var e = this.scene,
								t = e.gameManager,
								i = t.scoreManager.getStar(),
								n = t.scoreManager.getScore(),
								a = e.level.getLevel(),
								s = e.player.getLastTimePlayed(),
								o = Math.round(((new Date).getTime() - s) / 1e3),
								r = t.getShootTimes(),
								l = t.getSwapBallsTime(),
								c = e.footer.bombBulletItem.getFreeItemGottenCount(),
								h = e.footer.rocketBulletItem.getFreeItemGottenCount(),
								u = t.shooter.getItemUsedCount("BombBulletItem"),
								d = t.shooter.getItemUsedCount("RainbowBulletBallItem"),
								p = t.shooter.getItemUsedCount("ElectricBulletBallItem"),
								m = t.shooter.getItemUsedCount("RocketBulletItem"),
								f = t.getMatchCountSuccess(),
								g = t.getMatchCountFail();
							e.analytics.event(Xt._.LEVEL_END, {
								success: !0,
								level: a,
								score: n,
								level_stars: i,
								level_play_time: o,
								free_bomb_item_gotten: c,
								free_rocket_item_gotten: h,
								bomb_item_used: u,
								rainbow_item_used: d,
								electric_item_used: p,
								rocket_item_used: m,
								match_count: f,
								match_failed_count: g,
								turn_moves: r,
								swap_balls: l
							}), e.facebook.log(Xt._.LEVEL_END, a, {
								level: a,
								success: !0
							})
						}, i.ready = function() {
							var e = new sb(this.scene);
							this.scene.stateManager.transitionTo(e)
						}, i.play = function() {}, i.pause = function() {}, i.rescue = function() {}, i.gameOver = function() {}, i.quit = function() {
							var e = new jy(this.scene);
							this.scene.stateManager.transitionTo(e)
						}, i.nextLevel = function() {}, i.update = function(e) {}, t
					}(Fy),
					Hy = Ky,
					zy = function(e) {
						function t(t) {
							var i;
							return i = e.call(this, t) || this, t.pauseGame(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.ready = function() {
							this.scene.resumeGame();
							var e = new sb(this.scene);
							this.scene.stateManager.transitionTo(e)
						}, i.play = function() {
							this.scene.resumeGame();
							var e = new eb(this.scene);
							this.scene.stateManager.transitionTo(e)
						}, i.pause = function() {}, i.rescue = function() {}, i.gameOver = function() {}, i.quit = function() {
							this.scene.resumeGame();
							var e = new jy(this.scene);
							this.scene.stateManager.transitionTo(e)
						}, i.nextLevel = function() {}, i.update = function(e) {}, t
					}(Fy),
					Xy = zy,
					Vy = i(89400),
					Jy = i.n(Vy),
					qy = function(e) {
						function t(t) {
							var i;
							i = e.call(this, t) || this;
							var n = t.scoreCounter.getScore(),
								a = t.registry.get("log_level");
							return t.storage.dispatch((0, ap.eG)({
								score: n,
								level: a
							})), Jy()(t.data).life < 1 ? (t.time.delayedCall(0, t.stateManager.gameOver), (0, Un.Z)(i)) : (Jy()(t.data).life -= 1, i.scene.time.delayedCall(400, (function() {
								t.screen.open(Wn.o4.RESCUE_SCREEN)
							})), i)
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.logLevelRescue = function() {
							var e = this.scene,
								t = e.gameManager,
								i = t.scoreManager.getStar(),
								n = t.scoreManager.getScore(),
								a = e.level.getLevel(),
								s = e.player.getLastTimePlayed(),
								o = Math.round(((new Date).getTime() - s) / 1e3),
								r = t.getShootTimes(),
								l = t.getSwapBallsTime(),
								c = e.footer.bombBulletItem.getFreeItemGottenCount(),
								h = e.footer.rocketBulletItem.getFreeItemGottenCount(),
								u = t.shooter.getItemUsedCount("BombBulletItem"),
								d = t.shooter.getItemUsedCount("RainbowBulletBallItem"),
								p = t.shooter.getItemUsedCount("ElectricBulletBallItem"),
								m = t.shooter.getItemUsedCount("RocketBulletItem"),
								f = t.getMatchCountSuccess(),
								g = t.getMatchCountFail(),
								v = t.getIsUseCoinRescue(),
								y = this.scene.gameManager.getMissionBalls().length,
								b = this.scene.gameManager.getAllBallsOnGrid().length;
							e.analytics.event(Xt._.LEVEL_RESCUE, {
								level: a,
								score: n,
								level_stars: i,
								level_play_time: o,
								turn_moves: r,
								swap_balls: l,
								free_bomb_item_gotten: c,
								free_rocket_item_gotten: h,
								bomb_item_used: u,
								rainbow_item_used: d,
								electric_item_used: p,
								rocket_item_used: m,
								match_count: f,
								match_failed_count: g,
								is_use_coin: v,
								mission_balls: y,
								all_balls_on_grid: b
							})
						}, i.ready = function() {}, i.play = function() {
							this.scene.resumeGame();
							var e = new eb(this.scene);
							this.scene.stateManager.transitionTo(e), this.logLevelRescue()
						}, i.pause = function() {}, i.rescue = function() {}, i.gameOver = function() {
							this.scene.resumeGame();
							var e = new Wy(this.scene);
							this.scene.stateManager.transitionTo(e)
						}, i.quit = function() {
							var e = new jy(this.scene);
							this.scene.stateManager.transitionTo(e)
						}, i.nextLevel = function() {}, i.update = function(e) {}, t
					}(Fy),
					Qy = qy,
					$y = function(e) {
						function t(t) {
							var i;
							return i = e.call(this, t) || this, t.isNeedShowGuide && (t.isNeedShowGuide = !1, t.screen.open(Wn.o4.GUIDE_SCREEN)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.ready = function() {}, i.play = function() {}, i.pause = function() {
							this.scene.pauseGame();
							var e = new Xy(this.scene);
							this.scene.stateManager.transitionTo(e)
						}, i.rescue = function() {
							var e = new Qy(this.scene);
							this.scene.stateManager.transitionTo(e)
						}, i.gameOver = function() {
							var e = new Wy(this.scene);
							this.scene.stateManager.transitionTo(e)
						}, i.quit = function() {
							var e = new jy(this.scene);
							this.scene.stateManager.transitionTo(e)
						}, i.nextLevel = function() {
							var e = new Hy(this.scene);
							this.scene.stateManager.transitionTo(e)
						}, i.update = function(e) {
							this.scene.gameManager.update(e)
						}, t
					}(Fy),
					eb = $y,
					tb = function() {
						function e(e) {
							var t = this;
							this.scene = void 0, this.floatingScorePool = void 0, this.gameData = void 0, this.baseScore = void 0, this.multiplierCombo = void 0, this.multiplierBonus = void 0, this.bonusMultiplierTimerEvent = void 0, this.countCollectBalls = void 0, this.totalDynamiteCombos = 0, this.levelText = void 0, this.updateBaseScore = function() {
								var e = t.gameData.levelScores,
									i = t.scene.registry.get("level"),
									n = e[i - 2] || 0;
								t.baseScore += n, GameCore.Utils.Valid.isDebugger() && t.levelText.setText("level: " + i + ". BaseScore: " + t.baseScore)
							}, this.multiplierCombo = 1, this.multiplierBonus = 1, this.countCollectBalls = 0, this.scene = e, this.gameData = this.scene.registry.get("gameData"), this.baseScore = this.gameData.baseScore, this.listenEvents(), GameCore.Utils.Valid.isDebugger() && (this.levelText || (this.levelText = this.scene.add.text(20, 400, ""), this.levelText.setDepth(jn.Z.ON_TOP)), this.levelText.setText(""))
						}
						var t = e.prototype;
						return t.listenEvents = function() {
							this.scene.events.on("level-up", this.updateBaseScore)
						}, t.setFloatingScorePool = function(e) {
							this.floatingScorePool = e
						}, t.addMultiplierBonusTimerEvent = function(e) {
							var t = this;
							this.multiplierBonus > 1 && this.removeMultiplierBonusTimerEvent(), this.multiplierBonus = e;
							var i = this.scene.registry.get("stampTimer");
							this.bonusMultiplierTimerEvent = this.scene.time.addEvent({
								delay: i,
								callback: function() {
									t.removeMultiplierBonusTimerEvent()
								}
							}), this.scene.events.emit(Ef.TIMER_CREATED, this.bonusMultiplierTimerEvent)
						}, t.removeMultiplierBonusTimerEvent = function() {
							var e;
							null == (e = this.bonusMultiplierTimerEvent) || e.remove(), this.bonusMultiplierTimerEvent = void 0, this.multiplierBonus = 1, this.updateMultiplier()
						}, t.updateMultiplier = function() {
							this.gameData.multiplier = this.multiplierCombo * this.multiplierBonus
						}, t.increaseScore = function(e, t) {
							var i = this.multiplierBonus,
								n = (t ? this.gameData.baseScore : this.baseScore) * e * (t ? 1 : this.multiplierCombo) * i;
							this.gameData.score += n
						}, t.updateCombosMultiplier = function() {
							var e = this.scene.registry.get("maxCombos");
							this.gameData.combosCount > 1 && this.gameData.combosCount < e ? this.multiplierCombo = this.gameData.combosCount : this.multiplierCombo = 1, this.updateMultiplier()
						}, t.processCombos = function(e) {
							var t = this.scene.registry.get("maxCombos");
							e ? this.gameData.combosCount < t ? (this.gameData.combosCount += 1, this.handleCombosIncreased(this.gameData.combosCount)) : this.gameData.combosCount = 0 : (this.gameData.combosCount = 0, this.handleCombosIncreased(this.gameData.combosCount))
						}, t.handleCombosIncreased = function(e) {
							this.scene.audio;
							if (9 === e) this.totalDynamiteCombos += 1
						}, t.processBallDestroyed = function(e) {
							var t = this;
							e.forEach((function(e) {
								t.floatingScorePool.spawn(e.x, e.y, t.baseScore * t.gameData.multiplier).playAnimation(), t.increaseScore(1)
							})), this.countCollectBalls += e.length, this.scene.events.emit(Ef.SCORE_CHANGED)
						}, t.reset = function() {
							var e;
							this.multiplierCombo = 1, this.multiplierBonus = 1, null == (e = this.bonusMultiplierTimerEvent) || e.destroy(), this.bonusMultiplierTimerEvent = void 0
						}, t.getScore = function() {
							return this.gameData.score
						}, t.getTotalBallsCollected = function() {
							return this.countCollectBalls
						}, t.getTotalDynamiteCombos = function() {
							return this.totalDynamiteCombos
						}, e
					}(),
					ib = tb;
				! function(e) {
					e[e.Beginning = 0] = "Beginning", e[e.Descending = 1] = "Descending", e[e.Reversing = 2] = "Reversing", e[e.Holding = 3] = "Holding"
				}(bf || (bf = {}));
				var nb = 11,
					ab = (GameCore.Configs.ComebackBonus, function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).startAnimation = void 0, i.handleSpeedUp = function() {
								i.startAnimation.setTimeScale(2.6)
							}, i.startGame = function() {
								var e = i.scene;
								i.scene.setIsSkipLevelComplete(!1), i.logLevelStart(), e.level.preloadLevelDataAsync(e.level.getLevel() + 1);
								var t = e.storage.getState(),
									n = (0, sp.fQ)(t),
									a = GameCore.Configs.Gameplay.SkipStartAnimation;
								e.gameModeManager.stop(), e.gameModeManager.setGameMode(n), e.startManager();
								var s = e.level.getLevelData();
								e.gameManager.guideManager.prepareGuide(null == s ? void 0 : s.guides), e.footer.setDisabled(!0);
								var o = e.gameManager.grid.getHeightGrid();
								e.cameras.main.startFollow(e.background);
								var r = e.gameManager.grid.ballInterval,
									l = o < nb ? 22 * r : (o + nb) * r,
									c = i.scene.gameZone.height;
								e.background.y = c / 2 - l, e.uiContainer.y = -l;
								var h = l / r * 75;
								a && (h = 0), i.startAnimation = e.tweens.add({
									targets: [e.background, e.uiContainer],
									duration: h,
									props: {
										y: "+=" + l
									},
									ease: Phaser.Math.Easing.Sine.Out,
									onComplete: function() {
										a ? i.setupToStartGame() : e.playMissionDetailAnimation((function() {
											return i.setupToStartGame()
										})), i.scene.input.off(Phaser.Input.Events.POINTER_DOWN, i.handleSpeedUp)
									}
								}), i.scene.time.delayedCall(50, (function() {
									i.scene.stateManager.play()
								}))
							}, i.handleShowBonusBubble = function() {
								var e = i.scene.player.getBonusBullets();
								i.scene.time.delayedCall(100, (function() {
									i.scene.gameManager.guideManager.getIsShowingGuide().isShowingGuide || (i.scene.runBonusBubblesAnimation(), i.scene.player.updateBonusBubble(e - 1))
								}))
							}, i.setupToStartGame = function() {
								var e = i.scene,
									t = i.scene.level.getLevelData(),
									n = i.scene.level.getLevel();
								i.scene.level.preloadLevelDataAsync(n + 1), e.footer.setDisabled(!1), e.gameManager.shooter.resume(), e.gameManager.grid.showObjectsInsideScreen(), e.gameManager.grid.hideObjectsOutsideScreen(), e.gameManager.shotGuide.updateObstaclesToRaycaster(), e.gameManager.guideManager.showGuide(null == t ? void 0 : t.guides), i.handleShowOfflineReward()
							}, t.destroyGamePlay(), t.level.getLevelData() ? (i.createNewGame(), i.openReadyScreen(), i.scene.player.getLevel() >= GameCore.Configs.Ads.MinLevelToShow && (t.ads.preloadRewardedVideoAsync().catch((function(e) {})), t.ads.preloadPreRollAdAsync().catch((function() {})), t.ads.preloadMidRollAdAsync().catch((function() {}))), i) : (t.game.globalScene.events.emit(In.K.SWITCH, In.C.ERROR_SCENE), (0, Un.Z)(i))
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createNewGame = function() {
							var e = this.scene;
							e.gameSettings.resetData(), e.data.set("life", GameCore.Configs.Gameplay.MaxRescueCount), e.scoreCounter = new ib(e), e.scoreCounter.setFloatingScorePool(e.floatingScorePool), this.listenEvents()
						}, i.listenEvents = function() {
							var e = this;
							this.scene.events.off(Ef.TIMER_CREATED), this.scene.events.on(Ef.TIMER_CREATED, (function(t) {
								e.scene.timerEvents.push(t)
							})), this.scene.input.on(Phaser.Input.Events.POINTER_DOWN, this.handleSpeedUp)
						}, i.openReadyScreen = function() {
							var e = this.scene;
							this.scene.time.delayedCall(100, (function() {
								e.audio.playSound(sa.Z.START_GAME)
							})), this.startGame(), e.registry.set("log_level", 1)
						}, i.logLevelStart = function() {
							var e = this.scene,
								t = e.level.getLevel();
							e.analytics.event(Xt._.LEVEL_START, {
								level: t
							}), e.facebook.log(Xt._.LEVEL_START, t, {
								level: t
							})
						}, i.ready = function() {}, i.play = function() {
							var e = new eb(this.scene);
							this.scene.stateManager.transitionTo(e)
						}, i.pause = function() {}, i.rescue = function() {}, i.gameOver = function() {}, i.quit = function() {
							var e = new jy(this.scene);
							this.scene.stateManager.transitionTo(e)
						}, i.nextLevel = function() {}, i.update = function(e) {}, i.handleShowOfflineReward = function() {
							this.scene.events.off(fm.s.CLOSE_GUIDE, this.handleShowBonusBubble), this.scene.events.off(fm.s.CLOSE_DYNAMIC_GUIDE, this.handleShowBonusBubble);
							var e = this.scene.player.getBonusBullets();
							e <= 0 || (this.scene.gameManager.guideManager.getIsShowingGuide().isShowingGuide ? (this.scene.events.once(fm.s.CLOSE_GUIDE, this.handleShowBonusBubble), this.scene.events.once(fm.s.CLOSE_DYNAMIC_GUIDE, this.handleShowBonusBubble)) : (this.scene.runBonusBubblesAnimation(), this.scene.player.updateBonusBubble(e - 1)))
						}, t
					}(Fy)),
					sb = ab,
					ob = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.gameState = void 0, i.ready = function() {
								i.gameState.ready()
							}, i.play = function() {
								i.gameState.play()
							}, i.pause = function() {
								i.gameState.pause()
							}, i.rescue = function() {
								i.gameState.rescue()
							}, i.gameOver = function() {
								i.gameState.gameOver()
							}, i.quit = function() {
								i.gameState.quit()
							}, i.update = function(e) {
								i.gameState.update(e)
							}, i.nextLevel = function() {
								i.gameState.nextLevel()
							}, i.scene = t, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.transitionTo = function(e) {
							this.gameState = e
						}, i.init = function() {
							if (!this.gameState) {
								var e = new sb(this.scene);
								this.transitionTo(e)
							}
							this.gameState.ready()
						}, t
					}(wf),
					rb = ob,
					lb = aa.Z.GAMEPLAY.EFFECTS,
					cb = lb.KEY,
					hb = lb.FRAME,
					ub = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, cb) || this).setDepth(jn.Z.EFFECT_HIGH), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createTailEmitter = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									x: 200,
									y: 200,
									frame: [hb.PARTICLE_STAR, hb.PARTICLE_CIRCLE_1, hb.PARTICLE_CIRCLE_2],
									angle: {
										min: 45,
										max: 135
									},
									scale: {
										start: e,
										end: 0
									},
									alpha: {
										start: .7,
										end: 0
									},
									speed: {
										min: 50,
										max: 100
									},
									frequency: 20,
									quantity: 5,
									tint: 16777215,
									lifespan: {
										min: 500,
										max: 1500
									},
									on: !1
								};
							return this.createEmitter(t)
						}, i.createTailEmitterSmoke = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									x: 200,
									y: 200,
									frame: [hb.PARTICLE_DUST_01, hb.PARTICLE_DUST_02],
									angle: {
										min: 45,
										max: 135
									},
									scale: {
										start: e,
										end: 0
									},
									alpha: {
										start: 1,
										end: 0
									},
									speed: {
										min: 20,
										max: 60
									},
									frequency: 10,
									quantity: [1, 2, 3, 4, 5],
									tint: 16777215,
									lifespan: {
										min: 500,
										max: 1500
									},
									on: !1
								};
							return this.createEmitter(t)
						}, i.createTailEmitterSpark = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									x: 200,
									y: 200,
									frame: [hb.PARTICLE_STAR],
									angle: {
										min: 45,
										max: 135
									},
									scale: {
										start: 1.5 * e,
										end: 0
									},
									alpha: {
										start: 1,
										end: 0
									},
									speed: {
										min: 50,
										max: 100
									},
									frequency: 15,
									quantity: [3, 4, 5],
									tint: [15366656, 16711168, 15772167],
									lifespan: {
										min: 500,
										max: 1500
									},
									on: !1
								};
							return this.createEmitter(t)
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager),
					db = ub,
					pb = function(e) {
						function t(t, i, n, a, s) {
							var o;
							return void 0 === a && (a = ""), void 0 === s && (s = ""), (o = e.call(this, t, i, n, a, s) || this).scene = void 0, o.gameManager = void 0, o.scene = t, o.gameManager = t.gameManager, o.scene.add.existing((0, Un.Z)(o)), o
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.postUpdate = function() {}, i.initDefault = function() {
							this.setAlpha(1), this.setAngle(0)
						}, i.updateDepthObjects = function(e) {}, t
					}(Phaser.GameObjects.Image),
					mb = 128,
					fb = aa.Z.GAMEPLAY.EFFECTS,
					gb = fb.KEY,
					vb = fb.FRAME,
					yb = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).images = void 0, i.segments = void 0, i.group = void 0, i.color = void 0, i.images = [], i.segments = [], i.group = t.add.group({
								classType: Phaser.GameObjects.Image,
								defaultKey: gb,
								defaultFrame: vb.TAIL
							}), i.createDefault(), t.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createDefault = function() {
							var e = this.createDefaultImage();
							this.images.push(e)
						}, i.createDefaultImage = function() {
							var e = this.group.get(0, 0);
							return e.revive(), e.setWorldSize(40, mb), e.setAngle(0), e.setOrigin(1, 0), e.setAlpha(.8), e.setTint(this.color), this.add(e), e
						}, i.setRopeTo = function(e, t) {
							if (this.x !== e || this.y !== t) {
								var i = e - this.x,
									n = t - this.y,
									a = new Phaser.Math.Vector2(i, n);
								if (!(a.lengthSq() < 30)) {
									var s = {
										x: 0,
										y: 0,
										head: 0,
										length: a.length(),
										angle: a.angle() / Math.PI * 180 + 90
									};
									this.setPosition(e, t);
									var o = s;
									this.segments.forEach((function(e) {
										e.x -= i, e.y -= n, e.head = o.head + o.length, e.angle.toFixed(1) === o.angle.toFixed(1) && (o.length += e.length, e.head += e.length, e.length = 0), o = e
									})), this.segments.unshift(s), this.alignSegments()
								}
							}
						}, i.forceSetRopeTo = function(e, t, i) {
							this.setPosition(e, t), this.images.forEach((function(e) {
								return e.kill()
							})), this.images = [], this.createDefault(), this.segments = [{
								x: 0,
								y: 0,
								head: 0,
								length: mb,
								angle: i
							}], this.alignSegments()
						}, i.alignSegments = function() {
							var e, t = this;
							this.images.forEach((function(e) {
								return e.kill()
							})), this.images = [], this.segments = A()(e = this.segments).call(e, (function(e, i) {
								return !(e.head >= mb) && (0 !== e.length && (e.head + e.length > 128 ? (e.length = mb - e.head, !0) : (i === t.segments.length - 1 && (e.length = mb - e.head), !0)))
							})), this.segments.forEach((function(e) {
								var i = t.createDefaultImage();
								i.setPosition(e.x, e.y), t.alignSegment(i, e.head, e.head + e.length, e.angle), t.images.push(i)
							}))
						}, i.alignSegment = function(e, t, i, n) {
							var a = this.scene.world.getPixelRatio(),
								s = i - t;
							e.setCrop(0, t * a, 40 * a, s * a), e.setOrigin(.5 * a, t / mb * a), e.setAngle(n)
						}, i.setColor = function(e) {
							this.color = e, this.group.setTint(e)
						}, t
					}(Phaser.GameObjects.Container),
					bb = yb,
					Eb = function() {
						function e(e, t) {
							this.key = void 0, this.gameObject = void 0, this._active = !0, this.gameObject = e, this.key = t || "UnknownBehavior", this.active = !0
						}
						return (0, V.Z)(e, [{
							key: "active",
							get: function() {
								return this._active
							},
							set: function(e) {
								this._active = e
							}
						}]), e
					}(),
					Tb = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).gameObject = void 0, n.gameObject = t, n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.launchCelebrate = function(e, t) {
							return oe().resolve()
						}, i.launchByLines = function(e) {}, i.onCollideWithGrid = function(e, t, i) {}, i.onOverlapWithGrid = function(e) {}, i.onOutsideTopGrid = function() {}, i.onExplode = function() {}, t
					}(Eb),
					Ab = aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES,
					Sb = Ab.KEY,
					_b = (Ab.FRAME, function(e) {
						function t(t) {
							return e.call(this, t, "BulletExplodeBehavior") || this
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.explode = function() {
							var e = this.gameObject.scene,
								t = 1 / this.gameObject.scene.world.getPixelRatio(),
								i = this.gameObject.getColor(),
								n = this.gameObject,
								a = n.x,
								s = n.y,
								o = this.gameObject.gameManager,
								r = o.scoreManager,
								l = o.spritePool;
							if (this.gameObject.preKill(), e.getIsSkipLevelComplete()) r.addScore({
								x: a,
								y: s
							}, "explode", 500);
							else {
								var c = l.spawn();
								c.setTexture(Sb).setScale(t).setTint(i).setDepth(jn.Z.BALL).setPosition(a, s), c.play("color-ball-explosion"), c.once(Phaser.Animations.Events.ANIMATION_COMPLETE, (function() {
									c.kill()
								})), r.addScore({
									x: a,
									y: s
								}, "explode", 500), this.gameObject.scene.audio.playSound(sa.Z.BUBBLE_POP)
							}
						}, i.onExplode = function() {
							this.explode()
						}, t
					}(Tb)),
					Cb = _b,
					wb = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, "ShootCelebrateBehavior") || this).isShooting = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.shoot = function(e, t) {
							var i = this;
							if (this.isShooting) return oe().resolve();
							this.isShooting = !0;
							var n = 400 * Math.random() + 1300,
								a = {
									x: e.x * n,
									y: e.y * n
								},
								s = 0,
								o = (this.gameObject.x, this.gameObject.y),
								r = this.gameObject.scene.world.getWorldSize().width,
								l = r - 17;
							return new(oe())((function(e) {
								i.gameObject.scene.tweens.addCounter({
									from: 0,
									to: 1,
									duration: t,
									onUpdate: function(e) {
										var n = e.getValue() * t / 1e3,
											r = n - s;
										s = n;
										var c = i.gameObject.x + a.x * r;
										(c <= 17 || c >= l) && (a.x *= -1, c = i.gameObject.x + a.x * r), i.gameObject.x = c, i.gameObject.y = 1750 * n * n + a.y * n + o
									},
									onComplete: function() {
										i.gameObject.onExplode(), i.isShooting = !1, e()
									}
								})
							}))
						}, i.launchCelebrate = function(e, t) {
							return this.gameObject.scene.getIsSkipLevelComplete() ? (this.gameObject.onExplode(), this.isShooting = !1, oe().resolve()) : this.shoot(e, t)
						}, t
					}(Tb),
					Bb = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, "ShootByLinesBehavior") || this).speed = void 0, n.pathFollower = void 0, n.speed = i, n.pathFollower = new Bm, n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.shootByLines = function(e) {
							var t = this;
							if (0 !== e.length) {
								for (var i = new Phaser.Curves.Path(e[0].x, e[0].y), n = 1; n < e.length; n++) i.lineTo(e[n].x, e[n].y);
								this.pathFollower.setGameObjects([this.gameObject]), this.pathFollower.setPath(i);
								var a = {
									x: this.gameObject.x,
									y: this.gameObject.y
								};
								this.pathFollower.setRotateToPath(!0, Math.PI / 2);
								var s = this.gameObject.scene.gameManager.grid,
									o = 0;
								this.pathFollower.start(this.speed, {
									onUpdate: function() {
										var e, i = 1 / t.gameObject.scene.world.getPixelRatio();
										Math.atan2(t.gameObject.y - a.y, t.gameObject.x - a.x);
										ra()(o) !== ra()(t.gameObject.x - a.x) && (0 !== o && t.gameObject.scene.audio.playSound(sa.Z.BUBBLE_BOUNCE), o = t.gameObject.x - a.x), a.x = t.gameObject.x, a.y = t.gameObject.y, A()(e = s.getBallsAt(a.x, a.y)).call(e, (function(e) {
											if (Phaser.Math.Distance.Between(a.x, a.y, e.x, e.y) < 32) return e
										})).forEach((function(e) {
											e.onOverlayWithBullet(t.gameObject)
										})), t.gameObject.setScale(i / 1.1, 1.2 * i)
									},
									onComplete: function() {
										var e = t.gameObject.scene,
											i = e.gameManager.shotGuide.getBallCollideGuide(),
											n = e.header.lineLimitTop.getWorldPosition().y;
										if (t.gameObject.y <= n && !i) return t.gameObject.onOutsideTopGrid(), void(e.gameManager.isBulletOutSide = !0);
										i ? e.physicsManager.handleBulletHitGrid(t.gameObject, i) : e.physicsManager.handleBallOverlapLine(e.lineTopGrid, t.gameObject)
									}
								})
							}
						}, i.launchByLines = function(e) {
							this.shootByLines(e)
						}, t
					}(Tb),
					Ib = Bb,
					Pb = aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES,
					xb = (Pb.KEY, Pb.FRAME, function(e) {
						function t(t, i, n, a, s) {
							var o;
							return (o = e.call(this, t, i, n, a, s) || this).scene = void 0, o.tail = void 0, o.shadow = void 0, o.tailEmitters = [], o.launching = !1, o.timerEvents = [], o.behaviors = [], o.color = void 0, o.objectType = "ColorBulletBall", o.currentLines = [], o.scene = t, o.createBehavior(), o.initSprite(), o.scene.add.existing((0, Un.Z)(o)), o
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initSprite = function() {
							this.tail = new bb(this.scene), this.tail.kill(), this.shadow = this.scene.add.image(0, 0, aa.Z.GAMEPLAY.GAME_OBJECTS.KEY), this.shadow.setAlpha(.3), this.shadow.kill()
						}, i.initDefault = function() {
							return e.prototype.initDefault.call(this), this.setRotation(0), this.launching = !1, this.startAnimationIdle(), this.currentLines = [], this
						}, i.getColor = function() {
							return this.color
						}, i.launchCelebrate = function(e, t) {
							var i;
							return this.launching = !0, this.startTailEmitters(), this.stopAnimationIdle(), this.applyFunctionAsync(y()(i = []).call(i, this.behaviors), "launchCelebrate", e, t)
						}, i.launchByLines = function(e) {
							var t, i = this;
							this.launching = !0, this.currentLines = e;
							var n = this.getColor();
							this.tail.setColor(n), this.tail.setPosition(this.x, this.y), this.tail.setRopeTo(this.x, this.y), this.scene.time.delayedCall(70, (function() {
								i.visible && (i.tail.revive(), i.tail.setAlpha(.5))
							})), this.startTailEmitters(), this.applyFunction(y()(t = []).call(t, this.behaviors), "launchByLines", e), this.stopAnimationIdle()
						}, i.update = function() {
							this.shadow.setPosition(this.x, this.y), this.shadow.setScale(this.scaleX, this.scaleY), this.shadow.setRotation(this.rotation)
						}, i.postUpdate = function() {
							e.prototype.postUpdate.call(this), this.y < -10 && this.kill(), this.launching && this.currentLines.length > 0 && this.tail.setRopeTo(this.x, this.y)
						}, i.preKill = function() {
							this.shadow.kill(), this.launching = !1, this.stopTailEmitters(), this.kill()
						}, i.kill = function() {
							this.launching = !1, this.stopTailEmitters(), this.tail.kill(), this.timerEvents.forEach((function(e) {
								return e.remove()
							})), this.timerEvents.length = 0, this.stopAnimationIdle(), e.prototype.kill.call(this)
						}, i.setTailEmitters = function(e) {
							this.tailEmitters = e
						}, i.onCollideWithGrid = function(e, t, i) {
							var n;
							this.applyFunction(y()(n = []).call(n, this.behaviors), "onCollideWithGrid", e, t, i)
						}, i.createBehavior = function() {
							var e = this.scene.registry.get("bullet").speed;
							this.behaviors.push(new Cb(this)), this.behaviors.push(new wb(this)), this.behaviors.push(new Ib(this, e))
						}, i.onOverlapWithGrid = function(e) {
							var t;
							this.applyFunction(y()(t = []).call(t, this.behaviors), "onOverlapWithGrid", e)
						}, i.applyFunction = function(e, t) {
							for (var i = arguments.length, n = new Array(i > 2 ? i - 2 : 0), a = 2; a < i; a++) n[a - 2] = arguments[a];
							_()(e).call(e, (function(e) {
								var i, a;
								if (e[t] && e.active) return (i = e[t]).call.apply(i, y()(a = [e]).call(a, n))
							}))
						}, i.applyFunctionAsync = function(e, t) {
							for (var i = arguments.length, n = new Array(i > 2 ? i - 2 : 0), a = 2; a < i; a++) n[a - 2] = arguments[a];
							var s = _()(e).call(e, (function(e) {
								var i, a;
								if (e[t] && e.active) return (i = e[t]).call.apply(i, y()(a = [e]).call(a, n))
							}));
							return oe().all(s)
						}, i.onOutsideTopGrid = function() {
							this.behaviors.forEach((function(e) {
								return e.onOutsideTopGrid()
							}))
						}, i.onExplode = function() {
							var e;
							this.applyFunction(y()(e = []).call(e, this.behaviors), "onExplode")
						}, i.startAnimationIdle = function() {}, i.stopAnimationIdle = function() {}, i.stopTailEmitters = function() {
							this.tailEmitters.forEach((function(e) {
								e.stop()
							}))
						}, i.startTailEmitters = function() {
							var e = this;
							this.tailEmitters.forEach((function(t) {
								t.startFollow(e), t.start()
							}))
						}, t
					}(pb)),
					Ob = xb,
					kb = function() {
						function e(e, t, i) {
							var n = this;
							this.gameObject = void 0, this.speed = void 0, this.radius = void 0, this.center = void 0, this.tween = void 0, this.shakeRecursive = function() {
								var e = n.gameObject.x,
									t = n.gameObject.y,
									i = Math.random() * n.radius * 2 - n.radius,
									a = Math.random() * n.radius * 2 - n.radius,
									s = {
										x: i + n.center.x,
										y: a + n.center.y
									};
								n.tween = n.gameObject.scene.tweens.add({
									targets: n.gameObject,
									x: s.x,
									y: s.y,
									duration: Math.sqrt(Math.pow(s.x - e, 2) + Math.pow(s.y - t, 2)) / n.speed * 1e3,
									onComplete: n.shakeRecursive
								})
							}, this.gameObject = e, this.speed = t, this.radius = i
						}
						var t = e.prototype;
						return t.shake = function(e) {
							this.center = {
								x: e.x,
								y: e.y
							}, this.gameObject.setPosition(e.x, e.y), this.shakeRecursive()
						}, t.stop = function() {
							var e, t;
							null == (e = this.tween) || e.stop(), null == (t = this.tween) || t.remove(), this.gameObject.setPosition(this.center.x, this.center.y)
						}, e
					}(),
					Rb = aa.Z.GAMEPLAY.GAME_OBJECTS,
					Mb = Rb.KEY,
					Lb = Rb.FRAME,
					Gb = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, Mb) || this).emitter = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.EFFECT_HIGH), i.scene.add.existing((0, Un.Z)(i)), i.createSparkAnimation(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 5)
						}, i.createSparkAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [Lb.PARTICLE_STAR],
									gravityY: 300,
									speed: {
										min: 70,
										max: 120
									},
									alpha: {
										start: 1,
										end: .1
									},
									rotate: {
										min: 0,
										max: 360
									},
									scale: {
										start: 1.5 * e,
										end: 0
									},
									tint: [15366656, 16711168, 15772167],
									frequency: 180,
									quantity: [1, 2, 3],
									lifespan: {
										min: 500,
										max: 1e3
									},
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									on: !1
								};
							this.emitter = this.createEmitter(t)
						}, i.updateConfig = function(e, t, i, n) {
							this.emitter.setPosition(e, t), this.emitter.setAngle({
								min: i,
								max: n
							})
						}, i.start = function(e, t, i, n) {
							this.emitter.setPosition(e, t), this.emitter.setAngle({
								min: i,
								max: n
							}), this.emitter.start()
						}, i.stop = function() {
							this.emitter.stop()
						}, i.getEmitter = function() {
							return this.emitter
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager),
					Db = Gb,
					Fb = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, "RocketBulletBehavior") || this).speed = void 0, n.pathFollower = void 0, n.speed = i, n.pathFollower = new Bm, n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.shootByLines = function(e) {
							var t = this;
							if (e.length < 2) return oe().resolve();
							var i = this.gameObject.scene.getCorrectGameSize(),
								n = i.width,
								a = i.height,
								s = e[0],
								o = e[1],
								r = new Phaser.Curves.Path(s.x, s.y),
								l = o.x - s.x,
								c = o.y - s.y,
								h = n,
								u = (a - 667) / 2,
								d = Math.max((h - s.x) / l, (0 - s.x) / l),
								p = (u - s.y) / c,
								m = Math.min(d, p);
							r.lineTo(s.x + l * m, s.y + c * m), this.pathFollower.setGameObjects([this.gameObject]), this.pathFollower.setPath(r);
							var f = {
								x: this.gameObject.x,
								y: this.gameObject.y
							};
							return new(oe())((function(e) {
								t.pathFollower.start(t.speed, {
									onUpdate: function() {
										var e = 1 / t.gameObject.scene.world.getPixelRatio(),
											i = Math.atan2(t.gameObject.y - f.y, t.gameObject.x - f.x);
										f.x = t.gameObject.x, f.y = t.gameObject.y, t.gameObject.setRotation(i + Math.PI / 2), t.gameObject.setScale(e / 1.1, 1.2 * e)
									},
									onComplete: function() {
										t.handleBulletOutsideGameZone(), e()
									}
								})
							}))
						}, i.explodeObjects = function() {
							var e = this,
								t = this.gameObject.gameManager.shooter,
								i = this.gameObject.gameManager.grid,
								n = t.getCurrentHightLightPosition(),
								a = [];
							return n.forEach((function(t) {
								var n = i.getRowColByXY(t.x, t.y),
									s = i.getObjectAt(n);
								s && a.push(s.onActiveExplode(e.gameObject))
							})), oe().all(a)
						}, i.handleBulletOutsideGameZone = function() {
							this.gameObject.setVisible(!1), this.gameObject.preKill()
						}, i.launchByLines = function(e) {
							var t = this.gameObject.scene,
								i = this.gameObject.gameManager,
								n = this.shootByLines(e),
								a = this.explodeObjects();
							t.vibrateController.handleUseItem(), oe().all([n, a]).then((function() {
								i.grid.processOrphaned().then((function() {
									i.endTurn().then((function() {
										t.bulletItemManager.deActiveItem(), i.startTurn()
									}))
								}))
							}))
						}, t
					}(Tb),
					Nb = Fb,
					Zb = aa.Z.GAMEPLAY.EFFECTS,
					Ub = Zb.KEY,
					jb = Zb.FRAME,
					Yb = aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES,
					Wb = Yb.KEY,
					Kb = Yb.FRAME,
					Hb = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, Wb, Kb.BULLET_ITEM_ROCKET) || this).objectType = "RocketBullet", a.glow = void 0, a.sparkParticle = void 0, a.shakeAnimation = void 0, a.setName("RocketBullet"), a.createGlow(), a.sparkParticle = new Db(a.scene), a.shakeAnimation = new kb((0, Un.Z)(a), 70, 3), a.color = wc.I.Rocket, a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setColor = function(e) {}, i.createBehavior = function() {
							this.behaviors.push(new Nb(this, 2500))
						}, i.onOverlapWithGrid = function(e) {
							this.behaviors.forEach((function(t) {
								return t.onOverlapWithGrid(e)
							}))
						}, i.postUpdate = function() {
							e.prototype.postUpdate.call(this), this.launching || this.sparkParticle.updateConfig(this.x - 20 * Math.cos(this.rotation - Math.PI / 4), this.y - 20 * Math.sin(this.rotation - Math.PI / 4), -200 + this.angle, -250 + this.angle)
						}, i.createGlow = function() {
							this.glow = this.scene.make.image({
								key: Ub,
								frame: jb.GLOW_3
							}), this.glow.setWorldSize(91.5, 91.5), this.glow.setTint(14885931), this.glow.kill()
						}, i.initDefault = function() {
							return e.prototype.initDefault.call(this), this.glow.revive(), this
						}, i.kill = function() {
							e.prototype.kill.call(this), this.glow.kill()
						}, i.startAnimationIdle = function() {
							this.sparkParticle.start(this.x - 20 * Math.cos(this.rotation - Math.PI / 4), this.y - 20 * Math.sin(this.rotation - Math.PI / 4), -200 + this.angle, -250 + this.angle), this.shakeAnimation.shake(this), this.glow.setPosition(this.x, this.y)
						}, i.stopAnimationIdle = function() {
							this.sparkParticle.stop(), this.shakeAnimation.stop(), this.glow.kill()
						}, t
					}(Ob),
					zb = Hb,
					Xb = {
						READY: "ready",
						READY_FOR_REUSE: "ready-for-reuse",
						HIDE: "hide",
						LOSS_LINK: "loss-link"
					},
					Vb = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).scene = void 0, n.gameObject = void 0, n.currentEvent = void 0, n.scene = t.scene, n.gameObject = t, n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return this.active = !0, this
						}, i.onActiveExplode = function() {
							return oe().resolve()
						}, i.onCollideWithBullet = function(e, t) {
							return oe().resolve()
						}, i.onObjectOrphaned = function() {
							return oe().resolve()
						}, i.onEndTurn = function() {
							return oe().resolve()
						}, i.onStartTurn = function() {
							return oe().resolve()
						}, i.onNearBallMatch = function(e) {
							return oe().resolve()
						}, i.onPreEndTurn = function() {
							return oe().resolve()
						}, i.onLevelEnd = function(e) {
							return oe().resolve()
						}, i.onNearBallExplode = function(e) {
							return oe().resolve()
						}, i.onChangeBullet = function() {
							return oe().resolve()
						}, i.onOverlayWithBullet = function(e) {
							return oe().resolve()
						}, i.onPreKill = function() {
							return oe().resolve()
						}, i.setTriggerEvent = function(e) {
							this.currentEvent = e
						}, t
					}(Eb),
					Jb = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).key = "DropBehavior", i.fadeOutAnimation = void 0, i.delayMoveToBomb = void 0, i.moveToBombTween = void 0, i.dropTween = void 0, i.currentDropPromise = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							var t, i, n;
							return e.prototype.initDefault.call(this), null == (t = this.delayMoveToBomb) || t.remove(), null == (i = this.moveToBombTween) || i.remove(), null == (n = this.dropTween) || n.remove(), this
						}, i.drop = function() {
							var e = this;
							return new(oe())((function(t) {
								var i, n = e.scene.gameManager.getCurrentTurn();
								null == (i = e.gameObject.jiggleTween) || i.complete(), e.gameObject.setDepth(jn.Z.BALL_ORPHAN);
								var a = e.gameObject,
									s = e.gameObject.scene.gameZone,
									o = a.x,
									r = a.y,
									l = a.scene.registry.get("zones").zones.zone5.topY,
									c = Phaser.Math.Between(-30, 30),
									h = l - a.y + c + 90,
									u = l + c + 40,
									d = Math.random() * (Math.PI / 3) + Math.PI / 3,
									p = Math.pow(3.5 + 23 * Math.sin(d), 2) - 14 * (r - u),
									m = (3.5 + 23 * Math.sin(d) + Math.sqrt(p)) / 7,
									f = (3.5 + 23 * Math.sin(d) - Math.sqrt(p)) / 7,
									g = 2 * h,
									v = m > 0 ? Math.floor(m) : Math.floor(f);
								a.revive();
								var y = a.gameManager.grid,
									b = a.gameManager.scoreManager;
								y.removeFromGrid([a]);
								var E = !!e.gameObject.scene.bulletItemManager.getItemActive(),
									T = e.scene.data.get("physicsWorld").bulletCollisionRadius / e.scene.world.getPixelRatio(),
									A = e.gameObject.angle * Math.PI / 180,
									S = d < Math.PI / 2 ? -1 * (Math.random() * Math.PI / 3 + Math.PI / 3) : Math.random() * Math.PI / 3 + Math.PI / 3;
								e.gameObject.isDropping = !0, e.dropTween = e.scene.tweens.addCounter({
									from: 0,
									to: 1,
									duration: g,
									onUpdate: function(t) {
										var i = t.getValue(),
											n = o - 23 * Math.cos(d) * v * i;
										(n <= s.x + 1.5 * T || n >= s.width - 1.5 * T) && (n = e.gameObject.x);
										var a = r - (23 * Math.sin(d) * v * i - .5 * Math.pow(v * i, 2) * 7);
										e.gameObject.setRotation(A + i * S), e.gameObject.setPosition(n, a)
									},
									onComplete: function() {
										e.dropTween && (e.dropTween = void 0, e.gameObject.runFadeoutAfterDrop().then((function() {
											e.gameObject.isDropping = !1, E || a.gameManager.isWin || (e.gameObject.setActive(!0), e.moveToBombItem()), t()
										})), e.scene.audio.playSound(sa.Z.BUBBLE_IN_THE_HOLE, {}, !0, 100), "EmptyBall" !== e.gameObject.objectType && b.addScore(a, "drop", 0, n))
									}
								})
							}))
						}, i.onObjectOrphaned = function() {
							return this.currentDropPromise = this.drop(), oe().resolve()
						}, i.moveToBombItem = function() {
							var e = this,
								t = this.gameObject.scene,
								i = t.footer;
							if (!i.bombBulletItem.getIsFreeItem() && i.bombBulletItem.getLimitItemStatus() == km) {
								var n = 500 * Math.random() + 200;
								this.delayMoveToBomb = this.scene.time.delayedCall(n, (function() {
									var n = i.bombBulletItem.getWorldPosition(),
										a = e.gameObject.tail,
										s = Math.atan2(e.gameObject.y - n.y, e.gameObject.x - n.x);
									a.setPosition(e.gameObject.x, e.gameObject.y), a.setRotation(s - Math.PI / 2), a.setScale(.35 * e.gameObject.scale, .3 * e.gameObject.scale), a.revive(), e.gameObject.setScale(.8 * e.gameObject.scale), e.gameObject.setActive(!1), e.gameObject.revive(), e.gameObject.setAlpha(1), e.moveToBombTween = t.add.tween({
										targets: [e.gameObject],
										duration: 200,
										props: {
											scale: {
												start: e.gameObject.scale,
												from: e.gameObject.scale,
												to: .3 * e.gameObject.scale
											},
											x: n.x,
											y: n.y
										},
										onUpdate: function() {
											a.setPosition(e.gameObject.x, e.gameObject.y), a.setScale(.35 * e.gameObject.scale, .3 * e.gameObject.scale)
										},
										onComplete: function() {
											a.revive(), e.gameObject.kill(), e.gameObject.clearObject(), e.gameObject.setDepth(jn.Z.BALL), t.footer.bombBulletItem.updateFillItemBomb(1)
										}
									})
								}))
							}
						}, i.runFadeOutAnimation = function(e, t, i) {
							var n, a;
							void 0 === t && (t = 300), void 0 === i && (i = 0), null == (n = this.fadeOutAnimation) || n.stop(), null == (a = this.fadeOutAnimation) || a.remove(), this.fadeOutAnimation = new qn.Z({
								targets: [this.gameObject],
								duration: t,
								delay: i,
								onComplete: function() {
									e()
								}
							}), this.fadeOutAnimation.play()
						}, i.waitingDrop = function() {
							return this.currentDropPromise ? this.currentDropPromise : oe().resolve()
						}, t
					}(Vb),
					qb = Jb,
					Qb = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).dropTween = void 0, i.key = "DropWhenLevelEndBehavior", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.drop = function(e) {
							var t = this;
							return new(oe())((function(i) {
								var n = t.scene.gameManager.getCurrentTurn(),
									a = t.gameObject,
									s = a.gameManager.grid,
									o = a.gameManager.scoreManager;
								s.removeFromGrid([a]);
								var r = a.scene.registry.get("zones").zones.zone5.topY,
									l = a.y,
									c = a.x,
									h = Phaser.Math.Between(-10, 20),
									u = r - l + h + 90,
									d = 2 * u;
								t.dropTween = a.scene.tweens.add({
									targets: [a],
									y: {
										value: l + u,
										duration: d,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									x: {
										value: c + h,
										duration: d,
										ease: Phaser.Math.Easing.Linear
									},
									offset: 0,
									duration: d,
									delay: 30,
									onComplete: function() {
										t.dropTween && (t.dropTween = void 0, a.subObjects.forEach((function(e) {
											return e.kill()
										})), a.clearObject(), a.kill(), "success" === e && o.addScore(a, "drop", 0, n), i())
									}
								})
							}))
						}, i.onLevelEnd = function(e) {
							return this.drop(e)
						}, t
					}(Vb),
					$b = Qb,
					eE = {
						HexagonWire: 0,
						IronShell: 1,
						Bat: 2,
						Leaves: 3,
						SpiderWeb: 4,
						Mud: 5,
						Ladybird: 6,
						Spider: 7,
						IronBoard: 8
					},
					tE = {
						LeavesExplodeBehavior: .1,
						BatBehavior: .2,
						DropBehavior: .3,
						SpiderWebBehavior: 1,
						MudBehavior: 1.1,
						IronShellBehavior: 1.2,
						CopyColorBehavior: 2,
						BombDrugBehavior: 2,
						EarthenPotBehavior: 2,
						ColorBombBehavior: 2,
						CandleBehavior: 2,
						ElectricBehavior: 2,
						EmptyBallBehavior: 2,
						LampBehavior: 2,
						LavaBallBehavior: 2,
						LuckyPouchBehavior: 2,
						MummyBehavior: 2,
						PlusMinusBallBehavior: 2,
						QuestionMarkBallBehavior: 2,
						RandomDirectionElectricBehavior: 2,
						RotationWheelBehavior: 2,
						RelicMaskBehavior: 2,
						SlateStoneBehavior: 2,
						SubSlateStoneBehavior: 2,
						ThunderBehavior: 2,
						ThreeThundersBehavior: 2,
						ColorExplodeBehavior: 2,
						GemBehavior: 2,
						KeyBallBehavior: 2,
						MirrorBallBehavior: 2,
						TwoColorsExplodeBehavior: 2,
						BlackHoleBehavior: 3,
						SwitchBlackHoleBehavior: 3,
						HexagonWireBehavior: 4,
						LadybirdBehavior: 9,
						SpiderBehavior: 10,
						IronBoardBehavior: 11,
						ExplodeWhenOrphanedBehavior: 12,
						DropWhenLevelEndBehavior: 13
					},
					iE = aa.Z.GAMEPLAY.EFFECTS,
					nE = iE.KEY,
					aE = iE.FRAME,
					sE = function(e) {
						function t(t, i, n, a, s) {
							var o;
							return (o = e.call(this, t, i, n, a, s) || this).objectType = void 0, o.row = -1, o.col = -1, o.isProcess = !1, o.status = 0, o.dropBehavior = void 0, o.endLevelBehavior = void 0, o.hexagonWire = void 0, o.behaviors = void 0, o.subObjects = void 0, o.grid = void 0, o.isKilled = !1, o.isDropping = !1, o.isJiggling = !1, o.isFlying = !1, o.jiggleTween = void 0, o.geom = void 0, o.stateObject = Xb.READY, o.tail = void 0, o.fadeOutAfterDropTween = void 0, o.scene.add.existing((0, Un.Z)(o)), o.behaviors = [], o.subObjects = [], o.grid = o.gameManager.grid, o.createBehaviors(), o.createTail(), o.initDefault(), o
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setProcessed = function(e) {
							void 0 === e && (e = !0), this.isProcess = e
						}, i.setStatus = function(e) {
							void 0 === e && (e = 0), this.status = e
						}, i.initDefault = function(t) {
							var i, n;
							return void 0 === t && (t = 0), e.prototype.initDefault.call(this), null == (i = this.fadeOutAfterDropTween) || i.remove(), this.setDepth(jn.Z.BALL), null == (n = this.tail) || n.kill(), this.row = -1, this.col = -1, this.isProcess = !1, this.isKilled = !1, this.isDropping = !1, this.isJiggling = !1, this.isFlying = !1, this.removeAllSubObjects(), this.setStatus(t), this.behaviors.forEach((function(e) {
								return e.active = !0
							})), this.applyFunctionAsync([this], "initDefault", this), this.setObjectState(Xb.READY), this
						}, i.jiggle = function(e, t, i) {
							var n = this;
							if (this.isFlying) return oe().resolve();
							this.isJiggling = !0;
							var a = {
								x: this.x,
								y: this.y
							};
							this.jiggleTween && this.jiggleTween.complete(), this.x = a.x, this.y = a.y;
							var s = {
								x: 0,
								y: 0
							};
							return new(oe())((function(a) {
								n.jiggleTween = n.scene.tweens.addCounter({
									from: 0,
									to: t,
									yoyo: !0,
									duration: 150,
									loop: 1,
									delay: i,
									onUpdate: function(t) {
										if (!n.isKilled && n.stateObject == Xb.READY && !n.isFlying)
											if (n.active) {
												var i = n.scene.gameManager.grid.getXYByRowCol(n),
													a = t.data[0].previous || 0,
													o = t.getValue() - a;
												1 === t.loopCounter ? (s.x += o * e.x, s.y += o * e.y) : (s.x -= o / 4 * e.x, s.y -= o / 4 * e.y), n.x = i.x + s.x, n.y = i.y + s.y
											} else t.complete()
									},
									ease: "Sine.easeOut",
									onComplete: function() {
										n.isJiggling = !1, n.jiggleTween = void 0
									}
								}), n.scene.time.delayedCall(0, a)
							}))
						}, i.preKill = function(e) {
							var t, i = this;
							this.isKilled = !0, this.scene.tweens.add({
								targets: this,
								duration: 200,
								alpha: {
									from: 1,
									to: .3
								},
								onComplete: function() {
									i.kill(), e && e()
								},
								onCompleteScope: this
							}), this.applyFunction(y()(t = [this]).call(t, this.subObjects), "onPreKill")
						}, i.kill = function() {
							var t;
							(this.isObjectReady() || this.isObjectLossLink()) && (this.isKilled = !0, this.setObjectState(Xb.READY_FOR_REUSE)), this.isObjectHide() && (this.clearObject(), this.subObjects.forEach((function(e) {
								e.kill()
							}))), this.isJiggling = !1, this.jiggleTween && this.jiggleTween.complete(), this.applyFunction(y()(t = [this]).call(t, this.subObjects), "onKill"), this.tail.kill(), e.prototype.kill.call(this)
						}, i.onActiveExplode = function(e) {
							var t, i, n, a = this;
							if (this.isKilled) return oe().resolve();
							var s = this.applyFunctionAsync(y()(t = [this]).call(t, this.subObjects), "onActiveExplode", e),
								o = this.gameManager.grid.getAdjacentObjects(this, 1);
							if (1 != o.length) return oe().resolve();
							var r = A()(i = o[0]).call(i, (function(e) {
									return void 0 != e
								})),
								l = _()(r).call(r, (function(e) {
									return e.onNearBallExplode(a)
								}));
							return oe().all(y()(n = [s]).call(n, l))
						}, i.onCollideWithBullet = function(e, t) {
							var i;
							return this.isKilled ? oe().resolve() : this.applyFunctionAsync(y()(i = [this]).call(i, this.subObjects), "onCollideWithBullet", e, t)
						}, i.onObjectOrphaned = function() {
							var e;
							return this.isKilled ? oe().resolve() : this.applyFunctionAsync(y()(e = [this]).call(e, this.subObjects), "onObjectOrphaned")
						}, i.onEndTurn = function() {
							var e;
							return this.isObjectHide() ? oe().resolve() : this.applyFunctionAsync(y()(e = [this]).call(e, this.subObjects), "onEndTurn")
						}, i.onStartTurn = function() {
							var e;
							return this.isObjectHide() ? oe().resolve() : this.applyFunctionAsync(y()(e = [this]).call(e, this.subObjects), "onStartTurn")
						}, i.onNearBallMatch = function(e) {
							var t;
							return this.isKilled ? oe().resolve() : this.applyFunctionAsync(y()(t = [this]).call(t, this.subObjects), "onNearBallMatch", e)
						}, i.onPreEndTurn = function() {
							var e;
							return this.isKilled || this.isObjectHide() ? oe().resolve() : this.applyFunctionAsync(y()(e = [this]).call(e, this.subObjects), "onPreEndTurn")
						}, i.onLevelEnd = function(e) {
							var t;
							return this.applyFunctionAsync(y()(t = [this]).call(t, this.subObjects), "onLevelEnd", e)
						}, i.onNearBallExplode = function(e) {
							var t;
							return this.isKilled ? oe().resolve() : this.applyFunctionAsync(y()(t = [this]).call(t, this.subObjects), "onNearBallExplode", e)
						}, i.isCanMatchWith = function(e, t) {
							return !1
						}, i.isOrphaned = function() {
							return !1
						}, i.addBehavior = function(e) {
							this.behaviors.push(e)
						}, i.removeBehavior = function(e) {
							var t;
							this.behaviors = A()(t = this.behaviors).call(t, (function(t) {
								return t.key != e
							}))
						}, i.getBehavior = function(e) {
							var t;
							return ye()(t = this.behaviors).call(t, (function(t) {
								return t.key === e
							}))
						}, i.createBehaviors = function() {
							this.dropBehavior = new qb(this), this.addBehavior(this.dropBehavior), this.endLevelBehavior = new $b(this), this.addBehavior(this.endLevelBehavior)
						}, i.addSubObject = function(e) {
							var t;
							e.updateDepthObjects(this.depth + 1e-6 * this.row), this.subObjects.push(e), ji()(t = this.subObjects).call(t, (function(e, t) {
								return eE[e.objectType] - eE[t.objectType]
							}))
						}, i.removeSubObject = function(e) {
							var t;
							this.subObjects = A()(t = this.subObjects).call(t, (function(t) {
								return t.objectType !== e
							}))
						}, i.getSubObject = function(e) {
							var t;
							return ye()(t = this.subObjects).call(t, (function(t) {
								return t.objectType === e
							}))
						}, i.isRoot = function() {
							if (0 === this.row) return !0;
							var e = this.gameManager.grid.getNeighbors(this.row, this.col);
							return !!(this.getSubObject("HexagonWire") && e.length > 0)
						}, i.applyFunction = function(e, t) {
							for (var i, n, a = arguments.length, s = new Array(a > 2 ? a - 2 : 0), o = 2; o < a; o++) s[o - 2] = arguments[o];
							(i = this.scene.gameManager.behaviorManager).trigger.apply(i, y()(n = [e, t]).call(n, s))
						}, i.applyFunctionAsync = function(e, t) {
							for (var i, n, a = arguments.length, s = new Array(a > 2 ? a - 2 : 0), o = 2; o < a; o++) s[o - 2] = arguments[o];
							return (i = this.scene.gameManager.behaviorManager).triggerAsync.apply(i, y()(n = [e, t]).call(n, s))
						}, i.removeAllSubObjects = function() {
							this.subObjects.forEach((function(e) {
								e.kill()
							})), this.subObjects = []
						}, i.clearObject = function() {}, i.calculateGeom = function() {
							var e = this.grid.getXYByRowCol(this, !0),
								t = e.x,
								i = e.y,
								n = 19.629909152447276,
								a = [{
									x: t + 17,
									y: i - n / 2
								}, {
									x: t,
									y: i - n
								}, {
									x: t - 17,
									y: i - n / 2
								}, {
									x: t - 17,
									y: i + n / 2
								}, {
									x: t,
									y: i + n
								}, {
									x: t + 17,
									y: i + n / 2
								}],
								s = _()(a).call(a, (function(e) {
									return new Phaser.Geom.Point(e.x, e.y)
								}));
							return this.geom = new Phaser.Geom.Polygon(s), this.geom
						}, i.getGeom = function() {
							return this.geom
						}, i.isObjectReady = function() {
							return this.stateObject === Xb.READY
						}, i.isObjectHide = function() {
							return this.stateObject === Xb.HIDE
						}, i.isObjectLossLink = function() {
							return this.stateObject === Xb.LOSS_LINK
						}, i.isObjectReadyForReuse = function() {
							return this.stateObject === Xb.READY_FOR_REUSE
						}, i.setObjectState = function(e) {
							this.stateObject = e
						}, i.createTail = function() {
							this.tail = this.scene.make.image({
								key: nE,
								frame: aE.TAIL,
								origin: {
									x: .5,
									y: 0
								},
								alpha: .3
							}), this.tail.setWorldSize(128, 40), this.tail.kill()
						}, i.onChangeBullet = function() {
							var e;
							return this.applyFunctionAsync(y()(e = [this]).call(e, this.subObjects), "onChangeBullet")
						}, i.onOverlayWithBullet = function(e) {
							var t;
							return this.applyFunctionAsync(y()(t = [this]).call(t, this.subObjects), "onOverlayWithBullet", e)
						}, i.onPreKill = function() {
							var e;
							return this.applyFunctionAsync(y()(e = [this]).call(e, this.subObjects), "onPreKill")
						}, i.runFadeoutAfterDrop = function() {
							var e, t = this,
								i = new(oe())((function(e) {
									t.fadeOutAfterDropTween = t.scene.tweens.add({
										targets: t,
										duration: 200,
										alpha: {
											from: 1,
											to: .3
										},
										onComplete: function() {
											t.kill(), e()
										},
										onCompleteScope: t
									})
								})),
								n = _()(e = this.subObjects).call(e, (function(e) {
									return e.runFadeoutAfterDrop()
								}));
							return oe().all([i, n])
						}, i.isHasIronBoard = function() {
							return !!this.getSubObject("IronBoard")
						}, i.isHasMud = function() {
							return !!this.getSubObject("Mud")
						}, i.setDepth = function(t) {
							var i;
							return e.prototype.setDepth.call(this, t), null == (i = this.tail) || i.setDepth(t + jn.X.TAIL), this.updateDepthObjects(t), this
						}, i.updateDepthObjects = function(e) {
							this.subObjects.forEach((function(t) {
								t.updateDepthObjects(e)
							}))
						}, i.updateAfterInit = function(e) {
							this.row = e.row, this.col = e.col
						}, t
					}(pb),
					oE = sE,
					rE = aa.Z.THEME_GAMEPLAY,
					lE = rE.KEY,
					cE = rE.FRAME,
					hE = function(e) {
						function t(t, i, n) {
							var a;
							return a = e.call(this, t, i, n, lE, cE.TOP_LINE) || this, t.add.existing((0, Un.Z)(a)), a
						}
						return (0, l.Z)(t, e), t
					}(Phaser.GameObjects.Image),
					uE = hE,
					dE = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.handleBulletHitGrid = function(e, t) {
								if (!(e instanceof Ob) || e instanceof zb) return !1;
								if (!(t instanceof oE)) return !1;
								var n = i.scene.gameManager.grid;
								e.setVisible(!1);
								var a = i.scene.gameManager.shotGuide.getPositionEmptyBallNearest();
								if (a) {
									var s = a.row,
										o = a.col;
									return i.scene.time.delayedCall(0, (function() {
										var i = n.getAdjacentObjects({
											row: s,
											col: o
										}, 1);
										e.onCollideWithGrid(a, i[0], t), e.preKill()
									})), !0
								}
							}, i.handleBallOverlapLine = function(e, t) {
								if (!(t instanceof Ob) || t instanceof zb) return !1;
								if (!(e instanceof uE)) return !1;
								var n = i.scene.gameManager.grid;
								t.setVisible(!1);
								var a = i.scene.gameManager.shotGuide.getPositionEmptyBallNearest();
								if (a) {
									var s = a.row,
										o = a.col;
									return i.scene.time.delayedCall(0, (function() {
										var e = n.getAdjacentObjects({
											row: s,
											col: o
										}, 1);
										t.onCollideWithGrid(a, e[0]), t.preKill()
									})), !0
								}
							}, i.scene = t, i
						}
						return (0, l.Z)(t, e), t
					}(wf),
					pE = dE,
					mE = Sf.STATUS,
					fE = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.paperFireworksCelebration = void 0, i.handleDestroyedLotsEgg = function() {
								var e = i.scene.gameZone,
									t = e.width,
									n = e.height;
								i.paperFireworksCelebration.run(-5, n + 20, t + 20, .8 * n)
							}, i.scene = t, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							var e = this.scene;
							this.paperFireworksCelebration = new np.Z(e), this.paperFireworksCelebration.setDepth(jn.Z.ON_TOP), this.setState(mE.READY)
						}, i.start = function() {
							this.isRunning() || (this.paperFireworksCelebration.revive(), this.setState(mE.RUNNING))
						}, i.stop = function() {
							this.isRunning() && (this.paperFireworksCelebration.stop(), this.setState(mE.STOPPED))
						}, t
					}(wf),
					gE = fE,
					vE = {
						GIFT: {
							ID: "ItemGift"
						}
					},
					yE = i(51743),
					bE = aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES.KEY,
					EE = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t) || this).scene = void 0, s.isActive = !0, s.item = void 0, s.shakeAnimation = void 0, s.scene = t, s.createItem(i, n, a), s.createAnimations(), s.setDepth(jn.Z.ITEM), s.scene.add.existing((0, Un.Z)(s)), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.activeItem = function() {
							this.isActive = !0
						}, i.deactivateItem = function() {
							this.isActive = !1
						}, i.createAnimations = function() {
							this.shakeAnimation = new yE.Z({
								targets: [this.item],
								repeat: 3,
								props: {
									x: 4
								}
							})
						}, i.createItem = function(e, t, i) {
							this.item = this.scene.add.image(0, 0, bE, e), this.item.setWorldSize(t, i), this.add(this.item)
						}, i.logButtonEvent = function() {
							var e = this.getParentName(),
								t = this.name;
							this.scene.analytics.event(Xt._.BUTTON_CLICK, {
								button_name: t,
								screen_name: e
							})
						}, i.getParentName = function() {
							for (var e = this.parentContainer; e;) {
								if (e instanceof GameCore.Screen) return e.getScreenName();
								e = e.parentContainer
							}
							return this.scene.getSceneName()
						}, (0, V.Z)(t, [{
							key: "onClick",
							set: function(e) {
								var t = this,
									i = this.item,
									n = i.width,
									a = i.height;
								this.setSize(n, a), this.setInteractive({
									useHandCursor: !0
								}), this.on(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, (function() {
									e(), t.logButtonEvent()
								}))
							}
						}]), t
					}(Phaser.GameObjects.Container),
					TE = EE,
					AE = aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES,
					SE = AE.KEY,
					_E = AE.FRAME,
					CE = GameCore.Configs,
					wE = CE.Network,
					BE = CE.Gameplay.ItemConfig.giftTime,
					IE = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, _E.BLANK, 39, 47.5) || this).scene = void 0, i.timer = void 0, i.giftTime = void 0, i.timeCount = void 0, i.isGiftOpen = void 0, i.adsTimer = void 0, i.glowEffect = void 0, i.glowAnimation = void 0, i.starTwinkleUp = void 0, i.giftOpenAnimation = void 0, i.countDownText = void 0, i.handleClickGiftItem = function() {
								i.isGiftOpen ? i.useGiftItem() : i.shakeAnimation.play()
							}, i.startCountdown = function() {
								var e;
								if (i.scene.itemManager.isRunning()) {
									null == (e = i.timer) || e.remove(), i.timeCount = 0, i.countDownText.revive();
									var t = (0, xo.F0)(i.giftTime, !1);
									i.countDownText.setText(t);
									var n = !1;
									i.timer = i.scene.time.addEvent({
										loop: !0,
										delay: 1e3,
										callback: function() {
											i.timeCount += 1e3;
											var e, t = i.giftTime - i.timeCount;
											if (t <= 0) return null == (e = i.timer) || e.remove(), i.countDownText.kill(), void i.setGiftOpen();
											!n && t < 6e4 && (n = !0, i.scene.ads.preloadRewardedVideoAsync());
											var a = (0, xo.F0)(t, !1);
											i.countDownText.setText(a)
										}
									}), i.scene.timerEvents.push(i.timer)
								}
							}, i.useGiftItem = (0, r.Z)(h().mark((function e() {
								var t;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (i.scene) {
												e.next = 2;
												break
											}
											return e.abrupt("return");
										case 2:
											return i.scene.stateManager.pause(), e.next = 5, i.showRewardAds();
										case 5:
											t = e.sent, i.scene.stateManager.play(), t ? i.handleReceiveGift() : i.activeItem();
										case 8:
										case "end":
											return e.stop()
									}
								}), e)
							}))), i.handleReceiveGift = function() {
								i.scene.tweens.killTweensOf(i.item), i.activeItem()
							}, i.showRewardAds = (0, r.Z)(h().mark((function e() {
								var t, n, a, s, o;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return t = !1, n = i.scene, a = n.audio, s = n.game, e.prev = 2, s.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
												message: "Loading...",
												duration: 0,
												loading: !0
											}), a.pauseMusic(), a.muteAllSound(), e.next = 8, new(oe())((function(e, t) {
												var n;
												null == (n = i.adsTimer) || n.remove(), i.adsTimer = i.scene.time.delayedCall(wE.Timeout, t), i.scene.ads.getAdStatus(GameCore.Ads.Types.REWARDED) === GameCore.Ads.Status.LOADING ? i.scene.ads.events.once(GameCore.Ads.Events.LOADED, e) : i.scene.ads.preloadRewardedVideoAsync().then(e).catch(t)
											}));
										case 8:
											return e.next = 10, i.scene.ads.showRewardedVideoAsync();
										case 10:
											i.scene.ads.preloadRewardedVideoAsync(), t = !0, e.next = 17;
											break;
										case 14:
											e.prev = 14, e.t0 = e.catch(2), e.t0 instanceof Object && GameCore.Utils.Object.hasOwn(e.t0, "code") && e.t0.code;
										case 17:
											return e.prev = 17, null == (o = i.adsTimer) || o.destroy(), a.playMusic(), a.unmuteAllSound(), s.globalScene.screen.close(Wn.o4.NOTIFY_SCREEN), e.finish(17);
										case 23:
											return e.abrupt("return", t);
										case 24:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[2, 14, 17, 23]
								])
							}))), i.scene = t, i.setName("GiftBomb"), i.giftTime = BE, i.timeCount = 0, i.onClick = i.handleClickGiftItem, i.createGlowEffect(), i.createStarEffect(), i.createCountdownText(), i.setGiftClose(), i.kill(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createCountdownText = function() {
							this.countDownText = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(14),
								origin: {
									x: .5,
									y: .5
								}
							}), this.countDownText.setY(26), this.add(this.countDownText)
						}, i.activeItem = function() {
							this.revive(), e.prototype.activeItem.call(this), this.setGiftClose(), this.startCountdown(), this.runEnterAnimation()
						}, i.deactivateItem = function() {
							e.prototype.deactivateItem.call(this), this.setGiftClose(), this.stopCountdown(), this.kill()
						}, i.stopCountdown = function() {
							var e;
							null == (e = this.timer) || e.remove(), this.countDownText.kill()
						}, i.createGlowEffect = function() {
							this.glowEffect = this.scene.make.image({
								key: SE,
								frame: _E.BLANK
							}), this.glowEffect.setWorldSize(87, 85.5), this.add(this.glowEffect), this.moveBelow(this.glowEffect, this.item)
						}, i.createStarEffect = function() {
							this.starTwinkleUp = new wa.Z(this.scene), this.add(this.starTwinkleUp)
						}, i.runEnterAnimation = function() {
							new Jn.Z({
								targets: [this]
							}).play()
						}, i.runGiftOpenAnimation = function() {
							var e;
							null == (e = this.giftOpenAnimation) || e.remove(), this.giftOpenAnimation = this.scene.tweens.add({
								targets: [this.item],
								duration: 500,
								loop: -1,
								yoyo: !0,
								ease: Phaser.Math.Easing.Sine.Out,
								props: {
									y: -2
								}
							})
						}, i.runGlowEffect = function() {
							var e;
							this.glowEffect.revive(), null == (e = this.glowAnimation) || e.remove(), this.glowAnimation = new Qr.Z({
								targets: [this.glowEffect],
								repeat: -1,
								duration: 12e3
							}), this.glowAnimation.play()
						}, i.setGiftClose = function() {
							var e;
							this.isGiftOpen = !1, null == (e = this.giftOpenAnimation) || e.remove(), this.glowEffect.kill(), this.item.setFrame(_E.BLANK), this.item.setWorldSize(32, 39.5), this.starTwinkleUp.stop()
						}, i.setGiftOpen = function() {
							if (this.scene.itemManager.isRunning()) {
								this.isGiftOpen = !0, this.item.setFrame(_E.BLANK), this.item.setWorldSize(54, 60.5), this.runGlowEffect(), this.runGiftOpenAnimation();
								var e = this.item,
									t = e.x,
									i = e.y,
									n = e.width,
									a = e.height;
								this.starTwinkleUp.run(2, t, i, n, a)
							}
						}, t
					}(TE),
					PE = IE,
					xE = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.items = {}, i.start = function() {
								e.prototype.start.call((0, Un.Z)(i)), i.items[vE.GIFT.ID].activeItem()
							}, i.stop = function() {
								e.prototype.stop.call((0, Un.Z)(i)), i.items[vE.GIFT.ID].deactivateItem()
							}, i.scene = t, i.createItems(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createItems = function() {
							this.createGiftItem()
						}, i.getItem = function(e) {
							return this.items[e]
						}, i.createGiftItem = function() {
							var e = new PE(this.scene);
							this.items[vE.GIFT.ID] = e, this.scene.footer.add(e), e.setPosition(-150, 15)
						}, i.setItemQuantity = function(e) {}, i.collectObjectsDrop = function(e) {}, i.collectObjectsMatch = function() {}, t
					}(wf),
					OE = xE,
					kE = [wc.I.Red, wc.I.Blue, wc.I.Green, wc.I.Yellow, wc.I.Violet, wc.I.Pink, wc.I.Cyan, wc.I.Gray, wc.I.Black],
					RE = function() {
						function e(e) {
							this.scene = void 0, this.currentColors = [], this.currentBulletColors = [], this.countBulletColors = void 0, this.ballGrid = void 0, this.scene = e, this.initBeginColors()
						}
						var t = e.prototype;
						return t.setBallGrid = function(e) {
							this.ballGrid = e
						}, t.initBeginColors = function() {
							var e, t = this.scene.level.getLevel() + 2;
							this.currentColors = tt()(kE).call(kE, 0, t), this.currentBulletColors = tt()(kE).call(kE, 0, t), this.countBulletColors = ko()(e = Array(t)).call(e, 0)
						}, t.levelUp = function() {
							var e = this,
								t = this.scene.level.getLevel() + 2;
							this.currentColors = tt()(kE).call(kE, 0, t);
							var i = this.ballGrid.firstRow || [];
							this.scene.tweens.addCounter({
								duration: 1e5,
								onUpdate: function(n) {
									i.count < i.size && (e.currentBulletColors = tt()(kE).call(kE, 0, t), n.complete())
								}
							})
						}, t.getLevel = function() {
							return this.currentColors.length
						}, t.getNextLevelColor = function(e) {
							return kE[e + 1]
						}, t.destroy = function() {}, t.getNextRow = function(e) {
							for (var t = [], i = 0; i < e; ++i) t.push(this.getRandomColor());
							return t
						}, t.getTopColor = function() {
							var e = this.currentColors.length - 1;
							return this.currentColors[e]
						}, t.getRandomColor = function() {
							var e = Math.floor(Math.random() * this.currentColors.length);
							return this.currentColors[e]
						}, t.getRandomBulletColor = function() {
							var e, t = this.currentColors.length,
								i = Math.floor(Math.random() * t);
							if (this.countBulletColors[i] >= 4) {
								var n = Math.floor(Math.random() * (t - 1));
								i = n === i ? n + 1 : n
							}
							0 === this.countBulletColors[i] && (this.countBulletColors = ko()(e = Array(t)).call(e, 0));
							return this.countBulletColors[i] += 1, this.currentBulletColors[i]
						}, e
					}(),
					ME = RE,
					LE = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS,
					GE = LE.KEY,
					DE = LE.FRAME,
					FE = function() {
						function e(e) {
							this.scene = void 0, this.ballGrid = void 0, this.ballsTransparent = [], this.scene = e, this.createBallsTransparent(30)
						}
						var t = e.prototype;
						return t.setBallGrid = function(e) {
							this.ballGrid = e
						}, t.createBallsTransparent = function(e) {
							for (var t = 0; t < e; ++t) {
								var i = this.scene.make.image({
									key: GE,
									frame: DE.BULLET_ITEM_SIMULATOR
								});
								i.setWorldSize(45, 45), i.setDepth(jn.Z.SIMULATOR), i.kill(), this.ballsTransparent.push(i), this.scene.add.existing(i)
							}
						}, t.updateSimulator = function(e) {
							if (e.length > this.ballsTransparent.length)
								for (var t = 0; t < e.length - this.ballsTransparent.length; t++) {
									var i = this.scene.make.image({
										key: GE,
										frame: DE.BULLET_ITEM_SIMULATOR
									});
									i.setWorldSize(45, 45), i.setDepth(jn.Z.SIMULATOR), i.kill(), this.ballsTransparent.push(i), this.scene.add.existing(i)
								}
							for (var n = 0; n < this.ballsTransparent.length; n++) n < e.length ? (this.ballsTransparent[n].setPosition(e[n].x, e[n].y), this.ballsTransparent[n].revive()) : this.ballsTransparent[n].kill()
						}, t.hide = function() {
							this.ballsTransparent.forEach((function(e) {
								e.kill()
							}))
						}, e
					}(),
					NE = FE,
					ZE = function(e) {
						function t(t) {
							return e.call(this, t, "ExplodeOnOutSideBehavior") || this
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.onOutsideTopGrid = function() {
							this.handleBulletOutsideGrid()
						}, i.handleBulletOutsideGrid = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return this.gameObject.kill(), this.gameObject.preKill(), t = this.gameObject.scene.gameManager, e.next = 5, t.grid.processOrphaned();
										case 5:
											return e.next = 7, t.endTurn();
										case 7:
											return e.abrupt("return", t.startTurn());
										case 8:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), t
					}(Tb),
					UE = ZE,
					jE = function(e) {
						function t(t) {
							return e.call(this, t, "AttachColorBallBehavior") || this
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.getColorBall = function() {
							var e = this.gameObject.gameManager.gridObjectPool.spawn(0, 0, "ColorBall");
							return e.setColor(this.gameObject.getColor()), e
						}, i.processGridObjectCollideBullet = function(e, t) {
							var i = this,
								n = _()(e).call(e, (function(e) {
									return e.onCollideWithBullet(i.gameObject, t)
								}));
							return oe().all(n)
						}, i.attach = function() {
							var e = (0, r.Z)(h().mark((function e(t, i, n) {
								var a, s, o, r, l, c, u;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return a = this.gameObject.gameManager.grid, s = this.getColorBall(), o = a.jiggleNeighborsBall(this.gameObject), r = a.attachObject(t, i, s), l = a.processMatch(r), c = this.processGridObjectCollideBullet(n, s), this.gameObject.scene.audio.playSound(sa.Z.NO_CLEAR_BUBBLE), e.next = 9, oe().all([l, c]);
										case 9:
											return e.next = 11, oe().all([a.processOrphaned(), o]);
										case 11:
											return u = this.gameObject.gameManager, e.next = 14, u.endTurn();
										case 14:
											return e.abrupt("return", u.startTurn());
										case 15:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t, i, n) {
								return e.apply(this, arguments)
							}
						}(), i.onCollideWithGrid = function(e, t) {
							this.attach(e.row, e.col, t)
						}, t
					}(Tb),
					YE = jE,
					WE = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS,
					KE = WE.KEY,
					HE = WE.FRAME,
					zE = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).objectType = "ColorBulletBall", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setColor = function(e) {
							switch (this.setTexture(KE), e) {
								case wc.I.Red:
									this.setFrame(HE.BALL_RED);
									break;
								case wc.I.Green:
									this.setFrame(HE.BALL_GREEN);
									break;
								case wc.I.Blue:
									this.setFrame(HE.BALL_BLUE);
									break;
								case wc.I.Yellow:
									this.setFrame(HE.BALL_YELLOW);
									break;
								case wc.I.Pink:
									this.setFrame(HE.BALL_PINK);
									break;
								case wc.I.Violet:
									this.setFrame(HE.BALL_VIOLET);
									break;
								case wc.I.Cyan:
									this.setFrame(HE.BALL_CYAN);
									break;
								case wc.I.Orange:
									this.setFrame(HE.BALL_ORANGE)
							}
							this.color = e
						}, i.createBehavior = function() {
							e.prototype.createBehavior.call(this), this.behaviors.push(new UE(this)), this.behaviors.push(new YE(this))
						}, t
					}(Ob),
					XE = zE,
					VE = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS,
					JE = VE.KEY,
					qE = VE.FRAME,
					QE = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).arrow1 = void 0, i.arrow2 = void 0, i.fadeInAnimation = void 0, i.fadeOutAnimation = void 0, i.spinAnimation = void 0, i.isShow = !0, i.scene = void 0, i.runSpinAnimation = function() {
								var e;
								null == (e = i.spinAnimation) || e.remove(), i.spinAnimation = i.scene.add.tween({
									targets: (0, Un.Z)(i),
									repeat: -1,
									props: {
										angle: {
											from: i.angle,
											to: i.angle - 720,
											duration: 5e3
										}
									}
								})
							}, i.runFadeInAnimation = function() {
								var e, t;
								null == (e = i.fadeInAnimation) || e.remove(), null == (t = i.fadeOutAnimation) || t.remove(), i.fadeInAnimation = i.scene.add.tween({
									targets: (0, Un.Z)(i),
									props: {
										alpha: {
											value: 1,
											duration: 1e3,
											ease: Phaser.Math.Easing.Cubic.In
										}
									},
									completeDelay: 1500,
									onComplete: function() {
										i.setAlpha(1), i.runFadeOutAnimation()
									}
								})
							}, i.runFadeOutAnimation = function() {
								var e, t;
								null == (e = i.fadeOutAnimation) || e.remove(), null == (t = i.fadeInAnimation) || t.remove(), i.scene.getIsSkipLevelComplete() ? i.setAlpha(0) : i.fadeOutAnimation = i.scene.add.tween({
									targets: (0, Un.Z)(i),
									alpha: {
										value: 0,
										duration: 1e3,
										ease: Phaser.Math.Easing.Cubic.Out
									},
									completeDelay: 1500,
									onComplete: function() {
										i.setAlpha(0), i.isShow ? i.runFadeInAnimation() : i.runFadeOutAnimation()
									}
								})
							}, i.scene = t, i.createArrow1(), i.createArrow2(), i.setAlpha(0), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createArrow1 = function() {
							this.arrow1 = this.scene.make.image({
								key: JE,
								frame: qE.CURVE_ARROW
							}), this.arrow1.setWorldSize(44, 32), this.arrow1.setAngle(-18), this.arrow1.setFlip(!0, !1), Phaser.Display.Align.In.Center(this.arrow1, this, 0, -28), this.add(this.arrow1)
						}, i.createArrow2 = function() {
							this.arrow2 = this.scene.make.image({
								key: JE,
								frame: qE.CURVE_ARROW
							}), this.arrow2.setWorldSize(44, 32), this.arrow2.setAngle(-18), this.arrow2.setFlip(!1, !0), Phaser.Display.Align.In.Center(this.arrow2, this, 0, 28), this.add(this.arrow2)
						}, i.hide = function() {
							this.isShow = !1
						}, i.show = function() {
							this.isShow = !0
						}, t
					}(Phaser.GameObjects.Container),
					$E = QE,
					eT = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).angle2 = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var o = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								r = Math.atan2(this.y - i, this.x - t);
							this.velocityX = o * Math.cos(r), this.velocityY = o * Math.sin(r), this.rotation = r, this.angle2 = r
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.rotation = this.angle2, a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					tT = eT,
					iT = aa.Z.GAMEPLAY.EFFECTS,
					nT = iT.KEY,
					aT = iT.FRAME,
					sT = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, nT) || this).smokeEmitter = void 0, i.flareEmitter = void 0, i.glow = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.EFFECT_HIGH), i.createExplodeAnimation(), i.createGlow(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createGlow = function() {
							this.glow = this.scene.make.image({
								key: nT,
								frame: aT.GLOW_4
							}), this.glow.setWorldSize(200, 200), this.glow.setTint(1378e4), this.glow.kill(), this.glow.setAlpha(0), this.glow.setDepth(jn.Z.EFFECT_HIGH)
						}, i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 25)
						}, i.createExplodeAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									x: 200,
									y: 200,
									frame: [aT.PARTICLE_DUST_01, aT.PARTICLE_DUST_02],
									scale: {
										start: 1.5 * e,
										end: 0
									},
									alpha: {
										start: 1,
										end: 0
									},
									speed: {
										min: 80,
										max: 100
									},
									frequency: 20,
									quantity: 5,
									lifespan: {
										min: 400,
										max: 700
									},
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: oT,
									on: !1
								},
								i = {
									frame: [aT.GLOW_3, aT.GLOW_4],
									scale: {
										min: 1 * e,
										max: 2 * e
									},
									alpha: {
										start: 1,
										end: 0,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									speed: {
										min: 80,
										max: 100
									},
									lifespan: {
										min: 300,
										max: 500
									},
									particleClass: rT,
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									on: !1
								};
							this.smokeEmitter = this.createEmitter(t), this.flareEmitter = this.createEmitter(i)
						}, i.explode = function(e, t) {
							var i = this;
							this.smokeEmitter.explode(40, e, t), this.flareEmitter.explode(8, e, t), this.glow.revive(), this.glow.setPosition(e, t), this.scene.tweens.add({
								targets: this.glow,
								alpha: {
									from: 0,
									to: 1
								},
								duration: 300,
								yoyo: !0,
								onComplete: function() {
									i.glow.setAlpha(0), i.glow.kill()
								}
							})
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager),
					oT = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).fromColor = void 0, i.toColor = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i), this.fromColor = new Phaser.Display.Color(255, 255, 255, 255), this.toColor = new Phaser.Display.Color(220, 188, 67, 255)
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n),
								s = Phaser.Display.Color.Interpolate.ColorWithColor(this.fromColor, this.toColor, 100, 100 * this.lifeT);
							return this.tint = Phaser.Display.Color.GetColor(s.r, s.g, s.b), a
						}, t
					}(tT),
					rT = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this)._scaleX = void 0, i._scaleY = void 0, i.fromColor = void 0, i.toColor = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i), this._scaleX = this.scaleX, this.scaleX = this._scaleX, this.scaleY = this._scaleX * (.05 * Math.random() + .1), this._scaleY = this.scaleY, this.fromColor = new Phaser.Display.Color(255, 255, 255, 255), this.toColor = new Phaser.Display.Color(220, 188, 67, 255)
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							this.scaleX = (1 - Phaser.Math.Easing.Linear(this.lifeT)) * this._scaleX, this.scaleY = this._scaleY;
							var s = Phaser.Display.Color.Interpolate.ColorWithColor(this.fromColor, this.toColor, 100, Math.min(200 * this.lifeT, 100));
							return this.tint = Phaser.Display.Color.GetColor(s.r, s.g, s.b), a
						}, t
					}(tT),
					lT = sT,
					cT = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, "BombBulletExplodeBehavior") || this).smokeParticle = void 0, i.smokeParticle = new lT(t.scene), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.explode = function() {
							var e = (0, r.Z)(h().mark((function e(t, i, n) {
								var a, s, o, r, l, c, u = this;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return a = this.gameObject.scene, s = this.gameObject.gameManager, o = s.grid, r = o.jiggleNeighborsBall(this.gameObject, 5), l = o.getAdjacentObjects({
												row: t,
												col: i
											}, 2, !1), c = [], this.smokeParticle.explode(this.gameObject.x, this.gameObject.y), l.forEach((function(e) {
												return e.forEach((function(e) {
													c.push(e.onActiveExplode(u.gameObject))
												}))
											})), this.gameObject.scene.audio.playSound(sa.Z.BOMB_ITEM_EXPLODE), a.vibrateController.handleUseItem(), e.next = 12, oe().all(c);
										case 12:
											return e.next = 14, oe().all([o.processOrphaned(), r]);
										case 14:
											return e.next = 16, s.endTurn();
										case 16:
											return e.next = 18, s.startTurn();
										case 18:
											a.bulletItemManager.deActiveItem();
										case 19:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t, i, n) {
								return e.apply(this, arguments)
							}
						}(), i.onCollideWithGrid = function(e, t) {
							this.explode(e.row, e.col, t)
						}, i.onOutsideTopGrid = function() {
							e.prototype.onOutsideTopGrid.call(this), this.gameObject.scene.bulletItemManager.deActiveItem()
						}, t
					}(Tb),
					hT = cT,
					uT = aa.Z.GAMEPLAY,
					dT = uT.EFFECTS,
					pT = uT.GAMEPLAY_TEXTURES,
					mT = pT.KEY,
					fT = pT.FRAME,
					gT = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, mT, fT.BULLET_ITEM_BOMB) || this).objectType = "BombBullet", a.glow = void 0, a.sparkParticle = void 0, a.sparkGlow = void 0, a.sparkGlowTween = void 0, a.shakeAnimation = void 0, a.createGlow(), a.setName("BombBullet"), a.color = wc.I.Bomb, a.sparkParticle = new Db(a.scene), a.shakeAnimation = new kb((0, Un.Z)(a), 70, 3), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createBehavior = function() {
							e.prototype.createBehavior.call(this), this.behaviors.push(new UE(this)), this.behaviors.push(new hT(this))
						}, i.setColor = function(e) {}, i.makeExplosion = function() {}, i.createGlow = function() {
							this.glow = this.scene.make.image({
								key: dT.KEY,
								frame: dT.FRAME.GLOW_3
							}), this.glow.setWorldSize(91.5, 91.5), this.glow.setTint(14885931), this.sparkGlow = this.scene.make.image({
								key: dT.KEY,
								frame: dT.FRAME.GLOW_4
							}), this.sparkGlow.setDepth(jn.Z.EFFECT_HIGH), this.sparkGlow.setWorldSize(20, 20), this.sparkGlow.setTint(16711168), this.glow.kill(), this.sparkGlow.kill()
						}, i.postUpdate = function() {
							e.prototype.postUpdate.call(this), this.launching ? this.glow.setPosition(this.x, this.y) : this.sparkGlow.setPosition(this.x + 10, this.y - 14)
						}, i.initDefault = function() {
							var t = this;
							return this.sparkGlow.setWorldSize(20, 20), e.prototype.initDefault.call(this), this.glow.revive(), this.scene.time.delayedCall(500, (function() {
								t.sparkGlow.revive()
							})), this
						}, i.kill = function() {
							e.prototype.kill.call(this), this.glow.kill(), this.sparkGlow.kill()
						}, i.startAnimationIdle = function() {
							var e;
							this.sparkParticle.start(this.x + 15, this.y - 15, -30, -70), this.shakeAnimation.shake(this), this.sparkGlow.setPosition(this.x, this.y), this.glow.setPosition(this.x, this.y), null == (e = this.sparkGlowTween) || e.remove(), this.sparkGlowTween = this.scene.tweens.add({
								targets: this.sparkGlow,
								scale: {
									from: this.sparkGlow.scale,
									to: 1.3 * this.sparkGlow.scale
								},
								alpha: {
									from: .7,
									to: 1
								},
								duration: 100,
								yoyo: !0,
								loop: -1
							})
						}, i.stopAnimationIdle = function() {
							var e;
							this.sparkParticle.stop(), this.shakeAnimation.stop(), this.sparkGlow.kill(), null == (e = this.sparkGlowTween) || e.stop()
						}, t
					}(Ob),
					vT = gT;

				function yT(e, t) {
					var i = "undefined" !== typeof uo() && mo()(e) || e["@@iterator"];
					if (i) return (i = i.call(e)).next.bind(i);
					if (Array.isArray(e) || (i = function(e, t) {
							var i;
							if (!e) return;
							if ("string" === typeof e) return bT(e, t);
							var n = tt()(i = Object.prototype.toString.call(e)).call(i, 8, -1);
							"Object" === n && e.constructor && (n = e.constructor.name);
							if ("Map" === n || "Set" === n) return co()(e);
							if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return bT(e, t)
						}(e)) || t && e && "number" === typeof e.length) {
						i && (e = i);
						var n = 0;
						return function() {
							return n >= e.length ? {
								done: !0
							} : {
								done: !1,
								value: e[n++]
							}
						}
					}
					throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
				}

				function bT(e, t) {
					(null == t || t > e.length) && (t = e.length);
					for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
					return n
				}
				aa.Z.GAMEPLAY.EFFECTS;
				var ET = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS,
					TT = ET.KEY,
					AT = ET.FRAME,
					ST = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t.scene, i, n, TT, AT.SHOOTER) || this).highlightCircle = void 0, a.shootingAngle = void 0, a.timeToReloadBullet = 150, a.shotGuide = void 0, a.simulatorBulletItem = void 0, a.remainingBulletText = void 0, a.currentHightLightPositions = [], a.currentBullet = void 0, a.nextBullet = void 0, a.itemBullet = void 0, a.isBulletItemActive = !1, a.bulletBallPool = void 0, a.layoutData = void 0, a.shooterState = void 0, a.isDisabledShooting = !0, a.isDisabledShotGuide = !0, a.isDisabledSwitching = !0, a.nextBulletScale = .75, a.bulletScale = void 0, a.remainingBullet = 1, a.bulletIndex = 0, a.lastUseItemCount = void 0, a.itemsUsedCount = void 0, a.shootingPosition = void 0, a.nextShootingPosition = void 0, a.scene = void 0, a.gameManager = void 0, a.hitZone = void 0, a.spinningArrows = void 0, a.remainingBulletTween = void 0, a.remainingBulletColorTween = void 0, a.pointerMove = void 0, a.isPointerOut = !1, a.handleCloseScreen = function() {
								a.scene.input.setTopOnly(!0);
								var e = a.scene.input.activePointer;
								if (e.active && !(e.worldY < 80)) {
									var t = e.worldX - a.shootingPosition.x,
										i = e.worldY - a.shootingPosition.y,
										n = new Phaser.Math.Vector2(t, i);
									n.normalize(), a.shootingAngle.copy(n)
								}
							}, a.celebrationShootTimerEvents = [], a.celebrationShootResolves = [], a.runBallAnimation = (0, Te.D)((function() {
								a.remainingBullet <= 0 && a.nextBullet && a.nextBullet.active && a.scene.tweens.add({
									targets: [a.nextBullet],
									scale: 0,
									duration: 300
								}), a.remainingBullet > 0 && !a.nextBullet && a.genNextBullet(!1, !0)
							}), 100), a.scene = t.scene, a.setWorldSize(68.5, 68.5), a.gameManager = t, a.setDepth(jn.Z.SHOOTER), a.shooterState = nf.LOADING, a.initBulletPosition(), a.createObjects(), a.createSpinningArrows(), a.simulatorBulletItem = new NE(a.scene), a.initEvents(), a.initController(), a.resetReminderUseItem(), a.resetItemsUsedCount(), t.scene.add.existing((0, Un.Z)(a)), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.startLevel = function() {
							this.resetReminderUseItem(), this.resetItemsUsedCount()
						}, i.initBulletPosition = function() {
							this.shootingPosition = {
								x: this.x,
								y: this.y - 30
							}, this.nextShootingPosition = {
								x: this.x + 30 * Math.cos(Math.PI / 4.4),
								y: this.y + 30 * Math.sin(Math.PI / 3.4)
							}
						}, i.createObjects = function() {
							var e = this.scene.data.get("ball"),
								t = e.width,
								i = e.height;
							this.highlightCircle = this.scene.add.image(0, 0, TT, AT.HIGHLIGHT_CIRCLE), this.highlightCircle.setPosition(this.shootingPosition.x, this.shootingPosition.y).setWorldSize(1.5 * t, 1.5 * i), this.highlightCircle.kill(), this.highlightCircle.setDepth(jn.Z.SHOOTER), this.remainingBulletText = ia.Z.addText(this.scene, {
								font: _a.Z.NUMBERS_SYMBOLS.KEY,
								size: this.scene.fontSize(23),
								text: "1",
								origin: {
									x: .5,
									y: .4
								}
							}), this.remainingBulletText.setPosition(this.x, this.y), this.remainingBulletText.setDepth(jn.Z.UI)
						}, i.initController = function() {
							var e = this,
								t = this.scene.add.rectangle(0, 0, this.scene.gameZone.width, this.scene.gameZone.height - 220);
							t.setOrigin(0, 0), t.setInteractive(), t.on(Phaser.Input.Events.GAMEOBJECT_POINTER_DOWN, (function(t) {
								var i = t.worldX - e.shootingPosition.x,
									n = t.worldY - e.shootingPosition.y,
									a = new Phaser.Math.Vector2(i, n);
								a.normalize(), e.shootingAngle.copy(a), e.isDisabledShotGuide || (e.updateShootingAngle(), e.updateSimulator(), t.leftButtonDown() && e.scene.header.playFadeOutAnimation())
							})), t.on(Phaser.Input.Events.GAMEOBJECT_POINTER_MOVE, (function(t) {
								e.pointerMove = t;
								var i = e.scene.gameManager.guideManager.getIsShowingGuide();
								i.isShowingGuide, i.guideType
							})), t.on(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, (function(t) {
								e.hideSpinningArrows(), t.rightButtonReleased() ? e.swapBalls() : e.shoot(t), e.scene.header.playFadeInAnimation()
							})), t.on(Phaser.Input.Events.GAMEOBJECT_POINTER_OUT, (function(t) {
								e.isPointerOut = !0
							}));
							var i = .8 * this.displayWidth,
								n = this.scene.add.rectangle(0, 0, i, i),
								a = !1;
							n.setInteractive({
								useHandCursor: !0
							}), n.on(Phaser.Input.Events.GAMEOBJECT_POINTER_DOWN, (function() {
								e.isDisabledSwitching || (a = !0)
							})), n.on(Phaser.Input.Events.GAMEOBJECT_POINTER_OUT, (function() {
								a = !1
							})), n.on(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, (function() {
								e.isDisabledSwitching ? a = !1 : (e.hideSpinningArrows(), a && (e.scene.gameManager.guideManager.closeCurrentGuide(), e.swapBalls()))
							})), this.shootingAngle = new Phaser.Math.Vector2(0, -1), n.setPosition(this.x, this.y)
						}, i.handlePointerMove = function() {
							if (this.pointerMove) {
								var e = this.pointerMove;
								if (!this.scene.gameManager.guideManager.getIsShowingGuide().isShowingGuide) {
									e.leftButtonDown() && this.scene.header.playFadeOutAnimation();
									var t = e.worldX - this.shootingPosition.x,
										i = e.worldY - this.shootingPosition.y,
										n = new Phaser.Math.Vector2(t, i);
									n.normalize(), this.shootingAngle.copy(n), this.isDisabledShotGuide || (this.updateShootingAngle(), this.updateSimulator(), this.pointerMove = void 0)
								}
							}
						}, i.handlePointerOut = function() {
							this.isPointerOut && (this.isPointerOut = !1, this.shotGuide.hide(), this.simulatorBulletItem.hide(), this.scene.header.playFadeInAnimation())
						}, i.resetReminderUseItem = function() {
							this.lastUseItemCount = {
								BombBulletItem: 0,
								ElectricBulletBallItem: 0,
								RainbowBulletBallItem: 0,
								RocketBulletItem: 0
							}
						}, i.resetItemsUsedCount = function() {
							this.itemsUsedCount = {
								BombBulletItem: 0,
								ElectricBulletBallItem: 0,
								RainbowBulletBallItem: 0,
								RocketBulletItem: 0
							}
						}, i.initEvents = function() {
							this.scene.screen.events.off(GameCore.Screens.Events.CLOSE, this.handleCloseScreen), this.scene.screen.events.on(GameCore.Screens.Events.CLOSE, this.handleCloseScreen)
						}, i.pause = function() {
							this.setDisabledShooting(), this.setDisabledShotGuide(), this.setDisabledSwitching()
						}, i.resume = function() {
							this.setDisabledShooting(!1), this.setDisabledShotGuide(!1), this.setDisabledSwitching(!1)
						}, i.setBallPool = function(e) {
							return this.bulletBallPool = e, this
						}, i.setLayoutData = function(e) {
							return this.layoutData = e, this
						}, i.getCurrentHightLightPosition = function() {
							return this.currentHightLightPositions
						}, i.initBullet = function() {
							this.bulletIndex = 0, this.remainingBullet = this.gameManager.levelData.numberBullets, this.currentBullet = this.getNextColorBallBullet(), this.currentBullet.setPosition(this.shootingPosition.x, this.shootingPosition.y), this.bulletScale = this.currentBullet.scale, this.bulletIndex += 1;
							var e = this.getNextColorBallBullet();
							e.scale = this.bulletScale * this.nextBulletScale, this.nextBullet = e, this.nextBullet.setPosition(this.nextShootingPosition.x, this.nextShootingPosition.y), this.bulletIndex += 1, this.remainingBulletText.setText("" + this.remainingBullet), this.shooterState = nf.READY, this.remainingBullet <= 5 && this.playRemainingBulletAnimation()
						}, i.setGuide = function(e) {
							this.shotGuide = e
						}, i.genNextBullet = function(e, t) {
							if (void 0 === e && (e = !1), void 0 === t && (t = !1), this.remainingBullet < 2 && !t) return this.nextBullet = void 0, void this.setDisabledSwitching();
							var i = this.bulletScale,
								n = this.getNextColorBallBullet(e);
							n.scale = 0, this.nextBullet = n, this.scene.tweens.add({
								targets: n,
								scale: i * this.nextBulletScale,
								duration: 200
							}), this.bulletIndex += 1, this.remainingBullet <= 1 && this.setDisabledSwitching()
						}, i.swapBalls = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, i, n, a, s, o, r, l, c, u, d, p, m, f = this;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (!this.isDisabledSwitching) {
												e.next = 2;
												break
											}
											return e.abrupt("return");
										case 2:
											if (this.shooterState == nf.READY) {
												e.next = 4;
												break
											}
											return e.abrupt("return");
										case 4:
											if (!this.isBulletItemActive) {
												e.next = 6;
												break
											}
											return e.abrupt("return");
										case 6:
											if (this.currentBullet && this.nextBullet && !(this.remainingBullet <= 1)) {
												e.next = 8;
												break
											}
											return e.abrupt("return");
										case 8:
											if (this.shooterState = nf.SWAPPING, t = this.currentBullet, this.currentBullet = this.nextBullet, this.nextBullet = t, this.currentBullet) {
												e.next = 14;
												break
											}
											return e.abrupt("return");
										case 14:
											return (i = []).push(this.gameManager.gridObjectPool.changeColorGridObjects()), this.gameManager.increaseSwapBallsTimes(), this.scene.audio.playSound(sa.Z.SWITCH_BALL), n = this.currentBullet.x - this.x, a = this.currentBullet.y - this.y, s = new Phaser.Math.Vector2(n, a), o = this.shootingPosition.x - this.x, r = this.shootingPosition.y - this.y, l = new Phaser.Math.Vector2(o, r), c = this.bulletScale, u = l.length(), d = 250, p = Phaser.Math.Easing.Sine.InOut, m = new(oe())((function(e) {
												f.scene.tweens.add({
													targets: f.nextBullet,
													scale: c * f.nextBulletScale,
													duration: d,
													ease: p
												}), f.scene.tweens.addCounter({
													from: l.angle(),
													to: s.angle(),
													duration: d,
													ease: p,
													onUpdate: function(e) {
														var t = e.getValue();
														f.nextBullet && (f.nextBullet.x = f.x + Math.cos(t) * u, f.nextBullet.y = f.y + Math.sin(t) * u)
													}
												}), f.scene.tweens.add({
													targets: f.currentBullet,
													scale: c,
													duration: d,
													ease: p
												}), f.scene.tweens.addCounter({
													from: s.angle() + 2 * Math.PI,
													to: l.angle(),
													duration: d,
													ease: p,
													onUpdate: function(e) {
														var t = e.getValue();
														f.currentBullet && (f.currentBullet.x = f.x + Math.cos(t) * u, f.currentBullet.y = f.y + Math.sin(t) * u)
													},
													onComplete: function() {
														e()
													}
												})
											})), i.push(m), e.next = 32, oe().all(i);
										case 32:
											this.shooterState = nf.READY;
										case 33:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.attachBullet = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, i, n;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (this.scene) {
												e.next = 2;
												break
											}
											return e.abrupt("return");
										case 2:
											if (this.shooterState != nf.LOADING) {
												e.next = 4;
												break
											}
											return e.abrupt("return");
										case 4:
											if (!(this.remainingBullet <= 0)) {
												e.next = 7;
												break
											}
											return this.remainingBulletText.setText("" + this.remainingBullet), e.abrupt("return");
										case 7:
											return this.reset(), t = [], this.currentBullet ? (i = this.attachReuseBullet(), t.push(i)) : (n = this.attachNewBullet(), t.push(n)), t.push(this.gameManager.gridObjectPool.changeColorGridObjects()), e.next = 13, oe().all(t);
										case 13:
											this.shooterState = nf.READY, this.scene.bulletItemManager.setDisabledItems(!1);
										case 15:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.attachNewBullet = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t = this;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.abrupt("return", new(oe())((function(e) {
												if (t.currentBullet = t.nextBullet, t.genNextBullet(), t.currentBullet) {
													var i = t.currentBullet.x - t.x,
														n = t.currentBullet.y - t.y,
														a = new Phaser.Math.Vector2(i, n),
														s = t.shootingPosition.x - t.x,
														o = t.shootingPosition.y - t.y,
														r = new Phaser.Math.Vector2(s, o),
														l = r.length(),
														c = t.bulletScale;
													t.validateCurrentBullet(), t.scene.tweens.add({
														targets: t.currentBullet,
														scale: c,
														duration: 200
													}), t.scene.tweens.addCounter({
														from: a.angle() + 2 * Math.PI,
														to: r.angle(),
														duration: 200,
														onUpdate: function(e) {
															var i;
															if (null != (i = t.currentBullet) && i.active) {
																var n = e.getValue();
																t.currentBullet.x = t.x + Math.cos(n) * l, t.currentBullet.y = t.y + Math.sin(n) * l
															} else e.stop()
														},
														onComplete: function() {
															e(), t.remainingBulletText.setText("" + t.remainingBullet), t.currentBullet && (GameCore.Utils.Device.isDesktop() && t.shotGuide.showFrom(t.shootingPosition.x, t.shootingPosition.y, t.constraintAngle(t.shootingAngle), t.currentBullet.getColor()), 5 == t.remainingBullet && t.playRemainingBulletAnimation())
														}
													})
												} else t.remainingBulletText.setText("" + t.remainingBullet)
											})));
										case 1:
										case "end":
											return e.stop()
									}
								}), e)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.attachReuseBullet = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t = this;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.abrupt("return", new(oe())((function(e) {
												t.simulatorBulletItem.hide(), t.shooterState = nf.LOADING, t.remainingBullet <= 1 && t.nextBullet ? (t.nextBullet.kill(), t.nextBullet = void 0) : (t.validateCurrentBullet(), t.scene.tweens.add({
													targets: [t.nextBullet],
													scale: t.bulletScale * t.nextBulletScale,
													duration: 200
												})), t.scene.tweens.add({
													targets: [t.currentBullet],
													scale: t.bulletScale,
													duration: 200,
													onComplete: function() {
														e(), t.remainingBulletText.setText("" + t.remainingBullet), t.currentBullet && (GameCore.Utils.Device.isDesktop() && t.shotGuide.showFrom(t.shootingPosition.x, t.shootingPosition.y, t.constraintAngle(t.shootingAngle), t.currentBullet.getColor()), 5 == t.remainingBullet && t.playRemainingBulletAnimation())
													}
												})
											})));
										case 1:
										case "end":
											return e.stop()
									}
								}), e)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.update = function(e) {
							if (this.shooterState === nf.READY ? (this.shotGuide.updateSpeedEffectShotGuide(e), this.updateHighLightCircle(!1, e)) : this.updateHighLightCircle(!0, e), this.isDisabledShotGuide || this.shooterState != nf.READY) return this.shotGuide.hide(), void this.simulatorBulletItem.hide();
							this.handlePointerMove(), this.handlePointerOut()
						}, i.updateSimulator = function() {
							var e, t = this;
							if (this.isBulletItemActive) {
								var i = [],
									n = [],
									a = this.scene.bulletItemManager.getNameItemActive(),
									s = this.shotGuide.getLines(),
									o = this.shotGuide.getLimitLine();
								if ((null == s ? void 0 : s.length) > o + 1) return this.currentHightLightPositions = [], void this.simulatorBulletItem.updateSimulator([]);
								switch (a) {
									case Lm:
										var r, l = this.shotGuide.getPositionEmptyBallNearest();
										if (l)(r = n).push.apply(r, this.scene.gameManager.grid.getXYAdjacentObjects(l, 2));
										i = [];
										break;
									case Gm:
										i = [];
										var c, h, u = this.shotGuide.getBallCollideGuide(),
											d = this.shotGuide.getPositionEmptyBallNearest();
										if (u)(c = n).push.apply(c, this.scene.gameManager.grid.getXYObjectsRowAt(u));
										else if (d)(h = n).push.apply(h, this.scene.gameManager.grid.getXYObjectsRowAt(d));
										break;
									case Dm:
										var p = this.shotGuide.getPositionEmptyBallNearest();
										if (p) {
											var m = this.scene.gameManager.grid.getNeighbors(p.row, p.col);
											m.length > 0 && m.forEach((function(e) {
												var n, a = t.scene.gameManager.grid.findMatchesAt(e)[0];
												(n = i).push.apply(n, a)
											}))
										} else i = [];
										break;
									case Fm:
										i = [this.getBallsOverlapLine()]
								}
								i.forEach((function(e) {
									var t;
									(t = n).push.apply(t, e)
								})), n = A()(n).call(n, (function(e, t) {
									return t == $d()(n).call(n, (function(t) {
										return t.x === e.x && t.y === e.y
									}))
								})), this.currentHightLightPositions = n, this.simulatorBulletItem.updateSimulator(y()(e = []).call(e, n))
							}
						}, i.getBallsOverlapLine = function() {
							var e = this.gameManager.grid.getVisibleGridObjects(),
								t = this.shotGuide.getLines(),
								i = new Phaser.Geom.Line(t[0].x, t[0].y, t[1].x, t[1].y),
								n = [];
							return e.forEach((function(e) {
								Phaser.Geom.Line.GetShortestDistance(i, e) < 32 && n.push(e)
							})), n
						}, i.updateShootingAngle = function() {
							if (this.isBulletItemActive) {
								var e;
								if (!this.itemBullet) return;
								this.itemBullet instanceof zb && this.itemBullet.setRotation(this.shootingAngle.angle() + Math.PI / 4), null == (e = this.shotGuide) || e.showFrom(this.shootingPosition.x, this.shootingPosition.y, this.constraintAngle(this.shootingAngle), this.itemBullet.getColor())
							} else {
								var t;
								if (!this.currentBullet) return;
								null == (t = this.shotGuide) || t.showFrom(this.shootingPosition.x, this.shootingPosition.y, this.constraintAngle(this.shootingAngle), this.currentBullet.getColor())
							}
						}, i.updateHighLightCircle = function(e, t) {
							e ? this.highlightCircle.kill() : (this.isBulletItemActive ? this.highlightCircle.kill() : this.highlightCircle.revive(), this.highlightCircle.rotation += .1 * t / 16.67)
						}, i.shoot = function(e) {
							var t = this.shotGuide.getLines();
							if (!this.isDisabledShooting && 0 !== t.length && this.shooterState == nf.READY) {
								this.scene.footer.setDisabled(!0);
								var i = e.worldX - this.shootingPosition.x,
									n = e.worldY - this.shootingPosition.y;
								if (new Phaser.Math.Vector2(i, n).normalize(), this.isBulletItemActive) {
									if (!this.itemBullet) return;
									var a = this.scene.player.getBullets(),
										s = this.scene.bulletItemManager.getItemActive();
									if (s) {
										this.logUseItem(s);
										var r, l = a[s.name];
										if (l && l > 0 && !s.getIsFreeItem()) this.scene.player.updateCustomFields({
											bullets: (0, o.Z)({}, a, (r = {}, r[s.name] = l - 1, r))
										});
										s.getIsFreeItem() && s.resetProgressFillItem()
									}
									this.itemBullet.launchByLines(t), this.itemBullet instanceof vT && this.scene.audio.playSound(sa.Z.SHOOT_BUBBLE), this.itemBullet instanceof zb && (this.scene.audio.playSound(sa.Z.ROCKET_ITEM_EXPLODE), this.itemBullet.setVisible(!1)), this.itemBullet = void 0, this.scene.events.emit(Ef.SHOOT_BALL, this.itemBullet)
								} else {
									if (!this.currentBullet) return;
									this.scene.audio.playSound(sa.Z.SHOOT_BUBBLE), this.currentBullet.launchByLines(this.shotGuide.getLines()), this.scene.events.emit(Ef.SHOOT_BALL, this.currentBullet), this.currentBullet = void 0
								}
								for (var c, h = yT(K()(this.lastUseItemCount)); !(c = h()).done;) {
									var u = c.value;
									this.lastUseItemCount[u] += 1
								}
								var d = this.scene.bulletItemManager.getNameItemActive();
								"" != d && (this.lastUseItemCount[d] = 0);
								for (var p, m = yT(K()(this.lastUseItemCount)); !(p = m()).done;) {
									var f = p.value;
									3 === this.lastUseItemCount[f] && this.scene.events.emit(fm.s.ITEM_REMINDER, f)
								}
								this.shotGuide.hide(), this.simulatorBulletItem.hide(), this.gameManager.increaseShootTimes(), this.shooterState = nf.SHOOTING, this.updateRemainingBullet(-1)
							}
						}, i.setDisabledShooting = function(e) {
							void 0 === e && (e = !0), this.isDisabledShooting = e
						}, i.setDisabledSwitching = function(e) {
							void 0 === e && (e = !0), this.isDisabledSwitching = e, e ? (this.spinningArrows.runFadeOutAnimation(), this.spinningArrows.hide()) : (this.spinningArrows.runFadeInAnimation(), this.spinningArrows.runSpinAnimation(), this.spinningArrows.show())
						}, i.setDisabledShotGuide = function(e) {
							void 0 === e && (e = !0), this.isDisabledShotGuide = e
						}, i.destroy = function() {
							this.scene && (this.isBulletItemActive = !1, this.currentBullet && (this.currentBullet.kill(), this.currentBullet = void 0), this.nextBullet && (this.nextBullet.kill(), this.nextBullet = void 0), this.shotGuide.destroy(), this.scene.events.off("multiplierChanged"), this.scene.screen.events.off(GameCore.Screens.Events.CLOSE, this.handleCloseScreen), this.layoutData.destroy())
						}, i.reset = function() {
							var e;
							this.shotGuide.reset(), null == (e = this.itemBullet) || e.kill(), this.itemBullet = void 0, this.isBulletItemActive = !1, this.remainingBulletText.setTint(16777215), this.remainingBulletText.setScale(1)
						}, i.constraintAngle = function(e) {
							var t = this.scene.data.get("shootingAngle") * Math.PI / 180,
								i = e.clone();
							return i.rotate(-Math.PI / 2), i.angle() < Math.PI / 2 + t && i.setAngle(Math.PI / 2 + t), i.angle() > 3 * Math.PI / 2 - t && i.setAngle(3 * Math.PI / 2 - t), i.rotate(Math.PI / 2), i
						}, i.updatePosition = function(e, t) {
							if (e || t) {
								e && (this.x = e, this.shootingPosition.x = e, this.nextShootingPosition.x = e + 30 * Math.cos(Math.PI / 4.4)), this.shootingPosition = {
									x: this.x,
									y: this.y - 30
								}, t && (this.y = t, this.shootingPosition.y = t - 30, this.nextShootingPosition.y = this.y + 30 * Math.sin(Math.PI / 3.4))
							}
						}, i.attachBulletItem = function() {
							var e = this;
							if (this.scene.bulletItemManager.setDisabledItems(!0), !this.itemBullet) {
								this.shooterState = nf.LOADING;
								var t = this.scene.bulletItemManager.getNameItemActive();
								if (t) {
									var i;
									switch (t) {
										case Fm:
											i = this.bulletBallPool.spawn(this.shootingPosition.x, this.shootingPosition.y, "RocketBullet");
											break;
										case Gm:
											i = this.bulletBallPool.spawn(this.shootingPosition.x, this.shootingPosition.y, "ElectricBulletBall");
											break;
										case Dm:
											i = this.bulletBallPool.spawn(this.shootingPosition.x, this.shootingPosition.y, "RainbowBulletBall");
											break;
										case Lm:
											i = this.bulletBallPool.spawn(this.shootingPosition.x, this.shootingPosition.y, "BombBullet")
									}
									if (i) {
										this.itemBullet = i, this.isBulletItemActive = !0, this.itemBullet.setScale(0);
										var n = 1 / this.scene.world.getPixelRatio();
										this.scene.add.tween({
											targets: [this.currentBullet, this.nextBullet],
											scale: 0,
											duration: 200,
											ease: Phaser.Math.Easing.Bounce.Out,
											onComplete: function() {
												e.scene.add.tween({
													targets: [i],
													scale: n,
													ease: Phaser.Math.Easing.Bounce.Out,
													duration: 300,
													onComplete: function() {
														e.shooterState = nf.READY
													}
												})
											}
										})
									} else this.shooterState = nf.READY
								} else this.shooterState = nf.READY
							}
						}, i.getNextColorBallBullet = function(e) {
							void 0 === e && (e = !1);
							var t = this.gameManager.levelData.bulletsColor[this.bulletIndex],
								i = this.gameManager.grid.getCurrentColorOnGridObstacles();
							i.length > 0 && (t && ue()(i).call(i, t) || (t = i[Math.floor(Math.random() * i.length)]));
							var n = this.gameManager.levelData.colors,
								a = t;
							e && (a = n[Phaser.Math.RND.between(0, n.length - 1)]);
							var s = this.bulletBallPool.spawn(this.nextShootingPosition.x, this.nextShootingPosition.y, "ColorBulletBall");
							return s.setColor(a), s
						}, i.validateCurrentBullet = function() {
							var e = this.gameManager.grid.getCurrentColorOnGridObstacles();
							if (0 !== e.length) {
								if (this.currentBullet && this.currentBullet instanceof XE && !ue()(e).call(e, this.currentBullet.getColor())) {
									var t = e[Math.floor(Math.random() * e.length)];
									this.currentBullet.setColor(t)
								}
								if (this.nextBullet && this.nextBullet instanceof XE && !ue()(e).call(e, this.nextBullet.getColor())) {
									var i = e[Math.floor(Math.random() * e.length)];
									this.nextBullet.setColor(i)
								}
							}
						}, i.getShooterState = function() {
							return this.shooterState
						}, i.getCurrentBullet = function() {
							return this.currentBullet
						}, i.getRemainingBullet = function() {
							return this.remainingBullet
						}, i.celebrationWin = function() {
							var e = this;
							this.celebrationShootTimerEvents = [], this.celebrationShootResolves = [], this.setDisabledShotGuide(), this.setDisabledShooting(), this.setDisabledSwitching(), this.shooterState = nf.SHOOTING, this.updateHighLightCircle(!0, 16.67);
							for (var t = [], i = this.remainingBullet, n = function(i) {
									t.push(new(oe())((function(t) {
										e.scene.getIsSkipLevelComplete() ? e.celebrationShoot().then(t) : (e.celebrationShootResolves.push(t), e.celebrationShootTimerEvents.push(e.scene.time.addEvent({
											delay: 75 * i,
											callback: function() {
												e.celebrationShoot().then(t)
											}
										})))
									})))
								}, a = 0; a < i; a++) n(a);
							return oe().all(t)
						}, i.celebrationShoot = function() {
							if (!this.currentBullet && (this.currentBullet = this.nextBullet, this.nextBullet = this.getNextColorBallBullet(!0), this.nextBullet.setVisible(!1), !this.currentBullet)) return oe().resolve();
							var e = this.currentBullet;
							this.currentBullet = void 0, this.remainingBullet -= 1;
							var t = this.bulletScale;
							e.revive(), e.setScale(t), this.remainingBulletText.setText("" + this.remainingBullet);
							var i = Phaser.Math.RND.between(-65, 65),
								n = Phaser.Math.RND.between(-350, -100),
								a = new Phaser.Math.Vector2(i, n);
							a.normalize();
							var s = this.scene.getIsSkipLevelComplete() ? 0 : Phaser.Math.RND.between(350, 500);
							return e.launchCelebrate(this.constraintAngle(a), s)
						}, i.createSpinningArrows = function() {
							this.spinningArrows = new $E(this.scene), this.spinningArrows.setPosition(this.x, this.y).setDepth(jn.Z.SHOOTER + 1)
						}, i.hideSpinningArrows = function(e) {
							void 0 === e && (e = !1), this.spinningArrows.runFadeOutAnimation(), e && this.spinningArrows.hide()
						}, i.showSpinningArrows = function() {
							this.spinningArrows.show()
						}, i.playRemainingBulletAnimation = function() {
							var e, t, i = this;
							null == (e = this.remainingBulletTween) || e.remove(), null == (t = this.remainingBulletColorTween) || t.remove();
							var n = Phaser.Display.Color.ValueToColor(16777215),
								a = Phaser.Display.Color.ValueToColor(16711680);
							this.remainingBulletTween = this.scene.tweens.add({
								targets: this.remainingBulletText,
								scale: {
									from: 1,
									to: 1.3,
									ease: Phaser.Math.Easing.Quadratic.In
								},
								duration: 600,
								yoyo: !0,
								loop: -1
							}), this.remainingBulletColorTween = this.scene.tweens.addCounter({
								from: 0,
								to: 1,
								yoyo: !0,
								loop: -1,
								duration: 600,
								onUpdate: function(e) {
									var t = 100 * e.getValue(),
										s = Phaser.Display.Color.Interpolate.ColorWithColor(n, a, 100, t),
										o = s.r,
										r = s.g,
										l = s.b,
										c = Phaser.Display.Color.GetColor(o, r, l);
									i.remainingBulletText.setTint(c)
								}
							})
						}, i.updateRemainingBullet = function(e, t) {
							var i, n;
							(void 0 === t && (t = !1), this.remainingBullet += e, e < 0 ? this.remainingBullet < 0 && (this.remainingBullet = 0) : e > 0 && t && this.genNextBullet(!1, !0), this.remainingBulletText.setText("" + this.remainingBullet), this.remainingBullet >= 5) && (this.remainingBulletText.setScale(1), this.remainingBulletText.setTint(16777215), null == (i = this.remainingBulletTween) || i.remove(), null == (n = this.remainingBulletColorTween) || n.remove());
							this.runBallAnimation(), this.setDisabledSwitching(this.remainingBullet <= 1)
						}, i.logUseItem = function(e) {
							this.itemsUsedCount[e.name] || (this.itemsUsedCount[e.name] = 0), this.itemsUsedCount[e.name] += 1;
							var t = this.scene.level.getLevel();
							this.scene.analytics.event(Xt._.USE_ITEM, {
								item_name: e.name,
								level: t
							})
						}, i.getItemUsedCount = function(e) {
							return this.itemsUsedCount[e] || 0
						}, i.skipCelebrationShoots = function() {
							var e, t;
							0 !== this.celebrationShootResolves.length && (null == (e = this.celebrationShootResolves) || e.forEach((function(e) {
								e()
							})), null == (t = this.celebrationShootTimerEvents) || t.forEach((function(e) {
								e.remove()
							})), this.celebrationShootTimerEvents = [], this.celebrationShootResolves = [])
						}, t
					}(Phaser.GameObjects.Image),
					_T = ST,
					CT = aa.Z.GAMEPLAY.EFFECTS,
					wT = CT.KEY,
					BT = CT.FRAME,
					IT = function(e) {
						function t(t) {
							return e.call(this, t, "RainbowBulletBallBehavior") || this
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.rainbowEffectExplode = function(e) {
							var t = this,
								i = this.gameObject.scene,
								n = 1 / i.world.getPixelRatio();
							this.gameObject.revive(), this.gameObject.setPosition(e.x, e.y), this.gameObject.setRotation(0), this.gameObject.setAlpha(.7);
							var a = this.gameObject,
								s = a.x,
								o = a.y,
								r = this.gameObject.gameManager.spritePool.spawn();
							return r.setTexture(wT, BT.RAINBOW_EFFECT).setScale(.7 * n).setAlpha(1).setDepth(jn.Z.EFFECT_HIGH).setPosition(s, o), new(oe())((function(e) {
								i.tweens.add({
									targets: t.gameObject,
									scale: 1.4 * n,
									alpha: 0,
									duration: 200,
									onUpdate: function() {
										t.gameObject.revive()
									},
									onComplete: function() {
										t.gameObject.preKill()
									}
								}), i.tweens.add({
									targets: r,
									scale: 1.5 * n,
									alpha: {
										from: .8,
										to: 0
									},
									duration: 400,
									onComplete: function() {
										r.kill(), e()
									}
								})
							}))
						}, i.processMatchAllObjects = function() {
							var e = (0, r.Z)(h().mark((function e(t, i) {
								var n, a, s, o, r, l, c, u = this;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return a = this.gameObject.scene, s = this.gameObject.gameManager, o = s.grid, r = o.jiggleNeighborsBall(this.gameObject), l = this.rainbowEffectExplode(o.getXYByRowCol(t, !0)), c = [l], i.forEach((function(e) {
												c.push(o.processMatch(e, 1, u.gameObject)), c.push(e.onCollideWithBullet())
											})), a.vibrateController.handleUseItem(), this.gameObject.scene.audio.playSound(sa.Z.RAINBOW_ITEM_EXPLODE), e.next = 11, oe().all(y()(n = []).call(n, c));
										case 11:
											return e.next = 13, oe().all([o.processOrphaned(), r]);
										case 13:
											return e.next = 15, s.endTurn();
										case 15:
											return e.next = 17, s.startTurn();
										case 17:
											a.bulletItemManager.deActiveItem();
										case 18:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t, i) {
								return e.apply(this, arguments)
							}
						}(), i.onCollideWithGrid = function(e, t) {
							this.processMatchAllObjects(e, t)
						}, i.onOutsideTopGrid = function() {
							e.prototype.onOutsideTopGrid.call(this), this.gameObject.scene.bulletItemManager.deActiveItem()
						}, t
					}(Tb),
					PT = IT,
					xT = aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES,
					OT = xT.KEY,
					kT = xT.FRAME,
					RT = aa.Z.GAMEPLAY.EFFECTS,
					MT = RT.KEY,
					LT = RT.FRAME,
					GT = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, OT, kT.BULLET_ITEM_RAINBOW) || this).ringEffect = void 0, a.glow = void 0, a.glow2 = void 0, a.tweenScale = void 0, a.tweenAlpha = void 0, a.tweenColor = void 0, a.colors = void 0, a.objectType = "RainbowBulletBall", a.setName("RainbowBulletBall"), a.color = wc.I.Rainbow, a.createGlows(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createGlows = function() {
							this.ringEffect = this.scene.make.image({
								key: MT,
								frame: LT.RING_EFFECT
							}), this.ringEffect.setWorldSize(64, 64), this.ringEffect.setDepth(jn.Z.EFFECT_HIGH), this.glow = this.scene.make.image({
								key: MT,
								frame: LT.GLOW_4,
								alpha: .5
							}), this.glow.setDepth(jn.Z.EFFECT_HIGH), this.glow.setWorldSize(68, 68), this.glow2 = this.scene.make.image({
								key: MT,
								frame: LT.GLOW_4,
								alpha: .5
							}), this.glow2.setDepth(jn.Z.EFFECT_HIGH), this.glow2.setWorldSize(68 * .7, 68 * .7), this.colors = [new Phaser.Display.Color(221, 24, 18, 255), new Phaser.Display.Color(246, 135, 0, 255), new Phaser.Display.Color(252, 228, 0, 255), new Phaser.Display.Color(139, 245, 0, 255), new Phaser.Display.Color(87, 122, 254, 255), new Phaser.Display.Color(144, 63, 160, 255)]
						}, i.startAnimationIdle = function() {
							var e = this,
								t = 1 / this.scene.world.getPixelRatio();
							this.stopAnimationIdle(), this.ringEffect.revive(), this.glow.setPosition(this.x, this.y), this.ringEffect.setPosition(this.x, this.y), this.glow2.setPosition(this.x, this.y), this.tweenScale = this.scene.tweens.add({
								targets: this.ringEffect,
								scale: {
									from: 0 * t,
									to: 1.2 * t
								},
								alpha: {
									from: 0,
									to: 1,
									duration: 300,
									yoyo: !0,
									hold: 600,
									repeatDelay: 300,
									repeat: -1,
									ease: Phaser.Math.Easing.Sine.In
								},
								ease: Phaser.Math.Easing.Quartic.Out,
								duration: 1200,
								repeatDelay: 300,
								repeat: -1
							}), this.tweenAlpha = this.scene.tweens.add({
								targets: this.glow,
								delay: 300,
								alpha: {
									start: 0,
									from: 0,
									to: .4
								},
								onStart: function() {
									e.glow.revive(), e.glow2.revive()
								},
								onUpdate: function() {
									e.glow2.alpha = 1.1 * e.glow.alpha
								},
								duration: 300,
								yoyo: !0,
								loop: -1
							}), this.tweenColor = this.scene.tweens.addCounter({
								from: 0,
								to: 1,
								duration: 1e3,
								repeat: -1,
								onUpdate: function(t) {
									var i = t.getValue() * (e.colors.length - 1),
										n = Math.floor(i),
										a = Math.ceil(i),
										s = Phaser.Display.Color.Interpolate.ColorWithColor(e.colors[n], e.colors[a], 100, 100 * (i - n)),
										o = Phaser.Display.Color.GetColor(s.r, s.g, s.b);
									e.ringEffect.setTint(o), e.glow.setTint(o)
								}
							})
						}, i.stopAnimationIdle = function() {
							var e, t, i;
							null == (e = this.tweenAlpha) || e.remove(), null == (t = this.tweenColor) || t.remove(), null == (i = this.tweenScale) || i.remove(), this.ringEffect.kill(), this.glow.kill(), this.glow2.kill()
						}, i.setColor = function(e) {}, i.createBehavior = function() {
							e.prototype.createBehavior.call(this), this.behaviors.push(new PT(this)), this.behaviors.push(new UE(this))
						}, t
					}(Ob),
					DT = GT,
					FT = aa.Z.GAMEPLAY.EFFECTS,
					NT = FT.KEY,
					ZT = FT.FRAME,
					UT = function(e) {
						function t(t) {
							return e.call(this, t, "ColorExplodeBehavior") || this
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.normalExplode = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = this.gameObject.getColor(),
								i = this.gameObject,
								n = i.x,
								a = i.y,
								s = this.gameObject.gameManager.spritePool.spawn();
							s.setTexture(NT).setScale(e).setTint(t).setAlpha(.8).setDepth(jn.Z.EFFECT).setPosition(n, a), s.play("color-ball-explosion"), s.once(Phaser.Animations.Events.ANIMATION_COMPLETE, (function() {
								s.kill()
							}))
						}, i.bombEffectExplode = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = this.gameObject.scene.gameManager,
								i = this.gameObject,
								n = i.x,
								a = i.y,
								s = this.gameObject.gameManager.spritePool.spawn();
							s.setTexture(NT).setScale(1.2 * e).setTint(16774028).setAlpha(1).setDepth(jn.Z.EFFECT).setPosition(n, a), s.play("color-ball-explosion-by-bomb"), s.once(Phaser.Animations.Events.ANIMATION_COMPLETE, (function() {
								s.kill()
							})), t.particlePool.spawn("ColorBallFlareExplosionParticles").explode(n, a)
						}, i.rainbowEffectExplode = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = this.gameObject,
								i = t.x,
								n = t.y,
								a = this.gameObject.gameManager.spritePool.spawn();
							a.setTexture(NT, ZT.RAINBOW_EFFECT).setScale(.7 * e).setTint(16777215).setAlpha(1).setDepth(jn.Z.EFFECT_HIGH).setPosition(i, n), this.scene.audio.playSound(sa.Z.RAINBOW_ITEM_EXPLODE, {}, !0, 35), this.scene.tweens.add({
								targets: a,
								scale: 2 * e,
								alpha: {
									from: .8,
									to: 0,
									duration: 400
								},
								duration: 400,
								onComplete: function() {
									a.kill()
								}
							})
						}, i.effectExplode = function(e) {
							var t = this;
							this.scene.time.delayedCall(100, (function() {
								e instanceof vT ? t.bombEffectExplode() : e instanceof DT ? t.rainbowEffectExplode() : ("LavaBall" != (null == e ? void 0 : e.objectType) && t.normalExplode(), t.scene.audio.playSound(sa.Z.BUBBLE_POP, {}, !0, 35))
							}))
						}, i.explode = function(e) {
							var t = this;
							return new(oe())((function(i) {
								t.gameObject.setDepth(jn.Z.BALL_EXPLODE), t.gameObject.preKill(), t.gameObject.gameManager.grid.removeFromGrid([t.gameObject]);
								var n = t.gameObject,
									a = n.x,
									s = n.y,
									o = ["Mummy", "EarthenPot", "RelicMask"];
								"GemBall" === t.gameObject.objectType || e && ue()(o).call(o, e.objectType) || t.gameObject.scene.gameManager.scoreManager.addScore({
									x: a,
									y: s
								}, "explode"), t.effectExplode(e), t.scene.time.delayedCall(80, i)
							}))
						}, i.onActiveExplode = function(e) {
							return this.explode(e)
						}, t
					}(Vb),
					jT = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS,
					YT = jT.KEY,
					WT = jT.FRAME,
					KT = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, YT, WT.BALL_RED) || this).colorExplodeBehavior = void 0, a.color = void 0, a.objectType = "ColorBall", a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.getColor = function() {
							return this.color
						}, i.setColor = function(e) {
							switch (this.setTexture(YT), e) {
								case wc.I.Red:
									this.setFrame(WT.BALL_RED);
									break;
								case wc.I.Green:
									this.setFrame(WT.BALL_GREEN);
									break;
								case wc.I.Blue:
									this.setFrame(WT.BALL_BLUE);
									break;
								case wc.I.Yellow:
									this.setFrame(WT.BALL_YELLOW);
									break;
								case wc.I.Pink:
									this.setFrame(WT.BALL_PINK);
									break;
								case wc.I.Violet:
									this.setFrame(WT.BALL_VIOLET);
									break;
								case wc.I.Cyan:
									this.setFrame(WT.BALL_CYAN);
									break;
								case wc.I.Orange:
									this.setFrame(WT.BALL_ORANGE)
							}
							this.color = e
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.colorExplodeBehavior = new UT(this), this.addBehavior(this.colorExplodeBehavior)
						}, i.preKill = function(e) {
							var t, i = this,
								n = this.scale;
							this.isKilled = !0, this.scene.tweens.add({
								targets: this,
								duration: 120,
								scale: {
									from: n,
									to: 1.4 * n
								},
								onComplete: function() {
									i.kill(), e && e()
								},
								onCompleteScope: this,
								ease: Phaser.Math.Easing.Sine.Out
							}), this.applyFunction(y()(t = [this]).call(t, this.subObjects), "onPreKill")
						}, i.isCanMatchWith = function(e, i) {
							return e instanceof t && (i ? this.color === i : this.color === e.getColor())
						}, i.postUpdate = function() {
							e.prototype.postUpdate.call(this)
						}, i.updateDepthObjects = function(t) {
							e.prototype.updateDepthObjects.call(this, t)
						}, i.kill = function() {
							e.prototype.kill.call(this)
						}, i.initDefault = function(t) {
							return e.prototype.initDefault.call(this, t), this
						}, t
					}(oE),
					HT = KT,
					zT = function() {
						function e(e, t) {
							this.scene = void 0, this.grid = void 0, this.topLimit = 0, this.prevHeightGrid = void 0, this.dy = 0, this.maxRowOfGridShowed = nb, this.scene = e, this.grid = t;
							var i = this.scene.getCorrectGameSize().height;
							this.topLimit = 55 + (i - 667) / 2
						}
						var t = e.prototype;
						return t.init = function() {
							this.prevHeightGrid = this.grid.getHeightGrid()
						}, t.moveGrid = function() {
							var e = this.grid.getHeightGrid();
							if (0 === e) return oe().resolve();
							var t = this.scene.data.get("grid").height,
								i = this.grid.bottomY - .5 * t,
								n = this.grid.topY + .5 * t;
							if (this.dy = 0, e < 10) {
								if (n >= this.topLimit) return oe().resolve();
								this.dy = this.topLimit - n
							} else this.dy = 8 * this.grid.ballInterval + this.topLimit - i;
							return this.scene.gameManager.grid.showObjectsInsideScreen(), 0 === this.dy ? oe().resolve() : this.grid.moveBy(this.dy, 0)
						}, t.getDy = function() {
							return this.dy
						}, e
					}(),
					XT = zT,
					VT = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).key = "ExplodeWhenOrphanedBehavior", i
						}
						return (0, l.Z)(t, e), t.prototype.onObjectOrphaned = function() {
							var e = this.gameObject;
							return e ? e.onActiveExplode() : oe().resolve()
						}, t
					}(Vb),
					JT = VT,
					qT = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, "GemBehavior") || this).promiseExplode = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return e.prototype.initDefault.call(this), this.promiseExplode = void 0, this
						}, i.flyGem = function() {
							return this.gameObject.gem.flyToMission()
						}, i.onActiveExplode = function() {
							var e = this;
							return this.promiseExplode = new(oe())((function(t) {
								t({});
								var i = e.gameObject.gem,
									n = i.scaleX,
									a = i.scaleY;
								i.setDepth(jn.Z.PRIORITY), e.gameObject.scene.audio.playSound(sa.Z.GEM_EXPLODE);
								var s = e.scene.tweens.timeline({
									onComplete: function() {
										e.flyGem()
									}
								});
								s.add({
									targets: [i],
									scaleX: {
										from: n,
										to: 1.6 * n
									},
									scaleY: {
										from: a,
										to: 1.6 * a
									},
									duration: 250,
									ease: Phaser.Math.Easing.Sine.Out
								}), s.add({
									targets: [i],
									scaleX: {
										from: 1.6 * n,
										to: n
									},
									scaleY: {
										from: 1.6 * a,
										to: a
									},
									duration: 250,
									ease: Phaser.Math.Easing.Sine.In
								}), s.play()
							})), oe().resolve()
						}, i.onEndTurn = function() {
							return this.promiseExplode ? this.promiseExplode : oe().resolve()
						}, t
					}(Vb),
					QT = aa.Z.GAMEPLAY.EFFECTS,
					$T = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS,
					eA = $T.KEY,
					tA = $T.FRAME,
					iA = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, 0, 0) || this).gemBall = void 0, n.color = void 0, n.gemState = void 0, n.gemObject = void 0, n.gemGlow = void 0, n.gemBall = i, n.createGemObject(), n.createGemGlow(), n.scene.add.existing((0, Un.Z)(n)), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createGemObject = function() {
							this.gemObject = this.scene.make.image({
								key: eA,
								frame: tA.GEM_RED
							}), this.gemObject.setDisplaySize(26.5, 24.5), this.add(this.gemObject)
						}, i.createGemGlow = function() {
							this.gemGlow = this.scene.make.image({
								key: QT.KEY,
								frame: QT.FRAME.GLOW_3
							}), this.gemGlow.setDisplaySize(60, 60), this.add(this.gemGlow), this.moveBelow(this.gemGlow, this.gemObject)
						}, i.initDefault = function() {
							var e;
							return this.setGemState("standing"), null == (e = this.gemGlow) || e.revive(), this.gemGlow.setDisplaySize(60, 60), this
						}, i.setColor = function(e) {
							switch (this.color = e, this.gemGlow.setTint(e), e) {
								case wc.I.Red:
									this.gemObject.setFrame(tA.GEM_RED), this.gemObject.setDisplaySize(26.5, 24.5);
									break;
								case wc.I.Green:
									this.gemObject.setFrame(tA.GEM_GREEN), this.gemObject.setDisplaySize(22.5, 22.5);
									break;
								case wc.I.Blue:
									this.gemObject.setFrame(tA.GEM_BLUE), this.gemObject.setDisplaySize(25, 21.5);
									break;
								case wc.I.Yellow:
									this.gemObject.setFrame(tA.GEM_YELLOW), this.gemObject.setDisplaySize(25.5, 21.5);
									break;
								case wc.I.Pink:
									this.gemObject.setFrame(tA.GEM_PINK), this.gemObject.setDisplaySize(23, 24.5);
									break;
								case wc.I.Violet:
									this.gemObject.setFrame(tA.GEM_PURPLE), this.gemObject.setDisplaySize(24.5, 23.5);
									break;
								case wc.I.Cyan:
									this.gemObject.setFrame(tA.GEM_CYAN), this.gemObject.setDisplaySize(21.5, 21.5);
									break;
								case wc.I.Orange:
									this.gemObject.setFrame(tA.GEM_ORANGE), this.gemObject.setDisplaySize(24.5, 24.5)
							}
						}, i.getColor = function() {
							return this.color
						}, i.flyToMission = function() {
							var e = this;
							this.setGemState("flying"), this.setDepth(jn.Z.PRIORITY), this.gemGlow.kill();
							var t = this.scene.header.missionBlock.getIconWorldPosition(),
								i = t.x,
								n = t.y,
								a = this.x,
								s = this.y,
								o = this.gemBall,
								r = o.row,
								l = o.col,
								c = r % 2 == 0 && 0 == l ? a : a - 50,
								h = r % 2 == 0 && 10 == l ? a : a + 50,
								u = Phaser.Math.FloatBetween(c, h),
								d = Phaser.Math.FloatBetween(s + 80, s + 150),
								p = new Phaser.Math.Vector2(a, s),
								m = new Phaser.Math.Vector2(i, n),
								f = new Phaser.Math.Vector2(u, d),
								g = new Phaser.Curves.CubicBezier(p, f, f, m),
								v = (Phaser.Math.Distance.BetweenPoints(p, f) + Phaser.Math.Distance.BetweenPoints(f, m)) / 1.05;
							return new(oe())((function(t) {
								e.scene.tweens.addCounter({
									from: 0,
									to: 1,
									duration: v,
									onUpdate: function(t) {
										var i = t.getValue(),
											n = g.getPointAt(i);
										e.setPosition(n.x, n.y)
									},
									onComplete: function() {
										e.gemBall.scene.audio.playSound(sa.Z.GOAL_PROGRESS), e.gemBall.gameManager.particlePool.spawn("ProgressStarParticle").explode(e.x, e.y), e.preKill(), e.gemBall.gameManager.increaseGemCount(), t()
									}
								})
							}))
						}, i.setGemState = function(e) {
							this.gemState = e
						}, i.getGemState = function() {
							return this.gemState
						}, i.preKill = function(e) {
							var t = this;
							this.scene.tweens.add({
								targets: this,
								duration: 200,
								alpha: {
									from: 1,
									to: .3
								},
								onComplete: function() {
									t.kill(), e && e()
								},
								onCompleteScope: this
							})
						}, t
					}(Phaser.GameObjects.Container),
					nA = iA,
					aA = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS,
					sA = aA.KEY,
					oA = aA.FRAME,
					rA = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n) || this).gem = void 0, a.objectType = "GemBall", a.gem = new nA(t, (0, Un.Z)(a)), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							var t, i, n;
							return e.prototype.initDefault.call(this), null == (t = this.gem) || t.initDefault(), null == (i = this.gem) || i.revive(), null == (n = this.gem) || n.setAlpha(1), this
						}, i.setColor = function(e) {
							this.color = e, this.setTexture(sA), this.setFrame(oA.BALL_TRANSPARENT), this.gem.setColor(e)
						}, i.isCanMatchWith = function(e, t) {
							return e instanceof HT && (t ? this.color === t : this.color === e.getColor())
						}, i.createBehaviors = function() {
							this.addBehavior(new JT(this)), this.colorExplodeBehavior = new UT(this), this.addBehavior(this.colorExplodeBehavior), this.addBehavior(new qT(this)), this.addBehavior(new $b(this))
						}, i.postUpdate = function() {
							var t;
							(e.prototype.postUpdate.call(this), this.isKilled) || (null == (t = this.gem) || t.setPosition(this.x, this.y))
						}, i.kill = function() {
							e.prototype.kill.call(this)
						}, i.clearObject = function() {
							this.gem.kill()
						}, i.updateDepthObjects = function(t) {
							var i;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.gem) || i.setDepth(t + jn.X.GEM)
						}, i.revive = function() {
							var t;
							e.prototype.revive.call(this), null == (t = this.gem) || t.revive()
						}, t
					}(HT),
					lA = rA,
					cA = aa.Z.GAMEPLAY.GAME_OBJECTS,
					hA = cA.KEY,
					uA = cA.FRAME,
					dA = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, hA, uA.STONE) || this).objectType = "Stone", a
						}
						return (0, l.Z)(t, e), t.prototype.onActiveExplode = function(e) {
							var t;
							return this.isKilled ? oe().resolve() : this.applyFunctionAsync(y()(t = [this]).call(t, this.subObjects), "onActiveExplode", e)
						}, t
					}(oE),
					pA = dA,
					mA = function(e) {
						function t(t, i, n, a, s) {
							var o;
							return (o = e.call(this, t, i, n, a, s) || this).objectType = void 0, o.gridObject = void 0, o.behaviors = void 0, o.key = void 0, o.isKilled = !1, o.depthIndex = 0, o.status = void 0, o.fadeOutAfterDropTween = void 0, o.behaviors = [], o.createBehaviors(), o
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function(t) {
							var i;
							return void 0 === t && (t = 0), e.prototype.initDefault.call(this), null == (i = this.fadeOutAfterDropTween) || i.remove(), this.status = t, this.isKilled = !1, this.applyFunctionAsync([this], "initDefault", this), this
						}, i.createBehaviors = function() {}, i.setGridObject = function(e) {
							this.gridObject = e, this.setPosition(e.x, e.y)
						}, i.postUpdate = function() {
							e.prototype.postUpdate.call(this), this.gridObject && (this.gridObject.isKilled || (this.setPosition(this.gridObject.x, this.gridObject.y), this.gridObject.isDropping && this.setRotation(this.gridObject.rotation)))
						}, i.addBehavior = function(e) {
							this.behaviors.push(e)
						}, i.removeBehavior = function(e) {
							var t;
							A()(t = this.behaviors).call(t, (function(t) {
								return t.key != e
							}))
						}, i.getBehavior = function(e) {
							var t;
							return ye()(t = this.behaviors).call(t, (function(t) {
								return t.key === e
							}))
						}, i.preKill = function(e) {
							var t = this;
							this.isKilled = !0, this.scene.tweens.add({
								targets: this,
								duration: 200,
								alpha: {
									from: 1,
									to: .3
								},
								onComplete: function() {
									t.kill(), e && e()
								},
								onCompleteScope: this
							})
						}, i.applyFunctionAsync = function(e, t) {
							for (var i, n, a = arguments.length, s = new Array(a > 2 ? a - 2 : 0), o = 2; o < a; o++) s[o - 2] = arguments[o];
							return (i = this.scene.gameManager.behaviorManager).triggerAsync.apply(i, y()(n = [e, t]).call(n, s))
						}, i.onActiveExplode = function(e) {
							return this.isKilled ? oe().resolve() : this.applyFunctionAsync([this], "onActiveExplode", e)
						}, i.onCollideWithBullet = function(e) {
							return this.isKilled ? oe().resolve() : this.applyFunctionAsync([this], "onCollideWithBullet", e)
						}, i.onObjectOrphaned = function() {
							return this.isKilled ? oe().resolve() : this.applyFunctionAsync([this], "onObjectOrphaned")
						}, i.onEndTurn = function() {
							return this.applyFunctionAsync([this], "onEndTurn")
						}, i.onStartTurn = function() {
							return this.applyFunctionAsync([this], "onStartTurn")
						}, i.onNearBallMatch = function(e) {
							return this.isKilled ? oe().resolve() : this.applyFunctionAsync([this], "onNearBallMatch", e)
						}, i.onPreEndTurn = function() {
							return this.applyFunctionAsync([this], "onPreEndTurn")
						}, i.onLevelEnd = function(e) {
							return this.applyFunctionAsync([this], "onLevelEnd", e)
						}, i.onNearBallExplode = function(e) {
							return this.isKilled ? oe().resolve() : this.applyFunctionAsync([this], "onNearBallExplode", e)
						}, i.onPreKill = function() {
							return this.isKilled ? oe().resolve() : this.applyFunctionAsync([this], "onPreKill")
						}, i.kill = function() {
							e.prototype.kill.call(this), this.isKilled && (this.gridObject = void 0)
						}, i.onChangeBullet = function() {
							return this.applyFunctionAsync([this], "onChangeBullet")
						}, i.onOverlayWithBullet = function(e) {
							return this.applyFunctionAsync([this], "onOverlayWithBullet", e)
						}, i.runFadeoutAfterDrop = function() {
							var e = this;
							return new(oe())((function(t) {
								e.fadeOutAfterDropTween = e.scene.tweens.add({
									targets: e,
									duration: 200,
									alpha: {
										from: 1,
										to: .3
									},
									onComplete: function() {
										e.kill(), t()
									},
									onCompleteScope: e
								})
							}))
						}, i.updateDepthObjects = function(e) {
							this.setDepth(e + this.depthIndex)
						}, i.getGridObject = function() {
							return this.gridObject
						}, t
					}(pb),
					fA = mA,
					gA = function(e) {
						function t(t) {
							return e.call(this, t, "IronShellBehavior") || this
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.onStartTurn = function() {
							return "open" === this.gameObject.getIronShellState() ? this.close() : this.open(), oe().resolve()
						}, i.onObjectOrphaned = function() {
							return this.gameObject.activeAllBehaviors(), oe().resolve()
						}, i.onPreKill = function() {
							return this.kill(), oe().resolve()
						}, i.open = function() {
							this.gameObject.setIronShellState("open"), this.gameObject.play("open-iron-shell")
						}, i.close = function() {
							this.gameObject.setIronShellState("close"), this.gameObject.play("close-iron-shell")
						}, i.kill = function() {
							var e;
							this.gameObject.preKill(), this.gameObject.activeAllBehaviors(), null == (e = this.gameObject.gridObject) || e.removeSubObject("IronShell")
						}, i.onLevelEnd = function(e) {
							return this.gameObject.activeAllBehaviors(), oe().resolve()
						}, t
					}(Vb),
					vA = aa.Z.GAMEPLAY.GAME_OBJECTS,
					yA = vA.KEY,
					bA = vA.FRAME,
					EA = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, 0, 0, yA, bA.BLANK) || this).ironShellState = "close", i.tweenPlayAnimation = void 0, i.depthIndex = jn.X.IRON_SHELL, i.objectType = "IronShell", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function(t) {
							return void 0 === t && (t = 0), e.prototype.initDefault.call(this, t), t ? (this.setFrame(bA.PREFIX_IRON_SHELL + 5), this.setDisplaySize(34, 32.5), this.setIronShellState("open")) : (this.setFrame(bA.PREFIX_IRON_SHELL + 0), this.setDisplaySize(34, 37.5), this.setIronShellState("close")), this
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.addBehavior(new gA(this))
						}, i.setIronShellState = function(e) {
							"open" === e ? this.activeAllBehaviors() : this.disableAllBehaviors(), this.ironShellState = e
						}, i.activeAllBehaviors = function() {
							var e, t = null == (e = this.gridObject) ? void 0 : e.behaviors;
							if (t) {
								var i = ["ExplodeWhenOrphanedBehavior", "DropBehavior"];
								t.forEach((function(e) {
									ue()(i).call(i, e.key) || (e.active = !0)
								}))
							}
						}, i.disableAllBehaviors = function() {
							var e, t = null == (e = this.gridObject) ? void 0 : e.behaviors;
							if (t) {
								var i = ["ExplodeWhenOrphanedBehavior", "DropBehavior"];
								t.forEach((function(e) {
									ue()(i).call(i, e.key) || (e.active = !1)
								}))
							}
						}, i.getIronShellState = function() {
							return this.ironShellState
						}, i.kill = function() {
							e.prototype.kill.call(this)
						}, i.play = function(e) {
							var t, i = this;
							null == (t = this.tweenPlayAnimation) || t.remove();
							var n = this.scene.anims.get(e);
							this.tweenPlayAnimation = this.scene.tweens.addCounter({
								from: 0,
								to: 1,
								duration: n.duration,
								onUpdate: function(e) {
									var t = e.getValue(),
										a = n.getFrameByProgress(t);
									i.setTexture(a.textureKey, a.frame.name)
								}
							})
						}, t
					}(fA),
					TA = EA,
					AA = aa.Z.GAMEPLAY.GAME_OBJECTS,
					SA = AA.KEY,
					_A = AA.FRAME,
					CA = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, SA, _A.PARTICLE_STAR) || this).emitZone = void 0, i.emitter = void 0, i.moveToX = void 0, i.moveToY = void 0, i.createEmitZone(), i.createEmitters(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 22)
						}, i.createEmitters = function() {
							var e = this,
								t = 1 / this.scene.world.getPixelRatio();
							this.emitter = this.createEmitter({
								on: !1,
								frame: [_A.PARTICLE_CIRCLE_2, _A.PARTICLE_STAR],
								emitZone: {
									source: this.emitZone,
									type: "random"
								},
								timeScale: 1,
								frequency: 800,
								alpha: {
									start: .8,
									end: 0,
									ease: Phaser.Math.Easing.Quadratic.In
								},
								scale: {
									min: .8 * t,
									max: .4 * t
								},
								moveToX: {
									onEmit: function() {
										return e.moveToX
									}
								},
								moveToY: {
									onEmit: function() {
										return e.moveToY
									}
								},
								particleClass: wA,
								lifespan: {
									min: 800,
									max: 1600
								}
							})
						}, i.run = function(e, t, i) {
							this.stop(), this.emitter.setPosition(t, i), this.moveToX = t, this.moveToY = i, this.emitter.setQuantity(e), this.emitter.start()
						}, i.stop = function() {
							var e, t;
							null == (e = this.emitter) || e.killAll(), null == (t = this.emitter) || t.stop()
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager),
					wA = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this)._scaleX = void 0, i._scaleY = void 0, i.split = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i), this._scaleX = this.scaleX, this._scaleY = this.scaleY, this.split = Phaser.Math.RND.between(1, 2), this.scaleX = 0, this.scaleY = 0
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n),
								s = this.lifeT * this.split,
								o = Math.floor(s),
								r = s - o;
							return o % 2 == 0 ? (this.scaleX = Phaser.Math.Easing.Sine.InOut(r) * this._scaleX, this.scaleY = Phaser.Math.Easing.Sine.InOut(r) * this._scaleY) : (this.scaleX = (1 - Phaser.Math.Easing.Sine.InOut(r)) * this._scaleX, this.scaleY = (1 - Phaser.Math.Easing.Sine.InOut(r)) * this._scaleY), a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					BA = CA,
					IA = aa.Z.GAMEPLAY.GAME_OBJECTS,
					PA = (IA.KEY, IA.FRAME, function(e) {
						function t(t) {
							return e.call(this, t, "BlackHoleBehavior") || this
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.suckedInByBlackHole = function(e) {
							var t = this.gameObject,
								i = this.gameObject.gameManager.grid,
								n = i.getXYByRowCol(t, !0),
								a = n.x,
								s = n.y,
								o = i.findMatchesAt(e);
							o[0];
							return o[1] >= 3 || (this.scene.children.bringToTop(e), i.removeFromGrid([e]), this.gameObject.scene.audio.playSound(sa.Z.BLACK_HOLE), this.gameObject.scene.tweens.add({
								targets: e,
								duration: 300,
								ease: Phaser.Math.Easing.Sine.In,
								x: a,
								y: s,
								scale: "*=0.2",
								alpha: {
									from: 1,
									to: 0
								},
								onComplete: function() {
									e.kill()
								}
							})), oe().resolve()
						}, i.onCollideWithBullet = function(e, t) {
							return t ? this.suckedInByBlackHole(t) : oe().resolve()
						}, t
					}(Vb)),
					xA = aa.Z.GAMEPLAY.GAME_OBJECTS,
					OA = xA.KEY,
					kA = xA.FRAME,
					RA = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, OA, kA.BLACK_HOLE) || this).blackHoleSparkle = void 0, a.spinningAnimation = void 0, a.objectType = "BlackHole", a.createBlackHoleSparkle(0, 0), a.runSpinningAnimation(), a.scene.add.existing((0, Un.Z)(a)), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.addBehavior(new PA(this))
						}, i.createBlackHoleSparkle = function(e, t) {
							this.blackHoleSparkle = new BA(this.scene), this.blackHoleSparkle.run(4, e, t)
						}, i.postUpdate = function() {
							e.prototype.postUpdate.call(this), this.blackHoleSparkle.setPosition(this.x, this.y)
						}, i.kill = function() {
							var t;
							e.prototype.kill.call(this), this.blackHoleSparkle.kill(), null == (t = this.spinningAnimation) || t.remove()
						}, i.revive = function() {
							e.prototype.revive.call(this), this.blackHoleSparkle.revive(), this.runSpinningAnimation()
						}, i.runSpinningAnimation = function() {
							var e;
							null == (e = this.spinningAnimation) || e.remove(), this.spinningAnimation = this.scene.tweens.add({
								targets: this,
								duration: 2e3,
								ease: Phaser.Math.Easing.Linear,
								angle: {
									from: this.angle,
									to: this.angle + 360
								},
								repeat: -1
							})
						}, i.onActiveExplode = function(e) {
							var t;
							return this.isKilled ? oe().resolve() : this.applyFunctionAsync(y()(t = [this]).call(t, this.subObjects), "onActiveExplode", e)
						}, i.updateDepthObjects = function(t) {
							var i;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.blackHoleSparkle) || i.setDepth(t + jn.X.BLACK_HOLE_SPARKLE)
						}, t
					}(oE),
					MA = RA,
					LA = aa.Z.GAMEPLAY.GAME_OBJECTS,
					GA = LA.KEY,
					DA = (LA.FRAME, function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).key = "TwoColorsExplodeBehavior", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.normalExplode = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = this.gameObject.getMatchedColor(),
								i = this.gameObject,
								n = i.x,
								a = i.y;
							t || (t = this.gameObject.getColor());
							var s = this.gameObject.gameManager.spritePool.spawn();
							s.setTexture(GA).setScale(e).setTint(t).setAlpha(.8).setDepth(jn.Z.EFFECT).setPosition(n, a), s.play("color-ball-explosion"), s.once(Phaser.Animations.Events.ANIMATION_COMPLETE, (function() {
								s.kill()
							}))
						}, i.explode = function(t) {
							var i = this;
							return this.gameObject.hasTwoColors && !t ? new(oe())((function(e) {
								i.gameObject.scene.tweens.add({
									targets: i.gameObject,
									duration: 200,
									ease: Phaser.Math.Easing.Sine.In,
									scale: "*=1.4",
									yoyo: !0
								}), i.effectExplode(), i.gameObject.updateColorAfterMatch(), i.scene.time.delayedCall(110, e)
							})) : e.prototype.explode.call(this, t)
						}, i.onActiveExplode = function(e) {
							return this.explode(e)
						}, t
					}(UT)),
					FA = aa.Z.GAMEPLAY.GAME_OBJECTS,
					NA = FA.KEY,
					ZA = FA.FRAME,
					UA = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n) || this).subColor = void 0, a.subColorImage = void 0, a.matchedColor = void 0, a.hasTwoColors = !0, a.objectType = "TwoColorsBall", a.subColorImage = a.scene.add.image(0, 0, NA, ZA.TWO_COLORS_RED), a.subColorImage.setDisplaySize(28.5, 30), a.subColorImage.setOrigin(.3947368421, .56666666666), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createBehaviors = function() {
							this.dropBehavior = new qb(this), this.addBehavior(this.dropBehavior), this.endLevelBehavior = new $b(this), this.addBehavior(this.endLevelBehavior), this.addBehavior(new DA(this))
						}, i.setSubColor = function(e) {
							switch (this.subColorImage.setTexture(NA), e) {
								case wc.I.Red:
									this.subColorImage.setFrame(ZA.TWO_COLORS_RED);
									break;
								case wc.I.Green:
									this.subColorImage.setFrame(ZA.TWO_COLORS_GREEN);
									break;
								case wc.I.Blue:
									this.subColorImage.setFrame(ZA.TWO_COLORS_BLUE);
									break;
								case wc.I.Yellow:
									this.subColorImage.setFrame(ZA.TWO_COLORS_YELLOW);
									break;
								case wc.I.Pink:
									this.subColorImage.setFrame(ZA.TWO_COLORS_PINK);
									break;
								case wc.I.Violet:
									this.subColorImage.setFrame(ZA.TWO_COLORS_VIOLET);
									break;
								case wc.I.Cyan:
									this.subColorImage.setFrame(ZA.TWO_COLORS_CYAN);
									break;
								case wc.I.Orange:
									this.subColorImage.setFrame(ZA.TWO_COLORS_ORANGE)
							}
							this.subColor = e
						}, i.getSubColor = function() {
							return this.subColor
						}, i.initDefault = function(t) {
							var i;
							return e.prototype.initDefault.call(this, t), null == (i = this.subColorImage) || i.revive(), this.matchedColor = this.subColor, this.hasTwoColors = !0, this
						}, i.postUpdate = function() {
							e.prototype.postUpdate.call(this), this.visible && this.subColorImage && (this.subColorImage.setPosition(this.x, this.y), this.subColorImage.setRotation(this.rotation), this.subColorImage.setScale(this.scale))
						}, i.revive = function() {
							var t;
							(e.prototype.revive.call(this), this.hasTwoColors) && (null == (t = this.subColorImage) || t.revive())
						}, i.kill = function() {
							var t;
							e.prototype.kill.call(this), null == (t = this.subColorImage) || t.kill()
						}, i.setMatchedColor = function(e) {
							this.matchedColor = e
						}, i.getMatchedColor = function() {
							return this.matchedColor
						}, i.isCanMatchWith = function(e, t) {
							return e instanceof HT && (t ? this.color === t || this.subColor === t : this.color === e.getColor() || this.subColor === e.getColor())
						}, i.updateColorAfterMatch = function() {
							this.subColorImage.kill(), this.color === this.matchedColor ? this.setColor(this.subColor) : this.subColor = this.color, this.hasTwoColors = !1
						}, i.updateDepthObjects = function(t) {
							var i;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.subColorImage) || i.setDepth(t + jn.X.SUB_COLOR)
						}, t
					}(HT),
					jA = UA,
					YA = function(e) {
						function t(t) {
							return e.call(this, t, "RotationWheelBehavior") || this
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.onActiveExplode = function() {
							return this.explode()
						}, i.onObjectOrphaned = function() {
							return oe().resolve()
						}, i.explode = function() {
							var e = this;
							return new(oe())((function(t) {
								var i = e.gameObject.scene.gameManager,
									n = i.scoreManager,
									a = i.particlePool,
									s = i.grid;
								n.addScore({
									x: e.gameObject.x,
									y: e.gameObject.y
								}, "explode"), a.spawn("RotationPieceExplodeParticle").explode(e.gameObject.x, e.gameObject.y), a.spawn("RotationPieceMiddleFlyParticle").explode(e.gameObject.x, e.gameObject.y), a.spawn("RotationDustExplodeParticle").explode(e.gameObject.x, e.gameObject.y), s.removeFromGrid([e.gameObject]), e.scene.time.delayedCall(50, (function() {
									e.gameObject.setAlpha(0), e.scene.time.delayedCall(300, (function() {
										e.gameObject.preKill(), t()
									}))
								}))
							}))
						}, i.onCollideWithBullet = function(e, t) {
							return this.gameObject.onActiveExplode()
						}, i.onStartTurn = function() {
							return this.gameObject.rotator.rotate()
						}, t
					}(Vb),
					WA = aa.Z.GAMEPLAY.GAME_OBJECTS,
					KA = WA.KEY,
					HA = WA.FRAME,
					zA = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, 0, 0, KA, HA.ROTATOR) || this).scene = void 0, n.rotationBall = void 0, n.scene = t, n.rotationBall = i, n.scene.add.existing((0, Un.Z)(n)), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							this.setAngle(0)
						}, i.rotate = function() {
							var e = this;
							return new(oe())((function(t) {
								if (!1 !== e.visible) {
									var i = e.scene.gameManager.grid,
										n = [1, 3, 0, 5, 2, 4],
										a = [240, 300, 180, 0, 120, 60],
										s = [],
										o = [],
										r = [],
										l = [],
										c = i.getNeighborsPositionAt(e.rotationBall.row, e.rotationBall.col),
										h = _()(c).call(c, (function(e) {
											return {
												row: e[0],
												col: e[1]
											}
										}));
									h.forEach((function(e, t) {
										var c = i.getObjectAt(e);
										if (c && -1 === Se()(l).call(l, c)) {
											var u = i.getXYByRowCol({
												row: h[n[t]].row,
												col: h[n[t]].col
											});
											o.push({
												row: h[n[t]].row,
												col: h[n[t]].col
											}), r.push(a[t]), s.push(u), l.push(c)
										}
									})), e.scene.tweens.add({
										targets: [e, e.rotationBall],
										duration: 300,
										props: {
											angle: {
												start: e.angle,
												from: e.angle,
												to: e.angle + 60
											}
										},
										onUpdate: function() {
											l.forEach((function(t, i) {
												var n = e.angle - 60 * Math.floor(e.angle / 60) + r[i];
												t.x = e.x + 34 * Math.cos(n * Math.PI / 180), t.y = e.y + 34 * Math.sin(n * Math.PI / 180)
											}))
										},
										onComplete: function() {
											l.forEach((function(e, t) {
												e.x = s[t].x, e.y = s[t].y
											})), l.forEach((function(e, t) {
												var n = i.getRowColByXY(s[t].x, s[t].y);
												i.swapGridObject({
													row: n.row,
													col: n.col
												}, e)
											})), t()
										}
									})
								} else t()
							}))
						}, t
					}(Phaser.GameObjects.Image),
					XA = zA,
					VA = aa.Z.GAMEPLAY.GAME_OBJECTS,
					JA = VA.KEY,
					qA = VA.FRAME,
					QA = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, JA, qA.MOVE_ROTATION_BALL) || this).rotator = void 0, a.objectType = "RotationWheel", a.rotator = new XA(a.scene, (0, Un.Z)(a)), a.scene.add.existing((0, Un.Z)(a)), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function(t) {
							var i;
							return e.prototype.initDefault.call(this, t), this.setAngle(0), null == (i = this.rotator) || i.initDefault(), this
						}, i.kill = function() {
							var t;
							e.prototype.kill.call(this), null == (t = this.rotator) || t.kill()
						}, i.revive = function() {
							var t;
							e.prototype.revive.call(this), null == (t = this.rotator) || t.revive()
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.addBehavior(new YA(this))
						}, i.postUpdate = function() {
							var t, i, n;
							e.prototype.postUpdate.call(this), null == (t = this.rotator) || t.setPosition(this.x, this.y), null == (i = this.rotator) || i.setAlpha(this.alpha), null == (n = this.rotator) || n.setScale(this.scale)
						}, i.preKill = function(e) {
							var t;
							this.isKilled = !0, this.kill(), e && e(), this.applyFunction(y()(t = [this]).call(t, this.subObjects), "onPreKill")
						}, i.setObjectState = function(t) {
							var i, n;
							switch (e.prototype.setObjectState.call(this, t), t) {
								case Xb.HIDE:
									null == (i = this.rotator) || i.kill();
									break;
								case Xb.READY:
									null == (n = this.rotator) || n.revive()
							}
						}, i.updateDepthObjects = function(t) {
							var i;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.rotator) || i.setDepth(t + jn.X.ROTATOR)
						}, t
					}(oE),
					$A = QA,
					eS = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).key = "MirrorBallBehavior", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.onChangeBullet = function() {
							var e = this.scene.gameManager.shooter.getCurrentBullet();
							if (e) {
								var t = e.getColor();
								this.scene.bulletItemManager.getItemActive() && (t = -1), this.gameObject.setColor(t), this.gameObject.mirror.runChangeColorAnimation(t)
							}
							return oe().resolve()
						}, i.effectExplode = function(e) {
							var t = this;
							this.scene.time.delayedCall(130, (function() {
								t.gameObject.setAlpha(0)
							})), this.scene.time.delayedCall(150, (function() {
								t.scene.audio.playSound(sa.Z.MIRROR_BREAK, {}, !0, 100), t.gameObject.gameManager.particlePool.spawn("MirrorPieceExplodeParticle").explode(t.gameObject.x, t.gameObject.y), t.scene.time.delayedCall(250, (function() {
									t.gameObject.kill()
								}))
							}))
						}, t
					}(UT),
					tS = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS,
					iS = tS.KEY,
					nS = tS.FRAME,
					aS = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).scene = void 0, n.mirrorBall = void 0, n.colorImage = void 0, n.color = -1, n.tweenAnimation = void 0, n.scene = t, n.mirrorBall = i, n.setSize(34, 34), n.createColorImage(), n.scene.add.existing((0, Un.Z)(n)), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							var e, t, i;
							this.scene.world.getPixelRatio();
							null == (e = this.colorImage) || e.setScale(0), null == (t = this.colorImage) || t.setPosition(12, 12), null == (i = this.colorImage) || i.setOrigin(.8, .8)
						}, i.createColorImage = function() {
							var e;
							this.colorImage = this.scene.make.image({
								key: iS,
								frame: nS.BALL_BLUE
							}), this.colorImage.setWorldSize(29, 29), null == (e = this.colorImage) || e.setPosition(12, 12), this.add(this.colorImage)
						}, i.setColor = function(e) {
							switch (this.color = e, e) {
								case wc.I.Red:
									this.colorImage.setFrame(nS.BALL_RED);
									break;
								case wc.I.Green:
									this.colorImage.setFrame(nS.BALL_GREEN);
									break;
								case wc.I.Blue:
									this.colorImage.setFrame(nS.BALL_BLUE);
									break;
								case wc.I.Yellow:
									this.colorImage.setFrame(nS.BALL_YELLOW);
									break;
								case wc.I.Pink:
									this.colorImage.setFrame(nS.BALL_PINK);
									break;
								case wc.I.Violet:
									this.colorImage.setFrame(nS.BALL_VIOLET);
									break;
								case wc.I.Cyan:
									this.colorImage.setFrame(nS.BALL_CYAN);
									break;
								case wc.I.Orange:
									this.colorImage.setFrame(nS.BALL_ORANGE)
							}
						}, i.runChangeColorAnimation = function(e) {
							var t, i = this;
							if (!this.mirrorBall.isObjectLossLink()) {
								var n = this.scene.world.getPixelRatio(),
									a = this.scene.bulletItemManager.getItemActive(),
									s = this.colorImage.scale,
									o = .92 / n;
								null == (t = this.tweenAnimation) || t.complete(), this.tweenAnimation = this.scene.tweens.add({
									targets: this.colorImage,
									duration: (s - 0) / (o - 0) * 300,
									delay: 0,
									props: {
										scale: {
											start: s,
											from: s,
											to: 0
										}
									},
									onComplete: function() {
										i.setColor(e), a || (i.tweenAnimation = i.scene.tweens.add({
											targets: i.colorImage,
											duration: 300,
											delay: 0,
											props: {
												scale: {
													start: 0,
													from: 0,
													to: o
												}
											}
										}))
									}
								})
							}
						}, t
					}(Phaser.GameObjects.Container),
					sS = aS,
					oS = aa.Z.GAMEPLAY.GAME_OBJECTS,
					rS = oS.KEY,
					lS = oS.FRAME,
					cS = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n) || this).mirror = void 0, a.mirrorOverlay = void 0, a.mirrorBallBehavior = void 0, a.objectType = "MirrorBall", a.mirror = new sS(a.scene, (0, Un.Z)(a)), a.createMirrorOverlay(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function(t) {
							var i;
							return e.prototype.initDefault.call(this, t), this.setTexture(rS), this.setFrame(lS.BALL_MIRROR), null == (i = this.mirror) || i.initDefault(), this
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.mirrorBallBehavior = new eS(this), this.addBehavior(this.mirrorBallBehavior), this.removeBehavior("ColorExplodeBehavior")
						}, i.kill = function() {
							var t, i;
							e.prototype.kill.call(this), null == (t = this.mirror) || t.kill(), null == (i = this.mirrorOverlay) || i.kill()
						}, i.revive = function() {
							var t, i;
							e.prototype.revive.call(this), null == (t = this.mirror) || t.revive(), null == (i = this.mirrorOverlay) || i.revive()
						}, i.postUpdate = function() {
							var t, i, n, a, s, o;
							e.prototype.postUpdate.call(this);
							var r = this.scene.world.getPixelRatio();
							null == (t = this.mirror) || t.setPosition(this.x, this.y), null == (i = this.mirrorOverlay) || i.setPosition(this.x, this.y), null == (n = this.mirror) || n.setAlpha(this.alpha), null == (a = this.mirrorOverlay) || a.setAlpha(this.alpha), null == (s = this.mirror) || s.setScale(.85 * this.scale * r), null == (o = this.mirrorOverlay) || o.setScale(this.scale)
						}, i.setColor = function(e) {
							this.color = e
						}, i.createMirrorOverlay = function() {
							this.mirrorOverlay = this.scene.make.image({
								key: rS,
								frame: lS.MIRROR_OVERLAY
							}), this.mirrorOverlay.setWorldSize(34, 34)
						}, i.updateDepthObjects = function(t) {
							var i, n;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.mirror) || i.setDepth(t), null == (n = this.mirrorOverlay) || n.setDepth(t)
						}, t
					}(HT),
					hS = cS,
					uS = aa.Z.GAMEPLAY.EFFECTS,
					dS = uS.KEY,
					pS = uS.FRAME,
					mS = function(e) {
						function t(t) {
							return e.call(this, t, "RelicMaskBehavior") || this
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.explode = function() {
							var e = this;
							return new(oe())((function(t) {
								e.gameObject.preKill();
								var i = e.gameObject.gameManager,
									n = i.grid,
									a = i.scoreManager,
									s = i.particlePool,
									o = i.spritePool;
								n.removeFromGrid([e.gameObject]);
								var r = e.gameObject,
									l = r.x,
									c = r.y,
									h = r.color,
									u = o.spawn();
								u.setTexture(dS, pS.GLOW_7).setDepth(jn.Z.EFFECT_HIGH).setAlpha(0).setWorldSize(60, 60), e.gameObject.scene.tweens.add({
									targets: u,
									duration: 73,
									alpha: {
										from: 0,
										to: .8,
										ease: Phaser.Math.Easing.Sine.In
									},
									onStart: function() {
										u.setPosition(l, c)
									},
									onComplete: function() {
										a.addScore({
											x: l,
											y: c
										}, "explode"), s.spawn("RelicMaskExplodeParticle").explode(l, c, h), u.kill(), t()
									}
								})
							}))
						}, i.onActiveExplode = function() {
							return this.explode()
						}, i.onCollideWithBullet = function(e, t) {
							if (e instanceof DT) return this.gameObject.onActiveExplode();
							if (t) {
								if (t.getColor() !== this.gameObject.color) return oe().resolve();
								var i = this.gameObject.onActiveExplode(),
									n = this.colorBallBulletExpode(t);
								return oe().all([i, n])
							}
							return oe().resolve()
						}, i.colorBallBulletExpode = function(e) {
							var t = this;
							return new(oe())((function(i) {
								t.gameObject.scene.time.addEvent({
									delay: 13,
									callback: function() {
										e.onActiveExplode(t.gameObject).then(i)
									}
								})
							}))
						}, t
					}(Vb),
					fS = aa.Z.GAMEPLAY.GAME_OBJECTS,
					gS = fS.KEY,
					vS = fS.FRAME,
					yS = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, gS, vS.RELIC_MASK_RED) || this).color = void 0, a.objectType = "RelicMask", a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setColor = function(e) {
							switch (this.setTexture(gS), e) {
								case wc.I.Red:
									this.setFrame(vS.RELIC_MASK_RED);
									break;
								case wc.I.Green:
									this.setFrame(vS.RELIC_MASK_GREEN);
									break;
								case wc.I.Blue:
									this.setFrame(vS.RELIC_MASK_BLUE);
									break;
								case wc.I.Yellow:
									this.setFrame(vS.RELIC_MASK_YELLOW);
									break;
								case wc.I.Pink:
									this.setFrame(vS.RELIC_MASK_PINK);
									break;
								case wc.I.Violet:
									this.setFrame(vS.RELIC_MASK_PURPLE);
									break;
								case wc.I.Cyan:
									this.setFrame(vS.RELIC_MASK_SKY_BLUE);
									break;
								case wc.I.Orange:
									this.setFrame(vS.RELIC_MASK_ORANGE)
							}
							this.color = e
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.addBehavior(new mS(this))
						}, t
					}(oE),
					bS = yS,
					ES = function(e) {
						function t(t) {
							return e.call(this, t, "KeyBallBehavior") || this
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.explode = function() {
							var e = this;
							return new(oe())((function(t) {
								e.gameObject.preKill(), e.gameObject.gameManager.grid.removeFromGrid([e.gameObject]);
								var i = e.gameObject,
									n = i.x,
									a = i.y;
								e.gameObject.gameManager.particlePool.spawn("EmptyBallExplodeParticle").explode(n, a), e.scene.audio.playSound(sa.Z.BUBBLE_POP), e.gameObject.key.isKeyReady ? e.gameObject.key.flyToNearestIronBoardLock().then(t) : e.scene.time.delayedCall(200, t)
							}))
						}, i.onActiveExplode = function() {
							return this.explode()
						}, i.onCollideWithBullet = function(e, t) {
							var i = this.gameObject.onActiveExplode(),
								n = this.explodeBulletBall(t);
							return oe().all([i, n])
						}, i.explodeBulletBall = function(e) {
							var t = this;
							return new(oe())((function(i) {
								e && e instanceof HT ? t.gameObject.scene.time.addEvent({
									delay: 13,
									callback: function() {
										e.onActiveExplode(t.gameObject).then(i)
									}
								}) : i()
							}))
						}, t
					}(Vb),
					TS = aa.Z.GAMEPLAY.GAME_OBJECTS,
					AS = TS.KEY,
					SS = TS.FRAME,
					_S = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t.scene, 0, 0) || this).keyBall = void 0, i.keyImage = void 0, i.idleAnimation = void 0, i.isKeyReady = !0, i.keyBall = t, i.keyImage = i.scene.make.image({
								key: AS,
								frame: SS.KEY
							}), i.keyImage.setWorldSize(27, 30), i.add(i.keyImage), i.setSize(27, 30), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return this.revive(), this.setAlpha(1), this.keyImage.setWorldSize(27, 30), this.keyImage.revive(), this.keyImage.setFlipX(!1), this.keyImage.setAlpha(1), this.runIdleAnimation(), this.isKeyReady = !0, this
						}, i.kill = function() {
							e.prototype.kill.call(this), this.stopIdleAnimation(), this.isKeyReady = !1
						}, i.runIdleAnimation = function() {
							this.stopIdleAnimation(), this.keyImage.setPosition(0, -2), this.idleAnimation = this.scene.add.tween({
								targets: this.keyImage,
								y: {
									from: -2,
									to: 2
								},
								duration: 2e3,
								yoyo: !0,
								ease: Phaser.Math.Easing.Sine.InOut,
								loop: -1
							})
						}, i.stopIdleAnimation = function() {
							var e;
							null == (e = this.idleAnimation) || e.remove(), this.keyImage.setPosition(0, 0)
						}, i.flyToNearestIronBoardLock = function() {
							var e = this,
								t = this.keyBall.lockObject;
							if (!t) return this.keyBall.key.fadeOut();
							var i = t,
								n = i.getSubObject("IronBoard");
							return n ? (n.isLocking = !1, new(oe())((function(t) {
								var n = i.y - 8,
									a = i.x;
								e.setDepth(jn.Z.EFFECT_HIGH + 1);
								var s = 1;
								a >= e.x ? (e.keyImage.setFlipX(!0), a -= 8, s = 1) : (e.keyImage.setFlipX(!1), a += 8, s = -1);
								var o = e.keyBall.scene.gameManager.grid.descentController.getDy(),
									r = 35 * Math.abs(Math.floor(o / 29)) + 300,
									l = e.keyImage.scale,
									c = 1.5 * l;
								e.scene.tweens.add({
									targets: e.keyImage,
									scale: c,
									duration: r
								}), e.scene.tweens.killTweensOf(e);
								var h = a - e.x,
									u = n - e.y,
									d = Math.sqrt(Math.pow(h, 2) + Math.pow(u, 2)),
									p = d / 2,
									m = s * d / 2,
									f = Math.atan2(u, h),
									g = new Phaser.Math.Vector2(e.x, e.y),
									v = new Phaser.Math.Vector2(a, n),
									y = new Phaser.Math.Vector2(p * Math.cos(f) + m * Math.sin(f) + g.x, p * Math.sin(f) + m * Math.cos(f) + g.y),
									b = new Phaser.Curves.CubicBezier(g, y, y, v);
								e.scene.tweens.addCounter({
									from: 0,
									to: 1,
									duration: 1e3,
									delay: r - 50,
									ease: Phaser.Math.Easing.Sine.Out,
									onUpdate: function(t) {
										var i = t.getValue(),
											n = b.getPointAt(i),
											a = Phaser.Math.Linear(c, l, i);
										e.keyImage.setScale(a), e.setPosition(n.x, n.y)
									},
									onComplete: function() {
										e.kill(), e.unlockIronBoard(i).then(t)
									}
								})
							}))) : this.keyBall.key.fadeOut()
						}, i.unlockIronBoard = function(e) {
							var t = this,
								i = this.keyBall.grid.findIronBoardsAt(e),
								n = [];
							return i.forEach((function(e, i) {
								n.push(new(oe())((function(n) {
									t.scene.time.addEvent({
										delay: 83 * i,
										callback: function() {
											var t = [];
											_()(e).call(e, (function(e) {
												t.push(e.unlockIronBoard())
											})), oe().all(t).then(n)
										}
									})
								})))
							})), oe().all(n)
						}, i.fadeOut = function() {
							var e = this;
							return this.isKeyReady = !1, new(oe())((function(t) {
								e.scene.tweens.add({
									targets: e,
									alpha: 0,
									duration: 300,
									ease: Phaser.Math.Easing.Sine.In,
									onComplete: function() {
										e.keyBall.grid.replaceGridObject(e.keyBall, {
											objectType: "EmptyBall"
										}), t()
									}
								})
							}))
						}, t
					}(Phaser.GameObjects.Container),
					CS = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS,
					wS = CS.KEY,
					BS = CS.FRAME,
					IS = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, wS, BS.BALL_TRANSPARENT) || this).keyBallBehavior = void 0, a.key = void 0, a.lockObject = void 0, a.key = new _S((0, Un.Z)(a)), a.objectType = "KeyBall", a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createBehaviors = function() {
							this.addBehavior(new JT(this)), this.keyBallBehavior = new ES(this), this.addBehavior(this.keyBallBehavior), this.addBehavior(new $b(this))
						}, i.initDefault = function(t) {
							var i;
							return e.prototype.initDefault.call(this, t), null == (i = this.key) || i.initDefault(), this
						}, i.postUpdate = function() {
							e.prototype.postUpdate.call(this), this.visible && this.key.setPosition(this.x, this.y)
						}, i.updateDepthObjects = function(t) {
							var i;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.key) || i.setDepth(t + jn.X.KEY_IDLE)
						}, i.revive = function() {
							e.prototype.revive.call(this), this.key.revive()
						}, i.kill = function() {
							e.prototype.kill.call(this), this.key.kill()
						}, i.clearObject = function() {
							this.key.kill()
						}, i.preKill = function(e) {
							var t, i = this,
								n = this.scale;
							this.isKilled = !0, this.scene.tweens.add({
								targets: this,
								duration: 200,
								scale: {
									from: n,
									to: 1.4 * n
								},
								onComplete: function() {
									i.kill(), e && e()
								},
								onCompleteScope: this,
								ease: Phaser.Math.Easing.Sine.Out
							}), this.applyFunction(y()(t = [this]).call(t, this.subObjects), "onPreKill")
						}, i.updateAfterInit = function(t) {
							if (e.prototype.updateAfterInit.call(this, t), void 0 !== this.status) {
								var i = Math.floor(this.status / 11),
									n = this.status % 11,
									a = this.grid.getObjectAt({
										row: i,
										col: n
									});
								if (a) {
									var s = a.getSubObject("IronBoard");
									s && s.isHasLock() && (this.lockObject = a, s.keyObject = this)
								}
							}
						}, t
					}(oE),
					PS = IS,
					xS = aa.Z.GAMEPLAY.GAME_OBJECTS,
					OS = (xS.KEY, xS.FRAME, function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, "EmptyBallBehavior") || this).scene.gameManager.particlePool.init("EmptyBallExplodeParticle", 1, 6), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.onCollideWithBullet = function(e, t) {
							return this.gameObject.onActiveExplode()
						}, i.onActiveExplode = function() {
							return this.explode()
						}, i.explode = function() {
							var e = this;
							return new(oe())((function(t) {
								var i = e.gameObject.scene.gameManager;
								e.scene.audio.playSound(sa.Z.BUBBLE_POP), e.gameObject.setDepth(jn.Z.BALL_EXPLODE), e.gameObject.preKill(), i.grid.removeFromGrid([e.gameObject]);
								var n = e.gameObject,
									a = n.x,
									s = n.y;
								i.particlePool.spawn("EmptyBallExplodeParticle").explode(a, s), e.scene.time.delayedCall(110, t)
							}))
						}, i.onOverlayWithBullet = function(e) {
							return this.gameObject.onActiveExplode()
						}, (0, V.Z)(t, [{
							key: "active",
							get: function() {
								return this._active
							},
							set: function(e) {
								this._active = e, this.gameObject.setEmptyGeom(e)
							}
						}]), t
					}(Vb)),
					kS = aa.Z.GAMEPLAY.GAME_OBJECTS,
					RS = kS.KEY,
					MS = kS.FRAME,
					LS = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, RS, MS.EMPTY_BALL) || this).emptyGeom = void 0, a.isUsingEmptyGeom = !0, a.objectType = "EmptyBall", a.emptyGeom = new Phaser.Geom.Polygon, a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setEmptyGeom = function(e) {
							this.isUsingEmptyGeom = e
						}, i.getGeom = function() {
							return this.isUsingEmptyGeom ? this.emptyGeom : this.geom
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.addBehavior(new OS(this))
						}, i.preKill = function(e) {
							var t, i = this,
								n = this.scale;
							this.isKilled = !0, this.scene.tweens.add({
								targets: this,
								duration: 200,
								scale: {
									from: n,
									to: 1.4 * n
								},
								onComplete: function() {
									i.kill(), e && e()
								},
								onCompleteScope: this,
								ease: Phaser.Math.Easing.Sine.Out
							}), this.applyFunction(y()(t = [this]).call(t, this.subObjects), "onPreKill")
						}, t
					}(oE),
					GS = LS;

				function DS(e, t) {
					var i = "undefined" !== typeof uo() && mo()(e) || e["@@iterator"];
					if (i) return (i = i.call(e)).next.bind(i);
					if (Array.isArray(e) || (i = function(e, t) {
							var i;
							if (!e) return;
							if ("string" === typeof e) return FS(e, t);
							var n = tt()(i = Object.prototype.toString.call(e)).call(i, 8, -1);
							"Object" === n && e.constructor && (n = e.constructor.name);
							if ("Map" === n || "Set" === n) return co()(e);
							if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return FS(e, t)
						}(e)) || t && e && "number" === typeof e.length) {
						i && (e = i);
						var n = 0;
						return function() {
							return n >= e.length ? {
								done: !0
							} : {
								done: !1,
								value: e[n++]
							}
						}
					}
					throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
				}

				function FS(e, t) {
					(null == t || t > e.length) && (t = e.length);
					for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
					return n
				}
				var NS, ZS = Math.sqrt(3) / 2,
					US = [
						[
							[-1, -1],
							[-1, 0],
							[0, -1],
							[0, 1],
							[1, -1],
							[1, 0]
						],
						[
							[-1, 0],
							[-1, 1],
							[0, -1],
							[0, 1],
							[1, 0],
							[1, 1]
						]
					],
					jS = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).index = 0, i.staggered = !1, i.size = 0, i.count = 0, i.firstX = 0, i
						}
						return (0, l.Z)(t, e), t
					}((0, P.Z)(Array)),
					YS = function() {
						function e(e) {
							this.scene = void 0, this.descentController = void 0, this.gameManager = void 0, this.pool = void 0, this.layoutData = void 0, this.size = void 0, this.grid = [], this.ballsWillBeDestroyed = [], this.rowSize = 0, this.ballsCount = 0, this.firstY = 0, this.eventAddHavingBall = void 0, this.listRowIndexText = [], this.objectRemoved = [], this.hexagonWiresObject = [], this.newAttachedObject = [], this.droppingPromises = void 0, this.isHasNoObjectRemoved = !0, this.isNeedLoopEndTurn = !1;
							var t = e.scene;
							this.scene = t, this.pool = e.gridObjectPool, this.gameManager = e;
							var i = this.scene.data.get("grid"),
								n = i.width,
								a = i.height,
								s = i.rowSize;
							this.rowSize = s, this.size = new Phaser.Structs.Size(n, a), this.descentController = new XT(this.scene, this), GameCore.Utils.Valid.isDebugger()
						}
						var t = e.prototype;
						return t.getBallsAt = function(e, t) {
							if (0 === this.grid.length) return [];
							if (this.bottomY + 40 < t) return [];
							var i = this.getRowColByXY(e, t),
								n = i.row,
								a = i.col,
								s = this.getNeighbors(n, a),
								o = this.grid[n];
							if (o) {
								var r = o[a];
								r && s.push(r)
							}
							return s
						}, t.getPool = function() {
							return this.pool
						}, t.getVisibleGridObjects = function() {
							var e, t = tt()(e = this.grid).call(e, Math.max(this.grid.length - nb - 1, 0), this.grid.length),
								i = [];
							return t.forEach((function(e) {
								e.forEach((function(e) {
									e && i.push(e)
								}))
							})), i
						}, t.getIndexOfHighestFullEggRow = function() {
							var e;
							return $d()(e = this.grid).call(e, (function(e) {
								return e.size !== e.count
							})) - 1
						}, t.start = function() {}, t.resetAlphaForAllBalls = function() {
							var e;
							_()(e = this.grid).call(e, (function(e) {
								return _()(e).call(e, (function(e) {
									e && e.setAlpha(1)
								}))
							}))
						}, t.destroy = function() {
							var e;
							this.scene && (this.clearGrid(), null == (e = this.eventAddHavingBall) || e.remove())
						}, t.setLayoutData = function(e) {
							return this.layoutData = e, this
						}, t.findNearestEmptyPositionByXY = function(e, t, i) {
							var n = this;
							void 0 === i && (i = 0);
							var a = e.x,
								s = e.y,
								o = this.getNeighborsPositionAt(t.row, t.col);
							ji()(o).call(o, (function(e, t) {
								var i = e[0],
									o = e[1],
									r = t[0],
									l = t[1],
									c = n.getXYByRowCol({
										row: i,
										col: o
									}, !0),
									h = c.x,
									u = c.y,
									d = n.getXYByRowCol({
										row: r,
										col: l
									}, !0),
									p = d.x,
									m = d.y;
								return Phaser.Math.Distance.Between(a, s, h, u) < Phaser.Math.Distance.Between(a, s, p, m) ? -1 : 1
							}));
							for (var r = o[0]; o.length > 0;) {
								var l, c = o[0],
									h = c[0],
									u = c[1];
								if (this.grid[h])
									if (this.grid[h][u] && "EmptyBall" !== (null == (l = this.grid[h][u]) ? void 0 : l.objectType)) {
										o.shift();
										continue
									} return {
									row: o[0][0],
									col: o[0][1]
								}
							}
							if (2 !== i) {
								var d = r[0],
									p = r[1],
									m = this.grid[d][p];
								if (m) return this.findNearestEmptyPositionByXY(e, m, i + 1)
							}
						}, t.attachObject = function(e, t, i) {
							var n;
							if (e === this.grid.length) {
								var s = new jS(this.rowSize);
								ko()(s).call(s, void 0);
								var o = this.grid[e - 1];
								o ? (s.staggered = !o.staggered, s.firstX = o.firstX + this.size.width / 2, s.size = o.size + 1, o.staggered ? s.firstX -= this.size.width : s.size -= 2) : (s.staggered = !1, s.size = 11, s.firstX = this.calculatorHeadDistanceOfRow(s.size)), this.grid.push(s)
							} else if (e > this.grid.length) {
								var r = new Error("Invalid position when attach ball"),
									l = {
										pos: {
											row: e,
											col: t
										},
										ballsCount: this.ballsCount,
										gridLen: this.grid.length,
										firstY: this.firstY,
										bottomY: this.bottomY
									};
								(0, a.R0)(r, l)
							}
							var c = this.getXYByRowCol({
									row: e,
									col: t
								}, !0),
								h = c.x,
								u = c.y,
								d = this.grid[e];
							return i.row = e, i.col = t, d[t] = i, d.count += 1, i.setPosition(h, u), i.revive(), i.subObjects.length && i.subObjects.forEach((function(e) {
								e.revive()
							})), this.resetProcessed(), this.objectRemoved = A()(n = this.objectRemoved).call(n, (function(e) {
								return e != i
							})), this.newAttachedObject.push(i), i
						}, t.processMatch = function(e, t, i) {
							void 0 === t && (t = 3);
							var n = this.getObjectAt(e);
							if (!n) return oe().resolve();
							var a = this.findMatchesAt(n),
								s = a[0],
								o = a[1];
							if (!n || !s) return oe().resolve();
							var r = o >= t;
							if (this.scene.scoreCounter.processCombos(r), !r) return this.ballsCount += 1, this.scene.scoreCounter.updateCombosMultiplier(), (0, xo.qZ)(100);
							return this.processMatchPromise(s, i)
						}, t.processMatchPromise = function(e, t, i, n) {
							var a = this;
							if (void 0 === i && (i = 0), void 0 === n && (n = 0), i >= e.length) return oe().resolve();
							var s = e[i];
							return s.every((function(e) {
								return e.isKilled
							})) ? this.processMatchPromise(e, t, i + 1, 0) : new(oe())((function(o) {
								a.scene.time.delayedCall(n, (function() {
									if (s.every((function(e) {
											return e.isKilled
										}))) a.processMatchPromise(e, t, i + 1, 0).then((function() {
										return o()
									}));
									else {
										var n = [];
										_()(s).call(s, (function(e) {
											var i, s = e.onActiveExplode(t),
												o = a.getNeighbors(e.row, e.col),
												r = _()(o).call(o, (function(t) {
													return t.getSubObject("IronBoard") ? oe().resolve() : t.onNearBallMatch(e)
												}));
											n.push.apply(n, y()(i = [s]).call(i, r))
										})), n.push(a.processMatchPromise(e, t, i + 1, 83)), oe().all(n).then((function() {
											return o()
										}))
									}
								}))
							}))
						}, t.processOrphaned = function() {
							var e = this;
							this.droppingPromises = [];
							var t = this.findOrphanedBalls();
							t.forEach((function(e) {
								e.setObjectState(Xb.LOSS_LINK)
							}));
							var i = _()(t).call(t, (function(t) {
								var i = t.onObjectOrphaned(),
									n = t.getBehavior("DropBehavior");
								return n ? (e.droppingPromises.push(n.waitingDrop()), i) : i
							}));
							return oe().all(i).then((function() {
								e.cleanUpEmptyRows()
							}))
						}, t.dropAllBalls = function() {
							var e = [];
							this.grid.forEach((function(t) {
								t.forEach((function(t) {
									t && e.push(t)
								}))
							})), this.removeFromGrid(e), this.cleanUpEmptyRows()
						}, t.spawnRow = function(e, t, i) {
							void 0 === t && (t = 0), this.addRowToBottom(e, t, i)
						}, t.clearGrid = function() {
							var e = this;
							this.grid.forEach((function(t) {
								var i = A()(t).call(t, (function(e) {
									return e
								}));
								e.removeFromGrid(i, !0), i.forEach((function(e) {
									e.removeAllSubObjects(), e.clearObject(), e.kill()
								}))
							})), this.cleanUpEmptyRows(), this.objectRemoved = [], this.grid = []
						}, t.updateCoordinate = function() {
							this.grid.forEach((function(e, t) {
								e.forEach((function(e, i) {
									e && (e.row = t, e.col = i, e instanceof PS && e.updateAfterInit({
										row: e.row,
										col: e.col
									}))
								})), e.index = t
							}))
						}, t.createObjectFromConfig = function(e, t) {
							var i = this,
								n = this.scene.level.getLevelData();
							if (n) {
								var a = n.colors,
									s = this.getXYByRowCol(e, !0),
									o = s.x,
									r = s.y,
									l = t.objectType;
								if (l) {
									var c, h, u, d = this.pool.spawn(o, r, l, t.status);
									if (d.row = e.row, d.col = e.col, (d instanceof HT && "WhiteBall" !== d.objectType && "MirrorBall" !== d.objectType || d instanceof bS) && (c = t.color ? t.color : t.subColor ? A()(a).call(a, (function(e) {
											return e !== t.subColor
										}))[Math.floor(Math.random() * (a.length - 1))] : a[Math.floor(Math.random() * a.length)], d.setColor(c)), d instanceof jA) h = t.subColor ? t.subColor : A()(a).call(a, (function(e) {
										return e !== c
									}))[Math.floor(Math.random() * (a.length - 1))], d.setSubColor(h);
									if (t.subObjects && t.subObjects.length > 0) _()(u = t.subObjects).call(u, (function(e) {
										return i.gameManager.subGridObjectPool.spawn(e.type, d, e.status)
									})).forEach((function(e) {
										d.addSubObject(e)
									}));
									return d.revive(), d
								}
							}
						}, t.addRowToBottom = function(e, t, i) {
							var n = this;
							void 0 === t && (t = 0);
							var a = this.size.width,
								s = this.ballInterval,
								o = new jS;
							this.grid.push(o);
							var r = this.scene.getCorrectGameSize().height;
							if (this.grid.length <= 1) {
								o.staggered = !1, o.size = this.rowSize;
								var l = 55 + (r - 667) / 2;
								t < 10 ? (this.firstY = l, l) : (this.firstY = 9 * s + l - t * s, 9 * s + l - t * s)
							} else o.staggered = this.isRowStaggered(this.grid.length - 1), o.size = this.rowSize - +o.staggered, this.firstY + (this.grid.length - 1) * s;
							var c = this.calculatorHeadDistanceOfRow(o.size);
							o.firstX = c, e.forEach((function(e, t) {
								var i = n.createObjectFromConfig({
									row: n.grid.length - 1,
									col: t
								}, e);
								i ? (o.push(i), o.count += 1) : o.push(void 0), c += a
							})), this.ballsCount += o.count, o.staggered && o.push(void 0)
						}, t.generateGridFromData = function(e, t) {
							this.clearGrid();
							for (var i, n = e.length, a = DS(e); !(i = a()).done;) {
								var s = i.value;
								this.spawnRow(s, n, t)
							}
							this.descentController.init(), this.scene.lineTopGrid.revive(), this.scene.lineTopGrid.y = this.topY, this.updateCoordinate()
						}, t.removeFromGrid = function(e, t) {
							var i, n = this;
							if (void 0 === t && (t = !1), e.forEach((function(e) {
									var t = e.row,
										i = e.col;
									n.grid[t] && n.grid[t][i] && n.grid[t][i] === e && (n.grid[t][i] = void 0, n.grid[t].count -= 1)
								})), (i = this.objectRemoved).push.apply(i, e), this.isHasNoObjectRemoved && !t) {
								if (0 === A()(e).call(e, (function(e) {
										var t;
										return !ue()(t = n.newAttachedObject).call(t, e)
									})).length) return;
								this.isHasNoObjectRemoved = !1, this.gameManager.increaseMatchCountSuccess();
								var a = this.scene.footer.rocketBulletItem;
								this.scene.bulletItemManager.getItemActive() || a.getIsFreeItem() || (a.increaseRocketCombo(), this.scene.footer.updateRocketCombo())
							}
						}, t.replaceGridObject = function(e, t) {
							var i = e.row,
								n = e.col;
							if (this.grid[i] && this.grid[i][n]) {
								var a = this.getObjectAt(e);
								a && (a.removeAllSubObjects(), a.clearObject(), a.kill());
								var s = this.createObjectFromConfig(e, t);
								this.grid[i][n] = s, !a && s && (this.grid[i].count += 1), a && !s && (this.grid[i].count -= 1)
							}
						}, t.findOrphanedBalls = function() {
							var e = this,
								t = this.getFlatGrid(),
								i = A()(t).call(t, (function(e) {
									return e.isRoot()
								}));
							this.resetProcessed(), i.forEach((function(t) {
								e.setProcessSpreadFrom(t)
							}));
							var n = [];
							return this.grid.forEach((function(t) {
								t.forEach((function(t) {
									t && (t instanceof $A && e.HandleObjectsLinkRotator(t), t.isProcess || n.push(t))
								}))
							})), A()(n).call(n, (function(e) {
								return !e.isProcess
							}))
						}, t.resetProcessed = function() {
							this.grid.forEach((function(e) {
								e.forEach((function(e) {
									null == e || e.setProcessed(!1)
								}))
							}))
						}, t.isRowStaggered = function(e) {
							return e % 2 != 0
						}, t.getNeighborsPositionAt = function(e, t) {
							var i = this,
								n = this.isRowStaggered(e),
								a = US[+n],
								s = _()(a).call(a, (function(i) {
									return [e + i[0], t + i[1]]
								})),
								o = A()(s).call(s, (function(e) {
									var t = e[0],
										n = e[1],
										a = i.rowSize - +i.isRowStaggered(t);
									return n >= 0 && n < a && t >= 0
								}));
							return o
						}, t.getNeighbors = function(e, t) {
							var i, n = this,
								a = this.isRowStaggered(e),
								s = US[+a];
							return A()(i = _()(s).call(s, (function(i) {
								var a = e + i[0],
									s = t + i[1];
								return n.getObjectAt({
									row: a,
									col: s
								})
							}))).call(i, (function(e) {
								return e
							}))
						}, t.getEmptyNeighbors = function(e, t) {
							var i, n = this,
								a = this.isRowStaggered(e),
								s = US[+a];
							return A()(i = _()(s).call(s, (function(i) {
								return {
									row: e + i[0],
									col: t + i[1]
								}
							}))).call(i, (function(e) {
								return e.row >= 0 && e.col >= 0 && e.col < (e.row % 2 === 0 ? 11 : 10) && !n.getObjectAt(e)
							}))
						}, t.getNeighborTile = function(e, t, i) {
							var n = this.isRowStaggered(e),
								a = US[+n];
							return {
								row: e + a[i][0],
								col: t + a[i][1]
							}
						}, t.filterBallsByPositions = function(e) {
							var t = this,
								i = [];
							return e.forEach((function(e) {
								var n = e[0],
									a = e[1],
									s = t.grid[n];
								if (s) {
									var o = s[a];
									o && i.push(o)
								}
							})), i
						}, t.setProcessSpreadFrom = function(e) {
							var t = this,
								i = [];
							e.isProcess = !0, i.push([e]);
							for (var n = 1, a = !1, s = function() {
									var e = i[i.length - 1],
										s = [];
									if (e.forEach((function(e) {
											t.filterBallsByPositions(t.getNeighborsPositionAt(e.row, e.col)).forEach((function(e) {
												e.isProcess || (s.push(e), n += 1, e.isProcess = !0)
											}))
										})), 0 == s.length) return a = !0, "break";
									i.push(s)
								}; !a;) {
								if ("break" === s()) break
							}
							return [i, n]
						}, t.findMatchesAt = function(e) {
							if (e instanceof pA || e instanceof MA) return [
								[], 0
							];
							var t = e.getSubObject("IronShell");
							if (t instanceof TA && "close" === t.getIronShellState()) return [
								[], 0
							];
							if (e.isHasIronBoard()) return [
								[], 0
							];
							if (e.isHasMud()) return [
								[], 0
							];
							if (!(e instanceof HT)) return [
								[], 0
							];
							var i = [];
							if (i.push(e.getColor()), e instanceof jA && i.push(e.getSubColor()), 0 === i.length) return [
								[], 0
							];
							for (var n = [], a = 0, s = i; a < s.length; a++) {
								var o = s[a],
									r = this.getAdjacentMatchesByColor(e, o),
									l = r[0];
								r[1];
								n.push(l)
							}
							for (var c = [], h = Math.max.apply(Math, _()(n).call(n, (function(e) {
									return e.length
								}))), u = 0; u < h; u++) c.push([]);
							for (var d = 0; d < n.length; d++)
								for (var p = 0; p < n[d].length; p++) {
									var m;
									(m = c[p]).push.apply(m, n[d][p])
								}
							for (var f = 0, g = function(e) {
									var t;
									c[e] = A()(t = c[e]).call(t, (function(t, i) {
										var n;
										return Se()(n = c[e]).call(n, t) === i
									})), f += c[e].length
								}, v = 0; v < h; v++) g(v);
							return [c, f]
						}, t.getAdjacentMatchesByColor = function(e, t) {
							var i = this;
							this.resetProcessed();
							var n = 1,
								a = [];
							e.isProcess = !0, a.push([e]), e instanceof jA && e.setMatchedColor(t);
							for (var s = function(e) {
									var s = a[a.length - 1];
									if (0 == s.length) return a.pop(), "break";
									var o = [];
									s.forEach((function(e) {
										i.filterBallsByPositions(i.getNeighborsPositionAt(e.row, e.col)).forEach((function(i) {
											var a = i.getSubObject("IronShell");
											a instanceof TA && "close" === a.getIronShellState() || i.isHasIronBoard() || i.isHasMud() ? i.isProcess = !0 : i.isProcess || (i.isCanMatchWith(e, t) && (o.push(i), n += 1, i instanceof jA && i.setMatchedColor(t)), i.isProcess = !0)
										}))
									})), a.push(o)
								}, o = 0; o < a.length; o++) {
								if ("break" === s()) break
							}
							return [a, n]
						}, t.jiggleNeighborsBall = function(e, t) {
							void 0 === t && (t = 3);
							var i = this.getRowColByXY(e.x, e.y),
								n = i.row,
								a = i.col,
								s = this.getAdjacentObjects({
									row: n,
									col: a
								}, t, !1),
								o = [20, 18, 16, 14, 12, 10, 8, 6, 4, 2, 1],
								r = [];
							return s.forEach((function(i, n) {
								var a = o[o.length - t + n - 1],
									s = _()(i).call(i, (function(t) {
										var i = t.x - e.x,
											s = t.y - e.y,
											o = new Phaser.Math.Vector2(i, s);
										return o.normalize(), t.jiggle(o, a, 33 * n)
									}));
								r.push.apply(r, s)
							})), oe().all(r)
						}, t.cleanUpEmptyRows = function() {
							for (var e = this.grid.length - 1; e >= 0; --e) {
								if (this.grid[e].count > 0) return;
								this.grid.pop()
							}
						}, t.getRowColByXY = function(e, t) {
							var i, n = (t - this.topY) / this.ballInterval,
								a = Math.round(n) - 1;
							if (a % 2 === 0) i = this.firstRow.firstX;
							else {
								var s = a % 2 === 0 ? this.firstRow.staggered : !this.firstRow.staggered;
								i = this.firstRow.firstX - this.size.width / 2, s && (i += this.size.width)
							}
							var o = (e - i) / this.size.width;
							return {
								row: a,
								col: Math.round(o)
							}
						}, t.getXYByRowCol = function(e, t) {
							void 0 === t && (t = !1);
							var i = e.row,
								n = e.col;
							if (t) {
								var a = this.topY + i * this.ballInterval + .5 * this.size.height;
								return {
									x: this.calculatorHeadDistanceOfRow(i % 2 === 0 ? this.rowSize : this.rowSize - 1) + n * this.size.width,
									y: a
								}
							}
							var s = this.scene.lineTopGrid.y + .5 * this.size.height + i * this.ballInterval;
							return {
								x: this.calculatorHeadDistanceOfRow(i % 2 === 0 ? this.rowSize : this.rowSize - 1) + n * this.size.width,
								y: s
							}
						}, t.makeBallsBlur = function(e) {
							this.scene.tweens.add({
								targets: e,
								duration: 73,
								alpha: {
									from: 1,
									to: .65
								}
							})
						}, t.moveBy = function(e, t, i) {
							var n = this;
							if (void 0 === t && (t = 0), void 0 === i && (i = 100), 0 === this.pool.countActive()) return oe().resolve();
							this.firstY += e;
							var a = 70 * Math.abs(Math.floor(e / 29)) + 300,
								s = e < 0 ? Phaser.Math.Easing.Sine.Out : Phaser.Math.Easing.Circular.Out;
							if (this.scene.lineTopGrid && this.scene.tweens.add({
									targets: this.scene.lineTopGrid,
									delay: t,
									duration: a,
									ease: s,
									props: {
										y: this.scene.lineTopGrid.y + e
									}
								}), 0 === this.grid.length) return oe().resolve();
							var o = this.grid.length,
								r = o < 13 ? 0 : o - nb - 2,
								l = 0;
							return this.scene.tweens.addCounter({
								from: 0,
								to: 1,
								duration: a,
								delay: t,
								onUpdate: function(t) {
									for (var i = t.getValue(), a = Math.ceil(r * i), s = l; s < a; s++) {
										n.grid[s].forEach((function(t) {
											t && !t.isObjectLossLink() && (t.y += e)
										})), l += 1
									}
								}
							}), new(oe())((function(i) {
								for (var o = n.grid.length - 1; o >= r; o--) {
									n.grid[o].forEach((function(i) {
										var o = 0;
										i && !i.isObjectLossLink() && n.scene.tweens.addCounter({
											from: 0,
											to: e,
											delay: t,
											duration: a,
											ease: s,
											onUpdate: function(e) {
												var t = e.getValue(),
													n = t - o;
												o = t, i.y += n
											}
										})
									}))
								}
								n.scene.time.delayedCall(0, i)
							}))
						}, t.getHeightGrid = function() {
							return this.grid.length
						}, t.getRow = function(e) {
							var t = this.grid[e];
							return A()(t).call(t, (function(e) {
								return e
							}))
						}, t.getObjectAt = function(e) {
							var t = e.row,
								i = e.col,
								n = this.grid[t];
							if (n && n[i]) return n[i]
						}, t.getAdjacentObjects = function(e, t, i) {
							var n = this;
							void 0 === t && (t = 1), void 0 === i && (i = !0);
							var a = e.row,
								s = e.col,
								o = [],
								r = [],
								l = [],
								c = this.getNeighborsPositionAt(a, s),
								h = this.filterBallsByPositions(c);
							h = A()(h).call(h, (function(e) {
								if (e.isObjectReady()) return e
							})), o.push(h), l.push.apply(l, h), i ? r.push(h) : r.push(_()(c).call(c, (function(e) {
								return {
									row: e[0],
									col: e[1]
								}
							})));
							for (var u = function(e) {
									var t = r[r.length - 1];
									if (i && (0 == o[o.length - 1].length && o.pop(), 0 == t.length)) return r.pop(), "break";
									var a = [],
										s = [];
									t.forEach((function(e) {
										var t = n.getNeighborsPositionAt(e.row, e.col),
											o = n.filterBallsByPositions(t);
										i ? o.forEach((function(e) {
											Se()(l).call(l, e) < 0 && a.push(e)
										})) : t.forEach((function(e) {
											var t = e[0],
												i = e[1];
											ye()(l).call(l, (function(e) {
												return e.row === t && e.col === i
											})) || a.push({
												row: t,
												col: i
											})
										})), o.forEach((function(e) {
											Se()(l).call(l, e) < 0 && e.isObjectReady() && (l.push(e), s.push(e))
										}))
									})), r.push(a), o.push(s)
								}, d = 0; d < t - 1; d++) {
								if ("break" === u()) break
							}
							return o
						}, t.getMatchObjectsAt = function(e) {
							return []
						}, t.getDiagonalUpLeft = function(e) {
							var t = this.grid[e.row][e.col];
							if (!t) return [];
							var i = new Phaser.Geom.Line(t.x, t.y, t.x - 700 * Math.cos(Math.PI / 3), t.y - 700 * Math.sin(Math.PI / 3)),
								n = this.getVisibleGridObjects(),
								a = [];
							return n.forEach((function(t, n) {
								Phaser.Geom.Line.GetShortestDistance(i, t) < 4 && t.row < e.row && a.push(t)
							})), a
						}, t.getDiagonalUpRight = function(e) {
							var t = this.grid[e.row][e.col];
							if (!t) return [];
							var i = new Phaser.Geom.Line(t.x, t.y, t.x - 100 * Math.cos(2 * Math.PI / 3), t.y - 100 * Math.sin(2 * Math.PI / 3)),
								n = this.getVisibleGridObjects(),
								a = [];
							return n.forEach((function(t) {
								Phaser.Geom.Line.GetShortestDistance(i, t) < 4 && t.row < e.row && a.push(t)
							})), a
						}, t.removeGridObjectAt = function(e) {
							var t = this.getObjectAt(e);
							t && this.removeFromGrid([t])
						}, t.endTurn = function() {
							var e = (0, r.Z)(h().mark((function e(t) {
								var i, n, a, s, o, r, l, c, u, d, p, m, f;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											for (this.resetProcessed(), i = [], n = this.objectRemoved, this.objectRemoved = [], a = this.grid.length - 1; a >= Math.max(0, this.grid.length - nb); a--) s = this.grid[a], o = A()(s).call(s, (function(e) {
												return e
											})), r = _()(o).call(o, (function(e) {
												return e.onPreEndTurn()
											})), i.push.apply(i, r);
											return l = _()(n).call(n, (function(e) {
												return e.onPreEndTurn()
											})), i.push.apply(i, l), e.next = 9, oe().all(i);
										case 9:
											for ((c = []).push(this.descentController.moveGrid()), GameCore.Utils.Valid.isDebugger(), u = this.grid.length - 1; u >= Math.max(0, this.grid.length - nb); u--) d = this.grid[u], p = A()(d).call(d, (function(e) {
												return e
											})), m = _()(p).call(p, (function(e) {
												return e.onEndTurn()
											})), c.push.apply(c, m);
											if (f = _()(n).call(n, (function(e) {
													return e.onEndTurn()
												})), c.push.apply(c, f), !this.isNeedLoopEndTurn) {
												e.next = 24;
												break
											}
											return e.next = 18, oe().all(c);
										case 18:
											return this.isNeedLoopEndTurn = !1, e.next = 21, this.processOrphaned();
										case 21:
											return e.abrupt("return", this.endTurn(t));
										case 24:
											return t && t(), e.next = 27, oe().all(c);
										case 27:
											return e.abrupt("return");
										case 29:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), t.setLoopEndTurn = function() {
							this.isNeedLoopEndTurn = !0
						}, t.startTurn = function() {
							for (var e = [], t = this.grid.length - 1; t >= Math.max(0, this.grid.length - nb); t--) {
								var i = this.grid[t],
									n = A()(i).call(i, (function(e) {
										return e
									})),
									a = _()(n).call(n, (function(e) {
										return e.isHasIronBoard() ? oe().resolve() : e.onStartTurn()
									}));
								e.push.apply(e, a)
							}(this.objectRemoved = [], this.isHasNoObjectRemoved) && (this.gameManager.increaseMatchCountFail(), this.scene.footer.rocketBulletItem.resetRocketCombo(), this.scene.footer.updateRocketCombo());
							return this.isHasNoObjectRemoved = !0, this.newAttachedObject = [], this.gameManager.isBulletOutSide = !1, oe().all(e)
						}, t.moveDown = function() {}, t.findNearestEmptyPositionOnFirstRow = function(e) {
							var t = this.grid[0],
								i = this.size.width;
							if (t) {
								var n = this.calculatorHeadDistanceOfRow(t.size),
									a = e.x - n;
								a % i > i / 2 ? a = a - a % i + i : a -= a % i;
								var s = Math.floor(a / i),
									o = this.getObjectAt({
										row: 0,
										col: s
									});
								if (o) {
									if ("EmptyBall" == o.objectType) {
										var r = o.getSubObject("IronShell");
										if (!r || "open" === r.ironShellState) return {
											row: 0,
											col: s
										}
									}
									s = e.x - o.x > 0 ? s + 1 : s - 1
								}
								return {
									row: 0,
									col: s
								}
							}
						}, t.calculatorHeadDistanceOfRow = function(e) {
							var t = .5 * this.scene.gameZone.width,
								i = this.size.width;
							return t - .5 * e * i + .5 * i
						}, t.getPositionYFromRow = function(e) {
							return this.topY + e * this.ballInterval + .3 * this.size.height
						}, t.createListText = function() {
							if (0 === this.listRowIndexText.length)
								for (var e = 0; e < nb; e++) {
									var t = this.scene.add.text(10, -20, "");
									t.setDepth(jn.Z.ON_TOP + 2), t.setHighQuality(), this.listRowIndexText.push(t)
								}
						}, t.updateListRowIndexText = function() {
							if (this.grid && this.grid.length > 0) {
								var e = this.grid.length;
								if (this.listRowIndexText.forEach((function(e) {
										e.setVisible(!1)
									})), e < nb)
									for (var t = 0; t < e; t++) this.listRowIndexText[t].visible = !0, this.listRowIndexText[t].y = this.getPositionYFromRow(t), this.listRowIndexText[t].setText("" + t);
								else
									for (var i = 0; i < nb; i++) this.listRowIndexText[i].visible = !0, this.listRowIndexText[i].y = this.getPositionYFromRow(e - nb + i), this.listRowIndexText[i].setText("" + (e - nb + i))
							}
						}, t.getRandomObject = function() {
							for (var e = [], t = this.grid.length, i = t < nb ? 2 : t - nb + 2, n = t - 1; n > i; n--) this.grid[n].forEach((function(t) {
								t && e.push(t)
							}));
							if (0 !== e.length) return e[Phaser.Math.RND.between(0, e.length - 1)]
						}, t.getCurrentColorsOnGrid = function() {
							for (var e = [], t = this.grid.length, i = t < nb ? 0 : t - nb + 2, n = t - 1; n >= i; n--) this.grid[n].forEach((function(t) {
								if (t && t instanceof HT && t.getColor() != wc.I.White) {
									if (t instanceof hS) return;
									var i = t.getColor();
									if (ue()(e).call(e, i) || e.push(i), t instanceof jA) {
										var n = t.getSubColor();
										ue()(e).call(e, n) || e.push(n)
									}
								}
							}));
							for (var a = i; 0 === e.length && a >= 0 && this.grid.length > 0;) this.grid[a].forEach((function(t) {
								if (t && t instanceof HT && t.getColor() != wc.I.White) {
									if (t instanceof hS) return;
									var i = t.getColor();
									if (ue()(e).call(e, i) || e.push(i), t instanceof jA) {
										var n = t.getSubColor();
										ue()(e).call(e, n) || e.push(n)
									}
								}
							})), a -= 1;
							return 0 === e.length ? this.gameManager.levelData.colors : e
						}, t.getVisibleColorBalls = function() {
							for (var e = [], t = this.grid.length, i = t < nb ? 0 : t - nb, n = t - 1; n >= i; n--) this.grid[n].forEach((function(t) {
								t && t instanceof HT && e.push(t)
							}));
							return e
						}, t.getExplodableObjects = function() {
							for (var e = [], t = this.grid.length, i = t < nb ? 0 : t - nb, n = ["SlateStone", "SubSlateStone", "SwitchBlackHole", "BlackHole", "Stone"], a = t - 1; a >= i; a--) this.grid[a].forEach((function(t) {
								t && !ue()(n).call(n, t.objectType) && e.push(t)
							}));
							return A()(e).call(e, (function(e) {
								return !e.isObjectLossLink()
							}))
						}, t.getRandomAttachablePosition = function() {
							for (var e = this, t = [], i = Math.max(this.grid.length - 1, 0); i >= Math.max(0, this.grid.length - nb); i--) {
								if (0 === i)
									for (var n = function(i) {
											var n = {
												row: 0,
												col: i
											};
											e.getObjectAt(n) || ye()(t).call(t, (function(e) {
												return e.row === n.row && e.col === n.col
											})) || t.push(n)
										}, a = 0; a < 11; a++) n(a);
								if (this.grid[i])
									for (var s = 0; s < this.grid[i].size; s++) {
										if (this.grid[i][s]) this.getEmptyNeighbors(i, s).forEach((function(e) {
											ye()(t).call(t, (function(t) {
												return t.row === e.row && t.col === e.col
											})) || t.push(e)
										}))
									}
							}
							return t[Phaser.Math.RND.between(0, t.length - 1)]
						}, t.isGridObjectInAreaShow = function(e) {
							return this.grid.length < nb || !(e.row < this.grid.length - nb)
						}, t.getFlatGrid = function() {
							for (var e = [], t = 0; t < this.grid.length; t++)
								for (var i = 0; i < this.grid[t].length; i++) {
									var n = this.grid[t][i];
									n && e.push(n)
								}
							return e
						}, t.getXYAdjacentObjects = function(e, t) {
							var i, n = this;
							void 0 === t && (t = 2);
							var a = e.row,
								s = e.col,
								o = this.getNeighborsPositionAt(a, s),
								r = [],
								l = [];
							l.push(y()(i = []).call(i, o)), r.push.apply(r, o);
							for (var c = function(e) {
									var t = l[l.length - 1];
									if (0 === t.length) return "break";
									var i = [];
									t.forEach((function(e) {
										n.getNeighborsPositionAt(e[0], e[1]).forEach((function(e) {
											for (var t = 0; t < r.length && (e[0] !== r[t][0] || e[1] !== r[t][1]); t++);
											t >= r.length && (r.push(e), i.push(e))
										}))
									})), l.push(i)
								}, h = 0; h < t - 1; h++) {
								if ("break" === c()) break
							}
							var u = [];
							return r.length > 0 && r.forEach((function(e) {
								var t = n.getXYByRowCol({
										row: e[0],
										col: e[1]
									}, !0),
									i = t.x,
									a = t.y;
								a > n.topY && u.push({
									x: i,
									y: a
								})
							})), u
						}, t.getColorBalls = function() {
							var e = this.getFlatGrid();
							return A()(e).call(e, (function(e) {
								return e instanceof HT && e.getColor() != wc.I.White
							}))
						}, t.getGemsBalls = function() {
							var e = this.getFlatGrid();
							return A()(e).call(e, (function(e) {
								return e instanceof lA && e.getColor() != wc.I.White
							}))
						}, t.getXYObjectsRowAt = function(e) {
							var t = e.row,
								i = this.getXYByRowCol(e, !0).y;
							if (!this.grid[t]) return [];
							for (var n = this.calculatorHeadDistanceOfRow(this.grid[t].size), a = [], s = 0; s < this.grid[t].size; s++) a.push({
								x: n,
								y: i
							}), n += this.size.width;
							return a
						}, t.dropWhenLevelEnd = function(e) {
							var t = [];
							return this.grid.forEach((function(i) {
								var n = A()(i).call(i, (function(e) {
										return e
									})),
									a = _()(n).call(n, (function(t) {
										return t.onLevelEnd(e)
									}));
								t.push.apply(t, a)
							})), t.push.apply(t, this.droppingPromises), oe().all(t)
						}, t.hideObjectsOutsideScreen = function() {
							if (this.grid.length > 11)
								for (var e = this.grid.length - 15; e >= 0; e--) {
									var t;
									null == (t = this.grid[e]) || t.forEach((function(e) {
										e && e.isObjectReady() && (e.setObjectState(Xb.HIDE), e.kill())
									}))
								}
						}, t.showObjectsInsideScreen = function() {
							for (var e = this.grid.length - 1; e > this.grid.length - 12; e--) {
								var t;
								null == (t = this.grid[e]) || t.forEach((function(e) {
									var t;
									e && e.isObjectHide() && (null == (t = e.subObjects) || t.forEach((function(e) {
										e.revive()
									})), e.revive(), e.setObjectState(Xb.READY))
								}))
							}
						}, t.findLowerGridObjects = function(e, t) {
							void 0 === t && (t = 1);
							var i, n, a = [],
								s = this.isRowStaggered(e.row),
								o = e.row,
								r = e.col;
							return t % 2 == 0 ? i = this.getObjectAt({
								row: o + t,
								col: r
							}) : s ? (i = this.getObjectAt({
								row: o + t,
								col: r
							}), n = this.getObjectAt({
								row: o + t,
								col: r + 1
							})) : 0 == r ? i = this.getObjectAt({
								row: o + t,
								col: r
							}) : r == this.grid[o].size - 1 ? i = this.getObjectAt({
								row: o + t,
								col: r - 1
							}) : (i = this.getObjectAt({
								row: o + t,
								col: r - 1
							}), n = this.getObjectAt({
								row: o + t,
								col: r
							})), i && a.push(i), n && a.push(n), o + t > this.grid.length || i || n ? a : (t += 1, this.findLowerGridObjects(e, t))
						}, t.findNearestGridObjectByCondition = function(e, t) {
							for (var i = this, n = [e], a = {}, s = function() {
									var e = n.shift(),
										s = i.getNeighborsPositionAt(e.row, e.col),
										o = _()(s).call(s, (function(e) {
											return {
												row: e[0],
												col: e[1]
											}
										})),
										r = [];
									o.forEach((function(e) {
										a[e.row + "-" + e.col] || (a[e.row + "-" + e.col] = !0, e.row >= i.grid.length || r.push(e))
									})), n.push.apply(n, r);
									var l = i.getObjectAt(e);
									return l ? t(l) ? {
										v: l
									} : void 0 : "continue"
								}; n.length > 0;) {
								var o = s();
								if ("continue" !== o && "object" === typeof o) return o.v
							}
						}, t.findIronBoardsAt = function(e) {
							var t = this,
								i = [e];
							this.resetProcessed();
							var n = this.getObjectAt(e);
							if (!n) return [];
							var a = n.getSubObject("IronBoard");
							if (!a) return [];
							var s = [
									[a],
									[]
								],
								o = 0;
							n.isProcess = !0;
							for (var r = function() {
									var e;
									o += 1;
									var n = i.shift(),
										a = t.getNeighborsPositionAt(n.row, n.col),
										r = _()(a).call(a, (function(e) {
											return {
												row: e[0],
												col: e[1]
											}
										})),
										l = [],
										c = [];
									r.forEach((function(e) {
										var i = t.getObjectAt(e);
										if (i) {
											var n = i.getSubObject("IronBoard");
											n && (i.isProcess || (i.isProcess = !0, l.push(i), c.push(n)))
										}
									})), i.push.apply(i, l), (e = s[s.length - 1]).push.apply(e, c), o >= s[s.length - 2].length && (s.push([]), o = 0)
								}; i.length > 0;) r();
							return A()(s).call(s, (function(e) {
								return e.length > 0
							}))
						}, t.HandleObjectsLinkRotator = function(e) {
							for (var t = this, i = this.getNeighborsPositionAt(e.row, e.col), n = [], a = 0; a < i.length; a++) {
								var s = i[a][0],
									o = i[a][1];
								n.push.apply(n, this.getNeighborsPositionAt(s, o))
							}
							for (var r = 0; r < n.length; r++) {
								var l = n[r][0],
									c = n[r][1];
								if (this.grid[l] && this.grid[l][c]) {
									var h = this.grid[l][c];
									if (h && h.isProcess) return n.forEach((function(e) {
										var i = e[0],
											n = e[1];
										if (t.grid[i] && t.grid[i][n]) {
											var a = t.grid[i][n];
											a && !a.isProcess && (a.isProcess = !0, t.setProcessSpreadFrom(a))
										}
									})), void i.forEach((function(e) {
										var i = e[0],
											n = e[1];
										if (t.grid[i] && t.grid[i][n]) {
											var a = t.grid[i][n];
											a && !a.isProcess && (a.isProcess = !0)
										}
									}))
								}
							}
						}, t.swapGridObject = function(e, t) {
							var i = e.row,
								n = e.col,
								a = t.row,
								s = t.col,
								o = i > a ? i : a;
							if (o === this.grid.length) {
								var r = new jS(this.rowSize);
								ko()(r).call(r, void 0);
								var l = this.grid[o - 1];
								l ? (r.staggered = !l.staggered, r.firstX = l.firstX + this.size.width / 2, r.size = l.size + 1, l.staggered ? r.firstX -= this.size.width : r.size -= 2) : (r.staggered = !1, r.size = 11, r.firstX = this.calculatorHeadDistanceOfRow(r.size)), this.grid.push(r)
							}
							var c = this.grid[i][n],
								h = this.grid[a][s];
							(c || h) && (c && (c.row = a, c.col = s, h || (this.grid[i].count -= 1, this.grid[a].count += 1)), h && (h.row = i, h.col = n, c || (this.grid[a].count -= 1, this.grid[i].count += 1)), this.grid[a][s] = c, this.grid[i][n] = h)
						}, t.getObstacleObjects = function() {
							for (var e = this, t = [{
									row: this.grid.length,
									col: 0
								}], i = {}, n = []; t.length > 0;) {
								var a = t.shift();
								if (!a) break;
								var s = a.row,
									o = a.col,
									r = s + "-" + o;
								if (!i[r]) i[r] = !0, this.getNeighborsPositionAt(s, o).forEach((function(i) {
									var a = i[0],
										s = i[1];
									if (!(a > e.grid.length) && !(a < Math.max(e.grid.length - nb, 0))) {
										var o = e.isEmptyObjectAt({
											row: a,
											col: s
										});
										o ? n.push(o) : t.push({
											row: a,
											col: s
										})
									}
								}))
							}
							return n
						}, t.getCurrentColorOnGridObstacles = function() {
							for (var e = this, t = [], i = this.gameManager.levelData.colors, n = [{
									row: this.grid.length,
									col: 0
								}], a = {}; n.length > 0;) {
								var s = n.shift();
								if (!s) break;
								var o = s.row,
									r = s.col,
									l = o + "-" + r;
								if (!a[l]) a[l] = !0, this.getNeighborsPositionAt(o, r).forEach((function(a) {
									var s = a[0],
										o = a[1];
									if (!(s > e.grid.length) && !(s < Math.max(e.grid.length - nb, 0))) {
										var r = e.isEmptyObjectAt({
											row: s,
											col: o
										});
										if (r) {
											if (r && r instanceof HT && r.getColor() != wc.I.White) {
												if (r instanceof hS) return;
												var l = r.getColor();
												if (!ue()(t).call(t, l) && ue()(i).call(i, l) && t.push(l), r instanceof jA) {
													var c = r.getSubColor();
													ue()(t).call(t, c) || t.push(c)
												}
											}
										} else n.push({
											row: s,
											col: o
										})
									}
								}))
							}
							return 0 === t.length ? this.getCurrentColorsOnGrid() : t
						}, t.isEmptyObjectAt = function(e) {
							var t = this.getObjectAt(e);
							return !!t && (!(t instanceof GS && t.isUsingEmptyGeom) && t)
						}, (0, V.Z)(e, [{
							key: "height",
							get: function() {
								return (this.grid.length - 1) * this.ballInterval + this.size.height
							}
						}, {
							key: "ballInterval",
							get: function() {
								return this.size.height * ZS
							}
						}, {
							key: "topY",
							get: function() {
								return 0 === this.grid.length ? 0 : this.firstY - .5 * this.size.height
							}
						}, {
							key: "bottomY",
							get: function() {
								return this.topY + this.height
							}
						}, {
							key: "firstRow",
							get: function() {
								return this.grid[0]
							}
						}, {
							key: "getDangerRows",
							get: function() {
								var e = this.scene.registry.get("zones").zones,
									t = [];
								if (this.bottomY > e.zone5.topY) {
									var i, n = Math.ceil((this.bottomY - e.zone5.topY) / this.ballInterval);
									t.push.apply(t, tt()(i = this.grid).call(i, this.grid.length - n))
								}
								return t
							}
						}, {
							key: "totalBalls",
							get: function() {
								return this.ballsCount
							}
						}]), e
					}(),
					WS = YS,
					KS = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.FRAME,
					HS = ((NS = {})[wc.I.Blue] = {
						frameStraight: KS.SHOT_GUIDE_BLUE_STRAIGHT,
						frameBgPoint: KS.SHOT_GUIDE_BLUE_BG_POINT
					}, NS[wc.I.Red] = {
						frameStraight: KS.SHOT_GUIDE_RED_STRAIGHT,
						frameBgPoint: KS.SHOT_GUIDE_RED_BG_POINT
					}, NS[wc.I.Green] = {
						frameStraight: KS.SHOT_GUIDE_GREEN_STRAIGHT,
						frameBgPoint: KS.SHOT_GUIDE_GREEN_BG_POINT
					}, NS[wc.I.Yellow] = {
						frameStraight: KS.SHOT_GUIDE_YELLOW_STRAIGHT,
						frameBgPoint: KS.SHOT_GUIDE_YELLOW_BG_POINT
					}, NS[wc.I.Pink] = {
						frameStraight: KS.SHOT_GUIDE_PINK_STRAIGHT,
						frameBgPoint: KS.SHOT_GUIDE_PINK_BG_POINT
					}, NS[wc.I.Bomb] = {
						frameStraight: KS.SHOT_GUIDE_BOMB_STRAIGHT,
						frameBgPoint: KS.SHOT_GUIDE_BOMB_BG_POINT
					}, NS[wc.I.Electric] = {
						frameStraight: KS.SHOT_GUIDE_ELECTRIC_STRAIGHT,
						frameBgPoint: KS.SHOT_GUIDE_ELECTRIC_BG_POINT
					}, NS[wc.I.Orange] = {
						frameStraight: KS.SHOT_GUIDE_ORANGE_STRAIGHT,
						frameBgPoint: KS.SHOT_GUIDE_ORANGE_BG_POINT
					}, NS[wc.I.Violet] = {
						frameStraight: KS.SHOT_GUIDE_VIOLET_STRAIGHT,
						frameBgPoint: KS.SHOT_GUIDE_VIOLET_BG_POINT
					}, NS[wc.I.Rainbow] = {
						frameStraight: KS.SHOT_GUIDE_RAINBOW_STRAIGHT,
						frameBgPoint: KS.SHOT_GUIDE_RAINBOW_BG_POINT
					}, NS[wc.I.Rocket] = {
						frameStraight: KS.SHOT_GUIDE_ROCKET_STRAIGHT,
						frameBgPoint: KS.SHOT_GUIDE_ROCKET_BG_POINT
					}, NS[wc.I.Cyan] = {
						frameStraight: KS.SHOT_GUIDE_CYAN_STRAIGHT,
						frameBgPoint: KS.SHOT_GUIDE_CYAN_BG_POINT
					}, NS),
					zS = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.KEY,
					XS = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, zS) || this).emitter = void 0, i.frameParticle = void 0, i.scene.add.existing((0, Un.Z)(i)), i.kill(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createPointEmitter = function(e) {
							var t = 1 / this.scene.world.getPixelRatio(),
								i = {
									on: !1,
									frame: [e],
									speed: 25,
									gravityY: -100,
									frequency: 80,
									alpha: {
										start: .8,
										end: 0
									},
									scaleX: {
										start: .8 * t,
										end: .5 * t
									},
									scaleY: {
										start: .8 * t,
										end: .7 * t
									},
									lifespan: {
										min: 500,
										max: 1e3
									}
								};
							return this.emitter = this.createEmitter(i), this.emitter
						}, i.start = function(e) {
							this.revive(), this.frameParticle !== e && (this.emitter.forEachAlive((function(e) {
								e.resetPosition()
							}), this.emitter), this.emitter.killAll(), this.emitter.stop(), this.emitter.start(), this.emitter.setFrame(e), this.frameParticle = e)
						}, i.stop = function() {
							this.kill()
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager),
					VS = XS,
					JS = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t) || this).activeChildren = void 0, a.childPool = void 0, a.payload = void 0, a.zone = void 0, a.initDefault(i, n), a.initChildren(), a.createZone(), a.setSize(a.payload.maxWidthFrame, a.payload.maxHeightFrame), a.scene.add.existing((0, Un.Z)(a)), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function(e, t) {
							this.payload = {
								key: e,
								frame: t,
								leftX: 0,
								rightX: 0,
								width: 0,
								maxWidthFrame: 0,
								maxHeightFrame: 0,
								flipY: !1,
								scaleTileSpriteY: 1,
								scaleTileSpriteX: 1
							}, this.childPool = [], this.activeChildren = []
						}, i.initChildren = function() {
							var e = this.createNewChild();
							this.addChildToPool(e), this.payload.maxWidthFrame = e.width, this.payload.maxHeightFrame = e.height
						}, i.createNewChild = function() {
							var e = this.scene.make.image({
								key: this.payload.key,
								frame: this.payload.frame,
								origin: {
									x: 0,
									y: .5
								}
							});
							return this.add(e), e
						}, i.createZone = function() {
							this.zone = this.scene.add.zone(0, 0, this.payload.maxWidthFrame, this.payload.maxHeightFrame), this.add(this.zone)
						}, i.getChildFromPool = function() {
							var e;
							return (e = this.childPool.length > 0 ? this.childPool.pop() : this.createNewChild()).revive(), e.setScale(this.payload.scaleTileSpriteX, this.payload.scaleTileSpriteY), e.flipY = this.payload.flipY, e
						}, i.addChildToPool = function(e) {
							e.kill(), this.childPool.push(e)
						}, i.updateActiveChildren = function() {
							var e = this,
								t = this.getWidthTileSprite();
							if (0 !== t) {
								var i = -t / 2,
									n = t / 2,
									a = this.payload.maxWidthFrame * this.payload.scaleTileSpriteX;
								this.filterActiveChildren(t, a), this.payload.leftX = 0, this.payload.rightX = 0, this.activeChildren.length > 0 && (this.payload.leftX = this.activeChildren[0].x, this.payload.rightX = this.activeChildren[0].x, this.activeChildren.forEach((function(t) {
									t.x - a < e.payload.leftX && (e.payload.leftX = t.x - a), t.x + a > e.payload.rightX && (e.payload.rightX = t.x + a)
								}))), this.addChildToHeadActiveChildren(a, i), this.addChildToTailActiveChildren(a, n), this.cropTileSprite()
							}
						}, i.filterActiveChildren = function(e, t) {
							var i = this,
								n = [],
								a = -e / 2,
								s = e / 2;
							this.activeChildren.forEach((function(e) {
								e.x < s && e.x + t >= a ? n.push(e) : i.addChildToPool(e)
							})), this.activeChildren = n
						}, i.addChildToHeadActiveChildren = function(e, t) {
							if (0 !== e)
								for (; this.payload.leftX + e > t;) {
									var i = this.getChildFromPool();
									i.setPosition(this.payload.leftX, 0), this.activeChildren.unshift(i), this.payload.leftX -= e, this.payload.rightX < i.x + e && (this.payload.rightX = i.x + e)
								}
						}, i.addChildToTailActiveChildren = function(e, t) {
							if (0 !== e)
								for (; this.payload.rightX < t;) {
									var i = this.getChildFromPool();
									null == i || i.setPosition(this.payload.rightX, 0), this.activeChildren.push(i), this.payload.rightX += e, this.payload.leftX > i.x - e && (this.payload.leftX = i.x - e)
								}
						}, i.cropTileSprite = function() {
							var e = this,
								t = this.payload.width,
								i = -t / 2,
								n = t / 2,
								a = this.payload.maxWidthFrame;
							this.activeChildren.forEach((function(s) {
								var o = 0,
									r = (n - s.x) / e.payload.scaleTileSpriteX;
								s.x < i && (o = (i - s.x) / e.payload.scaleTileSpriteX, r = (r = (a * e.payload.scaleTileSpriteX - (i - s.x)) / e.payload.scaleTileSpriteX) > t / e.payload.scaleTileSpriteX ? t / e.payload.scaleTileSpriteX : r), s.setCrop(o, 0, r, e.payload.maxHeightFrame)
							}))
						}, i.getWidthTileSprite = function() {
							var e, t = this.payload.width;
							if (0 === t) return 0;
							var i = null == (e = this.zone) ? void 0 : e.getBounds();
							return i && (t = t > i.width ? t : i.width), t
						}, i.clearActiveChildren = function() {
							var e = this;
							0 !== this.activeChildren.length && (this.activeChildren.forEach((function(t) {
								e.addChildToPool(t)
							})), this.activeChildren = [])
						}, i.setTileWidth = function(e) {
							var t = this;
							this.payload.width !== e && (this.activeChildren.forEach((function(i) {
								i.x -= (e - t.payload.width) / 2
							})), this.payload.width = e, this.updateActiveChildren())
						}, i.updateSpeedX = function(e) {
							0 !== this.activeChildren.length && (this.activeChildren.forEach((function(t) {
								t.x += e
							})), this.updateActiveChildren())
						}, i.setTileScale = function(e, t) {
							e === this.payload.scaleTileSpriteX && (t && t === this.payload.scaleTileSpriteY || !t && e === this.payload.scaleTileSpriteY) || (this.payload.scaleTileSpriteY = t || e, this.payload.scaleTileSpriteX = e, this.clearActiveChildren(), this.updateActiveChildren())
						}, i.setTileFrame = function(e) {
							this.payload.frame !== e && (this.payload.frame = e, this.clearActiveChildren(), this.childPool.forEach((function(t) {
								t.setFrame(e)
							})), this.payload.maxWidthFrame = this.childPool[0].width, this.payload.maxHeightFrame = this.childPool[0].height, this.zone.height = this.payload.maxHeightFrame, this.updateActiveChildren())
						}, i.setTileFlipY = function(e) {
							this.payload.flipY !== e && (this.payload.flipY = e, 0 !== this.activeChildren.length && this.activeChildren.forEach((function(t) {
								t.flipY = e
							})))
						}, t
					}(Phaser.GameObjects.Container),
					qS = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS,
					QS = qS.KEY,
					$S = qS.FRAME,
					e_ = function() {
						function e(e, t) {
							this.scene = void 0, this.shotGuide = void 0, this.config = void 0, this.color = void 0, this.rainbowStraights = [], this.straights = [], this.pointsParticle = [], this.glowsPoint = [], this.bgPointEnd = void 0, this.glowsTween = void 0, this.scene = e, this.shotGuide = t, this.config = HS[wc.I.Blue], this.color = wc.I.Blue, this.createGlowsPoint(), this.createBgPointEnd(), this.init()
						}
						var t = e.prototype;
						return t.init = function() {
							0 === this.rainbowStraights.length && (this.createLineShotGuide(), this.createPointsParticle())
						}, t.createGlowsAnimation = function() {
							if (!this.glowsTween || this.glowsTween.state === Phaser.Tweens.REMOVED) {
								var e = 1 / this.scene.world.getPixelRatio();
								this.glowsTween = this.scene.tweens.add({
									targets: this.glowsPoint,
									duration: 300,
									props: {
										scale: {
											start: .2 * e,
											from: .2 * e,
											to: .6 * e
										}
									},
									yoyo: !0,
									loop: -1
								})
							}
						}, t.createBgPointEnd = function() {
							this.config && (this.bgPointEnd = this.scene.make.image({
								key: QS,
								frame: this.config.frameBgPoint,
								alpha: .7
							}), this.bgPointEnd.kill(), this.bgPointEnd.setDepth(jn.Z.BACKGROUND))
						}, t.createLineShotGuide = function() {
							if (this.config) {
								for (var e = this.shotGuide.getLimitLine(), t = this.scene.world.getPixelRatio(), i = 1 / t, n = 0; n < e; n++) {
									var a, s = new JS(this.scene, QS, $S.SHOT_GUIDE_CURVE),
										o = new JS(this.scene, QS, $S.SHOT_GUIDE_CURVE);
									o.setTileFlipY(!0);
									var r = null == (a = HS[wc.I.Rainbow]) ? void 0 : a.frameStraight,
										l = new JS(this.scene, QS, r),
										c = this.scene.make.image({
											key: QS,
											frame: this.config.frameStraight
										});
									l.setTileScale(i, i), s.setTileScale(1.5 * i, i), o.setTileScale(1.5 * i, i), this.rainbowStraights.push(l), this.straights.push(c), i > .6 / t && (i -= .2 / t)
								}
								this.setDepthLineShotGuide(jn.Z.SHOOT_GUIDE)
							}
						}, t.setDepthLineShotGuide = function(e) {
							for (var t = this.shotGuide.getLimitLine(), i = 0; i < t; i++) this.rainbowStraights[i].setDepth(e), this.straights[i].setDepth(e)
						}, t.createPointsParticle = function() {
							if (this.config)
								for (var e = this.shotGuide.getLimitLine(), t = 0; t < e; t++) {
									var i = new VS(this.scene);
									i.createPointEmitter(this.config.frameBgPoint), i.setDepth(jn.Z.EFFECT), this.pointsParticle.push(i)
								}
						}, t.createGlowsPoint = function() {
							for (var e = this.shotGuide.getLimitLine(), t = 0; t < e; t++) {
								var i = this.scene.make.image({
									key: aa.Z.GAMEPLAY.EFFECTS.KEY,
									frame: aa.Z.GAMEPLAY.EFFECTS.FRAME.GLOW_7
								});
								i.setWorldSize(1, 1), i.kill(), i.setDepth(jn.Z.EFFECT_HIGH), this.glowsPoint.push(i)
							}
						}, t.setConfigShotGuide = function(e) {
							this.config = e
						}, t.hide = function() {
							var e;
							this.bgPointEnd.kill(), null == (e = this.glowsTween) || e.remove(), this.setVisibleLineShotGuide(!1);
							for (var t = 0; t < this.rainbowStraights.length; t++) this.rainbowStraights[t].setVisible(!1), this.straights[t].setVisible(!1), this.glowsPoint[t].setVisible(!1), this.pointsParticle[t].stop()
						}, t.setVisibleLineShotGuide = function(e) {
							for (var t = 0; t < this.straights.length; t++) this.rainbowStraights[t].setVisible(e), this.straights[t].setVisible(e)
						}, t.updateConfig = function(e) {
							if (this.config = HS[e], this.config && this.color !== e) {
								this.color = e;
								for (var t = 0; t < this.rainbowStraights.length; t++) this.straights[t].setFrame(this.config.frameStraight)
							}
						}, t.updateSpeedEffectShotGuide = function(e) {
							var t = this.shotGuide.getLines(),
								i = this.shotGuide.getLimitLine();
							if (!(t.length <= 1))
								for (var n = .9 * this.scene.world.getPixelRatio() * e * 60 / 1e3, a = 0; a < i; a++) this.rainbowStraights[a].visible && this.color === wc.I.Rainbow && this.rainbowStraights[a].updateSpeedX(n)
						}, t.updateEffectShotGuide = function() {
							this.updateLines(), this.updatePointsParticle(), this.updateGlowsPoint()
						}, t.updateLines = function() {
							var e = this.shotGuide.getLines();
							this.setVisibleLineShotGuide(!1);
							for (var t = this.scene.world.getPixelRatio(), i = 1 / t, n = 0; n < e.length - 1; n++) {
								var a = e[n],
									s = e[n + 1];
								if (n < this.rainbowStraights.length) {
									var o = Phaser.Math.Distance.Between(a.x, a.y, s.x, s.y),
										r = Math.atan2(s.y - a.y, s.x - a.x),
										l = (a.x + s.x) / 2,
										c = (a.y + s.y) / 2;
									this.color === wc.I.Rainbow ? (this.rainbowStraights[n].setPosition(l + .5, c), this.rainbowStraights[n].setTileWidth(o), this.rainbowStraights[n].setRotation(r), this.rainbowStraights[n].setVisible(!0)) : (this.straights[n].setPosition(l + .5, c), this.straights[n].setWorldSize(o, 18.5 * i * t), this.straights[n].setRotation(r), this.straights[n].setVisible(!0)), i > .6 / t && (i -= .2 / t)
								}
							}
						}, t.updatePointsParticle = function() {
							if (this.config) {
								var e = this.shotGuide.getLines(),
									t = this.shotGuide.getLimitLine(),
									i = .6;
								if (!(e.length <= 1)) {
									var n;
									if (e.length < 3) null == (n = this.glowsTween) || n.remove();
									else this.createGlowsAnimation();
									for (var a = 0; a < this.pointsParticle.length; a++)
										if (a < e.length - 1) {
											var s, o = e[a + 1];
											if (this.pointsParticle[a].setPosition(o.x, o.y), a === t - 1 || a >= e.length - 2) null == (s = this.pointsParticle[a]) || s.stop();
											else this.pointsParticle[a].setScale(i + .2), this.pointsParticle[a].setPosition(o.x, o.y), this.pointsParticle[a].start(this.config.frameBgPoint);
											i > .3 && (i -= .1)
										} else {
											var r;
											null == (r = this.pointsParticle[a]) || r.stop()
										}
								}
							}
						}, t.updateGlowsPoint = function() {
							for (var e = this.shotGuide.getLines(), t = this.shotGuide.getLimitLine(), i = 0; i < this.glowsPoint.length; i++)
								if (i < e.length - 1) {
									var n = e[i + 1];
									this.glowsPoint[i].setPosition(n.x, n.y), i >= e.length - 2 || i === t - 1 ? this.glowsPoint[i].kill() : this.glowsPoint[i].revive()
								} else this.glowsPoint[i].kill()
						}, t.updateBgPointEnd = function(e, t) {
							this.config && (this.bgPointEnd.setPosition(e.x, e.y), this.bgPointEnd.setScale(t), this.bgPointEnd.revive(), this.bgPointEnd.setFrame(this.config.frameBgPoint), this.bgPointEnd.setWorldSize(27 * .55, 27.5 * .55))
						}, e
					}();

				function t_(e, t) {
					var i = "undefined" !== typeof uo() && mo()(e) || e["@@iterator"];
					if (i) return (i = i.call(e)).next.bind(i);
					if (Array.isArray(e) || (i = function(e, t) {
							var i;
							if (!e) return;
							if ("string" === typeof e) return i_(e, t);
							var n = tt()(i = Object.prototype.toString.call(e)).call(i, 8, -1);
							"Object" === n && e.constructor && (n = e.constructor.name);
							if ("Map" === n || "Set" === n) return co()(e);
							if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return i_(e, t)
						}(e)) || t && e && "number" === typeof e.length) {
						i && (e = i);
						var n = 0;
						return function() {
							return n >= e.length ? {
								done: !0
							} : {
								done: !1,
								value: e[n++]
							}
						}
					}
					throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
				}

				function i_(e, t) {
					(null == t || t > e.length) && (t = e.length);
					for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
					return n
				}
				var n_ = function() {
						function e(e, t, i) {
							void 0 === i && (i = 100), this.scene = void 0, this.x = void 0, this.y = void 0, this.angle = void 0, this.reflectAngle = void 0, this.line = void 0, this.boundLine = void 0, this.obstacleCircle = void 0, this.tileSize = void 0, this.debugGraphic = void 0, this.boundLeft = void 0, this.boundRight = void 0, this.boundTop = void 0, this.lineTopGridY = void 0, this.obstacles = [], this.result = !1, this.minD = void 0, this.scene = e, this.tileSize = t;
							this.tileSize, Math.cos(Math.PI / 6);
							this.line = new Phaser.Geom.Line(0, 0, 0, 0), this.boundLine = new Phaser.Geom.Line(0, 0, 0, 0), this.obstacleCircle = new Phaser.Geom.Circle(0, 0, 0)
						}
						var t = e.prototype;
						return t.setBoundLeft = function(e) {
							this.boundLeft = e
						}, t.setBoundRight = function(e) {
							this.boundRight = e
						}, t.setBoundTop = function(e) {
							this.boundTop = e
						}, t.setLineTopGridY = function(e) {
							this.lineTopGridY = e
						}, t.addObstacle = function(e, t) {
							return this.obstacles.push({
								gameObject: e,
								geom: t
							}), this
						}, t.removeObstacle = function(e) {
							return this
						}, t.clearObstacle = function() {
							return this.obstacles = [], this
						}, t.updateObstacle = function(e) {
							return this
						}, t.rayToward = function(e, t, i) {
							return this.x = e, this.y = t, this.angle = Phaser.Math.Angle.Normalize(i), this.reflectAngle = Math.PI - this.angle, this.line.setTo(e, t, e + 1e3 * Math.cos(i), t + 1e3 * Math.sin(i)), this.result = !1, this.minD = Phaser.Math.MAX_SAFE_INTEGER, this.processBoundHorizontal(), this.processBoundTop(), this.processObstacles(), this.result
						}, t.processBoundHorizontal = function() {
							this.boundLine.setTo(this.boundRight, -500, this.boundRight, 1e3);
							var e = Phaser.Geom.Intersects.GetLineToLine(this.line, this.boundLine);
							if (e) {
								var t = Phaser.Math.Distance.Between(this.x, this.y, e.x, e.y);
								t < this.minD && (this.minD = t, this.result = {
									x: e.x,
									y: e.y,
									reflectAngle: this.reflectAngle,
									isBound: !0,
									isOutTop: !1,
									isReachTop: !1
								})
							}
							if (this.boundLine.setTo(this.boundLeft, -500, this.boundLeft, 1e3), e = Phaser.Geom.Intersects.GetLineToLine(this.line, this.boundLine)) {
								var i = Phaser.Math.Distance.Between(this.x, this.y, e.x, e.y);
								i < this.minD && (this.minD = i, this.result = {
									x: e.x,
									y: e.y,
									reflectAngle: this.reflectAngle,
									isBound: !0,
									isOutTop: !1,
									isReachTop: !1
								})
							}
						}, t.processBoundTop = function() {
							this.boundLine.setTo(-500, this.boundTop, 1e3, this.boundTop);
							var e = Phaser.Geom.Intersects.GetLineToLine(this.boundLine, this.line);
							if (e) {
								var t = Phaser.Math.Distance.Between(this.x, this.y, e.x, e.y);
								t < this.minD && (this.minD = t, this.result = {
									x: e.x + 3 * this.tileSize * Math.cos(this.angle),
									y: e.y + 3 * this.tileSize * Math.sin(this.angle),
									reflectAngle: this.reflectAngle,
									isBound: !1,
									isOutTop: !0,
									isReachTop: !1
								})
							}
							if (this.boundLine.setTo(-500, this.lineTopGridY, 1e3, this.lineTopGridY), e = Phaser.Geom.Intersects.GetLineToLine(this.line, this.boundLine)) {
								var i = Phaser.Math.Distance.Between(this.x, this.y, e.x, e.y);
								i < this.minD && (this.minD = i, this.result = {
									x: e.x,
									y: e.y,
									reflectAngle: this.reflectAngle,
									isBound: !1,
									isOutTop: !1,
									isReachTop: !0
								})
							}
						}, t.processObstacles = function() {
							for (var e, t = t_(this.obstacles); !(e = t()).done;)
								for (var i = e.value, n = i.gameObject, a = i.geom.points, s = 0; s < a.length; s++) {
									var o = a[s],
										r = a[(s + 1) % a.length];
									this.boundLine.setTo(o.x, o.y, r.x, r.y);
									var l = Phaser.Geom.Intersects.GetLineToLine(this.line, this.boundLine);
									if (l) {
										var c = Phaser.Math.Distance.Between(this.x, this.y, l.x, l.y);
										c < this.minD && (this.minD = c, this.result = {
											gameObject: n,
											x: l.x,
											y: l.y,
											reflectAngle: this.reflectAngle,
											isBound: !1,
											isOutTop: !1,
											isReachTop: !1
										})
									}
								}
						}, t.drawDebugObstacles = function() {
							this.debugGraphic || (this.debugGraphic = this.scene.add.graphics()), this.debugGraphic.setDepth(1e7), this.debugGraphic.clear(), this.debugGraphic.lineStyle(1, 16711680, .8);
							for (var e, t = t_(this.obstacles); !(e = t()).done;)
								for (var i = e.value, n = (i.gameObject, i.geom.points), a = 0; a < n.length; a++) {
									var s = n[a],
										o = n[(a + 1) % n.length];
									this.debugGraphic.lineBetween(s.x, s.y, o.x, o.y)
								}
						}, e
					}(),
					a_ = n_,
					s_ = function() {
						function e(e) {
							this.scene = void 0, this.ballGrid = void 0, this.limitLine = 3, this.raycaster = void 0, this.lines = [], this.positionCollide = void 0, this.objectCollide = void 0, this.effectShotGuide = void 0, this.zone = void 0, this.obstaclePolygon = void 0, this.scene = e, this.createRaycasterObject(), this.createZone(), this.createEffectShotGuide()
						}
						var t = e.prototype;
						return t.createEffectShotGuide = function() {
							this.effectShotGuide = new e_(this.scene, this)
						}, t.createZone = function() {
							var e = this.scene.data.get("physicsWorld").bulletCollisionRadius / this.scene.world.getPixelRatio(),
								t = this.scene.getCorrectGameSize(),
								i = t.width,
								n = t.height;
							this.zone = this.scene.add.zone(0, 0, i - 2 * e, n + 2 * e), this.zone.setOrigin(.5, .5), Phaser.Display.Align.In.Center(this.zone, this.scene.gameZone)
						}, t.createRaycasterObject = function() {
							this.raycaster = new a_(this.scene, 17)
						}, t.showFrom = function(e, t, i, n) {
							if (void 0 === n && (n = wc.I.Red), this.updateRaycaster(e, t, i), this.effectShotGuide.updateConfig(n), this.effectShotGuide.init(), this.effectShotGuide.updateEffectShotGuide(), this.lines.length > 1) {
								var a = this.lines[this.lines.length - 1],
									s = 1.2 / this.scene.world.getPixelRatio() - .05 * (this.lines.length - 1);
								this.lines.length > this.limitLine && (a = this.lines[this.limitLine], s = 1.2 / this.scene.world.getPixelRatio() - .15), this.effectShotGuide.updateBgPointEnd(a, s)
							}
						}, t.hide = function() {
							this.effectShotGuide.hide()
						}, t.getPositionEmptyBallNearest = function() {
							if (this.positionCollide) return this.objectCollide ? this.ballGrid.findNearestEmptyPositionByXY({
								x: this.positionCollide.x,
								y: this.positionCollide.y
							}, this.objectCollide) : this.ballGrid.findNearestEmptyPositionOnFirstRow({
								x: this.positionCollide.x,
								y: this.positionCollide.y
							})
						}, t.getBallCollideGuide = function() {
							return this.objectCollide
						}, t.checkOverlap = function(e, t) {
							return !!(t && Phaser.Math.Distance.BetweenPointsSquared(e, t) <= 676)
						}, t.getLimitLine = function() {
							return this.limitLine
						}, t.setBallGrid = function(e) {
							this.ballGrid = e
						}, t.destroy = function() {
							this.hide()
						}, t.reset = function() {
							this.hide(), this.lines = []
						}, t.isCollideGridObjectPool = function() {
							return !!this.objectCollide
						}, t.getXYCollideGrid = function() {
							return this.positionCollide
						}, t.getLines = function() {
							return this.lines
						}, t.updateRaycaster = function(e, t, i) {
							var n = e,
								a = t,
								s = n,
								o = a,
								r = i.angle(),
								l = this.scene.bulletItemManager.getNameItemActive(),
								c = this.raycaster.rayToward(n, a, r);
							if (this.lines = [{
									x: s,
									y: o
								}], this.positionCollide = void 0, this.objectCollide = void 0, !1 !== c)
								for (; c;) {
									if (c.isOutTop) return void this.lines.push({
										x: c.x,
										y: c.y
									});
									if (n = c.x, a = c.y, r = c.reflectAngle, !c.isBound && !c.isOutTop) {
										s = c.x, o = c.y, this.lines.push({
											x: s,
											y: o
										}), this.positionCollide = {
											x: s,
											y: o
										}, c.gameObject instanceof oE && (this.objectCollide = c.gameObject);
										break
									}
									if (s = c.x, o = c.y, this.lines.push({
											x: s,
											y: o
										}), l === Fm) return;
									var h = 2 * Math.cos(c.reflectAngle),
										u = -2 * Math.sin(c.reflectAngle);
									c = this.raycaster.rayToward(n + h, a + u, r)
								}
						}, t.updateObstaclesToRaycaster = function() {
							var e = this;
							this.raycaster.clearObstacle(), this.obstaclePolygon = [], this.raycaster.setBoundLeft(this.zone.x - this.zone.width / 2), this.raycaster.setBoundRight(this.zone.x + this.zone.width / 2), this.raycaster.setLineTopGridY(this.scene.gameManager.grid.topY);
							var t = this.scene.header.lineLimitTop.getWorldPosition().y;
							this.raycaster.setBoundTop(t);
							var i = this.scene.gameManager.grid.getObstacleObjects();
							i && i.forEach((function(t) {
								if (!t.isKilled && t.getGeom) {
									var i = t.getGeom();
									e.raycaster.addObstacle(t, i), e.obstaclePolygon.push(i)
								}
							}))
						}, t.updateSpeedEffectShotGuide = function(e) {
							this.effectShotGuide.updateSpeedEffectShotGuide(e)
						}, e
					}(),
					o_ = s_,
					r_ = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i) || this).timerDelayKill = void 0, a.maxLifeSpan = void 0, a.pool = void 0, a.key = void 0, a.maxLifeSpan = 1e3, a.key = n, a.scene.add.existing((0, Un.Z)(a)), a
						}
						return (0, l.Z)(t, e), t.prototype.reviveIn = function(e) {
							var t, i = this;
							this.pool && (this.maxLifeSpan = e, this.revive(), null == (t = this.timerDelayKill) || t.remove(), this.timerDelayKill = this.scene.time.delayedCall(this.maxLifeSpan, (function() {
								i.kill(), i.pool.despawn(i)
							})))
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager),
					l_ = r_,
					c_ = aa.Z.GAMEPLAY.GAME_OBJECTS,
					h_ = c_.KEY,
					u_ = c_.FRAME,
					d_ = {
						"electric-a": Math.PI / 180 * 160,
						"electric-b": Math.PI / 180 * -45,
						"electric-c": Math.PI / 180 * 120,
						"electric-d": Math.PI / 180 * -15,
						"electric-e": Math.PI / 180 * 0,
						"bat-flying": 0
					},
					p_ = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, h_, "ElectricIdleParticle") || this).emitter = void 0, i.emitZone = void 0, i.electricAnimation = void 0, i.createEmitZone(), i.setDepth(jn.Z.ON_TOP), i.createExplodeAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							var e = new Phaser.Geom.Circle(0, 0, 18);
							this.emitZone = {
								getRandomPoint: function(t) {
									var i = Phaser.Math.PI2 * Math.random(),
										n = 4 * Math.random();
									return t.x = e.x + (n + e.radius) * Math.cos(i), t.y = e.y + (n + e.radius) * Math.sin(i), t
								}
							}
						}, i.createExplodeAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: u_.BLANK,
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									quantity: 1,
									frequency: 175,
									lifespan: 600,
									scale: e,
									particleClass: m_
								};
							this.emitter = this.createEmitter(t)
						}, i.explode = function(e, t) {
							this.emitter.setPosition(e, t), this.emitter.start()
						}, t
					}(l_),
					m_ = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.angle2 = void 0, i.lastChange = void 0, i.frameIndex = void 0, i.electricAnimation = void 0, i.animations = ["electric-a", "electric-b", "electric-c", "electric-d", "electric-e"], i.maxFrameIndex = void 0, i.flipX = !1, i.flipY = !1, i.scene = t.manager.scene, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue), this.lastChange = 0, this.frameIndex = -1;
							var o = this.animations[Phaser.Math.RND.between(0, this.animations.length - 1)];
							this.electricAnimation = this.scene.anims.get(o);
							var r = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								l = Math.atan2(this.y - i, this.x - t);
							this.velocityX = r * Math.cos(l), this.velocityY = r * Math.sin(l);
							var c = d_[o];
							this.frame = this.electricAnimation.frames[0].frame, this.maxFrameIndex = this.electricAnimation.frames.length - 1, this.flipX = Math.random() > .5, this.flipY = Math.random() > .5, this.flipX && (c = Math.PI - c, this.scaleX *= -1), this.flipY && (c *= -1, this.scaleY *= -1), this.rotation = l + c, this.angle2 = l + c
						}, i.update = function(t, i, n) {
							this.flipX && (this.scaleX *= -1), this.flipY && (this.scaleY *= -1);
							var a = e.prototype.update.call(this, t, i, n);
							if (this.rotation = this.angle2, this.lastChange += t, this.lastChange >= this.electricAnimation.msPerFrame) {
								if (this.lastChange -= this.electricAnimation.msPerFrame, this.frameIndex++, this.frameIndex > this.maxFrameIndex) return this.scaleX = 0, this.scaleY = 0, a;
								this.frame = this.electricAnimation.frames[this.frameIndex].frame
							}
							return this.flipX && (this.scaleX *= -1), this.flipY && (this.scaleY *= -1), a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					f_ = p_,
					g_ = aa.Z.GAMEPLAY.EFFECTS,
					v_ = g_.KEY,
					y_ = g_.FRAME,
					b_ = function(e) {
						function t(t) {
							return e.call(this, t, "ElectricShotBehavior") || this
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.explode = function() {
							var e = (0, r.Z)(h().mark((function e(t, i) {
								var n, a, s, o, r, l, c, u, d, p, m, f, g, v = this;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return a = this.gameObject.scene, s = this.gameObject.gameManager, o = s.grid, r = o.jiggleNeighborsBall(this.gameObject), l = o.getRow(t), c = 1 / a.world.getPixelRatio(), u = a.gameZone.width, d = _()(l).call(l, (function(e) {
												return e.onActiveExplode(v.gameObject)
											})), m = (p = 1.5 * u) / 118.5 * 16.75, (f = s.spritePool.spawn()).setTexture(v_, y_.FX_ELECTRIC).setPosition(u / 2, i).setDepth(jn.Z.EFFECT_HIGH).setAlpha(1).setWorldSize(p, m), (g = s.spritePool.spawn()).setTexture(v_, y_.GLOW_3).setScale(3.5 * c, 2.3 * c).setDepth(jn.Z.EFFECT_HIGH + 1).setAlpha(1).setPosition(u / 2, i), this.gameObject.scene.tweens.add({
												targets: [f],
												alpha: {
													from: 1,
													to: .6,
													ease: Phaser.Math.Easing.Sine.In
												},
												displayHeight: {
													from: m,
													to: 0,
													ease: Phaser.Math.Easing.Sine.In
												},
												duration: 300,
												onComplete: function() {
													f.kill()
												}
											}), this.gameObject.scene.tweens.add({
												targets: [g],
												alpha: {
													from: 1,
													to: .4
												},
												scaleX: {
													from: 3.5 * c,
													to: c
												},
												scaleY: {
													from: 2.3 * c,
													to: c
												},
												ease: Phaser.Math.Easing.Sine.In,
												duration: 300,
												onComplete: function() {
													g.kill()
												}
											}), a.vibrateController.handleUseItem(), this.gameObject.scene.audio.playSound(sa.Z.ELECTRIC_EXPLODE), e.next = 20, oe().all(y()(n = []).call(n, d));
										case 20:
											return e.next = 22, oe().all([o.processOrphaned(), r]);
										case 22:
											return e.next = 24, s.endTurn();
										case 24:
											return e.next = 26, s.startTurn();
										case 26:
											a.bulletItemManager.deActiveItem();
										case 27:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t, i) {
								return e.apply(this, arguments)
							}
						}(), i.onCollideWithGrid = function(e, t, i) {
							if (i) this.explode(i.row, i.y);
							else {
								var n = this.gameObject.gameManager.grid.getXYByRowCol(e, !0);
								this.explode(e.row, n.y)
							}
						}, i.onOutsideTopGrid = function() {
							e.prototype.onOutsideTopGrid.call(this), this.gameObject.scene.bulletItemManager.deActiveItem()
						}, t
					}(Tb),
					E_ = b_,
					T_ = aa.Z.GAMEPLAY,
					A_ = T_.GAME_OBJECTS,
					S_ = T_.EFFECTS,
					__ = A_.KEY,
					C_ = A_.FRAME,
					w_ = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, __, C_.ELECTRIC_BALL) || this).objectType = "ElectricBulletBall", a.electricShotBehavior = void 0, a.electricGlow = void 0, a.electricRing = void 0, a.electricRingTween1 = void 0, a.electricRingTween2 = void 0, a.electricRingTween3 = void 0, a.electricParticles = void 0, a.setName("ElectricBulletBall"), a.color = wc.I.Electric, a.createElectricGlow(), a.createElectricRing(), a.createElectricParticles(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							var t, i, n, a, s, o, r, l;
							return e.prototype.initDefault.call(this), this.startAnimationIdle(), null == (t = this.electricGlow) || t.setPosition(this.x, this.y), null == (i = this.electricGlow) || i.revive(), null == (n = this.electricGlow) || n.setDisplaySize(68, 68), null == (a = this.electricRing) || a.setPosition(this.x, this.y), null == (s = this.electricRing) || s.revive(), null == (o = this.electricRing) || o.setDisplaySize(38, 38), null == (r = this.electricParticles) || r.setPosition(this.x, this.y), null == (l = this.electricParticles) || l.revive(), this
						}, i.createBehavior = function() {
							e.prototype.createBehavior.call(this), this.electricShotBehavior = new E_(this), this.behaviors.push(new UE(this)), this.behaviors.push(this.electricShotBehavior)
						}, i.startAnimationIdle = function() {
							this.stopAnimationIdle(), this.electricRingTween1 = this.scene.tweens.add({
								targets: this.electricGlow,
								duration: 100,
								yoyo: !0,
								repeat: -1,
								alpha: {
									from: 1,
									to: .8,
									ease: Phaser.Math.Easing.Quadratic.In
								}
							}), this.electricRingTween2 = this.scene.tweens.add({
								targets: this.electricRing,
								duration: 300,
								yoyo: !0,
								repeat: -1,
								alpha: {
									from: .5,
									to: 0,
									ease: Phaser.Math.Easing.Quadratic.In
								}
							});
							var e = 1 / this.scene.world.getPixelRatio();
							this.electricRingTween3 = this.scene.tweens.add({
								targets: this.electricGlow,
								duration: 300,
								yoyo: !0,
								repeat: -1,
								scale: {
									from: 1.5 * e,
									to: 1 * e
								},
								ease: Phaser.Math.Easing.Cubic.In
							})
						}, i.stopAnimationIdle = function() {
							var e, t, i;
							null == (e = this.electricRingTween1) || e.stop(), null == (t = this.electricRingTween2) || t.stop(), null == (i = this.electricRingTween3) || i.stop(), this.electricGlow.kill(), this.electricRing.kill(), this.electricParticles.kill()
						}, i.createElectricGlow = function() {
							this.electricGlow = this.scene.make.image({
								key: S_.KEY,
								frame: S_.FRAME.GLOW_4
							}), this.electricGlow.setDepth(jn.Z.BALL), this.electricGlow.setAlpha(1), this.electricGlow.setTint(1796271)
						}, i.createElectricRing = function() {
							this.electricRing = this.scene.make.image({
								key: aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.KEY,
								frame: aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.FRAME.THUNDER_BALL_GLOW
							}), this.electricRing.setDepth(jn.Z.BALL), this.electricRing.setAlpha(.5)
						}, i.createElectricParticles = function() {
							this.electricParticles = new f_(this.scene), this.electricParticles.explode(0, 0), this.electricParticles.setDepth(jn.Z.EFFECT)
						}, t
					}(Ob),
					B_ = w_,
					I_ = function(e) {
						function t(t) {
							var i, n = t.scene;
							(i = e.call(this, n, {}) || this).gameManager = void 0, i.scene = void 0, i.physicsRadius = void 0, i.tailParticles = void 0, i.glow = void 0, i.ballSize = void 0, i.worldBounds = function(e) {}, i.scene = n, i.setActive(!0), i.scene.add.existing((0, Un.Z)(i)), i.physicsRadius = i.scene.data.get("physicsWorld").bulletCollisionRadius;
							var a = i.scene.data.get("ball"),
								s = a.width,
								o = a.height;
							return i.ballSize = new Phaser.Structs.Size(s, o), i.tailParticles = n.tailParticles, i.scene.events.off("postupdate", i.postUpdate, (0, Un.Z)(i)), i.scene.events.on("postupdate", i.postUpdate, (0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.postUpdate = function() {
							this.getMatching("active", !0).forEach((function(e) {
								return e.postUpdate()
							}))
						}, i.createBulletBall = function(e) {
							var t, i = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS,
								n = i.KEY,
								a = i.FRAME;
							switch (e) {
								case "BombBullet":
									t = new vT(this.scene, 0, 0);
									break;
								case "RainbowBulletBall":
									t = new DT(this.scene, 0, 0);
									break;
								case "ElectricBulletBall":
									t = new B_(this.scene, 0, 0);
									break;
								case "RocketBullet":
									t = new zb(this.scene, 0, 0);
									var s = [this.tailParticles.createTailEmitterSmoke(), this.tailParticles.createTailEmitterSpark()];
									t.setTailEmitters(s);
									break;
								default:
									t = new XE(this.scene, 0, 0, n, a.BALL_RED)
							}
							this.add(t);
							var o = this.ballSize,
								r = o.width,
								l = o.height;
							return t.setWorldSize(r, l), t.setDepth(jn.Z.BULLET), t
						}, i.spawn = function(e, t, i) {
							var n = this.getMatching("objectType", i),
								a = ye()(n).call(n, (function(e) {
									return !e.active
								}));
							a || (a = this.createBulletBall(i)), a.setPosition(e, t), a.initDefault(), a.revive();
							var s = this.ballSize,
								o = s.width,
								r = s.height;
							return a.setWorldSize(o, r), a
						}, i.reset = function() {
							this.getChildren().forEach((function(e) {
								e.active && e.kill()
							}))
						}, i.getChildren = function() {
							return e.prototype.getChildren.call(this)
						}, t
					}(Phaser.GameObjects.Group),
					P_ = I_,
					x_ = aa.Z.GAMEPLAY.EFFECTS,
					O_ = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, "BombDrugBehavior") || this).scene.gameManager.particlePool.init("BombDrugExplosionParticles", 1, 10), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.explode = function() {
							var e = this;
							this.gameObject.preKill();
							var t = 1 / this.scene.world.getPixelRatio(),
								i = this.gameObject,
								n = i.x,
								a = i.y,
								s = this.gameObject.scene.gameManager;
							s.scoreManager.addScore({
								x: n,
								y: a
							}, "explode");
							var o = s.spritePool.spawn();
							o.setTexture(x_.KEY, x_.FRAME.BOMB_DRUG_EXPLOSION).setScale(t).setDepth(jn.Z.EFFECT_HIGH).setPosition(n, a).setTint(12864885), this.gameObject.scene.tweens.add({
								targets: o,
								duration: 600,
								props: {
									scale: {
										from: t,
										to: 1.8 * t
									},
									alpha: {
										from: 1,
										to: 0
									}
								},
								onComplete: function() {
									o.kill()
								}
							}), s.particlePool.spawn("BombDrugExplosionParticles").explode(n, a);
							var r = this.gameObject.gameManager.grid,
								l = r.getNeighbors(this.gameObject.row, this.gameObject.col);
							return r.removeFromGrid([this.gameObject]), this.scene.audio.playSound(sa.Z.BOMB_EXPLODE, {}, !0, 60), new(oe())((function(t) {
								e.scene.time.addEvent({
									delay: 73,
									callback: function() {
										var i = _()(l).call(l, (function(t) {
											return t.onActiveExplode(e.gameObject)
										}));
										oe().all(i).then(t)
									}
								})
							}))
						}, i.onActiveExplode = function() {
							return this.explode()
						}, i.onCollideWithBullet = function(e) {
							return this.gameObject.onActiveExplode()
						}, t
					}(Vb),
					k_ = O_,
					R_ = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS,
					M_ = R_.KEY,
					L_ = R_.FRAME,
					G_ = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, M_, L_.BOMB_DRUG) || this).bombExplodeBehavior = void 0, a.objectType = "BombDrug", a.scene.add.existing((0, Un.Z)(a)), a
						}
						return (0, l.Z)(t, e), t.prototype.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.bombExplodeBehavior = new k_(this), this.addBehavior(this.bombExplodeBehavior)
						}, t
					}(oE),
					D_ = G_,
					F_ = aa.Z.GAMEPLAY.EFFECTS,
					N_ = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS,
					Z_ = N_.KEY,
					U_ = N_.FRAME,
					j_ = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, 0, 0) || this).stateThunder = "idle", n.thunderBall = void 0, n.thunderObject = void 0, n.thunderGlow = void 0, n.thunderGlowIdle = void 0, n.thunderGlowCircleIdle = void 0, n.thunderGlowIdleTween = void 0, n.thunderBall = i, n.createThunderGlow(), n.createThunderObject(), n.createThunderGlowIdle(), n.createThunderGlowIdleTween(), n.scene.add.existing((0, Un.Z)(n)), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createThunderObject = function() {
							this.thunderObject = this.scene.make.image({
								key: Z_,
								frame: U_.THUNDER2_RED
							}), this.thunderObject.setWorldSize(20.5, 28), this.add(this.thunderObject)
						}, i.initDefault = function() {
							return this.setStateThunder("idle"), this.thunderObject.setTint(16777215), this.thunderObject.setWorldSize(20.5, 28), this.thunderGlowIdle.revive(), this.thunderGlowIdle.setAlpha(0), this.thunderGlowCircleIdle.revive(), this.thunderGlowCircleIdle.setAlpha(0), this.createThunderGlowIdleTween(), this.thunderGlow.kill(), this.thunderGlow.setAlpha(0), this
						}, i.setColor = function(e) {
							switch (e) {
								case wc.I.Red:
									this.thunderObject.setFrame(U_.THUNDER2_RED);
									break;
								case wc.I.Green:
									this.thunderObject.setFrame(U_.THUNDER2_GREEN);
									break;
								case wc.I.Blue:
									this.thunderObject.setFrame(U_.THUNDER2_BLUE);
									break;
								case wc.I.Yellow:
								case wc.I.Gray:
								case wc.I.Black:
									this.thunderObject.setFrame(U_.THUNDER2_YELLOW);
									break;
								case wc.I.Pink:
									this.thunderObject.setFrame(U_.THUNDER2_PINK);
									break;
								case wc.I.Violet:
									this.thunderObject.setFrame(U_.THUNDER2_PURPLE);
									break;
								case wc.I.Cyan:
									this.thunderObject.setFrame(U_.THUNDER2_SKY_BLUE);
									break;
								case wc.I.Orange:
									this.thunderObject.setFrame(U_.THUNDER2_ORANGE)
							}
							this.thunderObject.setDisplaySize(20.5, 28)
						}, i.flyTo = function(e) {
							var t = this;
							return this.setStateThunder("flying"), new(oe())((function(i) {
								t.setScale(1);
								var n = e.y,
									a = e.x,
									s = t.thunderBall.scene.gameManager.grid.descentController.getDy(),
									o = 300,
									r = 70 * Math.abs(Math.floor(s / 29)) + 300,
									l = r - o + 50 < 500 ? 500 : r - o + 50;
								t.thunderObject.setFrame(U_.THUNDER_GLOW), t.thunderObject.setTint(16645037);
								var c = 1 / t.scene.world.getPixelRatio();
								t.scene.tweens.add({
									targets: t.thunderObject,
									scale: 1.5 * c,
									duration: o
								}), t.scene.tweens.add({
									targets: t.thunderGlow,
									alpha: 1,
									duration: o
								}), t.thunderGlow.revive(), t.thunderGlowIdle.kill(), t.thunderGlowCircleIdle.kill(), t.thunderGlowIdleTween.remove(), t.revive(), t.scene.tweens.add({
									targets: t,
									y: {
										value: n,
										duration: l,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									x: {
										value: a,
										duration: l,
										ease: Phaser.Math.Easing.Linear
									},
									offset: 0,
									duration: l,
									delay: 250,
									onComplete: function() {
										t.preKill(), i()
									}
								})
							}))
						}, i.setStateThunder = function(e) {
							this.stateThunder = e
						}, i.getStateThunder = function() {
							return this.stateThunder
						}, i.preKill = function() {
							this.scene.tweens.add({
								targets: this,
								duration: 200,
								alpha: {
									from: 1,
									to: .3
								},
								onComplete: this.kill,
								onCompleteScope: this
							})
						}, i.createThunderGlow = function() {
							this.thunderGlow = this.scene.make.image({
								key: F_.KEY,
								frame: F_.FRAME.GLOW_4
							}), this.thunderGlow.setTint(14719252), this.thunderGlow.setWorldSize(80, 80), this.add(this.thunderGlow)
						}, i.createThunderGlowIdle = function() {
							this.thunderGlowIdle = this.scene.make.image({
								key: Z_,
								frame: U_.THUNDER_GLOW
							}), this.thunderGlowIdle.setDisplaySize(20.5, 27.5), this.thunderGlowCircleIdle = this.scene.make.image({
								key: Z_,
								frame: U_.THUNDER_BALL_GLOW
							}), this.thunderGlowCircleIdle.setDisplaySize(45, 45), this.add([this.thunderGlowIdle, this.thunderGlowCircleIdle])
						}, i.createThunderGlowIdleTween = function() {
							var e;
							null == (e = this.thunderGlowIdleTween) || e.remove(), this.thunderGlowIdleTween = this.scene.tweens.add({
								targets: [this.thunderGlowIdle, this.thunderGlowCircleIdle],
								duration: 600,
								alpha: {
									from: 0,
									to: .6
								},
								repeat: -1,
								yoyo: !0
							})
						}, i.kill = function() {
							var t;
							e.prototype.kill.call(this), null == (t = this.thunderGlowIdleTween) || t.remove()
						}, i.revive = function() {
							e.prototype.revive.call(this), this.createThunderGlowIdleTween()
						}, t
					}(Phaser.GameObjects.Container),
					Y_ = j_,
					W_ = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, "ThunderBehavior") || this).isExploded = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return e.prototype.initDefault.call(this), this.isExploded = !1, this
						}, i.flyThunder = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, i, n, a, s;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (i = this.gameObject.gameManager.grid, 0 !== (n = A()(t = i.getVisibleColorBalls()).call(t, (function(e) {
													return !e.isObjectLossLink()
												}))).length) {
												e.next = 5;
												break
											}
											return this.gameObject.thunder.preKill(), e.abrupt("return");
										case 5:
											return a = n[Phaser.Math.RND.between(0, n.length - 1)], s = i.getXYByRowCol(a, !0), e.next = 9, this.gameObject.thunder.flyTo(s);
										case 9:
											return e.abrupt("return", i.processMatch(a, 1));
										case 10:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.onActiveExplode = function() {
							this.isExploded = !0;
							var e = this.gameObject,
								t = e.x,
								i = e.y;
							return this.gameObject.scene.audio.playSound(sa.Z.THUNDER_BALL_EXPLODE), this.gameObject.scene.gameManager.scoreManager.addScore({
								x: t,
								y: i
							}, "explode"), oe().resolve()
						}, i.onEndTurn = function() {
							return this.isExploded && "flying" != this.gameObject.thunder.getStateThunder() ? (this.gameObject.grid.setLoopEndTurn(), this.flyThunder()) : oe().resolve()
						}, t
					}(Vb),
					K_ = W_,
					H_ = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n) || this).thunder = void 0, a.objectType = "ThunderBall", a.thunder = new Y_(t, (0, Un.Z)(a)), a.scene.add.existing((0, Un.Z)(a)), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							var t, i, n;
							return e.prototype.initDefault.call(this), null == (t = this.thunder) || t.initDefault(), null == (i = this.thunder) || i.revive(), null == (n = this.thunder) || n.setAlpha(1), this
						}, i.setColor = function(t) {
							e.prototype.setColor.call(this, t), this.thunder.setColor(t)
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.addBehavior(new K_(this))
						}, i.postUpdate = function() {
							if (e.prototype.postUpdate.call(this), this.visible) {
								var t, i, n, a = this.scene.world.getPixelRatio();
								null == (t = this.thunder) || t.setPosition(this.x, this.y), null == (i = this.thunder) || i.setScale(a * this.scale * (29 / 34)), null == (n = this.thunder) || n.setAlpha(this.alpha)
							}
						}, i.clearObject = function() {
							this.thunder.kill()
						}, i.runFadeoutAfterDrop = function() {
							var e, t = this,
								i = new(oe())((function(e) {
									t.scene.tweens.add({
										targets: [t],
										duration: 200,
										alpha: {
											from: 1,
											to: .3
										},
										onComplete: function() {
											t.kill(), t.thunder.kill(), e()
										},
										onCompleteScope: t
									})
								})),
								n = _()(e = this.subObjects).call(e, (function(e) {
									return e.runFadeoutAfterDrop()
								}));
							return oe().all([i, n])
						}, i.revive = function() {
							var t;
							e.prototype.revive.call(this), null == (t = this.thunder) || t.revive()
						}, i.updateDepthObjects = function(t) {
							var i;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.thunder) || i.setDepth(t + jn.X.THUNDER)
						}, t
					}(HT),
					z_ = H_,
					X_ = aa.Z.GAMEPLAY.EFFECTS,
					V_ = X_.KEY,
					J_ = X_.FRAME,
					q_ = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, "CopyColorBehavior") || this).setColor = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.copyColor = function(e) {
							var t = this;
							if (!(e instanceof HT && e.getColor)) return oe().resolve();
							var i = e instanceof jA ? e.getMatchedColor() : e.getColor();
							if (i === wc.I.White) return oe().resolve();
							if (this.gameObject.getColor() !== wc.I.White) return oe().resolve();
							this.gameObject.color = i;
							var n = this.gameObject.gameManager.spritePool.spawn();
							return n.setTexture(V_, J_.GLOW_7).setDepth(jn.Z.EFFECT_HIGH).setAlpha(0).setWorldSize(80, 80), this.scene.audio.playSound(sa.Z.COPY_BALL_EXPLODE, {}, !0, 60), this.gameObject.scene.tweens.add({
								targets: n,
								duration: 150,
								alpha: {
									from: 0,
									to: 1,
									ease: Phaser.Math.Easing.Quadratic.In
								},
								yoyo: !0,
								delay: 73,
								onYoyo: function() {
									t.gameObject.setColor(i)
								},
								onUpdate: function() {
									var e = t.gameObject,
										i = e.x,
										a = e.y;
									n.setPosition(i, a)
								},
								onComplete: function() {
									n.kill()
								}
							}), oe().resolve()
						}, i.onNearBallMatch = function(e) {
							return this.copyColor(e)
						}, t
					}(Vb),
					Q_ = q_,
					$_ = aa.Z.GAMEPLAY.GAME_OBJECTS,
					eC = $_.KEY,
					tC = $_.FRAME,
					iC = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n) || this).copyColorBehavior = void 0, a.objectType = "WhiteBall", a.scene.add.existing((0, Un.Z)(a)), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return e.prototype.initDefault.call(this), this.color = wc.I.White, this.setTexture(eC), this.setFrame(tC.BALL_WHITE), this
						}, i.getColor = function() {
							return this.color
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.copyColorBehavior = new Q_(this), this.addBehavior(this.copyColorBehavior)
						}, i.isCanMatchWith = function(e, t) {
							return e instanceof HT && (t ? this.color === t && this.color != wc.I.White : this.color === e.getColor() && this.color != wc.I.White)
						}, i.postUpdate = function() {
							e.prototype.postUpdate.call(this)
						}, i.kill = function() {
							e.prototype.kill.call(this)
						}, i.revive = function() {
							e.prototype.revive.call(this)
						}, i.updateDepthObjects = function(t) {
							e.prototype.updateDepthObjects.call(this, t)
						}, t
					}(HT),
					nC = iC,
					aC = function(e) {
						function t(t) {
							return e.call(this, t, "EarthenPotBehavior") || this
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.break = function() {
							var e = this;
							return new(oe())((function(t) {
								var i = e.gameObject.scene.gameManager;
								e.gameObject.scene.audio.playSound(sa.Z.POT_BREAK), e.gameObject.preKill(), i.grid.removeFromGrid([e.gameObject]);
								var n = e.gameObject,
									a = n.x,
									s = n.y;
								i.scoreManager.addScore({
									x: a,
									y: s
								}, "explode"), i.particlePool.spawn("EarthenPotExplodeParticle").explode(a, s), e.scene.time.delayedCall(200, t)
							}))
						}, i.onActiveExplode = function() {
							return this.break()
						}, i.onCollideWithBullet = function(e, t) {
							var i = this.gameObject.onActiveExplode(),
								n = this.explodeBulletBall(t);
							return oe().all([i, n])
						}, i.explodeBulletBall = function(e) {
							var t = this;
							return e && e instanceof HT ? new(oe())((function(i) {
								t.gameObject.scene.time.addEvent({
									delay: 13,
									callback: function() {
										e.onActiveExplode(t.gameObject).then(i)
									}
								})
							})) : oe().resolve()
						}, t
					}(Vb),
					sC = aC,
					oC = aa.Z.GAMEPLAY.GAME_OBJECTS,
					rC = oC.KEY,
					lC = oC.FRAME,
					cC = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, rC, lC.EARTHEN_POT) || this).breakBehavior = void 0, a.objectType = "EarthenPot", a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.breakBehavior = new sC(this), this.addBehavior(this.breakBehavior)
						}, i.updateDepthObjects = function(t) {
							e.prototype.updateDepthObjects.call(this, t)
						}, t
					}(oE),
					hC = cC,
					uC = aa.Z.GAMEPLAY.EFFECTS,
					dC = function(e) {
						function t(t) {
							return e.call(this, t, "ElectricBehavior") || this
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.explode = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, i, n, a, s, o, r, l, c, u, d, p, m = this;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return this.gameObject.preKill(), t = this.gameObject.gameManager, i = this.gameObject.gameManager.grid, n = i.getRow(this.gameObject.row), a = 1 / this.scene.world.getPixelRatio(), s = this.gameObject, s.x, o = s.y, r = this.gameObject.scene.gameZone.width, c = (l = 1.5 * r) / 118.5 * 16.75, (u = t.spritePool.spawn()).setTexture(uC.KEY, uC.FRAME.FX_ELECTRIC).setPosition(r / 2, o).setDepth(jn.Z.EFFECT_HIGH).setAlpha(1).setWorldSize(l, c), (d = t.spritePool.spawn()).setTexture(uC.KEY, uC.FRAME.GLOW_3).setScale(3.5 * a, 2.3 * a).setDepth(jn.Z.EFFECT_HIGH + 1).setAlpha(1).setPosition(r / 2, o), this.gameObject.scene.tweens.add({
												targets: [u],
												alpha: {
													from: 1,
													to: .6,
													ease: Phaser.Math.Easing.Sine.In
												},
												displayHeight: {
													from: c,
													to: 0,
													ease: Phaser.Math.Easing.Sine.In
												},
												duration: 300,
												onComplete: function() {
													u.kill()
												}
											}), this.gameObject.scene.tweens.add({
												targets: [d],
												alpha: {
													from: 1,
													to: .4
												},
												scaleX: {
													from: 3.5 * a,
													to: a
												},
												scaleY: {
													from: 2.3 * a,
													to: a
												},
												ease: Phaser.Math.Easing.Sine.In,
												duration: 300,
												onComplete: function() {
													d.kill()
												}
											}), i.removeFromGrid([this.gameObject]), p = _()(n).call(n, (function(e) {
												return e.onActiveExplode(m.gameObject)
											})), this.gameObject.scene.audio.playSound(sa.Z.ELECTRIC_EXPLODE), e.abrupt("return", oe().all(p));
										case 19:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.onActiveExplode = function() {
							return this.explode()
						}, i.onCollideWithBullet = function(e) {
							return this.gameObject.onActiveExplode()
						}, t
					}(Vb),
					pC = dC,
					mC = aa.Z.GAMEPLAY,
					fC = mC.GAME_OBJECTS,
					gC = mC.EFFECTS,
					vC = fC.KEY,
					yC = fC.FRAME,
					bC = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, vC, yC.ELECTRIC_BALL) || this).electricShotBehavior = void 0, a.electricGlow = void 0, a.electricRing = void 0, a.electricRingTween1 = void 0, a.electricRingTween2 = void 0, a.electricRingTween3 = void 0, a.electricParticles = void 0, a.objectType = "ElectricBall", a.createElectricGlow(), a.createElectricRing(), a.electricParticles = new f_(t), a.electricParticles.explode(0, 0), a.scene.add.existing((0, Un.Z)(a)), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							var t, i, n, a, s, o, r, l;
							return e.prototype.initDefault.call(this), this.startAnimationIdle(), null == (t = this.electricGlow) || t.setPosition(this.x, this.y), null == (i = this.electricGlow) || i.revive(), null == (n = this.electricGlow) || n.setDisplaySize(50, 50), null == (a = this.electricRing) || a.setPosition(this.x, this.y), null == (s = this.electricRing) || s.revive(), null == (o = this.electricRing) || o.setDisplaySize(32, 32), null == (r = this.electricParticles) || r.setPosition(this.x, this.y), null == (l = this.electricParticles) || l.revive(), this
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.electricShotBehavior = new pC(this), this.addBehavior(this.electricShotBehavior)
						}, i.createElectricGlow = function() {
							this.electricGlow = this.scene.make.image({
								key: gC.KEY,
								frame: gC.FRAME.GLOW_4
							}), this.electricGlow.setAlpha(1), this.electricGlow.setTint(1796271)
						}, i.createElectricRing = function() {
							this.electricRing = this.scene.make.image({
								key: aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.KEY,
								frame: aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.FRAME.THUNDER_BALL_GLOW
							}), this.electricRing.setAlpha(.5)
						}, i.postUpdate = function() {
							e.prototype.postUpdate.call(this), this.isKilled || (this.electricGlow.setPosition(this.x, this.y), this.electricRing.setPosition(this.x, this.y), this.electricParticles.setPosition(this.x, this.y))
						}, i.startAnimationIdle = function() {
							this.stopAnimationIdle(), this.electricRingTween1 = this.scene.tweens.add({
								targets: this.electricGlow,
								duration: 100,
								yoyo: !0,
								repeat: -1,
								alpha: {
									from: 1,
									to: .8,
									ease: Phaser.Math.Easing.Quadratic.In
								}
							}), this.electricRingTween2 = this.scene.tweens.add({
								targets: this.electricRing,
								duration: 300,
								yoyo: !0,
								repeat: -1,
								alpha: {
									from: .5,
									to: 0,
									ease: Phaser.Math.Easing.Quadratic.In
								}
							});
							var e = 1 / this.scene.world.getPixelRatio();
							this.electricRingTween3 = this.scene.tweens.add({
								targets: this.electricGlow,
								duration: 300,
								yoyo: !0,
								repeat: -1,
								scale: {
									from: 1.5 * e,
									to: 1 * e
								},
								ease: Phaser.Math.Easing.Cubic.In
							})
						}, i.stopAnimationIdle = function() {
							var e, t, i;
							null == (e = this.electricRingTween1) || e.stop(), null == (t = this.electricRingTween2) || t.stop(), null == (i = this.electricRingTween3) || i.stop()
						}, i.kill = function() {
							e.prototype.kill.call(this), this.stopAnimationIdle(), this.electricGlow.kill(), this.electricRing.kill(), this.electricParticles.kill()
						}, i.revive = function() {
							e.prototype.revive.call(this), this.isKilled || (this.electricGlow.revive(), this.electricRing.revive(), this.electricParticles.revive())
						}, i.updateDepthObjects = function(t) {
							var i, n, a;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.electricRing) || i.setDepth(t + jn.X.ELECTRIC_RING), null == (n = this.electricGlow) || n.setDepth(t + jn.X.ELECTRIC_GROW), null == (a = this.electricParticles) || a.setDepth(t + jn.X.ELECTRIC_SPARKLE)
						}, t
					}(oE),
					EC = bC,
					TC = i(40131),
					AC = aa.Z.GAMEPLAY.GAME_OBJECTS,
					SC = AC.KEY,
					_C = AC.FRAME,
					CC = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).scene = void 0, n.gridObject = void 0, n.arrowImage = void 0, n.rotateAnimation = void 0, n.scene = t, n.gridObject = i, n.createArrowImage(), n.scene.add.existing((0, Un.Z)(n)), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createArrowImage = function() {
							this.arrowImage = this.scene.make.image({
								key: SC,
								frame: _C.COMPASS_NEEDLE
							}), this.arrowImage.setWorldSize(17, 17), this.add(this.arrowImage)
						}, i.runRotateAnimation = function(e) {
							var t, i = this;
							null == (t = this.rotateAnimation) || t.remove();
							var n = this.rotation;
							this.rotateAnimation = this.scene.tweens.add({
								targets: this,
								props: {
									rotation: {
										from: n,
										to: e
									}
								},
								duration: 1e3,
								ease: Phaser.Math.Easing.Elastic.Out,
								onComplete: function() {
									i.setRotation(e)
								}
							})
						}, i.reset = function() {
							var e, t = 1 / this.scene.world.getPixelRatio();
							null == (e = this.arrowImage) || e.setScale(t)
						}, t
					}(Phaser.GameObjects.Container),
					wC = CC,
					BC = aa.Z.GAMEPLAY.EFFECTS,
					IC = BC.KEY,
					PC = BC.FRAME,
					xC = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, "RandomDirectionElectricBehavior") || this).glows1 = [], i.glows2 = [], i.glowBlue = void 0, i.createGlowBlue(), i.createGlows2(), i.createGlows1(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createGlowBlue = function() {
							this.glowBlue = this.scene.make.image({
								key: IC,
								frame: PC.GLOW_4
							}), this.glowBlue.setWorldSize(80, 80), this.glowBlue.setDepth(jn.Z.EFFECT), this.glowBlue.setTint(5194421), this.glowBlue.kill()
						}, i.createGlows2 = function() {
							for (var e = 0; e < 4; e++) {
								var t = this.scene.make.image({
									key: IC,
									frame: PC.GLOW_7
								});
								t.setWorldSize(32, 32), t.setDepth(jn.Z.EFFECT), t.kill(), this.glows2.push(t)
							}
						}, i.createGlows1 = function() {
							jn.Z.EFFECT;
							for (var e = 0; e < 4; e++) {
								var t = this.scene.make.image({
									key: IC,
									frame: PC.GLOW_7
								});
								t.setWorldSize(32, 32), t.setDepth(jn.Z.EFFECT), t.kill(), this.glows1.push(t)
							}
						}, i.onCollideWithBullet = function(e) {
							return this.gameObject.onActiveExplode()
						}, i.onActiveExplode = function() {
							return this.explode()
						}, i.explode = function() {
							var e, t = this;
							this.gameObject.preKill();
							var i = this.gameObject.gameManager.grid,
								n = 1 / this.scene.world.getPixelRatio(),
								a = this.gameObject,
								s = a.x,
								o = a.y;
							this.gameObject.scene.gameManager.scoreManager.addScore({
								x: s,
								y: o
							}, "explode");
							var r, l = this.gameObject.getDirection(),
								c = this.gameObject.scene.gameZone.width,
								h = [];
							switch (l) {
								case TC.Z.Left:
									h = i.getRow(this.gameObject.row), h = A()(h).call(h, (function(e) {
										return t.gameObject.col > e.col
									}));
									break;
								case TC.Z.Right:
									h = i.getRow(this.gameObject.row), h = A()(h).call(h, (function(e) {
										return t.gameObject.col < e.col
									}));
									break;
								case TC.Z.UpLeft:
									h = i.getDiagonalUpLeft(this.gameObject);
									break;
								case TC.Z.UpRight:
									h = i.getDiagonalUpRight(this.gameObject)
							}
							this.glows1.forEach((function(e) {
								e.revive(), e.setPosition(t.gameObject.x + Phaser.Math.RND.between(-10, 10), t.gameObject.y + Phaser.Math.RND.between(-10, 10)), e.setScale(2.5 * n)
							})), this.glowBlue.revive(), this.glowBlue.setPosition(this.gameObject.x, this.gameObject.y), this.glowBlue.setScale(1.5 * n), this.glows2.forEach((function(e) {
								e.revive(), e.setPosition(t.gameObject.x, t.gameObject.y), e.setScale(1.7 * n)
							})), this.gameObject.scene.audio.playSound(sa.Z.COMPASS_EXPLODE), this.gameObject.scene.tweens.add({
								targets: y()(e = []).call(e, this.glows1),
								duration: 50,
								props: {
									scale: {
										start: 2.5 * n,
										from: 2.5 * n,
										to: n
									},
									alpha: {
										start: 1,
										from: 1,
										to: 0
									}
								},
								onComplete: function() {
									var e;
									t.gameObject.scene.tweens.add({
										targets: y()(e = []).call(e, t.glows2),
										duration: 350,
										props: {
											scale: {
												start: 1.5 * n,
												from: 1.5 * n,
												to: .7 * n
											},
											alpha: {
												start: 1,
												from: 1,
												to: 0
											}
										}
									}), t.gameObject.scene.tweens.add({
										targets: [t.glowBlue],
										duration: 350,
										props: {
											scale: {
												start: 1.7 * n,
												from: 1.7 * n,
												to: 0
											},
											alpha: {
												start: 1,
												from: 1,
												to: 0
											}
										},
										onComplete: function() {
											t.glows1.forEach((function(e) {
												e.kill()
											})), t.glows2.forEach((function(e) {
												e.kill()
											})), t.glowBlue.kill()
										}
									})
								}
							});
							var u = this.gameObject.gameManager.spritePool.spawn();
							u.setTexture(aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.KEY, aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.FRAME.ELECTRIC_EXPLODE).setOrigin(0, .5).setPosition(this.gameObject.x, this.gameObject.y).setDepth(jn.Z.EXPLODE).setAlpha(1).setDisplaySize(c, 84).setRotation(Math.PI + l);
							var d = this.gameObject.gameManager.spritePool.spawn();
							return d.setTexture(IC, PC.GLOW_3).setScale(3.5 * n, 2.3 * n).setDepth(jn.Z.EXPLODE + 1).setAlpha(1).setPosition(this.gameObject.x, this.gameObject.y).setRotation(Math.PI + l), this.gameObject.scene.tweens.add({
								targets: [u],
								alpha: {
									from: 1,
									to: .6,
									ease: Phaser.Math.Easing.Sine.In
								},
								displayHeight: {
									from: 84,
									to: 0,
									ease: Phaser.Math.Easing.Sine.In
								},
								duration: 300,
								onComplete: function() {
									u.kill()
								}
							}), this.gameObject.scene.tweens.add({
								targets: [d],
								alpha: {
									from: 1,
									to: .4
								},
								scaleX: {
									from: 3.5 * n,
									to: n
								},
								scaleY: {
									from: 2.3 * n,
									to: n
								},
								ease: Phaser.Math.Easing.Sine.In,
								duration: 300,
								onComplete: function() {
									d.kill()
								}
							}), i.removeFromGrid([this.gameObject]), r = _()(h).call(h, (function(e) {
								return e.onActiveExplode(t.gameObject)
							})), oe().all(r)
						}, t
					}(Vb),
					OC = xC,
					kC = aa.Z.GAMEPLAY.GAME_OBJECTS,
					RC = kC.KEY,
					MC = kC.FRAME,
					LC = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, RC, MC.COMPASS) || this).randomDirectionElectricBehavior = void 0, a.direction = 0, a.arrow = void 0, a.idleAnimation = void 0, a.highlight = void 0, a.objectType = "RandomDirectionElectricBall", a.scene.add.existing((0, Un.Z)(a)), a.createArrow(), a.createHighlight(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function(t) {
							var i;
							e.prototype.initDefault.call(this, t);
							var n = 1 / this.scene.world.getPixelRatio();
							return this.setScale(n), null == (i = this.arrow) || i.reset(), this
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.randomDirectionElectricBehavior = new OC(this), this.addBehavior(this.randomDirectionElectricBehavior)
						}, i.setRotation = function(e) {
							var t;
							return null == (t = this.arrow) || t.setRotation(e), e && (this.direction = e), this
						}, i.kill = function() {
							var t, i;
							e.prototype.kill.call(this), null == (t = this.arrow) || t.kill(), null == (i = this.highlight) || i.kill(), this.stopAnimationIdle()
						}, i.revive = function() {
							var t, i;
							e.prototype.revive.call(this), null == (t = this.arrow) || t.revive(), null == (i = this.highlight) || i.revive()
						}, i.onStartTurn = function() {
							return this.randomDirection(), this.arrow.runRotateAnimation(this.getDirection()), e.prototype.onStartTurn.call(this)
						}, i.createArrow = function() {
							this.arrow = new wC(this.scene, this)
						}, i.createHighlight = function() {
							this.highlight = this.scene.make.image({
								key: RC,
								frame: MC.COMPASS_HIGHLIGHT
							}), this.highlight.setWorldSize(34, 34)
						}, i.randomDirection = function() {
							var e, t = this,
								i = A()(e = [TC.Z.Left, TC.Z.UpLeft, TC.Z.Right, TC.Z.UpRight]).call(e, (function(e) {
									return e != t.direction
								}));
							this.direction = i[Phaser.Math.RND.between(0, i.length - 1)]
						}, i.getDirection = function() {
							return this.direction
						}, i.postUpdate = function() {
							var t, i, n;
							e.prototype.postUpdate.call(this), null == (t = this.arrow) || t.setPosition(this.x, this.y), null == (i = this.highlight) || i.setPosition(this.x, this.y);
							var a = this.scene.world.getPixelRatio();
							null == (n = this.arrow) || n.setScale(this.scale * a)
						}, i.preKill = function(t) {
							this.kill(), this.arrow.kill(), this.highlight.kill(), e.prototype.preKill.call(this)
						}, i.setStatus = function(t) {
							switch (e.prototype.setStatus.call(this, t), t) {
								case 1:
									this.direction = TC.Z.UpLeft;
									break;
								case 2:
									this.direction = TC.Z.UpRight;
									break;
								case 3:
									this.direction = TC.Z.Right;
									break;
								default:
									this.direction = TC.Z.Left
							}
							this.setRotation(this.direction)
						}, i.stopAnimationIdle = function() {
							var e, t;
							null == (e = this.idleAnimation) || e.stop(), null == (t = this.idleAnimation) || t.remove()
						}, i.updateDepthObjects = function(t) {
							var i, n;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.arrow) || i.setDepth(t), null == (n = this.highlight) || n.setDepth(t)
						}, t
					}(oE),
					GC = LC,
					DC = aa.Z.GAMEPLAY.GAME_OBJECTS,
					FC = DC.KEY,
					NC = DC.FRAME,
					ZC = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, "PlusMinusBallBehavior") || this).changeBulletText = void 0, i.ballScale = void 0, i.changeBulletText = ia.Z.addText(i.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: i.scene.fontSize(36),
								text: "+ 1",
								origin: {
									x: .5,
									y: .5
								}
							}), i.changeBulletText.kill(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return e.prototype.initDefault.call(this), this.ballScale = this.gameObject.scale, this
						}, i.changeRemainingBullets = function() {
							var e = this;
							return new(oe())((function(t) {
								e.gameObject.preKill(), e.gameObject.gameManager.grid.removeFromGrid([e.gameObject]);
								var i = e.gameObject,
									n = i.x,
									a = i.y,
									s = 1 / e.scene.world.getPixelRatio();
								e.gameObject.scene.gameManager.scoreManager.addScore({
									x: n,
									y: a
								}, "explode");
								var o = e.gameObject.gameManager.spritePool.spawn();
								o.revive(), e.gameObject.getValue() > 0 ? (o.setTexture(FC, NC.PLUS_BALL_EXPLOSION), e.changeBulletText.setText("+ 1")) : (o.setTexture(FC, NC.MINUS_BALL_EXPLOSION), e.changeBulletText.setText("- 1")), o.setScale(s).setDepth(jn.Z.EFFECT).setPosition(n, a - 20);
								var r = e.gameObject.scene.gameManager.shooter,
									l = r.x,
									c = r.y;
								e.changeBulletText.revive(), e.gameObject.scene.gameManager.shooter.updateRemainingBullet(e.gameObject.getValue()), e.changeBulletText.setScale(s).setDepth(jn.Z.EFFECT).setPosition(l + 20 * Math.random() - 10, c - 80 + 20 * Math.random() - 10).revive(), e.gameObject.scene.tweens.add({
									targets: [o, e.changeBulletText],
									duration: 200,
									ease: Phaser.Math.Easing.Sine.In,
									scale: {
										from: s,
										to: 1.2 * s
									},
									onComplete: function() {
										e.gameObject.scene.tweens.add({
											targets: [o, e.changeBulletText],
											duration: 200,
											ease: Phaser.Math.Easing.Sine.Out,
											y: "-=20",
											onComplete: function() {
												o.kill(), e.changeBulletText.kill()
											}
										})
									}
								}), e.scene.audio.playSound(sa.Z.BUBBLE_POP), e.scene.time.delayedCall(200, t)
							}))
						}, i.changeGridObject = function() {
							var e = this,
								t = this.ballScale,
								i = -this.gameObject.getValue();
							return this.gameObject.status = i, this.gameObject.scene.tweens.add({
								targets: this.gameObject,
								duration: 200,
								ease: Phaser.Math.Easing.Sine.In,
								props: {
									scale: {
										from: t,
										to: .2 * t
									},
									alpha: {
										from: 1,
										to: 0
									}
								},
								onComplete: function() {
									e.gameObject.setValue(i), e.gameObject.scene.tweens.add({
										targets: e.gameObject,
										duration: 200,
										ease: Phaser.Math.Easing.Sine.Out,
										props: {
											scale: {
												from: .2 * t,
												to: t
											},
											alpha: {
												from: 0,
												to: 1
											}
										}
									})
								}
							}), oe().resolve()
						}, i.onActiveExplode = function() {
							return this.changeRemainingBullets()
						}, i.onCollideWithBullet = function(e) {
							return this.gameObject.onActiveExplode()
						}, i.onStartTurn = function() {
							return this.changeGridObject()
						}, t
					}(Vb),
					UC = ZC,
					jC = aa.Z.GAMEPLAY.GAME_OBJECTS,
					YC = jC.KEY,
					WC = jC.FRAME,
					KC = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, YC, WC.PLUS_BALL) || this).changeRemainingBulletsBehavior = void 0, a.objectType = "PlusMinusBall", a.scene.add.existing((0, Un.Z)(a)), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setStatus = function(t) {
							e.prototype.setStatus.call(this, t), t > 0 ? this.setFrame(WC.PLUS_BALL) : this.setFrame(WC.MINUS_BALL)
						}, i.setValue = function(e) {
							this.setStatus(e)
						}, i.getValue = function() {
							return this.status
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.changeRemainingBulletsBehavior = new UC(this), this.addBehavior(this.changeRemainingBulletsBehavior)
						}, t
					}(oE),
					HC = KC,
					zC = aa.Z.GAMEPLAY.GAME_OBJECTS,
					XC = zC.KEY,
					VC = zC.FRAME,
					JC = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, 0, 0, XC, VC.FIREFLY_PREFIX + 0) || this).scene = void 0, i.scene = t, i.setDisplaySize(15, 15), i.kill(), i.scene.gameManager.particlePool.init("DustLavaParticle", 1, 6), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return this
						}, i.preKill = function() {
							this.scene.tweens.add({
								targets: this,
								duration: 200,
								alpha: {
									from: 1,
									to: .3
								},
								onComplete: this.kill,
								onCompleteScope: this
							})
						}, i.flyTo = function(e, t, i) {
							var n = this;
							return void 0 === t && (t = 800), void 0 === i && (i = 0), new(oe())((function(a) {
								n.scene.tweens.killTweensOf(n);
								var s = e.x - n.x,
									o = e.y - n.y,
									r = Math.sqrt(Math.pow(s, 2) + Math.pow(o, 2)),
									l = Math.random() * r * .5 + .5 * r * (Math.random() > .5 ? 1 : -1),
									c = Math.random() * r * .5 + .5 * r * (Math.random() > .5 ? 1 : -1),
									h = Math.atan2(o, s),
									u = new Phaser.Math.Vector2(n.x, n.y),
									d = new Phaser.Math.Vector2(e.x, e.y),
									p = new Phaser.Math.Vector2(l * Math.cos(h) - c * Math.sin(h) + u.x, l * Math.sin(h) + c * Math.cos(h) + u.y),
									m = new Phaser.Math.Vector2((r - l) * Math.cos(h) + c * Math.sin(h) + u.x, (r - l) * Math.sin(h) - c * Math.cos(h) + u.y),
									f = new Phaser.Curves.CubicBezier(u, p, m, d),
									g = 1 / n.scene.world.getPixelRatio();
								n.setScale(1.7 * g), n.scene.tweens.add({
									targets: n,
									duration: i,
									props: {
										scale: {
											start: 1.7 * g,
											from: 1.7 * g,
											to: g
										}
									}
								}), n.scene.tweens.addCounter({
									from: 0,
									to: 1,
									duration: t,
									delay: i + 50,
									onUpdate: function(e) {
										var t = e.getValue(),
											i = f.getPointAt(t);
										n.setPosition(i.x, i.y), n.scene.gameManager.particlePool.spawn("DustLavaParticle").explode(1, i)
									},
									onComplete: function() {
										n.kill(), a()
									}
								})
							}))
						}, t
					}(Phaser.GameObjects.Sprite),
					qC = JC,
					QC = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, "LavaBallBehavior") || this).isExploded = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return e.prototype.initDefault.call(this), this.isExploded = !1, this
						}, i.flyLavas = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, i, n, a, s, o, r, l, c = this;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return t = this.gameObject.gameManager.grid, i = t.getExplodableObjects(), n = [], a = [], s = this.scene.gameManager.grid.descentController.getDy(), 300, 800, o = 70 * Math.abs(Math.floor(s / 29)) + 300, r = o - 300 + 50 < 800 ? 800 : o - 300 + 50, this.gameObject.lavas.forEach((function(e) {
												var s = A()(i).call(i, (function(e) {
													return !e.isProcess
												}));
												if (0 !== s.length) {
													e.revive();
													var o = s[Phaser.Math.RND.between(0, s.length - 1)];
													n.push(o), o.isProcess = !0, a.push(e.flyTo(t.getXYByRowCol(o, !0), r, 300))
												} else e.kill()
											})), e.next = 12, oe().all(a);
										case 12:
											return l = _()(n).call(n, (function(e) {
												return e.isProcess = !1, c.gameObject.gameManager.particlePool.spawn("LavaExplodeParticle").explode(10, e), e.onActiveExplode(c.gameObject)
											})), e.abrupt("return", oe().all(l));
										case 14:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.onActiveExplode = function() {
							var e = this;
							this.isExploded = !0, this.gameObject.preKill((function() {
								e.gameObject.setActive(!0)
							}));
							var t = this.gameObject.grid;
							this.scene.gameManager;
							t.removeFromGrid([this.gameObject]);
							var i = 1 / this.gameObject.scene.world.getPixelRatio(),
								n = this.gameObject,
								a = n.x,
								s = n.y;
							return this.gameObject.scene.audio.playSound(sa.Z.FIREFLIES_EXPLODE), this.gameObject.gameManager.particlePool.spawn("LavaExplodeParticle").explode(20, this.gameObject), new(oe())((function(t) {
								e.gameObject.scene.audio.playSound(sa.Z.FIREFLIES), e.gameObject.lavas.forEach((function(n) {
									n.setDepth(jn.Z.EFFECT);
									var o = Math.atan2(n.x - a, n.y - s),
										r = n.x + 5 * Math.sin(o),
										l = n.y + 5 * Math.cos(o);
									e.scene.add.tween({
										targets: n,
										scale: {
											start: i,
											from: i,
											to: 1.7 * i
										},
										x: r,
										y: l,
										duration: 500,
										ease: Phaser.Math.Easing.Sine.Out,
										onComplete: function() {
											t()
										}
									})
								}))
							}))
						}, i.onEndTurn = function() {
							return this.isExploded ? (this.gameObject.grid.setLoopEndTurn(), this.flyLavas()) : oe().resolve()
						}, i.onCollideWithBullet = function(e) {
							return this.gameObject.onActiveExplode()
						}, t
					}(Vb),
					$C = QC,
					ew = aa.Z.GAMEPLAY.GAME_OBJECTS,
					tw = ew.KEY,
					iw = ew.FRAME,
					nw = function(e) {
						function t(t, i, n) {
							var a;
							(a = e.call(this, t, i, n, tw, iw.FIREFLY_CAP) || this).lavas = [], a.lavaFlyInsideBallAnimations = [], a.background = void 0, a.objectType = "LavaBall";
							for (var s = 0; s < 3; s++) {
								var o = new qC(a.scene);
								a.lavas.unshift(o)
							}
							return a.createBackground(), a.scene.add.existing((0, Un.Z)(a)), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							var t, i, n, a = this;
							return e.prototype.initDefault.call(this), null == (t = this.lavas) || t.forEach((function(e) {
								e.setPosition(a.x, a.y), e.initDefault(), e.revive(), e.setAlpha(1)
							})), null == (i = this.background) || i.revive(), 3 === (null == (n = this.lavas) ? void 0 : n.length) && this.runIdleAnimation(), this
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.addBehavior(new $C(this))
						}, i.clearObject = function() {
							var e;
							null == (e = this.lavas) || e.forEach((function(e) {
								e.kill()
							}))
						}, i.kill = function() {
							e.prototype.kill.call(this), this.background.kill(), this.stopIdleAnimation()
						}, i.revive = function() {
							var t, i = this;
							(e.prototype.revive.call(this), (this.isKilled || this.isObjectHide()) && (this.lavas.forEach((function(e) {
								e.revive(), e.setPosition(i.x, i.y)
							})), this.background.revive()), this.isObjectHide()) && (3 === (null == (t = this.lavas) ? void 0 : t.length) && this.runIdleAnimation())
						}, i.runFadeoutAfterDrop = function() {
							var t = e.prototype.runFadeoutAfterDrop.call(this);
							return this.lavas.forEach((function(e) {
								e.kill()
							})), t
						}, i.runIdleAnimation = function() {
							var e = this,
								t = 1 / this.scene.world.getPixelRatio(),
								i = [{
									scale: .9,
									from: 4 * Math.PI / 3,
									to: Math.PI / 3,
									x: 2,
									y: -2,
									flipX: !1
								}, {
									scale: .7,
									from: 0,
									to: 2 * Math.PI,
									x: 0,
									y: 0,
									flipX: !0
								}, {
									scale: .5,
									from: 3 * Math.PI / 4,
									to: -Math.PI / 2,
									x: 0,
									y: 0,
									flipX: !1
								}];
							this.lavas.forEach((function(n, a) {
								var s = i[a],
									o = Math.random() * Math.PI,
									r = Math.random() > .5 ? -1 : 1,
									l = (s.from - o) * r,
									c = (s.to - o) * r;
								n.play({
									key: "firefly-flying",
									repeat: -1,
									frameRate: 15,
									delay: 50 * a
								}), n.setScale(s.scale * t).setFlipX(s.flipX), e.lavaFlyInsideBallAnimations[a] = e.scene.tweens.addCounter({
									from: l,
									to: c,
									duration: Phaser.Math.Between(3e3, 4500),
									loop: -1,
									yoyo: !0,
									onUpdate: function(t) {
										n.setPosition(8 * Math.cos(t.getValue()) + e.x + s.x, 8 * Math.sin(t.getValue()) + e.y + s.y)
									}
								})
							}))
						}, i.stopIdleAnimation = function() {
							0 !== this.lavaFlyInsideBallAnimations.length && this.lavaFlyInsideBallAnimations.forEach((function(e) {
								e.remove()
							}))
						}, i.updateDepthObjects = function(t) {
							var i, n;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.lavas) || i.forEach((function(e) {
								null == e || e.setDepth(t + jn.X.LAVA)
							})), null == (n = this.background) || n.setDepth(t + jn.X.LAVA_BALL_BACKGROUND)
						}, i.createBackground = function() {
							this.background = this.scene.make.image({
								key: tw,
								frame: iw.FIREFLY_EMPTY_BOTTLE
							}), this.background.setWorldSize(34, 34)
						}, i.postUpdate = function() {
							e.prototype.postUpdate.call(this), this.background.setPosition(this.x, this.y)
						}, t
					}(oE),
					aw = nw,
					sw = aa.Z.GAMEPLAY.EFFECTS,
					ow = sw.KEY,
					rw = sw.FRAME,
					lw = function(e) {
						function t(t) {
							return e.call(this, t, "MummyBehavior") || this
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.lowerHealth = function() {
							var e = this;
							return new(oe())((function(t) {
								var i = 1 / e.gameObject.scene.world.getPixelRatio(),
									n = e.gameObject,
									a = n.x,
									s = n.y,
									o = e.gameObject.gameManager.spritePool.spawn();
								o.setTexture(ow, rw.GLOW_4).setScale(i).setAlpha(1).setPosition(a, s).setDepth(jn.Z.EFFECT), e.gameObject.gameManager.particlePool.spawn("MummyExplodeParticle").explode(a, s), e.gameObject.setHealth(1), e.gameObject.scene.audio.playSound(sa.Z.STONE_EXPLODE_1), e.gameObject.scene.tweens.add({
									targets: o,
									ease: Phaser.Math.Easing.Sine.In,
									duration: 100,
									alpha: {
										from: 1,
										to: 0
									},
									onComplete: function() {
										o.kill(), t()
									}
								})
							}))
						}, i.explode = function() {
							var e = this;
							return new(oe())((function(t) {
								var i = 1 / e.gameObject.scene.world.getPixelRatio(),
									n = e.gameObject,
									a = n.x,
									s = n.y;
								e.gameObject.scene.gameManager.scoreManager.addScore({
									x: a,
									y: s
								}, "explode");
								var o = e.gameObject.gameManager.spritePool.spawn();
								o.setTexture(ow, rw.GLOW_4).setScale(i).setAlpha(1).setPosition(a, s), e.gameObject.gameManager.particlePool.spawn("MummyExplodeParticle").explode(a, s), e.gameObject.preKill(), e.gameObject.gameManager.grid.removeFromGrid([e.gameObject]), e.gameObject.scene.audio.playSound(sa.Z.STONE_EXPLODE_2), e.gameObject.scene.tweens.add({
									targets: o,
									ease: Phaser.Math.Easing.Sine.In,
									duration: 100,
									alpha: {
										from: 1,
										to: 0
									},
									onComplete: function() {
										o.kill(), t()
									}
								})
							}))
						}, i.onActiveExplode = function() {
							return 2 == this.gameObject.getHealth() ? this.lowerHealth() : 1 == this.gameObject.getHealth() ? this.explode() : oe().resolve()
						}, i.onCollideWithBullet = function(e, t) {
							var i = this.gameObject.onActiveExplode(),
								n = this.explodeBulletBall(t);
							return oe().all([i, n])
						}, i.explodeBulletBall = function(e) {
							var t = this;
							return new(oe())((function(i) {
								e && e instanceof HT ? t.gameObject.scene.time.addEvent({
									delay: 13,
									callback: function() {
										e.onActiveExplode(t.gameObject).then(i)
									}
								}) : i()
							}))
						}, t
					}(Vb),
					cw = aa.Z.GAMEPLAY.GAME_OBJECTS,
					hw = cw.KEY,
					uw = cw.FRAME,
					dw = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, hw, uw.MUMMY_FULL) || this).mummyBehavior = void 0, a.health = 2, a.objectType = "Mummy", a.scene.add.existing((0, Un.Z)(a)), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.addBehavior(new lw(this))
						}, i.initDefault = function(t) {
							return e.prototype.initDefault.call(this, t), this.setHealth(2), this
						}, i.setHealth = function(e) {
							this.health = e, 1 == e ? this.setFrame(uw.MUMMY_LOW) : 2 == e && this.setFrame(uw.MUMMY_FULL)
						}, i.getHealth = function() {
							return this.health
						}, i.postUpdate = function() {
							e.prototype.postUpdate.call(this)
						}, i.kill = function() {
							e.prototype.kill.call(this)
						}, i.revive = function() {
							e.prototype.revive.call(this)
						}, t
					}(oE),
					pw = dw,
					mw = function(e) {
						function t(t) {
							return e.call(this, t, "QuestionMarkBallBehavior") || this
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.onStartTurn = function() {
							return this.changeGridObjectFrame()
						}, i.changeGridObjectFrame = function() {
							var e = this;
							this.gameObject.setIsChangingColorFrame(!0);
							var t = this.gameObject.scene,
								i = t.gameManager.grid.getCurrentColorsOnGrid(),
								n = i[Phaser.Math.RND.between(0, i.length - 1)],
								a = this.gameObject.scale;
							return this.gameObject.color = n, t.tweens.add({
								targets: [this.gameObject],
								duration: 150,
								props: {
									scale: {
										start: a,
										from: a,
										to: 0
									}
								},
								onComplete: function() {
									e.gameObject.setColor(n), e.scene.tweens.add({
										targets: e.gameObject,
										duration: 150,
										props: {
											scale: {
												start: 0,
												from: 0,
												to: a
											}
										},
										onComplete: function() {
											e.gameObject.setIsChangingColorFrame(!1)
										}
									})
								}
							}), oe().resolve()
						}, t
					}(Vb),
					fw = mw,
					gw = aa.Z.GAMEPLAY.GAME_OBJECTS,
					vw = gw.KEY,
					yw = gw.FRAME,
					bw = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n) || this).questionMarkTransparent = void 0, a.isChangingColorFrame = !1, a.objectType = "QuestionMarkBall", a.createQuestionMarkTransparent(), a.scene.add.existing((0, Un.Z)(a)), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.addBehavior(new fw(this))
						}, i.createQuestionMarkTransparent = function() {
							this.questionMarkTransparent = this.scene.make.image({
								key: vw,
								frame: yw.BALL_QUESTION_MARK
							}), this.questionMarkTransparent.setWorldSize(34, 34), this.scene.add.existing(this.questionMarkTransparent)
						}, i.kill = function() {
							var t;
							e.prototype.kill.call(this), null == (t = this.questionMarkTransparent) || t.kill()
						}, i.revive = function() {
							var t;
							(e.prototype.revive.call(this), this.isKilled) || (null == (t = this.questionMarkTransparent) || t.revive())
						}, i.postUpdate = function() {
							e.prototype.postUpdate.call(this), this.isKilled || (this.questionMarkTransparent.setPosition(this.x, this.y), this.questionMarkTransparent.setAlpha(this.alpha), this.isChangingColorFrame || this.questionMarkTransparent.setScale(this.scale))
						}, i.preKill = function(e) {
							var t, i = this,
								n = this.scale;
							this.isKilled = !0, this.scene.tweens.add({
								targets: [this, this.questionMarkTransparent],
								duration: 200,
								scale: {
									from: n,
									to: 1.4 * n
								},
								onComplete: function() {
									i.kill(), e && e()
								},
								onCompleteScope: this,
								ease: Phaser.Math.Easing.Sine.In
							}), this.applyFunction(y()(t = [this]).call(t, this.subObjects), "onPreKill")
						}, i.setIsChangingColorFrame = function(e) {
							this.isChangingColorFrame = e
						}, i.getIsChangingColorFrame = function() {
							return this.isChangingColorFrame
						}, i.updateDepthObjects = function(t) {
							var i;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.questionMarkTransparent) || i.setDepth(t + jn.X.QUESTION_MARK_TRANSPARENT)
						}, t
					}(HT),
					Ew = bw,
					Tw = i(2084),
					Aw = i.n(Tw),
					Sw = aa.Z.GAMEPLAY.GAME_OBJECTS,
					_w = Sw.KEY,
					Cw = Sw.FRAME,
					ww = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, _w, Cw.PARTICLE_STAR) || this).sparkleEmitZone = void 0, i.smokeEmitZone = void 0, i.pieceEmitZone = void 0, i.smokePieceEmitZone = void 0, i.sparkleEmitter = void 0, i.smokeEmitter = void 0, i.pieceEmitter = void 0, i.smokePieceEmitter = void 0, i.createEmitZone(), i.createEmitters(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.sparkleEmitZone = new Phaser.Geom.Circle(0, 0, 8), this.smokeEmitZone = {
								getPoints: function(e, t) {
									for (var i = t || Math.PI / 10, n = [], a = 0; a < e; a++) {
										var s = new Phaser.Geom.Point,
											o = i * a,
											r = Math.floor(o / (2 * Math.PI)) % 2 ? 43 : 75;
										s.x = r * Math.cos(o), s.y = r * Math.sin(o), n.push(s)
									}
									return ji()(n).call(n, (function() {
										return Math.random() - .5
									}))
								}
							}, this.pieceEmitZone = new Phaser.Geom.Circle(0, 0, 12), this.smokePieceEmitZone = new Phaser.Geom.Circle(0, 0, 6)
						}, i.createEmitters = function() {
							var e = this,
								t = 1 / this.scene.world.getPixelRatio();
							this.sparkleEmitter = this.createEmitter({
								on: !1,
								frame: Cw.PARTICLE_STAR,
								emitZone: {
									source: this.sparkleEmitZone,
									type: "random"
								},
								timeScale: 1,
								frequency: 2e3,
								alpha: {
									start: 1,
									end: 0,
									ease: Phaser.Math.Easing.Quadratic.In
								},
								scale: {
									min: .8 * t,
									max: 1 * t
								},
								particleClass: Bw,
								lifespan: {
									min: 1e3,
									max: 1800
								}
							}), this.smokeEmitter = this.createEmitter({
								on: !1,
								frame: Cw.LAMP_SMOKE_PARTICLE,
								emitZone: {
									source: this.smokeEmitZone,
									type: "edge",
									quantity: 32,
									stepRate: Math.PI / 8
								},
								scale: {
									min: .4 * t,
									max: .6 * t
								},
								emitCallback: function(t) {
									var i = t.getDefaultScale(),
										n = e.scene.world.getPixelRatio();
									t.setDefaultScale(i / n)
								},
								particleClass: Iw,
								lifespan: Aw()
							}), this.pieceEmitter = this.createEmitter({
								frame: [Cw.LAMP_EXPLODE_PARTICLE_1, Cw.LAMP_EXPLODE_PARTICLE_2, Cw.LAMP_EXPLODE_PARTICLE_3, Cw.LAMP_EXPLODE_PARTICLE_4],
								scale: {
									min: .4 * t,
									max: .8 * t
								},
								alpha: {
									start: 1,
									end: 0,
									ease: Phaser.Math.Easing.Quadratic.In
								},
								speed: {
									min: 30,
									max: 80
								},
								lifespan: {
									min: 200,
									max: 400
								},
								gravityY: 120,
								emitZone: {
									source: this.pieceEmitZone,
									type: "random"
								},
								particleClass: Pw,
								on: !1
							}), this.smokePieceEmitter = this.createEmitter({
								on: !1,
								frame: Cw.LAMP_SMOKE_PARTICLE,
								emitZone: {
									source: this.sparkleEmitZone,
									type: "random"
								},
								alpha: {
									start: 1,
									end: 0,
									ease: Phaser.Math.Easing.Quadratic.In
								},
								scale: {
									min: .15 * t,
									max: .3 * t
								},
								particleClass: Bw,
								lifespan: {
									min: 200,
									max: 400
								}
							})
						}, i.runSparkle = function(e, t, i) {
							this.sparkleEmitter.setPosition(t, i), this.sparkleEmitter.setQuantity(e), this.sparkleEmitter.start()
						}, i.runSmoke = function(e, t) {
							this.smokeEmitter.setPosition(e, t), this.smokeEmitter.explode(32, e, t)
						}, i.runPiece = function(e, t, i) {
							this.pieceEmitter.setPosition(t, i), this.pieceEmitter.explode(e, 0, 0)
						}, i.runSmokePiece = function(e, t, i) {
							this.smokePieceEmitter.setPosition(t, i), this.smokePieceEmitter.explode(e, 0, 0)
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager),
					Bw = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this)._scaleX = void 0, i._scaleY = void 0, i.split = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i), this._scaleX = this.scaleX, this._scaleY = this.scaleY, this.split = Phaser.Math.RND.between(1, 2), this.scaleX = 0, this.scaleY = 0
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n),
								s = this.lifeT * this.split,
								o = Math.floor(s),
								r = s - o;
							return o % 2 == 0 ? (this.scaleX = Phaser.Math.Easing.Sine.InOut(r) * this._scaleX, this.scaleY = Phaser.Math.Easing.Sine.InOut(r) * this._scaleY) : (this.scaleX = (1 - Phaser.Math.Easing.Sine.InOut(r)) * this._scaleX, this.scaleY = (1 - Phaser.Math.Easing.Sine.InOut(r)) * this._scaleY), a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					Iw = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this)._scaleX = void 0, i._scaleY = void 0, i._y = void 0, i.d = void 0, i.dt = void 0, i.defaultScale = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setDefaultScale = function(e) {
							this.defaultScale = e
						}, i.getDefaultScale = function() {
							return this.defaultScale
						}, i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i), this._y = this.y, this._scaleX = this.scaleX, this._scaleY = this.scaleY, this.d = Phaser.Math.RND.between(1500, 2e3), this.dt = Math.random() * this.d, this.defaultScale = Phaser.Math.FloatBetween(.9, 1.05)
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.dt += t, this.dt %= 2 * this.d, this.dt / this.d <= 1 ? (this.scaleX = Phaser.Math.Easing.Sine.InOut(this.dt / (2 * this.d)) * this._scaleX + this.defaultScale, this.scaleY = Phaser.Math.Easing.Sine.InOut(this.dt / (2 * this.d)) * this._scaleY + this.defaultScale, this.y = -10 * Phaser.Math.Easing.Sine.InOut(this.dt / (2 * this.d)) + this._y) : (this.scaleX = (1 - Phaser.Math.Easing.Sine.InOut(this.dt / (2 * this.d))) * this._scaleX + this.defaultScale, this.scaleY = (1 - Phaser.Math.Easing.Sine.InOut(this.dt / (2 * this.d))) * this._scaleY + this.defaultScale, this.y = -10 * (1 - Phaser.Math.Easing.Sine.InOut(this.dt / (2 * this.d))) + this._y), a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					Pw = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).angle2 = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var o = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								r = Math.atan2(this.y - i, this.x - t);
							this.velocityX = o * Math.cos(r), this.velocityY = o * Math.sin(r), this.rotation = r, this.angle2 = r
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.rotation = this.angle2, a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					xw = ww,
					Ow = aa.Z.GAMEPLAY.GAME_OBJECTS,
					kw = (Ow.KEY, Ow.FRAME, function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, "LampBehavior") || this).isSmokeFadeout = !1, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return e.prototype.initDefault.call(this), this.isSmokeFadeout = !1, this
						}, i.changeSmokeStatus = function() {
							var e = this;
							this.isSmokeFadeout = !1;
							var t = this.gameObject.status,
								i = 0 == t ? 1 : 0;
							return 0 == i ? (this.gameObject.setStatus(i), oe().resolve()) : new(oe())((function(n) {
								e.runSmokeFadeAnimation(t, i, 300, 0, (function() {
									e.gameObject.setStatus(i), n()
								}))
							}))
						}, i.explode = function() {
							var e = this;
							return new(oe())((function(t) {
								e.gameObject.preKill((function() {
									return e.gameObject.lampParticles.revive()
								})), e.gameObject.gameManager.grid.removeFromGrid([e.gameObject]);
								var i = e.gameObject,
									n = i.x,
									a = i.y;
								e.gameObject.gameManager.scoreManager.addScore({
									x: n,
									y: a
								}, "explode"), e.gameObject.runLampExplodeParticles(n, a), 1 == e.gameObject.status ? e.runSmokeFadeAnimation(1, 0, 300, 0, (function() {
									e.gameObject.lampParticles.kill(), t()
								})) : e.gameObject.scene.time.delayedCall(200, t)
							}))
						}, i.onActiveExplode = function() {
							return this.explode()
						}, i.onCollideWithBullet = function(e, t) {
							return this.gameObject.onActiveExplode()
						}, i.onStartTurn = function() {
							return this.changeSmokeStatus()
						}, i.onEndTurn = function() {
							var e = this;
							return new(oe())((function(t) {
								e.gameObject.lampParticles.kill(), 1 != e.gameObject.status || e.isSmokeFadeout ? t() : (e.isSmokeFadeout = !0, e.runSmokeFadeAnimation(1, 0, 300, 0, t))
							}))
						}, i.runSmokeFadeAnimation = function(e, t, i, n, a) {
							var s = this;
							void 0 === n && (n = 0), this.gameObject.lampParticles.revive();
							var o = 0 == t ? Phaser.Math.Easing.Sine.Out : Phaser.Math.Easing.Sine.In;
							this.gameObject.scene.tweens.addCounter({
								from: e,
								to: t,
								duration: i,
								delay: n,
								ease: o,
								onUpdate: function(e) {
									var t = e.getValue();
									s.gameObject.lampParticles.smokeEmitter.setAlpha(t)
								},
								onComplete: function() {
									a && a()
								}
							})
						}, t
					}(Vb)),
					Rw = kw,
					Mw = aa.Z.GAMEPLAY.GAME_OBJECTS,
					Lw = Mw.KEY,
					Gw = Mw.FRAME,
					Dw = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, Lw, Gw.LAMP) || this).lampGlow = void 0, a.lampParticles = void 0, a.objectType = "Lamp", a.createLampParticles(), a.createLampGlow(), a.runLampParticles(0, 0), a.scene.add.existing((0, Un.Z)(a)), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setStatus = function(t) {
							e.prototype.setStatus.call(this, t), this.lampParticles && (0 == t ? this.lampParticles.smokeEmitter.setAlpha(0) : this.lampParticles.smokeEmitter.setAlpha(1))
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.addBehavior(new Rw(this))
						}, i.createLampParticles = function() {
							this.lampParticles = new xw(this.scene), this.lampParticles.setDepth(jn.Z.EFFECT)
						}, i.runLampParticles = function(e, t) {
							this.lampParticles.runSparkle(1, e, t), this.lampParticles.runSmoke(e, t)
						}, i.runLampExplodeParticles = function(e, t) {
							this.lampParticles.runPiece(8, e, t), this.lampParticles.runSmokePiece(4, e, t)
						}, i.postUpdate = function() {
							e.prototype.postUpdate.call(this);
							var t = this.grid.getXYByRowCol(this, !1);
							this.lampGlow.setPosition(this.x, this.y), this.lampGlow.setScale(1.18678489703 * this.scale), this.isDropping || (this.isJiggling ? this.lampParticles.setPosition(t.x, t.y) : this.lampParticles.setPosition(this.x, this.y))
						}, i.kill = function() {
							var t, i, n, a;
							e.prototype.kill.call(this), null == (t = this.lampParticles) || t.kill(), null == (i = this.lampParticles) || null == (n = i.sparkleEmitter) || n.setVisible(!1), null == (a = this.lampGlow) || a.kill()
						}, i.revive = function() {
							var t, i, n, a;
							e.prototype.revive.call(this), null == (t = this.lampParticles) || t.revive(), null == (i = this.lampParticles) || null == (n = i.sparkleEmitter) || n.setVisible(!0), null == (a = this.lampGlow) || a.revive()
						}, i.createLampGlow = function() {
							this.lampGlow = this.scene.make.image({
								key: Lw,
								frame: Gw.LAMP_GLOW
							}), this.lampGlow.setWorldSize(50, 49.5)
						}, i.updateDepthObjects = function(t) {
							var i;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.lampGlow) || i.setDepth(t + jn.X.LAMP_GROW)
						}, i.updateAfterInit = function(t) {
							e.prototype.updateAfterInit.call(this, t), this.getSubObject("IronBoard") && this.lampParticles.smokeEmitter.setAlpha(0)
						}, t
					}(oE),
					Fw = Dw,
					Nw = aa.Z.GAMEPLAY,
					Zw = (Nw.GAME_OBJECTS, Nw.EFFECTS),
					Uw = aa.Z.GAMEPLAY.GAME_OBJECTS,
					jw = (Uw.KEY, Uw.FRAME, function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, "CandleBehavior") || this).isWaxDropped = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return e.prototype.initDefault.call(this), this.isWaxDropped = !1, this
						}, i.dripWax = function() {
							var e = this;
							return this.gameObject.isDropping || !this.gameObject.visible ? oe().resolve() : new(oe())((function(t) {
								var i = 1 / e.gameObject.scene.world.getPixelRatio(),
									n = e.gameObject.grid.findLowerGridObjects(e.gameObject);
								e.gameObject.runDripWaxAnimation();
								var a = e.gameObject.gameManager.spritePool.spawn();
								a.setTexture(Zw.KEY, Zw.FRAME.CANDLE_DROP).setScale(i).setAlpha(.8).setDepth(jn.Z.EFFECT);
								var s = n.length > 0 ? n[0].y - e.gameObject.y - Math.sqrt(3) / 2 * 34 : 120;
								e.gameObject.scene.tweens.add({
									targets: a,
									ease: Phaser.Math.Easing.Quadratic.In,
									duration: 200,
									delay: 300,
									alpha: 1,
									onStart: function() {
										var t = e.gameObject,
											i = t.x,
											n = t.y;
										a.setPosition(i, n + 20).revive()
									},
									y: "+=" + s,
									onComplete: function() {
										if (a.kill(), n.length > 0) {
											var i = _()(n).call(n, (function(t) {
												return e.gameObject.gameManager.particlePool.spawn("CandleExplodeParticle").waxExplode(t.x, t.y), t.onActiveExplode(e.gameObject)
											}));
											oe().all(i).then((function() {
												return t()
											}))
										} else t()
									}
								})
							}))
						}, i.explode = function() {
							var e = this;
							return new(oe())((function(t) {
								e.gameObject.preKill();
								var i = e.gameObject,
									n = i.x,
									a = i.y;
								e.gameObject.grid.removeFromGrid([e.gameObject]);
								var s = e.gameObject.scene.gameManager;
								s.particlePool.spawn("CandleExplodeParticle").explode(n, a), s.scoreManager.addScore({
									x: n,
									y: a
								}, "explode"), e.gameObject.scene.tweens.add({
									targets: e.gameObject.candleContainer,
									duration: 200,
									ease: Phaser.Math.Easing.Sine.Out,
									alpha: 0,
									onComplete: function() {
										e.gameObject.candleContainer.kill()
									}
								}), e.gameObject.scene.time.delayedCall(200, t)
							}))
						}, i.onEndTurn = function() {
							return this.isWaxDropped ? oe().resolve() : (this.isWaxDropped = !0, this.gameObject.grid.setLoopEndTurn(), this.dripWax())
						}, i.onActiveExplode = function() {
							return this.explode()
						}, i.onStartTurn = function() {
							return this.isWaxDropped = !1, oe().resolve()
						}, i.onCollideWithBullet = function(e, t) {
							return this.gameObject.onActiveExplode()
						}, t
					}(Vb)),
					Yw = aa.Z.GAMEPLAY.GAME_OBJECTS,
					Ww = Yw.KEY,
					Kw = Yw.FRAME,
					Hw = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, Ww, Kw.CANDLE_BODY) || this).candleContainer = void 0, a.candleBody = void 0, a.candleHead = void 0, a.candleWax = void 0, a.candleFire = void 0, a.objectType = "Candle", a.createCandleContainer(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function(t) {
							var i;
							return e.prototype.initDefault.call(this, t), this.setDisplaySize(30.5, 31.7), null == (i = this.candleContainer) || i.setAlpha(1), this
						}, i.createCandleContainer = function() {
							this.candleContainer = this.scene.add.container(), this.candleHead = this.scene.make.image({
								key: Ww,
								frame: Kw.CANDLE_HEAD
							}), this.candleHead.setWorldSize(34.5, 16.675), this.candleWax = this.scene.make.image({
								key: Ww,
								frame: Kw.CANDLE_WAX
							}), this.candleWax.setWorldSize(34.5, 11.5), this.candleFire = this.scene.make.image({
								key: Ww,
								frame: Kw.CANDLE_FIRE
							}), this.candleFire.setWorldSize(11.5, 13.5), this.candleContainer.add([this.candleHead, this.candleWax, this.candleFire]), this.candleContainer.setSize(30.5, 31.7), Phaser.Display.Align.In.Center(this.candleHead, this.candleContainer, 0, -10), Phaser.Display.Align.To.BottomCenter(this.candleWax, this.candleHead, 0, 0), Phaser.Display.Align.In.TopCenter(this.candleFire, this.candleHead, 0, 3)
						}, i.runDripWaxAnimation = function(e) {
							this.scene.tweens.add({
								targets: [this],
								ease: Phaser.Math.Easing.Sine.In,
								duration: 300,
								yoyo: !0,
								hold: 300,
								scaleY: "*=0.15"
							}), this.scene.tweens.add({
								targets: [this.candleHead],
								ease: Phaser.Math.Easing.Sine.In,
								duration: 300,
								yoyo: !0,
								hold: 300,
								scaleY: "*=1.8",
								y: "+=12"
							}), this.scene.tweens.add({
								targets: [this.candleWax],
								ease: Phaser.Math.Easing.Sine.In,
								duration: 300,
								yoyo: !0,
								hold: 300,
								scaleY: "*=1.5",
								y: "+=18"
							}), this.scene.tweens.add({
								targets: [this.candleFire],
								ease: Phaser.Math.Easing.Sine.In,
								duration: 300,
								yoyo: !0,
								hold: 300,
								scaleY: "*=0.8",
								y: "+=12"
							})
						}, i.postUpdate = function() {
							if (e.prototype.postUpdate.call(this), this.isKilled) {
								var t = this.scene.world.getPixelRatio();
								this.candleContainer.setScale(.80384714359 * this.scale * t)
							}
							this.candleContainer.setPosition(this.x, this.y), this.candleContainer.setRotation(this.rotation)
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.addBehavior(new jw(this))
						}, i.kill = function() {
							e.prototype.kill.call(this), this.candleContainer.kill()
						}, i.revive = function() {
							e.prototype.revive.call(this);
							var t = this.scene.world.getPixelRatio();
							this.candleContainer.setScale(.80384714359 * this.scale * t), this.candleContainer.revive()
						}, i.updateDepthObjects = function(t) {
							var i;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.candleContainer) || i.setDepth(t + jn.X.CANDLE_CONTAINER)
						}, t
					}(oE),
					zw = Hw,
					Xw = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).key = "SwitchBlackHoleBehavior", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.changeStatus = function() {
							var e = this,
								t = 1 == this.gameObject.status ? 0 : 1,
								i = new Phaser.Display.Color(255, 255, 255),
								n = new Phaser.Display.Color(127, 127, 127);
							return this.scene.tweens.addCounter({
								from: 0,
								to: 1,
								duration: 300,
								ease: Phaser.Math.Easing.Sine.InOut,
								onUpdate: function(a) {
									var s, o, r = a.getValue();
									1 === t ? (s = n, o = i) : (s = i, o = n);
									var l = Phaser.Display.Color.Interpolate.ColorWithColor(s, o, 100, 100 * r),
										c = Phaser.Display.Color.GetColor(l.r, l.g, l.b);
									e.gameObject.setTint(c)
								},
								onComplete: function() {
									e.gameObject.setStatus(t)
								}
							}), oe().resolve()
						}, i.onStartTurn = function() {
							return this.changeStatus()
						}, i.onCollideWithBullet = function(t, i) {
							return 0 == this.gameObject.status ? oe().resolve() : e.prototype.onCollideWithBullet.call(this, t, i)
						}, t
					}(PA),
					Vw = aa.Z.GAMEPLAY.GAME_OBJECTS,
					Jw = Vw.KEY,
					qw = Vw.FRAME,
					Qw = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n) || this).objectType = "SwitchBlackHole", a.setTexture(Jw), a.setFrame(qw.SWITCH_BLACK_HOLE), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setStatus = function(t) {
							e.prototype.setStatus.call(this, t), this.spinningAnimation && this.blackHoleSparkle && (1 == t ? (this.setTint(16777215), this.runSpinningAnimation(), this.blackHoleSparkle.revive()) : (this.setTint(8355711), this.spinningAnimation.remove(), this.blackHoleSparkle.kill()))
						}, i.createBehaviors = function() {
							this.dropBehavior = new qb(this), this.addBehavior(this.dropBehavior), this.endLevelBehavior = new $b(this), this.addBehavior(this.endLevelBehavior), this.addBehavior(new Xw(this))
						}, i.postUpdate = function() {
							e.prototype.postUpdate.call(this)
						}, i.kill = function() {
							e.prototype.kill.call(this)
						}, i.revive = function() {
							e.prototype.revive.call(this), 1 == this.status ? (this.blackHoleSparkle.revive(), this.runSpinningAnimation()) : (this.blackHoleSparkle.kill(), this.spinningAnimation.remove())
						}, t
					}(MA),
					$w = Qw,
					eB = aa.Z.GAMEPLAY.EFFECTS,
					tB = eB.KEY,
					iB = eB.FRAME,
					nB = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, "ColorBombBehavior") || this).colors = [], i.ringEffect = void 0, i.glow = void 0, i.colors = [new Phaser.Display.Color(221, 24, 18, 255), new Phaser.Display.Color(246, 135, 0, 255), new Phaser.Display.Color(252, 228, 0, 255), new Phaser.Display.Color(139, 245, 0, 255), new Phaser.Display.Color(87, 122, 254, 255), new Phaser.Display.Color(144, 63, 160, 255)], i.createRingEffect(), i.createGlow(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createGlow = function() {
							this.glow = this.scene.make.image({
								key: tB,
								frame: iB.GLOW_4
							}), this.glow.setDepth(jn.Z.EFFECT_HIGH), this.glow.setWorldSize(50, 50), this.glow.kill()
						}, i.createRingEffect = function() {
							this.ringEffect = this.scene.make.image({
								key: tB,
								frame: iB.RING31
							}), this.ringEffect.setWorldSize(64, 64), this.ringEffect.setDepth(jn.Z.EFFECT_HIGH), this.ringEffect.kill()
						}, i.onCollideWithBullet = function(e, t) {
							return this.gameObject.onActiveExplode()
						}, i.onActiveExplode = function() {
							return this.explode()
						}, i.explode = function() {
							var e = this;
							return new(oe())((function(t) {
								e.gameObject.scene.audio.playSound(sa.Z.COLOR_BOMB_EXPLODE), e.gameObject.preKill();
								var i = e.scene.gameManager,
									n = e.scene.gameManager.grid,
									a = e.gameObject.scale,
									s = e.gameObject.overlay,
									o = n.getAdjacentObjects(e.gameObject, 2),
									r = [],
									l = ["ColorBall", "GemBall", "ThunderBall"];
								n.removeFromGrid([e.gameObject]), o.forEach((function(e) {
									e.forEach((function(e) {
										e instanceof HT && !e.getSubObject("IronBoard") && r.push(e)
									}))
								}));
								var c = n.getCurrentColorsOnGrid(),
									h = c[Phaser.Math.RND.between(0, c.length - 1)];
								r.forEach((function(t) {
									if (n = t, ue()(l).call(l, n.objectType) || "WhiteBall" === n.objectType && n.getColor() !== wc.I.White || n instanceof jA && n.getColor() === n.getSubColor()) {
										var i = e.gameObject.gameManager.spritePool.spawn();
										i.setTexture(tB).setDepth(t.depth + jn.X.SHINE).setScale(1.1 * t.scale).setPosition(t.x, t.y).play("color-ball-shine"), i.off(Phaser.Animations.Events.ANIMATION_UPDATE), i.on(Phaser.Animations.Events.ANIMATION_UPDATE, (function() {
											i.setPosition(t.x, t.y)
										})), i.once(Phaser.Animations.Events.ANIMATION_COMPLETE, (function() {
											i.kill(), i.off(Phaser.Animations.Events.ANIMATION_UPDATE)
										})), t.setColor(h), t instanceof jA && t.setSubColor(h)
									}
									var n
								})), e.scene.tweens.add({
									targets: s,
									duration: 250,
									props: {
										alpha: {
											start: 0,
											from: 0,
											to: .8
										}
									},
									onComplete: function() {
										e.gameObject.scene.gameManager.scoreManager.addScore({
											x: e.gameObject.x,
											y: e.gameObject.y
										}, "explode"), e.gameObject.setAlpha(0), s.setAlpha(0)
									}
								});
								var u = i.particlePool.spawn("LightRayParticle");
								u.revive(), u.explode(e.gameObject.x, e.gameObject.y), e.ringEffect.setPosition(e.gameObject.x, e.gameObject.y), e.ringEffect.setScale(0), e.ringEffect.revive(), e.glow.setPosition(e.gameObject.x, e.gameObject.y), e.glow.setScale(0), e.glow.revive(), t(), e.scene.tweens.add({
									targets: [e.ringEffect, e.glow],
									scale: {
										from: 0 * a,
										to: 3 * a
									},
									alpha: {
										from: 0,
										to: .8,
										duration: 300,
										ease: Phaser.Math.Easing.Sine.In,
										hold: 150,
										yoyo: !0
									},
									ease: Phaser.Math.Easing.Quartic.Out,
									duration: 500,
									onComplete: function() {
										e.ringEffect.kill(), e.glow.kill()
									}
								}), e.scene.tweens.addCounter({
									from: 0,
									to: 1,
									duration: 600,
									onUpdate: function(t) {
										var i = t.getValue() * (e.colors.length - 1),
											n = Math.floor(i),
											a = Math.ceil(i),
											s = Phaser.Display.Color.Interpolate.ColorWithColor(e.colors[n], e.colors[a], 100, 100 * (i - n)),
											o = Phaser.Display.Color.GetColor(s.r, s.g, s.b);
										e.ringEffect.setTint(o), e.glow.setTint(o)
									}
								})
							}))
						}, t
					}(Vb),
					aB = aa.Z.GAMEPLAY.EFFECTS,
					sB = aa.Z.GAMEPLAY.GAME_OBJECTS,
					oB = sB.KEY,
					rB = sB.FRAME,
					lB = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, oB, rB.COLOR_BOMB) || this).colorBombBehavior = void 0, a.overlay = void 0, a.objectType = "ColorBomb", a.createOverlay(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.colorBombBehavior = new nB(this), this.addBehavior(this.colorBombBehavior)
						}, i.postUpdate = function() {
							var t, i;
							e.prototype.postUpdate.call(this), null == (t = this.overlay) || t.setPosition(this.x, this.y), null == (i = this.overlay) || i.setScale(this.scale)
						}, i.createOverlay = function() {
							this.overlay = this.scene.make.image({
								key: aB.KEY,
								frame: aB.FRAME.PREFIX_SHINE + 4,
								alpha: 0
							})
						}, i.preKill = function(e) {
							var t;
							this.isKilled = !0, this.kill(), e && e(), this.applyFunction(y()(t = [this]).call(t, this.subObjects), "onPreKill")
						}, i.updateDepthObjects = function(t) {
							var i;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.overlay) || i.setDepth(this.depth)
						}, i.kill = function() {
							var t;
							e.prototype.kill.call(this), null == (t = this.overlay) || t.kill()
						}, i.revive = function() {
							var t;
							e.prototype.revive.call(this), null == (t = this.overlay) || t.revive()
						}, t
					}(oE),
					cB = lB,
					hB = aa.Z.GAMEPLAY,
					uB = hB.EFFECTS,
					dB = hB.GAME_OBJECTS,
					pB = dB.KEY,
					mB = dB.FRAME,
					fB = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, 0, 0) || this).threeThundersBall = void 0, n.thunderObject = void 0, n.thunderGlow = void 0, n.thunderGlowIdle = void 0, n.thunderGlowIdleTween = void 0, n.threeThundersBall = i, n.createThunderGlow(), n.createThunderObject(), n.createThunderGlowIdle(), n.createThunderGlowIdleTween(), n.scene.add.existing((0, Un.Z)(n)), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createThunderObject = function() {
							this.thunderObject = this.scene.make.image({
								key: pB,
								frame: mB.THREE_THUNDERS_BALL_THUNDER
							}), this.add(this.thunderObject)
						}, i.initDefault = function() {
							return this.thunderObject.setTexture(pB), this.thunderObject.setFrame(mB.THREE_THUNDERS_BALL_THUNDER), this.thunderObject.setTint(16777215), this.thunderObject.setWorldSize(24, 32.5), this.thunderGlowIdle.revive(), this.thunderGlowIdle.setAlpha(0), this.createThunderGlowIdleTween(), this.thunderGlow.kill(), this.thunderGlow.setAlpha(0), this
						}, i.flyTo = function(e) {
							var t = this;
							return new(oe())((function(i) {
								t.scene.add.tween({
									targets: t,
									scale: 1,
									duration: 300
								});
								var n = e.y,
									a = e.x,
									s = t.threeThundersBall.scene.gameManager.grid.descentController.getDy(),
									o = 35 * Math.abs(Math.floor(s / 29)) + 300;
								t.setDepth(jn.Z.EFFECT), t.thunderObject.setTexture(aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.KEY), t.thunderObject.setFrame(aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.FRAME.THUNDER_GLOW), t.thunderObject.setTint(16645037);
								var r = 1 / t.scene.world.getPixelRatio();
								t.scene.tweens.add({
									targets: t.thunderObject,
									scale: 1.5 * r,
									duration: o
								}), t.scene.tweens.add({
									targets: t.thunderGlow,
									alpha: 1,
									duration: o
								}), t.thunderGlow.revive(), t.thunderGlowIdle.kill(), t.thunderGlowIdleTween.remove(), t.revive(), t.scene.tweens.add({
									targets: t,
									y: {
										value: n,
										duration: 500,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									x: {
										value: a,
										duration: 500,
										ease: Phaser.Math.Easing.Linear
									},
									offset: 0,
									duration: 500,
									delay: o - 50,
									onComplete: function() {
										t.preKill(), i()
									}
								})
							}))
						}, i.preKill = function() {
							this.scene.tweens.add({
								targets: this,
								duration: 200,
								alpha: {
									from: 1,
									to: .3
								},
								onComplete: this.kill,
								onCompleteScope: this
							})
						}, i.createThunderGlow = function() {
							this.thunderGlow = this.scene.make.image({
								key: uB.KEY,
								frame: uB.FRAME.GLOW_3
							}), this.thunderGlow.setTint(16761611), this.thunderGlow.setWorldSize(96, 96), this.add(this.thunderGlow)
						}, i.createThunderGlowIdle = function() {
							this.thunderGlowIdle = this.scene.make.image({
								key: aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.KEY,
								frame: aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.FRAME.THUNDER_GLOW
							}), this.thunderGlowIdle.setDisplaySize(23.5, 30), this.add(this.thunderGlowIdle)
						}, i.createThunderGlowIdleTween = function() {
							var e;
							null == (e = this.thunderGlowIdleTween) || e.remove(), this.thunderGlowIdleTween = this.scene.tweens.add({
								targets: [this.thunderGlowIdle],
								duration: 600,
								alpha: {
									from: 0,
									to: .6
								},
								repeat: -1,
								yoyo: !0
							})
						}, t
					}(Phaser.GameObjects.Container),
					gB = fB,
					vB = aa.Z.GAMEPLAY.EFFECTS,
					yB = vB.KEY,
					bB = vB.FRAME,
					EB = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, "ThreeThundersBehavior") || this).isExploded = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return e.prototype.initDefault.call(this), this.isExploded = !1, this
						}, i.flyThunder = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, i, n, a, s, o;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return i = this.gameObject.gameManager.grid, n = A()(t = i.getVisibleColorBalls()).call(t, (function(e) {
												return !e.isObjectLossLink()
											})), a = [], s = [], this.gameObject.thunders.forEach((function(e) {
												if (0 !== n.length) {
													var t = n[Phaser.Math.RND.between(0, n.length - 1)];
													s.push(t);
													var o = i.getXYByRowCol(t, !0);
													a.push(e.flyTo(o))
												} else e.preKill()
											})), e.next = 7, oe().all(a);
										case 7:
											return o = _()(s).call(s, (function(e) {
												return i.processMatch(e, 1)
											})), e.abrupt("return", oe().all(o));
										case 9:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.onActiveExplode = function() {
							var e = this;
							this.isExploded = !0, this.gameObject.preKill((function() {
								e.gameObject.setActive(!0)
							})), this.gameObject.grid.removeFromGrid([this.gameObject]);
							var t = 1 / this.gameObject.scene.world.getPixelRatio(),
								i = this.gameObject,
								n = i.x,
								a = i.y;
							this.gameObject.stopIdleAnimation(), this.scene.gameManager.particlePool.spawn("ThreeThundersBallExplodeParticle").explode(18, {
								x: n,
								y: a
							});
							var s = this.scene.gameManager.spritePool.spawn();
							return s.setTexture(yB, bB.GLOW_4).setPosition(n, a).setTint(16776960).setDepth(jn.Z.EFFECT).setAlpha(1).setScale(t).setWorldSize(128, 128), this.gameObject.scene.tweens.add({
								targets: s,
								duration: 600,
								ease: Phaser.Math.Easing.Sine.Out,
								props: {
									alpha: {
										from: 1,
										to: 0
									}
								},
								onComplete: function() {
									s.kill(), e.gameObject.kill()
								}
							}), this.gameObject.scene.gameManager.scoreManager.addScore({
								x: n,
								y: a
							}, "explode"), oe().resolve()
						}, i.onEndTurn = function() {
							return this.isExploded ? (this.gameObject.grid.setLoopEndTurn(), this.flyThunder()) : oe().resolve()
						}, i.onCollideWithBullet = function(e) {
							return this.gameObject.onActiveExplode()
						}, t
					}(Vb),
					TB = EB,
					AB = aa.Z.GAMEPLAY,
					SB = AB.GAME_OBJECTS,
					_B = AB.EFFECTS,
					CB = SB.KEY,
					wB = SB.FRAME,
					BB = function(e) {
						function t(t, i, n) {
							var a;
							(a = e.call(this, t, i, n, CB, wB.THREE_THUNDERS_BALL) || this).thunders = [], a.thundersSpinningAnimation = void 0, a.glowingAnimation = void 0, a.idleGlow = void 0, a.objectType = "ThreeThundersBall";
							for (var s = 0; s < 3; s++) {
								var o = new gB(a.scene, (0, Un.Z)(a));
								a.thunders.unshift(o)
							}
							return a.idleGlow = a.scene.add.sprite(0, 0, _B.KEY, _B.FRAME.GLOW_7), a.idleGlow.setDepth(jn.Z.EFFECT_HIGH), a.scene.add.existing((0, Un.Z)(a)), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							var t, i, n, a, s, o = this;
							return e.prototype.initDefault.call(this), null == (t = this.thunders) || t.forEach((function(e) {
								e.setPosition(o.x, o.y), e.initDefault(), e.revive(), e.setAlpha(1)
							})), null == (i = this.idleGlow) || i.setTint(16042771), null == (n = this.idleGlow) || n.setAlpha(.4), null == (a = this.idleGlow) || a.setScale(.9), 3 === (null == (s = this.thunders) ? void 0 : s.length) && this.runIdleAnimation(), this
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.addBehavior(new TB(this))
						}, i.clearObject = function() {
							var e;
							null == (e = this.thunders) || e.forEach((function(e) {
								e.kill()
							}))
						}, i.kill = function() {
							var t, i, n;
							e.prototype.kill.call(this), null == (t = this.thundersSpinningAnimation) || t.remove(), null == (i = this.glowingAnimation) || i.remove(), null == (n = this.idleGlow) || n.kill()
						}, i.revive = function() {
							var t, i, n, a = this;
							e.prototype.revive.call(this), this.thunders.forEach((function(e) {
								null == e || e.revive(), null == e || e.setPosition(a.x, a.y)
							})), null == (t = this.thundersSpinningAnimation) || t.restart(), null == (i = this.glowingAnimation) || i.restart(), null == (n = this.idleGlow) || n.revive()
						}, i.postUpdate = function() {
							e.prototype.postUpdate.call(this), this.idleGlow.setPosition(this.x, this.y)
						}, i.runFadeoutAfterDrop = function() {
							var t = e.prototype.runFadeoutAfterDrop.call(this);
							return this.thunders.forEach((function(e) {
								e.kill()
							})), t
						}, i.runIdleAnimation = function() {
							var e = this,
								t = 1 / this.scene.world.getPixelRatio();
							this.thunders.forEach((function(e) {
								return e.setScale(.9 * t)
							})), this.stopIdleAnimation(), this.updateAngleSpinning(0), this.thundersSpinningAnimation = this.scene.tweens.addCounter({
								from: 2 * Math.PI,
								to: 0,
								duration: 4e3,
								loop: -1,
								onUpdate: function(t) {
									var i = t.getValue();
									e.updateAngleSpinning(i)
								}
							}), this.glowingAnimation = this.scene.tweens.add({
								targets: this.idleGlow,
								duration: Phaser.Math.RND.between(200, 800),
								repeatDelay: Phaser.Math.RND.between(2e3, 4e3),
								repeat: -1,
								yoyo: !0,
								ease: Phaser.Math.Easing.Sine.In,
								props: {
									alpha: {
										from: 0,
										to: .4
									}
								}
							})
						}, i.updateAngleSpinning = function(e) {
							var t = this,
								i = 2 * Math.PI / 3;
							this.thunders.forEach((function(n, a) {
								n.setPosition(t.x + 8 * Math.cos(e - i * a), t.y + 8 * Math.sin(e - i * a))
							}))
						}, i.stopIdleAnimation = function() {
							var e, t;
							null == (e = this.thundersSpinningAnimation) || e.stop(), null == (t = this.glowingAnimation) || t.stop()
						}, i.updateDepthObjects = function(t) {
							var i;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.thunders) || i.forEach((function(e) {
								null == e || e.setDepth(t + jn.X.THREE_THUNDERS_THUNDER)
							}))
						}, t
					}(oE),
					IB = BB,
					PB = function(e) {
						function t(t) {
							return e.call(this, t, "SlateStoneBehavior") || this
						}
						return (0, l.Z)(t, e), t
					}(Vb),
					xB = aa.Z.GAMEPLAY.GAME_OBJECTS,
					OB = xB.KEY,
					kB = xB.FRAME,
					RB = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, OB, kB.SLATE_STONE) || this).direction = TC.Z.Left, a.objectType = "SlateStone", a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function(t) {
							return e.prototype.initDefault.call(this, t), this.setDisplaySize(34 / 29 * 88, 34), this.direction = TC.Z.Left, this
						}, i.setStatus = function(t) {
							switch (e.prototype.setStatus.call(this, t), t) {
								case 2:
									this.direction = TC.Z.UpRight;
									break;
								case 1:
									this.direction = TC.Z.UpLeft;
									break;
								default:
									this.direction = TC.Z.Left
							}
							this.setRotation(this.direction)
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.addBehavior(new PB(this))
						}, t
					}(oE),
					MB = RB,
					LB = function(e) {
						function t(t) {
							return e.call(this, t, "SubSlateStoneBehavior") || this
						}
						return (0, l.Z)(t, e), t
					}(Vb),
					GB = aa.Z.GAMEPLAY.GAME_OBJECTS,
					DB = GB.KEY,
					FB = GB.FRAME,
					NB = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, DB, FB.BLANK) || this).objectType = "SubSlateStone", a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function(t) {
							return e.prototype.initDefault.call(this, t), this.setScale(0), this.kill(), this
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.addBehavior(new LB(this))
						}, i.preKill = function(e) {
							var t;
							this.isKilled = !0, this.kill(), e && e(), this.applyFunction(y()(t = [this]).call(t, this.subObjects), "onPreKill")
						}, t
					}(oE),
					ZB = NB,
					UB = aa.Z.GAMEPLAY.GAME_OBJECTS,
					jB = UB.KEY,
					YB = UB.FRAME,
					WB = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, "LuckyPouchBehavior") || this).isExploded = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return e.prototype.initDefault.call(this), this.isExploded = !1, this
						}, i.explode = function() {
							var e = this;
							return new(oe())((function(t) {
								if (e.isExploded) t();
								else {
									e.isExploded = !0;
									var i = 1 / e.gameObject.scene.world.getPixelRatio(),
										n = e.gameObject.gameManager,
										a = n.grid,
										s = (n.gridObjectPool, n.particlePool),
										o = e.gameObject,
										r = o.x,
										l = o.y,
										c = [{
											objectType: "BombDrug"
										}, {
											objectType: "ElectricBall"
										}, {
											objectType: "RandomDirectionElectricBall",
											status: Phaser.Math.RND.between(0, 3)
										}, {
											objectType: "LavaBall"
										}, {
											objectType: "ColorBomb"
										}, {
											objectType: "ThreeThundersBall"
										}],
										h = c[Phaser.Math.RND.between(0, c.length - 1)],
										u = e.gameObject.gameManager.spritePool.spawn();
									u.setTexture(jB, YB.LUCKY_POUCH).setScale(1.6 * i).setAlpha(.8).setDepth(jn.Z.EFFECT).setPosition(r, l + 30).setOrigin(.5, 1), e.gameObject.scene.gameManager.scoreManager.addScore({
										x: r,
										y: l
									}, "explode"), e.gameObject.preKill((function() {
										a.replaceGridObject(e.gameObject, h), s.spawn("LuckyPouchExplodeParticle").explode(r, l), u.revive(), u.play("open-lucky-pouch"), u.once(Phaser.Animations.Events.ANIMATION_COMPLETE, (function() {
											u.kill(), t()
										}))
									}))
								}
							}))
						}, i.onActiveExplode = function() {
							return this.explode()
						}, i.onCollideWithBullet = function(e, t) {
							return this.gameObject.onActiveExplode()
						}, t
					}(Vb),
					KB = aa.Z.GAMEPLAY.GAME_OBJECTS,
					HB = KB.KEY,
					zB = KB.FRAME,
					XB = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, HB, zB.LUCKY_POUCH) || this).objectType = "LuckyPouch", a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.addBehavior(new WB(this))
						}, i.preKill = function(e) {
							var t, i = this,
								n = this.scale;
							this.isKilled = !0, this.scene.tweens.add({
								targets: this,
								duration: 200,
								scale: {
									from: n,
									to: 1.8 * n
								},
								onComplete: function() {
									i.kill(), e && e()
								},
								onCompleteScope: this,
								ease: Phaser.Math.Easing.Sine.Out
							}), this.applyFunction(y()(t = [this]).call(t, this.subObjects), "onPreKill")
						}, t
					}(oE),
					VB = XB,
					JB = function(e) {
						function t(t) {
							var i, n = t.scene;
							(i = e.call(this, n) || this).gameManager = void 0, i.scene = void 0, i.physicsRadius = void 0, i.texture = void 0, i.ballSize = void 0, i.scene = n, i.scene.add.existing((0, Un.Z)(i)), i.setActive(!0), i.texture = aa.Z.GAMEPLAY.GAME_OBJECTS.KEY, i.physicsRadius = i.scene.data.get("physicsWorld").gridBallCollisionRadius;
							var a = i.scene.data.get("ball"),
								s = a.width,
								o = a.height;
							return i.ballSize = new Phaser.Structs.Size(s, o), i.listenEvents(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.listenEvents = function() {
							this.scene.events.off("postupdate", this.postUpdate, this), this.scene.events.on("postupdate", this.postUpdate, this)
						}, i.postUpdate = function() {
							this.getMatching("active", !0).forEach((function(e) {
								e.isObjectHide() || e.postUpdate()
							}))
						}, i.spawn = function(e, t, i, n) {
							var a = this.ballSize,
								s = a.width,
								o = a.height,
								r = this.getMatching("objectType", i),
								l = ye()(r).call(r, (function(e) {
									return !e.active && e.isObjectReadyForReuse()
								}));
							return l || (l = this.createGridBall(i)), l.setWorldSize(s, o), l.initDefault(n), l.setPosition(e, t), l.revive(), l
						}, i.reset = function() {
							this.getChildren().forEach((function(e) {
								if (e.setObjectState(Xb.READY_FOR_REUSE), e.removeAllSubObjects(), e.active) {
									var t = e;
									t.clearObject(), t.kill()
								}
							}))
						}, i.createGridBall = function(e) {
							var t, i = this.ballSize,
								n = i.width,
								a = i.height;
							switch (e) {
								default:
									t = new HT(this.scene, 0, 0);
									break;
								case "ThunderBall":
									t = new z_(this.scene, 0, 0);
									break;
								case "BombDrug":
									t = new D_(this.scene, 0, 0);
									break;
								case "WhiteBall":
									t = new nC(this.scene, 0, 0);
									break;
								case "EarthenPot":
									t = new hC(this.scene, 0, 0);
									break;
								case "ElectricBall":
									t = new EC(this.scene, 0, 0);
									break;
								case "Stone":
									t = new pA(this.scene, 0, 0);
									break;
								case "GemBall":
									t = new lA(this.scene, 0, 0);
									break;
								case "RandomDirectionElectricBall":
									t = new GC(this.scene, 0, 0);
									break;
								case "BlackHole":
									t = new MA(this.scene, 0, 0);
									break;
								case "PlusMinusBall":
									t = new HC(this.scene, 0, 0);
									break;
								case "LavaBall":
									t = new aw(this.scene, 0, 0);
									break;
								case "Mummy":
									t = new pw(this.scene, 0, 0);
									break;
								case "QuestionMarkBall":
									t = new Ew(this.scene, 0, 0);
									break;
								case "TwoColorsBall":
									t = new jA(this.scene, 0, 0);
									break;
								case "RotationWheel":
									t = new $A(this.scene, 0, 0);
									break;
								case "MirrorBall":
									t = new hS(this.scene, 0, 0);
									break;
								case "Lamp":
									t = new Fw(this.scene, 0, 0);
									break;
								case "Candle":
									t = new zw(this.scene, 0, 0);
									break;
								case "SwitchBlackHole":
									t = new $w(this.scene, 0, 0);
									break;
								case "ColorBomb":
									t = new cB(this.scene, 0, 0);
									break;
								case "EmptyBall":
									t = new GS(this.scene, 0, 0);
									break;
								case "ThreeThundersBall":
									t = new IB(this.scene, 0, 0);
									break;
								case "SlateStone":
									t = new MB(this.scene, 0, 0);
									break;
								case "SubSlateStone":
									t = new ZB(this.scene, 0, 0);
									break;
								case "LuckyPouch":
									t = new VB(this.scene, 0, 0);
									break;
								case "KeyBall":
									t = new PS(this.scene, 0, 0);
									break;
								case "RelicMask":
									t = new bS(this.scene, 0, 0)
							}
							return this.add(t), t.setWorldSize(n, a), t.setDepth(jn.Z.BALL), t
						}, i.getChildren = function() {
							return e.prototype.getChildren.call(this)
						}, i.calculateGeom = function() {
							this.scene.gameManager.gridObjectPool.getMatching("visible", !0).forEach((function(e) {
								e.calculateGeom()
							}))
						}, i.changeColorGridObjects = function() {
							var e, t = this.getMatching("active", !0),
								i = [];
							return t.forEach((function(e) {
								e.isObjectReady() && i.push(e.onChangeBullet())
							})), oe().all(y()(e = []).call(e, i))
						}, t
					}(Phaser.GameObjects.Group),
					qB = JB,
					QB = function(e) {
						function t(t) {
							return e.call(this, t, "HexagonWireBehavior") || this
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.explode = function() {
							var e = this,
								t = this.gameObject.gridObject;
							return new(oe())((function(i) {
								e.gameObject.preKill(), t && t.removeSubObject("HexagonWire"), e.gameObject.gridObject = void 0, e.scene.time.delayedCall(200, i)
							}))
						}, i.onActiveExplode = function() {
							var e = this.gameObject.gridObject;
							return e && !e.isKilled ? oe().resolve() : this.explode()
						}, i.onObjectOrphaned = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, i;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (t = this.gameObject.gridObject) {
												e.next = 3;
												break
											}
											return e.abrupt("return", oe().resolve());
										case 3:
											return t.removeSubObject("HexagonWire"), this.gameObject.gridObject = void 0, e.next = 7, t.onActiveExplode();
										case 7:
											return e.next = 9, this.gameObject.onActiveExplode();
										case 9:
											return (i = t.getBehavior("DropBehavior")) && (i.active = !0), e.next = 13, t.grid.processOrphaned();
										case 13:
											return e.abrupt("return");
										case 14:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), t
					}(Vb),
					$B = QB,
					eI = aa.Z.GAMEPLAY.GAME_OBJECTS,
					tI = eI.KEY,
					iI = eI.FRAME,
					nI = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, 0, 0, tI, iI.HEXAGON_WIRE) || this).getObjectsEffected = void 0, i.explodeBehavior = void 0, i.objectType = "HexagonWire", i.setDisplaySize(68, 68), i.depthIndex = jn.X.HEXAGON_WIRE, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							if (e.prototype.initDefault.call(this), !this.gridObject) return this;
							var t = this.gridObject.getBehavior("DropBehavior");
							if (!t) return this;
							var i = this.gridObject.getBehavior("ExplodeWhenOrphanedBehavior");
							return i && (i.active = !1), t.active = !1, this
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.explodeBehavior = new $B(this), this.addBehavior(this.explodeBehavior)
						}, i.kill = function() {
							e.prototype.kill.call(this)
						}, t
					}(fA),
					aI = nI,
					sI = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, "BatBehavior") || this).flyingState = void 0, i.oldPosition = void 0, i.flyUpTween = void 0, i.flyToTween = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.attachBat = function() {
							var e = this.gameObject.gridObject;
							if (!e) return oe().resolve();
							this.flyToTween && (this.flyToTween.stop(), this.flyToTween = void 0);
							var t = e.gameManager.grid,
								i = t.getRandomAttachablePosition(),
								n = this.scene.gameManager.grid.getXYByRowCol(e, !0);
							return this.oldPosition = {
								x: n.x,
								y: n.y
							}, t.attachObject(i.row, i.col, e), oe().resolve()
						}, i.flyUp = function() {
							var e = this,
								t = this.gameObject.gridObject;
							if (!t) return oe().resolve();
							var i = t.gameManager.grid;
							t.isFlying = !0, t.setDepth(jn.Z.BAT_FLY_UP), this.gameObject.stopIdleAnimation(), this.gameObject.batFlyingSprite.revive(), this.gameObject.batFlyingSprite.play({
								key: "bat-flying",
								repeat: -1
							}, !0);
							var n = this.scene.gameManager.grid.descentController.getDy(),
								a = 32 * Math.abs(Math.floor(n / 29)) + 300,
								s = Math.abs(n) < 106 ? this.oldPosition.y + n : this.oldPosition.y + 106 * ra()(n);
							return t.setPosition(this.oldPosition.x, this.oldPosition.y), this.gameObject.scene.audio.playSound(sa.Z.BAT_FLYING), this.flyUpTween = this.gameObject.scene.tweens.add({
								targets: [t],
								duration: a,
								props: {
									y: {
										value: s
									}
								},
								onComplete: function() {
									e.flyUpTween = void 0, t.setObjectState(Xb.READY), t.setPosition(e.oldPosition.x, s);
									var n = new Phaser.Geom.Point(e.gameObject.x, e.gameObject.y);
									e.flyToTween = e.gameObject.scene.tweens.addCounter({
										from: 0,
										to: 1,
										duration: 800,
										onUpdate: function(e) {
											var a = i.getXYByRowCol(t),
												s = Phaser.Math.Easing.Quadratic.Out(e.getValue()),
												o = n.x + (a.x - n.x) * s,
												r = n.y + (a.y - n.y) * s;
											t.setPosition(o, r)
										},
										onComplete: function() {
											e.flyToTween = void 0, e.oldPosition = {
												x: 0,
												y: 0
											}, e.gameObject.batFlyingSprite.stop(), e.gameObject.batFlyingSprite.setFrame(aa.Z.GAMEPLAY.GAME_OBJECTS.FRAME.BAT), e.gameObject.batFlyingSprite.kill(), e.gameObject.restartIdleAnimation(), t.setDepth(jn.Z.BALL), t.isFlying = !1
										}
									})
								}
							}), oe().resolve()
						}, i.initDefault = function() {
							return e.prototype.initDefault.call(this), this.flyingState = "standing", this
						}, i.onObjectOrphaned = function() {
							var e = this.gameObject.gridObject;
							return e ? (this.flyingState = "flyingUp", this.gameObject.gameManager.grid.removeFromGrid([e]), this.currentEvent.stopPropagation(), oe().resolve()) : oe().resolve()
						}, i.onPreEndTurn = function() {
							return this.flyingState && "flyingUp" == this.flyingState ? this.attachBat() : oe().resolve()
						}, i.onEndTurn = function() {
							return this.flyingState && "flyingUp" == this.flyingState ? (this.flyingState = "standing", this.flyUp()) : oe().resolve()
						}, i.onPreKill = function() {
							return this.kill(), oe().resolve()
						}, i.kill = function() {
							var e, t, i;
							null == (e = this.flyUpTween) || e.complete(), null == (t = this.flyToTween) || t.complete(), this.gameObject.batHeadSprite.kill(), this.gameObject.batLeftWingSprite.kill(), this.gameObject.batRightWingSprite.kill(), null == (i = this.gameObject.gridObject) || i.removeSubObject("Bat")
						}, i.onActiveExplode = function(e) {
							if (e && !(e instanceof DT)) {
								var t;
								this.kill();
								var i = null == (t = this.gameObject.gridObject) ? void 0 : t.getBehavior("DropBehavior");
								i && (i.active = !0)
							}
							return oe().resolve()
						}, t
					}(Vb),
					oI = aa.Z.GAMEPLAY.GAME_OBJECTS,
					rI = oI.KEY,
					lI = oI.FRAME,
					cI = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, 0, 0) || this).flyUpBehavior = void 0, i.batHeadSprite = void 0, i.batFlyingSprite = void 0, i.batLeftWingSprite = void 0, i.batRightWingSprite = void 0, i.batContainer = void 0, i.leftWingIdleAnimation = void 0, i.rightWingIdleAnimation = void 0, i.objectType = "Bat", i.createBat(), i.depthIndex = jn.X.BAT, i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return e.prototype.initDefault.call(this), this.gridObject ? (this.batHeadSprite.revive(), this.batLeftWingSprite.revive(), this.batRightWingSprite.revive(), this.batFlyingSprite.kill(), this.createIdleAnimation(), this) : this
						}, i.createBat = function() {
							this.batContainer = this.scene.add.container(), this.createBatHead(), this.createBatWings(), this.createBatFlyingWing(), this.batContainer.setSize(34, 34), this.batContainer.add([this.batRightWingSprite, this.batLeftWingSprite, this.batFlyingSprite, this.batHeadSprite]), this.batContainer.setDepth(jn.Z.BALL + 1)
						}, i.createBehaviors = function() {
							this.flyUpBehavior = new sI(this), this.addBehavior(this.flyUpBehavior)
						}, i.createBatWings = function() {
							this.batRightWingSprite = this.scene.add.sprite(0, 0, rI, lI.BAT_RIGHT_WING_CLOSED), this.batRightWingSprite.setDisplaySize(15, 24), this.batRightWingSprite.setOrigin(.5, 0), this.batRightWingSprite.setPosition(this.width / 2 - 3, -10), this.batLeftWingSprite = this.scene.add.sprite(0, 0, rI, lI.BAT_LEFT_WING_CLOSED), this.batLeftWingSprite.setDisplaySize(15, 24), this.batLeftWingSprite.setOrigin(.5, 0), this.batLeftWingSprite.setPosition(-this.width / 2 + 3, -10)
						}, i.createBatHead = function() {
							this.batHeadSprite = this.scene.add.sprite(0, 0, rI, lI.BAT_HEAD), this.batHeadSprite.setDisplaySize(29, 15), this.batHeadSprite.setPosition(0, -13)
						}, i.createBatFlyingWing = function() {
							this.batFlyingSprite = this.scene.add.sprite(0, 0, rI, lI.BAT), this.batFlyingSprite.setDisplaySize(40, 35), this.batFlyingSprite.kill(), this.batFlyingSprite.setPosition(0, -3)
						}, i.postUpdate = function() {
							e.prototype.postUpdate.call(this), this.batContainer.setPosition(this.x, this.y)
						}, i.kill = function() {
							var t, i;
							e.prototype.kill.call(this), this.batContainer.kill(), null == (t = this.leftWingIdleAnimation) || t.remove(), null == (i = this.rightWingIdleAnimation) || i.remove()
						}, i.revive = function() {
							var t, i;
							e.prototype.revive.call(this), this.setVisible(!1), this.batContainer.revive(), null == (t = this.leftWingIdleAnimation) || t.restart(), null == (i = this.rightWingIdleAnimation) || i.restart()
						}, i.updateDepthObjects = function(e) {
							var t;
							null == (t = this.batContainer) || t.setDepth(e + this.depthIndex)
						}, i.createIdleAnimation = function() {
							var e = this;
							this.leftWingIdleAnimation = this.scene.tweens.add({
								targets: [this.batLeftWingSprite],
								props: {
									rotation: {
										from: 0,
										to: -.1
									}
								},
								duration: 600,
								yoyo: !0,
								repeat: -1,
								ease: Phaser.Math.Easing.Sine.InOut,
								onStart: function() {
									e.batLeftWingSprite.setRotation(0)
								}
							}), this.rightWingIdleAnimation = this.scene.tweens.add({
								targets: [this.batRightWingSprite],
								props: {
									rotation: {
										from: 0,
										to: .1
									}
								},
								duration: 600,
								yoyo: !0,
								repeat: -1,
								ease: Phaser.Math.Easing.Sine.InOut,
								onStart: function() {
									e.batRightWingSprite.setRotation(0)
								}
							})
						}, i.stopIdleAnimation = function() {
							this.batHeadSprite.kill(), this.batRightWingSprite.kill(), this.batLeftWingSprite.kill(), this.leftWingIdleAnimation.remove(), this.rightWingIdleAnimation.remove()
						}, i.restartIdleAnimation = function() {
							this.batHeadSprite.revive(), this.batRightWingSprite.revive(), this.batLeftWingSprite.revive(), this.leftWingIdleAnimation.restart(), this.rightWingIdleAnimation.restart()
						}, t
					}(fA),
					hI = cI,
					uI = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, "LeavesExplodeBehavior") || this).isExploded = !1, i.scene.gameManager.particlePool.init("LeavesExplodeParticle", 1, 6), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return e.prototype.initDefault.call(this), this.isExploded = !1, this
						}, i.explode = function() {
							var e = this,
								t = this.gameObject.gridObject,
								i = this.scene.gameManager;
							return t ? this.isExploded ? oe().resolve() : (this.isExploded = !0, new(oe())((function(n) {
								e.gameObject.scene.audio.playSound(sa.Z.LEAVES_EXPLODE), e.gameObject.preKill(), t.removeSubObject("Leaves");
								var a = i.particlePool.spawn("LeavesExplodeParticle");
								a.revive(), a.explode(t.x, t.y), e.scene.time.delayedCall(200, n)
							}))) : oe().resolve()
						}, i.onActiveExplode = function() {
							return this.explode()
						}, i.onNearBallMatch = function(e) {
							var t = this;
							return new(oe())((function(e) {
								t.scene.time.delayedCall(83, (function() {
									t.explode().then(e)
								}))
							}))
						}, i.onCollideWithBullet = function(e, t) {
							return this.explode()
						}, i.onObjectOrphaned = function() {
							return this.explode()
						}, i.onNearBallExplode = function(e) {
							var t = this;
							return new(oe())((function(e) {
								t.scene.time.delayedCall(83, (function() {
									t.explode(), e()
								}))
							}))
						}, t
					}(Vb),
					dI = aa.Z.GAMEPLAY.GAME_OBJECTS,
					pI = dI.KEY,
					mI = dI.FRAME,
					fI = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, 0, 0, pI, mI.LEAVES) || this).getObjectsEffected = void 0, i.explodeBehavior = void 0, i.objectType = "Leaves", i.setDisplaySize(37, 36.5), i.depthIndex = jn.X.LEAVES, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return e.prototype.initDefault.call(this), this
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.explodeBehavior = new uI(this), this.addBehavior(this.explodeBehavior)
						}, i.kill = function() {
							e.prototype.kill.call(this)
						}, t
					}(fA),
					gI = fI,
					vI = aa.Z.GAMEPLAY.EFFECTS,
					yI = vI.KEY,
					bI = vI.FRAME,
					EI = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, "SpiderWebBehavior") || this).isExploded = !1, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return e.prototype.initDefault.call(this), this.isExploded = !1, this
						}, i.explode = function() {
							var e = this,
								t = this.gameObject.gridObject;
							return t ? this.isExploded ? oe().resolve() : (this.isExploded = !0, new(oe())((function(i) {
								e.gameObject.preKill(), t.removeSubObject("SpiderWeb"), e.gameObject.scene.audio.playSound(sa.Z.SPIDER_WEB_EXPLODE);
								var n = t.x,
									a = t.y,
									s = 1 / e.gameObject.scene.world.getPixelRatio(),
									o = e.gameObject.gameManager.spritePool.spawn();
								o.setTexture(yI, bI.GLOW_4).setScale(s).setDepth(jn.Z.EFFECT_HIGH).setAlpha(1).setPosition(n, a), e.gameObject.gameManager.particlePool.spawn("SpiderWebExplodeParticle").explode(n, a), e.gameObject.scene.tweens.add({
									targets: o,
									duration: 100,
									alpha: {
										from: 1,
										to: 0,
										ease: Phaser.Math.Easing.Sine.In
									},
									onComplete: function() {
										o.kill(), i()
									}
								})
							}))) : oe().resolve()
						}, i.onActiveExplode = function() {
							return this.currentEvent.stopPropagation(), this.explode()
						}, i.onObjectOrphaned = function() {
							return this.explode()
						}, t
					}(Vb),
					TI = aa.Z.GAMEPLAY.GAME_OBJECTS,
					AI = TI.KEY,
					SI = TI.FRAME,
					_I = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, 0, 0, AI, SI.SPIDER_WEB) || this).getObjectsEffected = void 0, i.explodeBehavior = void 0, i.objectType = "SpiderWeb", i.setDisplaySize(33, 34.5), i.depthIndex = jn.X.SPIDER_WEB, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return e.prototype.initDefault.call(this), this
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.explodeBehavior = new EI(this), this.addBehavior(this.explodeBehavior)
						}, i.kill = function() {
							e.prototype.kill.call(this)
						}, t
					}(fA),
					CI = _I,
					wI = function(e) {
						function t(t) {
							return e.call(this, t, "SpiderBehavior") || this
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.onActiveExplode = function() {
							var e;
							return this.gameObject.preKill(), null == (e = this.gameObject.gridObject) || e.removeSubObject("Spider"), oe().resolve()
						}, i.onStartTurn = function() {
							return this.move()
						}, i.move = function() {
							var e = this;
							return new(oe())((function(t) {
								var i, n = e.gameObject.gameManager.grid,
									a = e.gameObject.gridObject;
								if (a) {
									var s = A()(i = n.getAdjacentObjects(a, 1)[0]).call(i, (function(e) {
										return !e.getSubObject("Spider") && !e.isHasIronBoard()
									}));
									if (0 !== s.length) {
										var o, r = A()(s).call(s, (function(e) {
											return !e.getSubObject("SpiderWeb")
										}));
										if (o = r.length > 0 ? r[Phaser.Math.RND.between(0, r.length - 1)] : s[Phaser.Math.RND.between(0, s.length - 1)], a.removeSubObject("Spider"), e.gameObject.gridObject = void 0, !a.getSubObject("SpiderWeb")) {
											var l = e.scene.gameManager.subGridObjectPool.spawn("SpiderWeb", a);
											l.updateDepthObjects(a.depth), a.addSubObject(l);
											var c = e.gameObject.spiderWebImage;
											c.setPosition(e.gameObject.x, e.gameObject.y), c.revive();
											var h = 1 / e.scene.world.getPixelRatio();
											e.scene.tweens.add({
												targets: c,
												duration: 300,
												props: {
													scale: {
														start: h,
														from: h,
														to: 1.5 * h
													}
												},
												yoyo: !0,
												onStart: function() {
													e.gameObject.scene.audio.playSound(sa.Z.SPIDER_WEB_EXPLODE)
												},
												onUpdate: function() {
													c.setPosition(a.x, a.y)
												},
												onComplete: function() {
													c.kill()
												}
											})
										}
										o.addSubObject(e.gameObject);
										var u = new Phaser.Geom.Point(o.x, o.y),
											d = new Phaser.Geom.Point(e.gameObject.x, e.gameObject.y);
										t(), a.scene.tweens.addCounter({
											from: 0,
											to: 1,
											duration: 400,
											onUpdate: function(t) {
												var i = t.getValue();
												u = new Phaser.Geom.Point(o.x, o.y);
												var n = Phaser.Geom.Point.Interpolate(d, u, i);
												e.gameObject.setPosition(n.x, n.y)
											},
											onComplete: function() {
												e.gameObject.setGridObject(o), e.gameObject.updateDepthObjects(o.depth)
											}
										})
									} else t()
								} else t()
							}))
						}, t
					}(Vb),
					BI = aa.Z.GAMEPLAY.GAME_OBJECTS,
					II = BI.KEY,
					PI = BI.FRAME,
					xI = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, 0, 0, II, PI.BLANK) || this).spiderImage = void 0, i.spiderWebImage = void 0, i.depthIndex = jn.X.SPIDER, i.objectType = "Spider", i.createSpiderImage(), i.createSpiderWebImage(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createSpiderWebImage = function() {
							this.spiderWebImage = this.scene.make.image({
								key: II,
								frame: PI.SPIDER_WEB
							}), this.spiderWebImage.setWorldSize(30, 30), this.spiderWebImage.kill(), this.scene.add.existing(this.spiderWebImage)
						}, i.initDefault = function(t) {
							var i;
							return e.prototype.initDefault.call(this), null == (i = this.spiderWebImage) || i.kill(), this.setScale(0), this
						}, i.createSpiderImage = function() {
							this.spiderImage = this.scene.make.image({
								key: II,
								frame: PI.SPIDER
							}), this.spiderImage.setWorldSize(18, 17.5), this.spiderImage.setFlipX(!0), this.scene.add.existing(this.spiderImage)
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.addBehavior(new wI(this))
						}, i.postUpdate = function() {
							var t;
							e.prototype.postUpdate.call(this), null == (t = this.spiderImage) || t.setPosition(this.x - 8, this.y - 6)
						}, i.updateDepthObjects = function(t) {
							e.prototype.updateDepthObjects.call(this, t), this.spiderWebImage.setDepth(this.depth), this.spiderImage.setDepth(this.depth)
						}, i.kill = function() {
							var t, i;
							e.prototype.kill.call(this), null == (t = this.spiderWebImage) || t.kill(), null == (i = this.spiderImage) || i.kill()
						}, i.revive = function() {
							var t;
							e.prototype.revive.call(this), null == (t = this.spiderImage) || t.revive()
						}, t
					}(fA),
					OI = xI,
					kI = function(e) {
						function t(t) {
							return e.call(this, t, "LadybirdBehavior") || this
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.onActiveExplode = function() {
							return this.gameObject.preKill(), oe().resolve()
						}, i.onStartTurn = function() {
							return this.fly()
						}, i.fly = function() {
							var e = this;
							return new(oe())((function(t) {
								var i, n = e.gameObject.gameManager.grid,
									a = e.gameObject.gridObject,
									s = e.scene.gameManager;
								if (a) {
									var o = A()(i = n.getAdjacentObjects(a, 1)[0]).call(i, (function(e) {
										return !e.getSubObject("Ladybird") && !e.isHasIronBoard()
									}));
									if (0 !== o.length) {
										var r, l = A()(o).call(o, (function(e) {
											return !e.getSubObject("Leaves")
										}));
										if (r = l.length > 0 ? l[Phaser.Math.RND.between(0, l.length - 1)] : o[Phaser.Math.RND.between(0, o.length - 1)], a.removeSubObject("Ladybird"), e.gameObject.gridObject = void 0, !a.getSubObject("Leaves")) {
											var c = e.scene.gameManager.subGridObjectPool.spawn("Leaves", a);
											c.updateDepthObjects(a.depth), e.gameObject.scene.audio.playSound(sa.Z.LEAVES_EXPLODE);
											var h = s.particlePool.spawn("LeavesExplodeParticle");
											h.revive(), h.explode(a.x, a.y), a.addSubObject(c)
										}
										r.addSubObject(e.gameObject);
										var u = new Phaser.Geom.Point(r.x, r.y),
											d = new Phaser.Geom.Point(e.gameObject.x, e.gameObject.y);
										t(), a.scene.tweens.addCounter({
											from: 0,
											to: 1,
											duration: 400,
											onUpdate: function(t) {
												var i = t.getValue();
												u = new Phaser.Geom.Point(r.x, r.y);
												var n = Phaser.Geom.Point.Interpolate(d, u, i);
												e.gameObject.setPosition(n.x, n.y)
											},
											onComplete: function() {
												e.gameObject.setGridObject(r), e.gameObject.updateDepthObjects(r.depth)
											}
										})
									} else t()
								} else t()
							}))
						}, t
					}(Vb),
					RI = aa.Z.GAMEPLAY.GAME_OBJECTS,
					MI = RI.KEY,
					LI = RI.FRAME,
					GI = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, 0, 0, MI, LI.BLANK) || this).ladybirdImage = void 0, i.depthIndex = jn.X.LADYBIRD, i.objectType = "Ladybird", i.createLadybirdImage(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function(t) {
							return void 0 === t && (t = 0), e.prototype.initDefault.call(this), this.setScale(0), this
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.addBehavior(new kI(this))
						}, i.createLadybirdImage = function() {
							this.ladybirdImage = this.scene.make.image({
								key: MI,
								frame: LI.LADYBIRD
							}), this.ladybirdImage.setWorldSize(14.5, 15.5), this.ladybirdImage.setFlipX(!0), this.scene.add.existing(this.ladybirdImage)
						}, i.postUpdate = function() {
							var t;
							e.prototype.postUpdate.call(this), null == (t = this.ladybirdImage) || t.setPosition(this.x + 9, this.y - 7)
						}, i.updateDepthObjects = function(t) {
							var i;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.ladybirdImage) || i.setDepth(t + this.depthIndex)
						}, i.kill = function() {
							var t;
							e.prototype.kill.call(this), null == (t = this.ladybirdImage) || t.kill()
						}, i.revive = function() {
							var t;
							e.prototype.revive.call(this), null == (t = this.ladybirdImage) || t.revive()
						}, t
					}(fA),
					DI = GI,
					FI = aa.Z.GAMEPLAY.GAME_OBJECTS,
					NI = FI.KEY,
					ZI = FI.FRAME,
					UI = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, "IronBoardBehavior") || this).effectImage = void 0, i.effectImage = i.scene.add.image(0, 0, NI, ZI.IRON_BOARD), i.effectImage.kill(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return e.prototype.initDefault.call(this), this.setEnableBehaviors(!1), this.effectImage.setFrame(this.gameObject.frame.name), this.effectImage.setWorldSize(this.gameObject.width, this.gameObject.height), this.effectImage.kill(), this
						}, i.setEnableBehaviors = function(e) {
							var t = this.gameObject.gridObject;
							t && t.behaviors.forEach((function(i) {
								"DropBehavior" !== i.key && "DropWhenLevelEndBehavior" !== i.key && (i.active = e, i instanceof Rw && 1 == t.status && e && !t.isObjectLossLink() && i.runSmokeFadeAnimation(0, 1, 300))
							}))
						}, i.drop = function() {
							var e = this,
								t = this.gameObject.gridObject;
							if (!t) return oe().resolve();
							this.setEnableBehaviors(!0), t.removeSubObject(this.gameObject.objectType), this.gameObject.gridObject = void 0;
							var i = this.scene.gameZone,
								n = i.x + i.width - 20,
								a = i.x + 20;
							return new(oe())((function(t) {
								var i = (100 * Math.random() + 50) * Phaser.Math.RND.pick([1, -1]),
									s = 200 * -Math.random() - 200,
									o = 2 * i,
									r = 300 * Math.random() + 700,
									l = e.scene.time.now,
									c = 0,
									h = e.gameObject.scale;
								e.effectImage.revive(), e.effectImage.setAlpha(1), e.effectImage.setPosition(e.gameObject.x, e.gameObject.y), e.effectImage.setAngle(e.gameObject.angle), e.effectImage.setScale(e.gameObject.scale), e.effectImage.setDepth(jn.Z.EFFECT_HIGH + 2), e.scene.tweens.add({
									targets: e.gameObject,
									scale: 1.2 * h,
									duration: r,
									ease: Phaser.Math.Easing.Sine.Out
								}), e.scene.tweens.add({
									targets: e.effectImage,
									alpha: 1,
									duration: r / 2,
									ease: Phaser.Math.Easing.Sine.Out
								}), e.scene.tweens.add({
									targets: [e.effectImage, e.gameObject],
									alpha: 0,
									duration: r / 2,
									delay: r / 2,
									ease: Phaser.Math.Easing.Sine.Out
								}), e.scene.tweens.addCounter({
									from: 0,
									to: 1,
									duration: r,
									onUpdate: function() {
										c = (e.scene.time.now - l) / 1e3, l = e.scene.time.now, e.gameObject.x += i * c, e.gameObject.y += s * c, e.gameObject.x > n && (e.gameObject.x = n), e.gameObject.x < a && (e.gameObject.x = a), e.gameObject.angle += o * c, e.effectImage.setPosition(e.gameObject.x, e.gameObject.y), e.effectImage.setAngle(e.gameObject.angle), e.effectImage.setScale(e.gameObject.scale), s += 1300 * c
									},
									onComplete: function() {
										e.effectImage.kill(), t()
									}
								})
							}))
						}, i.unlockIronBoard = function() {
							return this.drop()
						}, i.onObjectOrphaned = function() {
							if (!this.gameObject.gridObject) return oe().resolve();
							if (this.gameObject.isHasLock()) {
								var e = this.gameObject.keyObject;
								e && e.key.fadeOut()
							}
							return this.drop()
						}, t
					}(Vb),
					jI = aa.Z.GAMEPLAY.GAME_OBJECTS,
					YI = jI.KEY,
					WI = jI.FRAME,
					KI = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, 0, 0, YI, WI.IRON_BOARD) || this).isLock = !1, i.isLocking = !0, i.ironBoardBehavior = void 0, i.keyObject = void 0, i.depthIndex = jn.X.IRON_BOARD, i.objectType = "IronBoard", i.ironBoardBehavior = i.getBehavior("IronBoardBehavior"), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function(t) {
							return void 0 === t && (t = 0), e.prototype.initDefault.call(this, t), this.setWorldSize(40, 44.5), this.setIronBoardState(t), this.isLocking = !0, this
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.addBehavior(new UI(this))
						}, i.setIronBoardState = function(e) {
							void 0 === e && (e = 0), e ? this.setFrame(WI.IRON_BOARD_LOCK) : this.setFrame(WI.IRON_BOARD), this.isLock = !!e
						}, i.isHasLock = function() {
							return this.isLock
						}, i.unlockIronBoard = function() {
							return this.isLocking = !1, this.ironBoardBehavior.unlockIronBoard()
						}, t
					}(fA),
					HI = KI,
					zI = aa.Z.GAMEPLAY.EFFECTS,
					XI = zI.KEY,
					VI = zI.FRAME,
					JI = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, "MudBehavior") || this).isExploded = void 0, i.mudScale = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return e.prototype.initDefault.call(this), this.mudScale = this.gameObject.scale, this.isExploded = !1, this
						}, i.explode = function() {
							var e = this;
							return new(oe())((function(t) {
								var i = e.gameObject.gridObject;
								if (i) {
									var n = e.gameObject,
										a = n.x,
										s = n.y;
									e.gameObject.preKill(), i.removeSubObject("Mud"), e.runExplodeAnimation(a, s), t()
								} else t()
							}))
						}, i.flyMud = function() {
							var e = this;
							return new(oe())((function(t) {
								var i, n = e.gameObject.gridObject;
								if (n) {
									var a = e.gameObject.gameManager.grid,
										s = A()(i = a.getExplodableObjects()).call(i, (function(e) {
											return !e.isProcess && !e.isHasMud() && !e.isHasIronBoard()
										})),
										o = s[Phaser.Math.RND.between(0, s.length - 1)];
									if (!o) return e.gameObject.preKill(), void t();
									o.isProcess = !0;
									var r = e.gameObject,
										l = r.x,
										c = r.y,
										h = a.getXYByRowCol(o),
										u = h.x,
										d = h.y,
										p = new Phaser.Math.Vector2(l, c),
										m = new Phaser.Math.Vector2(u, d),
										f = Math.random() > .5 ? 1 : -1,
										g = new Phaser.Math.Vector2(l + 32 * f, c - 32 * f),
										v = new Phaser.Math.Vector2(u - 32 * f, d - 32 * f),
										y = new Phaser.Curves.CubicBezier(p, g, v, m);
									n.removeSubObject("Mud"), e.gameObject.gridObject = void 0, e.runExplodeAnimation(l, c), e.gameObject.scene.tweens.addCounter({
										from: 0,
										to: 1,
										duration: 300,
										onUpdate: function(t) {
											var i = t.getValue(),
												n = y.getPointAt(i);
											e.gameObject.setPosition(n.x, n.y)
										},
										onStart: function() {
											e.gameObject.setFrame(VI.MUD_SPLASH_04), e.gameObject.setScale(e.mudScale), e.isExploded = !1
										},
										onComplete: function() {
											var i = a.getRowColByXY(u, d),
												n = i.row,
												s = i.col,
												r = a.getObjectAt({
													row: n,
													col: s
												});
											if (!r || r.isKilled) return e.gameObject.preKill(), void t();
											e.runExplodeAnimation(u, d), o.addSubObject(e.gameObject), e.gameObject.setGridObject(o), e.gameObject.setScale(e.mudScale), e.gameObject.updateDepthObjects(o.depth), e.gameObject.changeMudStatus(), t()
										}
									})
								} else t()
							}))
						}, i.runExplodeAnimation = function(e, t) {
							var i = 1 / this.gameObject.scene.world.getPixelRatio(),
								n = this.gameObject.gameManager.spritePool.spawn();
							n.setTexture(XI, VI.MUD_SPLASH_01).setScale(.8 * i).setDepth(jn.Z.EFFECT).setAlpha(.5), this.gameObject.gameManager.particlePool.spawn("MudExplodeParticle").explode(e, t), this.gameObject.scene.tweens.add({
								targets: n,
								duration: 200,
								props: {
									scale: {
										from: .8 * i,
										to: 1.2 * i
									},
									alpha: {
										from: .5,
										to: 1
									}
								},
								ease: Phaser.Math.Easing.Sine.In,
								onStart: function() {
									n.setPosition(e, t)
								},
								onComplete: function() {
									n.setScale(.8 * i).setAlpha(.5), n.kill()
								}
							})
						}, i.onStartTurn = function() {
							return this.isExploded = !1, oe().resolve()
						}, i.onActiveExplode = function() {
							return this.isExploded ? oe().resolve() : (this.currentEvent.stopPropagation(), this.isExploded = !0, "full" == this.gameObject.getMudStatus() ? this.flyMud() : this.explode())
						}, i.onCollideWithBullet = function(e, t) {
							return this.gameObject.onActiveExplode()
						}, t
					}(Vb),
					qI = aa.Z.GAMEPLAY.GAME_OBJECTS,
					QI = qI.KEY,
					$I = qI.FRAME,
					eP = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, 0, 0, QI, $I.MUD_FULL) || this).mudStatus = void 0, i.mudScale = void 0, i.objectType = "Mud", i.setDisplaySize(32, 32), i.depthIndex = jn.X.MUD, i.mudScale = i.scale, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return e.prototype.initDefault.call(this), this.setFrame($I.MUD_FULL), this.mudStatus = "full", this.setScale(this.mudScale), this
						}, i.changeMudStatus = function() {
							this.setFrame($I.MUD_HALF), this.mudStatus = "half"
						}, i.getMudStatus = function() {
							return this.mudStatus
						}, i.createBehaviors = function() {
							e.prototype.createBehaviors.call(this), this.addBehavior(new JI(this))
						}, i.kill = function() {
							e.prototype.kill.call(this)
						}, t
					}(fA),
					tP = eP,
					iP = function(e) {
						function t(t) {
							var i, n = t.scene;
							(i = e.call(this, n) || this).gameManager = void 0, i.scene = void 0, i.physicsRadius = void 0, i.texture = void 0, i.ballSize = void 0, i.scene = n, i.scene.add.existing((0, Un.Z)(i)), i.setActive(!0), i.texture = aa.Z.GAMEPLAY.GAME_OBJECTS.KEY, i.physicsRadius = i.scene.data.get("physicsWorld").gridBallCollisionRadius;
							var a = i.scene.data.get("ball"),
								s = a.width,
								o = a.height;
							return i.ballSize = new Phaser.Structs.Size(s, o), i.listenEvents(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.listenEvents = function() {
							this.scene.events.off("postupdate", this.postUpdate, this), this.scene.events.on("postupdate", this.postUpdate, this)
						}, i.postUpdate = function() {
							this.getMatching("active", !0).forEach((function(e) {
								var t;
								null != (t = e.gridObject) && t.isObjectHide() || e.postUpdate()
							}))
						}, i.spawn = function(e, t, i) {
							var n = this.getMatching("objectType", e),
								a = ye()(n).call(n, (function(e) {
									return !e.active && !e.getGridObject()
								}));
							return a || (a = this.createSubObject(e)), a.setGridObject(t), a.initDefault(i), a.revive(), a
						}, i.reset = function() {
							this.getChildren().forEach((function(e) {
								e.gridObject = void 0, e.active && e.kill()
							}))
						}, i.createSubObject = function(e) {
							var t;
							switch (e) {
								case "HexagonWire":
									t = new aI(this.scene);
									break;
								case "Bat":
									t = new hI(this.scene);
									break;
								case "IronShell":
									t = new TA(this.scene);
									break;
								case "SpiderWeb":
									t = new CI(this.scene);
									break;
								case "Spider":
									t = new OI(this.scene);
									break;
								case "Ladybird":
									t = new DI(this.scene);
									break;
								case "IronBoard":
									t = new HI(this.scene);
									break;
								case "Mud":
									t = new tP(this.scene);
									break;
								default:
									t = new gI(this.scene)
							}
							return this.add(t), t
						}, i.getChildren = function() {
							return e.prototype.getChildren.call(this)
						}, t
					}(Phaser.GameObjects.Group),
					nP = iP,
					aP = i(95211),
					sP = i(32366),
					oP = i.n(sP),
					rP = function() {
						function e(e, t) {
							this.currentBehavior = void 0, this.behaviors = void 0, this.eventName = void 0, this.params = void 0, this.isStopPropagation = !1, this.behaviors = e, this.eventName = t;
							for (var i = arguments.length, n = new Array(i > 2 ? i - 2 : 0), a = 2; a < i; a++) n[a - 2] = arguments[a];
							this.params = n, this.currentBehavior = e[0]
						}
						var t = e.prototype;
						return t.stopPropagation = function() {
							this.isStopPropagation = !0
						}, t.execute = function() {
							for (var e = this.eventName, t = this.params, i = 0; i < this.behaviors.length; i++) {
								var n;
								if (this.isStopPropagation) break;
								var a = this.behaviors[i];
								this.currentBehavior = a, this.currentBehavior.setTriggerEvent(this);
								var s = this.validateBehavior(a, e);
								s && s.call.apply(s, y()(n = [a]).call(n, t))
							}
						}, t.executeAsync = function() {
							for (var e = this.eventName, t = this.params, i = [], n = 0; n < this.behaviors.length; n++) {
								var a;
								if (this.isStopPropagation) break;
								var s = this.behaviors[n];
								this.currentBehavior = s, this.currentBehavior.setTriggerEvent(this);
								var o = this.validateBehavior(s, e);
								o && i.push(o.call.apply(o, y()(a = [s]).call(a, t)))
							}
							return oe().all(i)
						}, t.validateBehavior = function(e, t) {
							if (e[t]) {
								var i = e[t];
								if ("function" === typeof i && e.active) return i
							}
						}, e
					}(),
					lP = rP,
					cP = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.scene = t, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.getBehaviors = function(e) {
							var t, i = oP()(t = _()(e).call(e, (function(e) {
								return e.behaviors
							}))).call(t, (function(e, t) {
								var i;
								return y()(i = []).call(i, e, t)
							}), []);
							return ji()(i).call(i, (function(e, t) {
								return (tE[e.key] || 0) - (tE[t.key] || 0)
							}))
						}, i.trigger = function(e, t) {
							for (var i, n = this.getBehaviors(e), a = arguments.length, s = new Array(a > 2 ? a - 2 : 0), o = 2; o < a; o++) s[o - 2] = arguments[o];
							var r = (0, aP.Z)(lP, y()(i = [n, t]).call(i, s));
							r.execute()
						}, i.triggerAsync = function(e, t) {
							for (var i, n = this.getBehaviors(e), a = arguments.length, s = new Array(a > 2 ? a - 2 : 0), o = 2; o < a; o++) s[o - 2] = arguments[o];
							var r = (0, aP.Z)(lP, y()(i = [n, t]).call(i, s));
							return r.executeAsync()
						}, t
					}(wf),
					hP = cP,
					uP = aa.Z.DEFAULT,
					dP = uP.KEY,
					pP = uP.FRAME,
					mP = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).hand = void 0, i.handScaleDefault = 1, i.name = "TutorialHand", i.addHand(), i.hand.scale, i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.addHand = function() {
							this.hand = this.scene.make.image({
								key: dP,
								frame: pP.ICON_HAND,
								origin: {
									x: .5,
									y: .5
								}
							}), this.hand.setWorldSize(46, 73.5 * .8), this.handScaleDefault = this.hand.scale, this.hand.setPosition(24, 20), this.add(this.hand)
						}, i.tap = function(e, t, i) {
							var n = this;
							this.scene.tweens.add({
								delay: e,
								targets: [this.hand],
								ease: Phaser.Math.Easing.Cubic.Out,
								props: {
									scale: {
										duration: 150,
										value: .8 * this.handScaleDefault
									},
									angle: {
										value: -10,
										duration: 150
									}
								},
								yoyo: !0,
								onComplete: function() {
									t && n.hide(), i && i()
								}
							})
						}, i.doubleTap = function(e, t, i) {
							var n = this;
							this.scene.tweens.add({
								delay: e,
								targets: [this.hand],
								ease: Phaser.Math.Easing.Cubic.In,
								props: {
									scale: {
										duration: 100,
										value: .8 * this.handScaleDefault
									},
									angle: {
										value: -10,
										duration: 100
									}
								},
								loop: 1,
								yoyo: !0,
								onComplete: function() {
									t && n.hide(), i && i()
								}
							})
						}, i.move = function(e, t, i, n, a) {
							this.scene.tweens.add({
								delay: i,
								targets: [this.hand],
								ease: Phaser.Math.Easing.Sine.InOut,
								props: {
									x: {
										duration: n,
										from: this.x,
										to: e
									},
									y: {
										duration: n,
										from: this.y,
										to: t
									}
								},
								onComplete: a
							})
						}, i.tapAndHold = function(e, t) {
							this.scene.tweens.add({
								delay: e,
								targets: [this.hand],
								ease: Phaser.Math.Easing.Cubic.Out,
								props: {
									scale: {
										duration: 200,
										value: .8 * this.handScaleDefault
									},
									angle: {
										value: -10,
										duration: 200
									}
								},
								onComplete: t
							})
						}, i.unHold = function(e, t, i) {
							var n = this;
							this.scene.tweens.add({
								delay: e,
								targets: [this.hand],
								ease: Phaser.Math.Easing.Cubic.Out,
								props: {
									scale: {
										duration: 200,
										value: this.handScaleDefault
									},
									angle: {
										value: 0,
										duration: 200
									}
								},
								onComplete: function() {
									t && n.hide(), i && i()
								}
							})
						}, i.show = function() {
							this.hand.revive()
						}, i.hide = function() {
							this.hand.kill()
						}, i.preDestroy = function() {
							this.scene.tweens.killTweensOf(this.hand)
						}, t
					}(Phaser.GameObjects.Container),
					fP = mP,
					gP = {
						WHITE_BALL: "guide-white-ball",
						BAT_BALL: "guide-bat-ball",
						EARTHEN_POT: "guide-earthen-pot",
						ELECTRIC_BALL: "guide-electric-ball",
						THUNDER_BALL: "guide-thunder-ball",
						DRUG_BOMB: "guide-drug-bomb",
						HEXAGON_WIRE: "guide-hexagon-wire",
						STONE: "guide-stone",
						BLACK_HOLE: "guide-black-hole",
						PLUS_MINUS_BALL: "guide-plus-minus-ball",
						RELIC_MASK: "guide-relic-mask",
						BEETLE: "guide-beetle",
						CANDLE: "guide-candle",
						COLOR_BOMB: "guide-color-bomb",
						ELECTRIC_BULLET: "guide-electric-bullet",
						EMPTY_BALL: "guide-empty-ball",
						IRON_SHELL: "guide-iron-shell",
						KEY: "guide-key",
						LAMP: "guide-lamp",
						LAVA_BALL: "guide-lava-ball",
						LEAVES: "guide-leaves",
						LUCKY_POUCH: "guide-lucky-pouch",
						MIRROR: "guide-mirror",
						MUD: "guide-mud",
						MUMMY: "guide-mummy",
						QUESTION_MARK_BALL: "guide-question-mark-ball",
						RAINBOW_BULLET: "guide-rainbow-bullet",
						RDE_BALL: "guide-rde-ball",
						ROTATION_WHEEL: "guide-rotation-wheel",
						SLATE_STONE: "guide-slate-stone",
						SPIDER_WEB: "guide-spider-web",
						SPIDER: "guide-spider",
						SWITCH_BLACK_HOLE: "guide-switch-black-hole",
						THREE_THUNDERS_BALL: "guide-three-thunders-ball",
						TWO_COLORS_BALL: "guide-two-colors-ball"
					},
					vP = aa.Z.THEME,
					yP = vP.KEY,
					bP = vP.FRAME,
					EP = aa.Z.DEFAULT,
					TP = EP.KEY,
					AP = EP.FRAME,
					SP = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).payloadInformationFrame = void 0, n.background = void 0, n.text = void 0, n.titleBackground = void 0, n.titleText = void 0, n.okButton = void 0, n.playButton = void 0, n.closeButton = void 0, n.loading = void 0, n.informationImage = void 0, n.loadInformationImageTimer = void 0, n.handleLoadPhotoAfterDelay = function(e, t) {
								return function() {
									var i = n.scene.textures.get(e);
									i && i.key === e ? n.handleLoadComplete(e) : (n.scene.load.once("filecomplete-image-" + e, n.handleLoadComplete), n.scene.load.image(e, t), n.scene.load.start())
								}
							}, n.handleLoadComplete = function(e) {
								if (n.scene) {
									var t = n.payloadInformationFrame.id;
									if (t && t === e) {
										var i = n.scene.textures.get(t);
										i && i.key === t && n.setInformationImage(i.key)
									}
								}
							}, n.handleLoadInformationImageFailed = function(e) {
								e.key, n.payloadInformationFrame.id
							}, n.scene.add.existing((0, Un.Z)(n)), n.payloadInformationFrame = {
								width: 246.5,
								height: 142,
								loadDelay: 0
							}, n.create(i), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.create = function(e) {
							var t, i = e.popupType,
								n = e.popupPosition,
								a = e.message,
								s = e.hasOkButton,
								o = e.title,
								r = e.spriteName,
								l = "";
							(r && (l = gP[r]), this.payloadInformationFrame.id = "" + l, this.payloadInformationFrame.url = "./assets/guide/" + l + ".png", this.createBackground(i, n), this.createLoading(), this.createInformationImage(), this.createMessage(this.scene.lang.getText(a)), o && this.createTitle(o), s && this.createOkButton(), "full" == i) && (this.loadInformationImage(this.payloadInformationFrame.id, this.payloadInformationFrame.url), null == (t = this.okButton) || t.kill(), this.createPlayButton(), this.createCloseButton(), this.text.setFontSize(18), Phaser.Display.Align.In.Center(this.text, this.background, 0, 42));
							this.addDefaultListeners()
						}, i.createLoading = function() {
							this.loading = new yo.Z(this.scene);
							var e = Math.min(this.background.width / 2, this.background.height / 2);
							this.loading.setWorldSize(.65 * e, .65 * e), this.loading.kill(), Phaser.Display.Align.In.Center(this.loading, this.background, 0, -65), this.add(this.loading)
						}, i.createBackground = function(e, t) {
							var i = 0,
								n = 0;
							switch ("full" == e ? (i = 342, this.background = new ro(this.scene, 0, 0, 298, i)) : (this.background = this.scene.make.image({
									key: yP,
									frame: bP.POPUP_MISSION
								}), i = 81.5, this.background.setWorldSize(298, i)), t) {
								case "top":
									n = -120;
									break;
								case "bottom":
									n = 120
							}
							Phaser.Display.Align.In.Center(this.background, this), Phaser.Display.Align.In.Center(this, this.scene.gameZone, 0, n), this.add(this.background), this.setDepth(jn.Z.GUIDE_POPUP)
						}, i.createMessage = function(e) {
							this.text = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(18),
								text: e,
								origin: {
									x: .5,
									y: .5
								},
								maxWidth: 290
							}), this.text.setTint(16772312), Phaser.Display.Align.In.Center(this.text, this.background, 0, -4), this.add(this.text)
						}, i.createTitle = function(e) {
							this.titleBackground = this.scene.make.image({
								key: yP,
								frame: bP.POPUP_HEADER
							}), this.titleBackground.setWorldSize(164.5, 47.5), this.titleText = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(24),
								text: e,
								origin: {
									x: .5,
									y: .5
								}
							}), this.add([this.titleBackground, this.titleText]), Phaser.Display.Align.To.TopCenter(this.titleBackground, this.background, 0, -25), Phaser.Display.Align.In.Center(this.titleText, this.titleBackground, 0, -2)
						}, i.createInformationImage = function() {
							this.informationImage = this.scene.make.image({
								x: 0,
								y: 0,
								origin: {
									x: .5,
									y: .5
								},
								visible: !1
							}), this.add(this.informationImage)
						}, i.createOkButton = function() {
							this.okButton = new ea.Z(this.scene, TP, AP.BUTTON_GREEN_SHORT, 100.5, 38.5), this.okButton.setName("Ok");
							var e = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(28),
								text: this.scene.lang.getText("ok"),
								origin: {
									x: .5,
									y: .5
								}
							});
							Phaser.Display.Align.In.Center(e, this.okButton, 0, -3), this.okButton.add(e), Phaser.Display.Align.To.BottomCenter(this.okButton, this.background), this.add(this.okButton)
						}, i.createCloseButton = function() {
							this.closeButton = new ea.Z(this.scene, yP, bP.BUTTON_CLOSE, 35.5, 36.5), this.closeButton.setName("Close"), Phaser.Display.Align.In.TopRight(this.closeButton, this.background, 14, 14), this.add(this.closeButton)
						}, i.createPlayButton = function() {
							this.playButton = new ea.Z(this.scene, TP, AP.BUTTON_GREEN, 153.5, 58.5), this.playButton.setName("Play");
							var e = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(28),
								text: this.scene.lang.getText("play"),
								origin: {
									x: .5,
									y: .5
								}
							});
							Phaser.Display.Align.In.Center(e, this.playButton, 0, -3), Phaser.Display.Align.In.BottomCenter(this.playButton, this.background, 0, -22), this.playButton.add(e), this.add(this.playButton)
						}, i.showLoading = function(e) {
							var t, i, n, a;
							e ? (null == (t = this.informationImage) || t.kill(), null == (i = this.loading) || i.revive()) : (null == (n = this.informationImage) || n.revive(), null == (a = this.loading) || a.kill())
						}, i.setInformationImage = function(e) {
							this.showLoading(!1), this.informationImage.setTexture(e), this.informationImage.setFrame(0), this.informationImage.setWorldSize(this.payloadInformationFrame.width, this.payloadInformationFrame.height), Phaser.Display.Align.In.TopCenter(this.informationImage, this.background, 0, -35)
						}, i.loadInformationImage = function(e, t) {
							this.showLoading(!0);
							var i = this.payloadInformationFrame.loadDelay || 0;
							0 === i ? this.handleLoadPhotoAfterDelay(e, t)() : this.loadInformationImageTimer = this.scene.time.delayedCall(i, this.handleLoadPhotoAfterDelay(e, t))
						}, i.addDefaultListeners = function() {
							var e = this;
							this.scene.load.on(Phaser.Loader.Events.FILE_LOAD_ERROR, this.handleLoadInformationImageFailed), this.on(Phaser.GameObjects.Events.DESTROY, (function() {
								var t;
								null == (t = e.loadInformationImageTimer) || t.remove(), e.scene.load.off(Phaser.Loader.Events.FILE_LOAD_ERROR, e.handleLoadInformationImageFailed)
							}))
						}, t
					}(Phaser.GameObjects.Container);

				function _P(e, t) {
					var i = "undefined" !== typeof uo() && mo()(e) || e["@@iterator"];
					if (i) return (i = i.call(e)).next.bind(i);
					if (Array.isArray(e) || (i = function(e, t) {
							var i;
							if (!e) return;
							if ("string" === typeof e) return CP(e, t);
							var n = tt()(i = Object.prototype.toString.call(e)).call(i, 8, -1);
							"Object" === n && e.constructor && (n = e.constructor.name);
							if ("Map" === n || "Set" === n) return co()(e);
							if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return CP(e, t)
						}(e)) || t && e && "number" === typeof e.length) {
						i && (e = i);
						var n = 0;
						return function() {
							return n >= e.length ? {
								done: !0
							} : {
								done: !1,
								value: e[n++]
							}
						}
					}
					throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
				}

				function CP(e, t) {
					(null == t || t > e.length) && (t = e.length);
					for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
					return n
				}
				var wP = aa.Z.DEFAULT,
					BP = wP.KEY,
					IP = wP.FRAME,
					PP = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.popupGuide = void 0, i.maskBackground = void 0, i.maskGraphics = void 0, i.maskInput = void 0, i.tutorialHand = void 0, i.arrow = void 0, i.handAimTween = void 0, i.handTapTween = void 0, i.handPointTween = void 0, i.arrowPointTween = void 0, i.isShowingGuide = !1, i.guideType = "", i.eventNames = [], i.currentGuideConfig = void 0, i.step = 1, i.closeGuide = function() {
								var e, t, n, a, s, o, r, l, c;
								i.isShowingGuide = !1, null == (e = i.popupGuide) || e.kill(), null == (t = i.tutorialHand) || t.kill(), null == (n = i.arrow) || n.kill(), null == (a = i.maskBackground) || a.kill(), null == (s = i.maskGraphics) || s.kill(), null == (o = i.maskInput) || o.disableInteractive(), null == (r = i.handAimTween) || r.remove(), null == (l = i.handTapTween) || l.remove(), null == (c = i.arrowPointTween) || c.remove()
							}, i.closeCurrentGuide = function() {
								i.getIsShowingGuide().isShowingGuide && (i.isShowingGuide = !1, i.runCloseAnimation(), i.logGuideClose(i.currentGuideConfig))
							}, i.scene = t, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.reset = function() {
							this.closeGuide()
						}, i.clearEventListeners = function() {
							var e = this;
							this.eventNames.forEach((function(t) {
								return e.scene.events.off(t)
							}))
						}, i.prepareGuide = function(e) {}, i.showGuide = function(e) {
							var t = this;
							if (this.clearEventListeners(), this.step = 1, e && 0 !== e.length) {
								var i = ye()(e).call(e, (function(e) {
									return !e.condition
								}));
								i && (this.createGuide(i), this.isShowingGuide = !0), e.forEach((function(e) {
									e.condition && t.createEventListeners(e)
								}))
							}
						}, i.createEventListeners = function(e) {
							var t = this,
								i = e.condition;
							if (i) switch (this.eventNames.push(i), i) {
								case fm.s.CLOSE_DYNAMIC_GUIDE:
									this.scene.events.on(i, (function() {
										t.createGuide(e), t.isShowingGuide = !0
									}));
									break;
								case fm.s.ITEM_REMINDER:
									this.scene.events.on(i, (function(i) {
										i == e.guideType && (t.createGuide(e), t.isShowingGuide = !0)
									}));
									break;
								case fm.s.GET_FREE_ITEM:
								case fm.s.USE_FREE_ITEM:
								default:
									this.scene.events.once(i, (function(i) {
										i == e.guideType && (t.createGuide(e), t.isShowingGuide = !0)
									}))
							}
						}, i.createGuide = function(e) {
							var t = this,
								i = e.hasHand,
								n = e.handPosition,
								a = e.guideType,
								s = e.hasMask,
								o = e.maskSize,
								r = e.hasArrow,
								l = e.points,
								c = e.condition,
								h = e.popupType,
								u = e.spriteName,
								d = e.message;
							if ("full" === h && u) return this.currentGuideConfig = e, void this.openGuideScreen(u, d);
							this.closeCurrentGuide(), this.logGuideShow(e);
							var p = this.scene.gameManager.shooter;
							p.pause(), this.scene.footer.setDisabled(!0), this.currentGuideConfig = e, this.guideType = a, this.createPopup(e), this.maskInput || (this.maskInput = this.scene.add.zone(0, 0, 0, 0)), this.maskInput.setVisible(!1);
							for (var m, f = _P(this.maskInput.eventNames()); !(m = f()).done;) {
								var g = m.value;
								this.maskInput.off(g)
							}
							if (s) {
								if (this.createMaskBackground(), this.maskBackground.revive(), 0 == l.length) this.createMask([{
									x: 0,
									y: 0
								}], o);
								else {
									var v = this.scene.gameManager.grid,
										y = _()(l).call(l, (function(e) {
											return v.getXYByRowCol(e)
										}));
									this.createMask(y, o)
								}
								this.maskBackground.setInteractive({
									useHandCursor: !1
								}), this.scene.input.setTopOnly(!0)
							}
							if (i && this.createTutorialHand(), r && this.createArrow(), a == fm.o.AIM && (n && n.end && this.createHandAimTween(n.start, n.end), p.setDisabledShotGuide(!1), this.scene.input.once(Phaser.Input.Events.POINTER_DOWN, (function() {
									t.closeCurrentGuide()
								}))), a == fm.o.SWITCH) {
								var b = this.scene.gameManager.shooter;
								this.createHandTapTween(b.x, b.y + 10), this.maskGraphics.setPosition(b.x, b.y), this.addOnClickMaskInput((function() {
									t.scene.gameManager.shooter.swapBalls(), t.closeCurrentGuide()
								}))
							}
							var E = this.scene.bulletItemManager.getItem(a);
							if (void 0 !== E) {
								var T = E.getWorldPosition();
								(c === fm.s.GET_FREE_ITEM || c === fm.s.ITEM_REMINDER || E.getIsFreeItem() && void 0 === c) && this.addOnClickMaskInput((function() {
									void 0 !== E && (t.maskInput.disableInteractive(), t.closeCurrentGuide())
								})), this.processHighlight(c, s, r, i, T.x, T.y)
							}
						}, i.logGuideShow = function(e) {
							var t = e.guideType,
								i = e.condition,
								n = e.spriteName,
								a = this.scene.level.getLevel();
							this.scene.analytics.event(Xt._.TUTORIAL_SHOW, {
								level: a,
								guide_type: t,
								guide_condition: GameCore.Utils.String.toUpperCamelCase((null == i ? void 0 : i.toLocaleLowerCase()) || "None"),
								guide_object: GameCore.Utils.String.toUpperCamelCase((null == n ? void 0 : n.toLocaleLowerCase()) || "None")
							})
						}, i.logGuideClose = function(e) {
							var t = e.guideType,
								i = e.condition,
								n = e.spriteName,
								a = this.scene.level.getLevel();
							this.scene.analytics.event(Xt._.TUTORIAL_CLOSE, {
								level: a,
								guide_type: t,
								guide_condition: GameCore.Utils.String.toUpperCamelCase((null == i ? void 0 : i.toLocaleLowerCase()) || "None"),
								guide_object: GameCore.Utils.String.toUpperCamelCase((null == n ? void 0 : n.toLocaleLowerCase()) || "None")
							})
						}, i.processHighlight = function(e, t, i, n, a, s) {
							if (t)
								if (e === fm.s.USE_FREE_ITEM) {
									var o = this.scene.gameManager.shooter;
									this.maskGraphics.setPosition(o.shootingPosition.x, o.shootingPosition.y)
								} else this.maskGraphics.setPosition(a, s);
							i && (this.arrow.setFlipY(!0).setFlipX(!0), this.createArrowPointTween(a, s - 40)), n && (this.tutorialHand.setAngle(240), this.createHandPointTween(a + 40, s - 40))
						}, i.createPopup = function(e) {
							this.popupGuide = new SP(this.scene, e), this.popupGuide.okButton && (this.popupGuide.okButton.onClick = this.closeCurrentGuide), this.popupGuide.playButton && (this.popupGuide.playButton.onClick = this.closeCurrentGuide), this.popupGuide.closeButton && (this.popupGuide.closeButton.onClick = this.closeCurrentGuide)
						}, i.createTutorialHand = function() {
							this.tutorialHand = new fP(this.scene), this.tutorialHand.setPosition(0, 0), this.tutorialHand.setDepth(jn.Z.GUIDE_HAND), this.tutorialHand.kill()
						}, i.createArrow = function() {
							this.arrow = this.scene.make.image({
								key: BP,
								frame: IP.ICON_GREEN_ARROW
							}), this.arrow.setWorldSize(34, 44), this.arrow.setDepth(jn.Z.GUIDE_ARROW), this.arrow.kill()
						}, i.createMaskBackground = function() {
							var e;
							this.maskBackground = this.scene.make.image({
								key: aa.Z.DEFAULT.KEY,
								frame: aa.Z.DEFAULT.FRAME.BLANK
							}), this.scene.input.setTopOnly(!1), this.maskBackground.setTint(0), this.maskBackground.setAlpha(.5), this.maskBackground.setDepth(jn.Z.GUIDE_MASK_BACKGROUND);
							var t = this.scene.gameZone,
								i = t.displayWidth + 100,
								n = t.displayHeight + 100;
							this.maskBackground.setDisplaySize(i, n), null == (e = this.maskBackground) || e.kill(), Phaser.Display.Align.In.Center(this.maskBackground, this.scene.gameZone)
						}, i.createMask = function(e, t) {
							var i;
							null == (i = this.maskGraphics) || i.destroy(), this.maskGraphics = this.scene.make.graphics({
								fillStyle: {
									color: 16711680,
									alpha: 1
								}
							}), this.maskGraphics.beginPath();
							for (var n = 0; n < e.length; n++) this.maskGraphics.moveTo(e[n].x, e[n].y), this.maskGraphics.arc(e[n].x, e[n].y, t, 0, Phaser.Math.PI2);
							this.maskGraphics.fillPath(), this.maskGraphics.setName("MaskGraphics"), this.maskBackground.clearMask(!0), this.maskBackground.setMask(this.maskGraphics.createGeometryMask()), this.maskBackground.mask.invertAlpha = !0
						}, i.addOnClickMaskInput = function(e) {
							var t, i = this;
							this.maskInput.setVisible(!0);
							var n = 0 != this.currentGuideConfig.points.length ? _()(t = this.currentGuideConfig.points).call(t, (function(e) {
									return i.scene.gameManager.grid.getXYByRowCol(e)
								})) : [{
									x: 0,
									y: 0
								}],
								a = this.currentGuideConfig.maskSize;
							this.maskInput.setInteractive({
								useHandCursor: !0,
								hitAreaCallback: function(e, t, s, o) {
									for (var r = t - i.maskGraphics.x, l = s - i.maskGraphics.y, c = 0; c < n.length; c++) {
										if (Math.sqrt(Math.pow(r - n[c].x, 2) + Math.pow(l - n[c].y, 2)) < a) return !0
									}
									return !1
								}
							}), this.maskInput.setDepth(jn.Z.GUIDE_MASK_INPUT), this.maskInput.on(Phaser.Input.Events.POINTER_DOWN, e)
						}, i.createHandAimTween = function(e, t) {
							var i, n = this;
							null == (i = this.handAimTween) || i.remove();
							var a = this.scene.gameManager.shooter;
							a.setDisabledShotGuide(!1);
							var s = a.shootingPosition.x + e.x,
								o = a.shootingPosition.x + t.x,
								r = a.shootingPosition.y - e.y,
								l = a.shootingPosition.y - t.y;
							this.tutorialHand.setPosition(s, r);
							var c, h = new Phaser.Math.Vector2(s, r),
								u = new Phaser.Math.Vector2(o, l),
								d = new Phaser.Math.Vector2(s + 32, r - 32),
								p = new Phaser.Math.Vector2(o - 32, l - 32);
							c = r === l ? new Phaser.Curves.CubicBezier(h, d, p, u) : new Phaser.Curves.CubicBezier(h, h, u, u), this.handAimTween = this.scene.tweens.addCounter({
								from: 0,
								to: 1,
								yoyo: !0,
								loop: -1,
								duration: 1500,
								ease: Phaser.Math.Easing.Sine.InOut,
								onStart: function() {
									n.tutorialHand.revive()
								},
								onUpdate: function(e) {
									var t = c.getPointAt(e.getValue());
									n.tutorialHand.setPosition(t.x, t.y);
									var i = n.tutorialHand.x - a.shootingPosition.x,
										s = n.tutorialHand.y - a.shootingPosition.y,
										o = new Phaser.Math.Vector2(i, s);
									o.normalize(), a.shootingAngle.copy(o), a.updateShootingAngle()
								}
							})
						}, i.createHandTapTween = function(e, t) {
							var i, n = this;
							null == (i = this.handTapTween) || i.remove(), this.scene.gameManager.shooter.setDisabledSwitching(!1);
							var a = 1 / this.scene.world.getPixelRatio();
							this.tutorialHand.setPosition(e, t), this.handTapTween = this.scene.tweens.add({
								targets: [this.tutorialHand],
								duration: 600,
								props: {
									scale: {
										from: 1.5 * a,
										to: 2 * a,
										ease: Phaser.Math.Easing.Sine.In
									}
								},
								repeat: -1,
								yoyo: !0,
								onStart: function() {
									n.tutorialHand.revive()
								}
							})
						}, i.createArrowPointTween = function(e, t) {
							var i, n = this;
							null == (i = this.arrowPointTween) || i.remove(), this.arrow.setPosition(e, t), this.arrowPointTween = this.scene.tweens.add({
								targets: [this.arrow],
								duration: 600,
								yoyo: !0,
								repeat: -1,
								y: "+=5",
								ease: Phaser.Math.Easing.Sine.In,
								onStart: function() {
									n.arrow.revive()
								}
							})
						}, i.createHandPointTween = function(e, t) {
							var i, n = this;
							null == (i = this.handPointTween) || i.remove(), this.tutorialHand.setPosition(e, t), this.handPointTween = this.scene.tweens.add({
								targets: [this.tutorialHand],
								duration: 600,
								yoyo: !0,
								repeat: -1,
								x: "-=10",
								y: "+=10",
								ease: Phaser.Math.Easing.Sine.In,
								onStart: function() {
									n.tutorialHand.revive()
								}
							})
						}, i.getIsShowingGuide = function() {
							return {
								isShowingGuide: this.isShowingGuide,
								guideType: this.guideType
							}
						}, i.runCloseAnimation = function() {
							var e, t, i = this;
							null == (e = this.popupGuide.closeButton) || e.setDisabled(!0), null == (t = this.popupGuide.playButton) || t.setDisabled(!0);
							var n = [this.popupGuide, this.tutorialHand, this.arrow, this.maskBackground, this.maskGraphics];
							if (this.currentGuideConfig.guideType === fm.o.AIM) return n.forEach((function(e) {
								null == e || e.setAlpha(0)
							})), this.closeGuide(), this.scene.events.emit(fm.s.CLOSE_GUIDE, this.currentGuideConfig), this.scene.footer.setDisabled(!1), this.scene.gameManager.shooter.resume(), void this.scene.input.setTopOnly(!1);
							this.scene.add.tween({
								targets: n,
								alpha: 0,
								duration: 300,
								ease: Phaser.Math.Easing.Sine.Out,
								onComplete: function() {
									i.closeGuide(), i.scene.events.emit(fm.s.CLOSE_GUIDE, i.currentGuideConfig), i.scene.footer.setDisabled(!1), i.scene.gameManager.shooter.resume(), i.scene.input.setTopOnly(!1);
									var e, t = i.currentGuideConfig;
									switch (t.guideType) {
										case fm.o.BOMB_ITEM:
											e = i.scene.footer.bombBulletItem;
											break;
										case fm.o.ELECTRIC_ITEM:
											e = i.scene.footer.electricBulletBallItem;
											break;
										case fm.o.RAINBOW_ITEM:
											e = i.scene.footer.rainbowBulletItem;
											break;
										case fm.o.ROCKET_ITEM:
											e = i.scene.footer.rocketBulletItem
									}
									e && (t.condition && t.condition !== fm.s.GET_FREE_ITEM && t.condition !== fm.s.ITEM_REMINDER || !e.getIsFreeItem() || (e.handleUseItem(), i.scene.footer.cancelButton.kill()))
								}
							})
						}, i.loadGuideSprite = function(e) {
							var t = this.scene.textures.get(e);
							if (!t || t.key !== e) {
								var i = gP[e],
									n = "./assets/guide/" + i + ".png";
								this.scene.load.image(i, n), this.scene.load.start()
							}
						}, i.openGuideScreen = function(e, t) {
							var i = this;
							this.logGuideShow(this.currentGuideConfig), this.scene.screen.open(Wn.o4.GUIDE_SCREEN, {
								key: e,
								message: t
							}), this.scene.guideScreen.once(GameCore.Screens.Events.CLOSE, (function() {
								i.getIsShowingGuide().isShowingGuide && (i.isShowingGuide = !1, i.logGuideClose(i.currentGuideConfig))
							}))
						}, t
					}(wf),
					xP = PP,
					OP = GameCore.Configs.Gameplay,
					kP = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.combo = 1, i.baseScore = 10, i.currentScore = 0, i.targetScore = 0, i.flyScoreTween = void 0, i.scoreText = void 0, i.scoreTextGroup = void 0, i.shouldIncreaseCombo = void 0, i.comboByTurn = {}, i.scene = t, i.createScoreText(), i.createGroup(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							this.resetCombo(), this.shouldIncreaseCombo = !1, this.comboByTurn = {
								0: {
									isNextTurnIncreased: !1,
									combo: 1
								}
							}
						}, i.increaseCombo = function() {
							this.combo += 1
						}, i.resetCombo = function() {
							this.combo = 1
						}, i.setTargetScore = function(e) {
							this.targetScore = e
						}, i.getScore = function() {
							return this.currentScore
						}, i.setScore = function(e) {
							this.scoreText.setText("" + e)
						}, i.addScore = function(e, t, i, n) {
							this.shouldIncreaseCombo = !0;
							var a = e.x,
								s = e.y;
							void 0 === n && (n = this.scene.gameManager.getCurrentTurn()), this.comboByTurn[n] || (this.comboByTurn[n] = {
								isNextTurnIncreased: !1,
								combo: 1
							});
							var o = this.comboByTurn[n].combo;
							this.comboByTurn[n].isNextTurnIncreased || (this.comboByTurn[n].isNextTurnIncreased = !0, this.comboByTurn[n + 1] || (this.comboByTurn[n + 1] = {
								isNextTurnIncreased: !1,
								combo: 1
							}), this.comboByTurn[n + 1].combo = o + 1), o = o > OP.MaxCombo ? OP.MaxCombo : o;
							var r = "explode" === t ? this.baseScore * o : this.baseScore * o * 2;
							i && (r = i);
							var l = this.scoreTextGroup.getFirstDead(!1);
							l || (l = ia.Z.addText(this.scene, {
								font: _a.Z.NUMBERS_SYMBOLS.KEY,
								size: this.scene.fontSize(24),
								text: "" + r,
								origin: {
									x: .5,
									y: .5
								}
							}), this.scoreTextGroup.add(l)), l.setText("" + r), l.revive(), l.setPosition(a, s).setAlpha(0).setScale(.9).setDepth(jn.Z.SCORE), this.playFlyScoreAnimation(l), this.currentScore += r;
							var c = this.getScore() / this.getTargetScore();
							this.scene.header.progressBar.progress.setProgress(c, !0), this.scene.header.updateScore(this.getScore())
						}, i.getStar = function(e) {
							var t, i = 0,
								n = null == (t = this.scene.level.getLevelData()) ? void 0 : t.starsTarget,
								a = e || this.currentScore;
							return n && n.forEach((function(e) {
								a >= e && i++
							})), i
						}, i.getTargetScore = function() {
							return this.targetScore
						}, i.playFlyScoreAnimation = function(e) {
							var t = this;
							this.scene.getIsSkipLevelComplete() ? e.kill() : this.scene.tweens.add({
								targets: [e],
								ease: Phaser.Math.Easing.Quadratic.In,
								props: {
									alpha: {
										start: 0,
										from: 0,
										to: 1
									},
									scale: {
										from: .9,
										to: 1.2
									}
								},
								duration: 150,
								completeDelay: 200,
								onComplete: function() {
									if (t.scene.getIsSkipLevelComplete()) return e.kill(), void t.scene.tweens.killTweensOf(e);
									t.scene.tweens.add({
										targets: [e],
										ease: Phaser.Math.Easing.Quadratic.Out,
										props: {
											alpha: {
												start: 1,
												from: 1,
												to: 0
											},
											y: "-=30"
										},
										duration: 150,
										onComplete: function() {
											e.kill(), t.scene.tweens.killTweensOf(e)
										}
									})
								}
							})
						}, i.reset = function() {
							var e = this;
							this.scoreTextGroup.getChildren().forEach((function(t) {
								var i = t;
								i.kill(), e.scene.tweens.killTweensOf(i)
							})), this.currentScore = 0, this.resetCombo()
						}, i.createScoreText = function() {
							this.scoreText = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(24),
								text: "0",
								origin: {
									x: .5,
									y: .5
								}
							}), this.scoreText.setDepth(1e3), this.scoreText.kill()
						}, i.createGroup = function() {
							this.scoreTextGroup = this.scene.add.group();
							for (var e = 0; e < 20; e++) {
								var t = ia.Z.addText(this.scene, {
									font: _a.Z.NUMBERS_SYMBOLS.KEY,
									size: this.scene.fontSize(24),
									text: "0",
									origin: {
										x: .5,
										y: .5
									}
								});
								this.scoreText.kill(), this.scoreTextGroup.add(t)
							}
						}, i.getCurrentScore = function() {
							return this.currentScore
						}, i.setCurrentScore = function(e) {
							this.currentScore = e
						}, i.killAllScoreTexts = function() {
							var e;
							null == (e = this.scoreTextGroup.getChildren()) || e.forEach((function(e) {
								e.kill()
							}))
						}, t
					}(wf),
					RP = kP,
					MP = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).angle2 = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var o = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								r = this.angle;
							this.velocityX = o * Math.cos(r), this.velocityY = o * Math.sin(r), this.rotation = r, this.angle2 = r
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.rotation = this.angle2, a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					LP = MP,
					GP = aa.Z.GAMEPLAY.EFFECTS,
					DP = GP.KEY,
					FP = GP.FRAME,
					NP = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, DP, "BombDrugExplosionParticles") || this).emitter1 = void 0, i.emitter2 = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.EFFECT_HIGH), i.createExplodeAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 17)
						}, i.createExplodeAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [FP.BOMB_DRUG_EXPLOSION_PARTICLES],
									scaleX: {
										start: e,
										end: .5 * e
									},
									scaleY: {
										start: .7 * e,
										end: .35 * e
									},
									alpha: {
										start: 1,
										end: 0,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									speed: {
										min: 100,
										max: 150
									},
									tint: 12864885,
									lifespan: 600,
									rotate: {
										start: 0,
										end: 2 * Math.PI,
										steps: 7
									},
									particleClass: LP,
									on: !1
								};
							this.emitter1 = this.createEmitter(t)
						}, i.explode = function(e, t) {
							this.reviveIn(800), this.emitter1.explode(10, e, t)
						}, t
					}(l_),
					ZP = NP,
					UP = aa.Z.GAMEPLAY.EFFECTS,
					jP = UP.KEY,
					YP = UP.FRAME,
					WP = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, jP, "CandleExplodeParticle") || this).emitter1 = void 0, i.emitter2 = void 0, i.emitter3 = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.ON_TOP), i.createExplodeAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 8)
						}, i.createExplodeAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [YP.CANDLE_EXPLODE_PARTICLE_1, YP.CANDLE_EXPLODE_PARTICLE_2, YP.CANDLE_EXPLODE_PARTICLE_3, YP.CANDLE_EXPLODE_PARTICLE_4],
									scale: {
										min: .6 * e,
										max: e
									},
									alpha: {
										start: 1,
										end: 0,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									speed: {
										min: 30,
										max: 60
									},
									lifespan: {
										min: 200,
										max: 400
									},
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: KP,
									on: !1
								},
								i = {
									frame: [YP.CANDLE_WAX_EXPLODE_PARTICLE],
									scale: {
										start: .8 * e,
										end: 1.5 * e,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									alpha: {
										start: 1,
										end: 0
									},
									lifespan: 500,
									on: !1
								},
								n = {
									frame: [YP.CANDLE_DROP],
									scale: {
										min: .8 * e,
										max: 1 * e
									},
									alpha: {
										start: 1,
										end: 0,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									speed: {
										min: 120,
										max: 160
									},
									lifespan: {
										min: 200,
										max: 400
									},
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: KP,
									on: !1
								};
							this.emitter1 = this.createEmitter(t), this.emitter2 = this.createEmitter(i), this.emitter3 = this.createEmitter(n)
						}, i.explode = function(e, t) {
							this.reviveIn(500), this.emitter1.explode(8, e, t)
						}, i.waxExplode = function(e, t) {
							this.reviveIn(500), this.emitter2.explode(1, e, t), this.emitter3.explode(12, e, t)
						}, t
					}(l_),
					KP = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).angle2 = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var o = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								r = Math.atan2(this.y - i, this.x - t);
							this.velocityX = o * Math.cos(r), this.velocityY = o * Math.sin(r), this.rotation = r + Math.PI / 2, this.angle2 = r + Math.PI / 2
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.rotation = this.angle2, a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					HP = WP,
					zP = aa.Z.GAMEPLAY.GAME_OBJECTS,
					XP = zP.KEY,
					VP = zP.FRAME,
					JP = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, XP, "ColorBallFlareExplosionParticles") || this).emitter = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.EFFECT_HIGH), i.createExplodeAnimation(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 17)
						}, i.createExplodeAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [VP.PARTICLE_STAR],
									scale: {
										start: 1.5 * e,
										end: 0
									},
									speed: {
										min: 40,
										max: 60
									},
									tint: [16777215, 16761457, 16765014],
									lifespan: 500,
									on: !1
								};
							this.emitter = this.createEmitter(t)
						}, i.explode = function(e, t) {
							this.reviveIn(500), this.emitter.explode(8, e, t)
						}, t
					}(l_),
					qP = JP,
					QP = aa.Z.GAMEPLAY.EFFECTS,
					$P = QP.KEY,
					ex = QP.FRAME,
					tx = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, $P, "EarthenPotExplodeParticle") || this).emitter = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.ON_TOP), i.createExplodeAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 15)
						}, i.createExplodeAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [ex.EARTHEN_POT_PIECE],
									scale: {
										min: .3 * e,
										max: .8 * e
									},
									alpha: {
										start: 1,
										end: 0,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									speed: {
										min: 30,
										max: 60
									},
									lifespan: {
										min: 200,
										max: 400
									},
									gravityY: 60,
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: ix,
									on: !1
								};
							this.emitter = this.createEmitter(t)
						}, i.explode = function(e, t) {
							this.reviveIn(500), this.emitter.explode(15, e, t)
						}, t
					}(l_),
					ix = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).angle2 = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var o = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								r = Math.atan2(this.y - i, this.x - t);
							this.velocityX = o * Math.cos(r), this.velocityY = o * Math.sin(r), this.rotation = r, this.angle2 = r
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.rotation = this.angle2, a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					nx = tx,
					ax = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS,
					sx = ax.KEY,
					ox = ax.FRAME,
					rx = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, sx, "EmptyBallExplodeParticle") || this).emitter = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.ON_TOP), i.createExplodeAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 10)
						}, i.createExplodeAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [ox.BALL_TRANSPARENT],
									scale: {
										min: .5 * e,
										max: .2 * e
									},
									alpha: {
										start: 1,
										end: 0,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									speed: {
										min: 50,
										max: 60
									},
									gravityY: 350,
									lifespan: {
										min: 300,
										max: 500
									},
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: lx,
									on: !1
								};
							this.emitter = this.createEmitter(t)
						}, i.explode = function(e, t) {
							this.pool && this.reviveIn(500), this.emitter.explode(12, e, t)
						}, t
					}(l_),
					lx = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).angle2 = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var o = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								r = Math.atan2(this.y - i, this.x - t);
							this.velocityX = o * Math.cos(r), this.velocityY = o * Math.sin(r), this.rotation = r, this.angle2 = r
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.rotation = this.angle2, a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					cx = rx,
					hx = aa.Z.GAMEPLAY.EFFECTS,
					ux = hx.KEY,
					dx = hx.FRAME,
					px = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, ux, "LeavesExplodeParticle") || this).emitter = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.EFFECT), i.createExplodeAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 8)
						}, i.createExplodeAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [dx.PARTICLE_LEAF],
									scale: {
										min: .3 * e,
										max: .6 * e
									},
									alpha: {
										start: 1,
										end: 0,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									speed: {
										min: 30,
										max: 60
									},
									lifespan: {
										min: 200,
										max: 400
									},
									tint: [11911200, 12497408, 7633439, 7574301],
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: mx,
									on: !1
								};
							this.emitter = this.createEmitter(t)
						}, i.explode = function(e, t) {
							this.emitter.explode(18, e, t)
						}, t
					}(l_),
					mx = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).angle2 = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var o = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								r = Math.atan2(this.y - i, this.x - t);
							this.velocityX = o * Math.cos(r), this.velocityY = o * Math.sin(r), this.rotation = r, this.angle2 = r
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.rotation = this.angle2, a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					fx = px,
					gx = aa.Z.GAMEPLAY.EFFECTS,
					vx = gx.KEY,
					yx = gx.FRAME,
					bx = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, vx, "LightRayParticle") || this).emitter = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.EFFECT), i.createExplodeAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 20)
						}, i.createExplodeAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [yx.GLOW_4],
									scaleX: {
										start: e,
										end: 0
									},
									scaleY: {
										start: .5 * e,
										end: 0
									},
									speed: {
										min: 140,
										max: 150
									},
									lifespan: {
										min: 300,
										max: 550
									},
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: Ex,
									on: !1
								};
							this.emitter = this.createEmitter(t)
						}, i.explode = function(e, t) {
							this.emitter.explode(30, e, t)
						}, t
					}(l_),
					Ex = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).angle2 = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y,
								o = this.scaleX;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var r = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								l = Math.atan2(this.y - i, this.x - t);
							this.velocityX = r * Math.cos(l), this.velocityY = r * Math.sin(l), this.rotation = l, this.angle2 = l, this.alpha = 0, this.scaleX = o, this.scaleY = .1 * o
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.rotation = this.angle2, this.lifeT > .15 ? this.alpha = .7 : this.alpha = 0, a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					Tx = bx,
					Ax = aa.Z.GAMEPLAY.EFFECTS,
					Sx = Ax.KEY,
					_x = Ax.FRAME,
					Cx = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, Sx, "LuckyPouchExplodeParticle") || this).starEmitter = void 0, i.dustEmitter = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.ON_TOP), i.createExplodeAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 8)
						}, i.createExplodeAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [_x.PARTICLE_STAR],
									scale: {
										min: .5 * e,
										max: .7 * e
									},
									alpha: {
										start: .8,
										end: 0,
										ease: Phaser.Math.Easing.Sine.In
									},
									speed: {
										min: 100,
										max: 120
									},
									lifespan: {
										min: 200,
										max: 400
									},
									gravityY: 360,
									tint: [16777204, 16777215],
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: tT,
									on: !1
								},
								i = {
									frame: [_x.PARTICLE_DUST_01, _x.PARTICLE_DUST_02],
									scale: .7 * e,
									alpha: {
										start: .8,
										end: 0,
										ease: Phaser.Math.Easing.Sine.In
									},
									speed: {
										min: 40,
										max: 60
									},
									lifespan: {
										min: 100,
										max: 200
									},
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: tT,
									on: !1
								};
							this.starEmitter = this.createEmitter(t), this.dustEmitter = this.createEmitter(i), this.dustEmitter.setTint(16055981)
						}, i.explode = function(e, t) {
							this.reviveIn(500), this.dustEmitter.explode(12, e, t - 5), this.starEmitter.explode(16, e, t - 15)
						}, t
					}(l_),
					wx = Cx,
					Bx = aa.Z.GAMEPLAY.EFFECTS,
					Ix = Bx.KEY,
					Px = Bx.FRAME,
					xx = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).angle2 = void 0, i.directionX = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var o = Math.atan2(this.y - i, this.x - t),
								r = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY);
							this.velocityX = r * Math.cos(o), this.velocityY = r * Math.sin(o), this.rotation = o, this.angle2 = o, o > Math.PI / 2 || o < -Math.PI / 2 ? this.directionX = -1 : this.directionX = 1
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.angle2 += .05 * this.directionX, this.rotation = this.angle2, a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					Ox = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, Ix, "MirrorPieceExplodeParticle") || this).scene = void 0, i.emitZone = void 0, i.emitter = void 0, i.scene = t, i.createEmitZone(), i.setDepth(jn.Z.ON_TOP), i.createExplodeAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 8)
						}, i.createExplodeAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [Px.MIRROR_PIECE_0, Px.MIRROR_PIECE_1, Px.MIRROR_PIECE_2, Px.MIRROR_PIECE_3],
									scale: {
										min: .5 * e,
										max: .9 * e
									},
									alpha: {
										start: 1,
										end: 0,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									speed: {
										min: 60,
										max: 70
									},
									gravityY: 340,
									lifespan: {
										min: 200,
										max: 300
									},
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: xx,
									on: !1
								};
							this.emitter = this.createEmitter(t)
						}, i.explode = function(e, t) {
							this.reviveIn(300), this.emitter.explode(12, e, t)
						}, t
					}(l_),
					kx = Ox,
					Rx = aa.Z.GAMEPLAY.EFFECTS,
					Mx = Rx.KEY,
					Lx = Rx.FRAME,
					Gx = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, Mx, "MudExplodeParticle") || this).emitter = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.ON_TOP), i.createExplodeAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 12)
						}, i.createExplodeAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [Lx.MUD_SPLASH_02, Lx.MUD_SPLASH_03],
									scale: {
										min: .4 * e,
										max: .8 * e
									},
									alpha: {
										start: 1,
										end: 0,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									speed: {
										min: 30,
										max: 80
									},
									lifespan: {
										min: 200,
										max: 300
									},
									gravityY: 120,
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: Dx,
									on: !1
								};
							this.emitter = this.createEmitter(t)
						}, i.explode = function(e, t) {
							this.reviveIn(300), this.emitter.explode(20, e, t)
						}, t
					}(l_),
					Dx = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).angle2 = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var o = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								r = Math.atan2(this.y - i, this.x - t);
							this.velocityX = o * Math.cos(r), this.velocityY = o * Math.sin(r), this.velocityX > 0 ? this.rotation = r - Math.PI / 2 : this.rotation = r, this.angle2 = r
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.rotation = this.angle2, a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					Fx = Gx,
					Nx = aa.Z.GAMEPLAY.EFFECTS,
					Zx = Nx.KEY,
					Ux = Nx.FRAME,
					jx = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, Zx, "MummyExplodeParticle") || this).emitter = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.ON_TOP), i.createExplodeAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 15)
						}, i.createExplodeAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [Ux.STONE_PIECE_1, Ux.STONE_PIECE_2],
									scale: {
										min: e,
										max: 1.2 * e
									},
									alpha: {
										start: 1,
										end: 0,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									speed: {
										min: 30,
										max: 60
									},
									lifespan: {
										min: 200,
										max: 400
									},
									gravityY: 60,
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: Yx,
									on: !1
								};
							this.emitter = this.createEmitter(t)
						}, i.explode = function(e, t) {
							this.reviveIn(400), this.emitter.explode(15, e, t)
						}, t
					}(l_),
					Yx = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).angle2 = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var o = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								r = Math.atan2(this.y - i, this.x - t);
							this.velocityX = o * Math.cos(r), this.velocityY = o * Math.sin(r), this.rotation = r, this.angle2 = r
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.rotation = this.angle2, a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					Wx = jx,
					Kx = aa.Z.GAMEPLAY.EFFECTS,
					Hx = Kx.KEY,
					zx = Kx.FRAME,
					Xx = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, Hx, "ProgressStarParticle") || this).emitter = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.ON_TOP), i.createExplodeAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 8)
						}, i.createExplodeAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [zx.PARTICLE_STARS],
									scale: {
										start: .3 * e,
										end: .2 * e
									},
									alpha: {
										start: 1,
										end: 0,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									speed: {
										min: 30,
										max: 60
									},
									lifespan: {
										min: 300,
										max: 500
									},
									tint: [16777215, 16776960],
									rotate: {
										start: 0,
										end: 360
									},
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: Vx,
									on: !1
								};
							this.emitter = this.createEmitter(t)
						}, i.explode = function(e, t) {
							this.reviveIn(500), this.emitter.explode(8, e, t)
						}, t
					}(l_),
					Vx = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).angle2 = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var o = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								r = Math.atan2(this.y - i, this.x - t);
							this.velocityX = o * Math.cos(r), this.velocityY = o * Math.sin(r), this.rotation = r, this.angle2 = r
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.rotation = this.angle2, a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					Jx = Xx,
					qx = aa.Z.GAMEPLAY.EFFECTS,
					Qx = qx.KEY,
					$x = qx.FRAME,
					eO = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, Qx, "RelicMaskExplodeParticle") || this).emitter = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.ON_TOP), i.createExplodeAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 8)
						}, i.createExplodeAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [$x.BLANK],
									scale: {
										min: e,
										max: 1.2 * e
									},
									alpha: {
										start: 1,
										end: 0,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									speed: {
										min: 40,
										max: 60
									},
									lifespan: {
										min: 150,
										max: 300
									},
									gravityY: 360,
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: tT,
									on: !1
								};
							this.emitter = this.createEmitter(t)
						}, i.explode = function(e, t, i) {
							this.reviveIn(300), this.updateEmitterFrames(i), this.emitter.explode(12, e, t)
						}, i.updateEmitterFrames = function(e) {
							var t, i = [];
							switch (e) {
								case wc.I.Red:
									t = $x.RELIC_MASK_RED_PARTICLE_PREFIX;
									break;
								case wc.I.Green:
									t = $x.RELIC_MASK_GREEN_PARTICLE_PREFIX;
									break;
								case wc.I.Blue:
									t = $x.RELIC_MASK_BLUE_PARTICLE_PREFIX;
									break;
								case wc.I.Yellow:
									t = $x.RELIC_MASK_YELLOW_PARTICLE_PREFIX;
									break;
								case wc.I.Pink:
									t = $x.RELIC_MASK_PINK_PARTICLE_PREFIX;
									break;
								case wc.I.Violet:
									t = $x.RELIC_MASK_PURPLE_PARTICLE_PREFIX;
									break;
								case wc.I.Cyan:
									t = $x.RELIC_MASK_SKY_BLUE_PARTICLE_PREFIX;
									break;
								case wc.I.Orange:
									t = $x.RELIC_MASK_ORANGE_PARTICLE_PREFIX
							}
							for (var n = 1; n <= 4; n++) i.push("" + t + n);
							this.emitter.setFrame(i)
						}, t
					}(l_),
					tO = eO,
					iO = aa.Z.GAMEPLAY.EFFECTS,
					nO = iO.KEY,
					aO = iO.FRAME,
					sO = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, nO, "RotationPieceExplodeParticle") || this).emitter = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.ON_TOP), i.createExplodeAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 20)
						}, i.createExplodeAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [aO.ROTATE_PIECE_0, aO.ROTATE_PIECE_1, aO.ROTATE_PIECE_2, aO.ROTATE_PIECE_3],
									scale: {
										min: e,
										max: 1.2 * e
									},
									alpha: {
										start: 1,
										end: 0,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									speed: {
										min: 120,
										max: 130
									},
									gravityY: 1e3,
									lifespan: {
										min: 200,
										max: 300
									},
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: oO,
									on: !1
								};
							this.emitter = this.createEmitter(t)
						}, i.explode = function(e, t) {
							this.reviveIn(300), this.emitter.explode(15, e, t)
						}, t
					}(l_),
					oO = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).angle2 = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var o = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								r = Math.atan2(this.y - i, this.x - t);
							this.velocityX = o * Math.cos(r), this.velocityY = o * Math.sin(r), this.rotation = r, this.angle2 = r
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.rotation = this.angle2, a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					rO = sO,
					lO = aa.Z.GAMEPLAY.GAME_OBJECTS,
					cO = lO.KEY,
					hO = lO.FRAME,
					uO = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, cO, "RotationPieceMiddleFlyParticle") || this).emitter = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.ON_TOP), i.createExplodeAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(3, -5, 5)
						}, i.createExplodeAnimation = function() {
							var e = {
								frame: [hO.MOVE_ROTATION_BALL],
								speed: 100,
								gravityY: 900,
								lifespan: 500,
								scale: 1 / this.scene.world.getPixelRatio(),
								emitZone: {
									source: this.emitZone,
									type: "random"
								},
								particleClass: dO,
								on: !1
							};
							this.emitter = this.createEmitter(e)
						}, i.explode = function(e, t) {
							this.reviveIn(500), this.emitter.explode(1, e, t)
						}, t
					}(l_),
					dO = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).angle2 = void 0, i.directionX = void 0, i.scale2 = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var o = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								r = Math.atan2(this.y - i, this.x - t);
							this.velocityX = o * Math.cos(r), this.velocityY = o * Math.sin(r), this.angle2 = 0, r > Math.PI / 2 || r < -Math.PI / 2 ? this.directionX = 1 : this.directionX = -1, this.scale2 = this.scaleX
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.lifeT < .5 ? (this.scaleX = this.scale2 * (1 - 2 * this.lifeT), this.angle2 = Math.PI / 2 * this.lifeT * 2 * this.directionX, this.scaleY = this.scale2) : (this.scaleX = .9 * this.scale2 * (this.lifeT - .5) * 2, this.scaleY = this.scale2, this.alpha = 1 - 2 * (this.lifeT - .5), this.angle2 = (Math.PI / 2 * (this.lifeT - .5) * 2 + Math.PI / 2) * this.directionX), this.rotation = this.angle2, a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					pO = uO,
					mO = aa.Z.GAMEPLAY.EFFECTS,
					fO = mO.KEY,
					gO = mO.FRAME,
					vO = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, fO, "RotationDustExplodeParticle") || this).emitter = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.ON_TOP), i.createExplodeAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 30)
						}, i.createExplodeAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [gO.PARTICLE_DUST_01, gO.PARTICLE_DUST_02],
									scale: {
										min: .6 * e,
										max: e
									},
									alpha: {
										start: .7,
										end: 0,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									speed: {
										min: 90,
										max: 120
									},
									gravityY: 100,
									lifespan: {
										min: 100,
										max: 200
									},
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: yO,
									on: !1
								};
							this.emitter = this.createEmitter(t)
						}, i.explode = function(e, t) {
							this.reviveIn(200), this.emitter.explode(15, e, t)
						}, t
					}(l_),
					yO = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).angle2 = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var o = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								r = Math.atan2(this.y - i, this.x - t);
							this.velocityX = o * Math.cos(r), this.velocityY = o * Math.sin(r), this.rotation = r, this.angle2 = r
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.rotation = this.angle2, a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					bO = vO,
					EO = aa.Z.GAMEPLAY.EFFECTS,
					TO = EO.KEY,
					AO = EO.FRAME,
					SO = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, TO, "SpiderWebExplodeParticle") || this).emitter = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.ON_TOP), i.createExplodeAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 15)
						}, i.createExplodeAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [AO.SPIDER_WEB_PARTICLE_1, AO.SPIDER_WEB_PARTICLE_2, AO.SPIDER_WEB_PARTICLE_3, AO.SPIDER_WEB_PARTICLE_4],
									scale: {
										min: .8 * e,
										max: 1 * e
									},
									alpha: {
										start: 1,
										end: 0,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									speed: {
										min: 30,
										max: 60
									},
									lifespan: {
										min: 200,
										max: 400
									},
									gravityY: 60,
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: _O,
									on: !1
								};
							this.emitter = this.createEmitter(t)
						}, i.explode = function(e, t) {
							this.reviveIn(400), this.emitter.explode(15, e, t)
						}, t
					}(l_),
					_O = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).angle2 = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var o = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								r = Math.atan2(this.y - i, this.x - t);
							this.velocityX = o * Math.cos(r), this.velocityY = o * Math.sin(r), this.rotation = r, this.angle2 = r
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.rotation = this.angle2, a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					CO = SO,
					wO = aa.Z.GAMEPLAY.EFFECTS,
					BO = wO.KEY,
					IO = wO.FRAME,
					PO = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, BO, "DustLavaParticle") || this).emitter = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.EFFECT_HIGH), i.emitter = i.createEmitters(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 5)
						}, i.createEmitters = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [IO.PARTICLE_CIRCLE_2, IO.PARTICLE_CIRCLE_1],
									scale: {
										min: .1 * e,
										max: .7 * e
									},
									gravityY: 80,
									alpha: {
										start: 1,
										end: 0
									},
									speed: {
										min: 2,
										max: 5
									},
									tint: 14437415,
									lifespan: {
										min: 400,
										max: 800
									},
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									on: !1
								};
							return this.createEmitter(t)
						}, i.explode = function(e, t) {
							this.reviveIn(800), this.emitter.explode(e, t.x, t.y)
						}, t
					}(l_),
					xO = PO,
					OO = aa.Z.GAMEPLAY.EFFECTS,
					kO = OO.KEY,
					RO = OO.FRAME,
					MO = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, kO, "LavaExplodeParticle") || this).explodeEmitter = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.EFFECT_HIGH), i.explodeEmitter = i.createExplodeEmitterSmoke(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 10)
						}, i.createExplodeEmitterSmoke = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [RO.PARTICLE_DUST_01, RO.PARTICLE_DUST_02],
									angle: {
										min: 0,
										max: 360
									},
									scale: {
										start: .8 * e,
										end: 0
									},
									alpha: {
										start: 1,
										end: 0
									},
									speed: {
										min: 20,
										max: 50
									},
									tint: [14437415, 16767323],
									lifespan: {
										min: 500,
										max: 1e3
									},
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: tT,
									on: !1
								};
							return this.createEmitter(t)
						}, i.explode = function(e, t) {
							this.reviveIn(1e3), this.explodeEmitter.explode(e, t.x, t.y)
						}, t
					}(l_),
					LO = MO,
					GO = aa.Z.GAMEPLAY.EFFECTS,
					DO = GO.KEY,
					FO = GO.FRAME,
					NO = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, DO, "ThreeThundersBallExplodeParticle") || this).emitter = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.EFFECT_HIGH), i.createExplodeEmitter(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 10)
						}, i.createExplodeEmitter = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [FO.PARTICLE_CIRCLE_1, FO.PARTICLE_CIRCLE_2],
									scale: {
										start: 1.5 * e,
										end: 0
									},
									alpha: {
										start: 1,
										end: 0
									},
									speed: {
										min: 20,
										max: 50
									},
									tint: [14733122, 15259821],
									lifespan: {
										min: 400,
										max: 800
									},
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: tT,
									on: !1
								};
							this.emitter = this.createEmitter(t)
						}, i.explode = function(e, t) {
							this.reviveIn(800), this.emitter.explode(e, t.x, t.y)
						}, t
					}(l_),
					ZO = NO,
					UO = function() {
						function e(e) {
							this.scene = void 0, this.gameManager = void 0, this.particleDead = void 0, this.scene = e.scene, this.gameManager = e, this.particleDead = {}
						}
						var t = e.prototype;
						return t.init = function(e, t, i) {
							var n = this.getParticleByKey(e);
							if (n && (this.particleDead[e] || (this.particleDead[e] = []), !(void 0 != i && this.particleDead[e].length >= i)))
								for (var a = 0; a < t; a++) {
									var s = new n(this.scene);
									s.pool = this, s.kill(), this.particleDead[e].push(s)
								}
						}, t.spawn = function(e) {
							return this.particleDead[e] && 0 !== this.particleDead[e].length || this.init(e, 1), this.particleDead[e].pop()
						}, t.despawn = function(e) {
							e.kill(), this.particleDead[e.key].push(e)
						}, t.getParticleByKey = function(e) {
							switch (e) {
								case "BombDrugExplosionParticles":
									return ZP;
								case "CandleExplodeParticle":
									return HP;
								case "ColorBallFlareExplosionParticles":
									return qP;
								case "EarthenPotExplodeParticle":
									return nx;
								case "EmptyBallExplodeParticle":
									return cx;
								case "LuckyPouchExplodeParticle":
									return wx;
								case "MirrorPieceExplodeParticle":
									return kx;
								case "MudExplodeParticle":
									return Fx;
								case "MummyExplodeParticle":
									return Wx;
								case "ProgressStarParticle":
									return Jx;
								case "RelicMaskExplodeParticle":
									return tO;
								case "RotationPieceExplodeParticle":
									return rO;
								case "RotationPieceMiddleFlyParticle":
									return pO;
								case "RotationDustExplodeParticle":
									return bO;
								case "SpiderWebExplodeParticle":
									return CO;
								case "DustLavaParticle":
									return xO;
								case "LavaExplodeParticle":
									return LO;
								case "ThreeThundersBallExplodeParticle":
									return ZO;
								case "LightRayParticle":
									return Tx;
								case "LeavesExplodeParticle":
									return fx;
								default:
									throw new Error("Wrong key particle, please check!")
							}
						}, e
					}(),
					jO = function(e) {
						function t(t, i, n, a, s) {
							var o;
							return (o = e.call(this, t, i, n, a, s) || this).spritePool = void 0, o.kill(), o
						}
						return (0, l.Z)(t, e), t.prototype.kill = function() {
							var t;
							e.prototype.kill.call(this), null == (t = this.spritePool) || t.despawn(this)
						}, t
					}(Phaser.GameObjects.Sprite),
					YO = jO,
					WO = function(e) {
						function t(t) {
							var i, n = t.scene;
							return (i = e.call(this, n) || this).gameManager = void 0, i.gameManager = t, i.init(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							var e, t, i = this;
							_()(e = ko()(t = Array(10)).call(t, null)).call(e, (function() {
								return new YO(i.scene, 0, 0, aa.Z.GAMEPLAY.GAME_OBJECTS.KEY)
							})).forEach((function(e) {
								e.spritePool = i, i.despawn(e)
							}))
						}, i.spawn = function() {
							var e = this.getFirstDead(!1);
							return e || ((e = new YO(this.scene, 0, 0, aa.Z.GAMEPLAY.GAME_OBJECTS.KEY)).spritePool = this), e.setScale(1 / this.scene.world.getPixelRatio()), e.revive(), e.setOrigin(.5, .5).setRotation(0).setAlpha(1), e
						}, i.despawn = function(e) {
							this.killAndHide(e)
						}, t
					}(Phaser.GameObjects.Group),
					KO = WO,
					HO = aa.Z.THEME,
					zO = HO.KEY,
					XO = HO.DEFAULT,
					VO = HO.HARD,
					JO = function(e) {
						function t(t) {
							var i;
							(i = e.call(this, t) || this).scene = void 0, i.shooter = void 0, i.shotGuide = void 0, i.grid = void 0, i.ballLayoutData = void 0, i.gridObjectPool = void 0, i.subGridObjectPool = void 0, i.bulletPool = void 0, i.particlePool = void 0, i.spritePool = void 0, i.levelData = void 0, i.scoreManager = void 0, i.guideManager = void 0, i.behaviorManager = void 0, i.totalGems = void 0, i.gemCount = void 0, i.rescueTime = 1, i.isWin = void 0, i.matchCountSuccess = 0, i.matchCountFail = 0, i.swapBallsCount = 0, i.isSwapBallCounted = !0, i.shootTimes = 0, i.currentTurn = 0, i.isUseCoinRescue = !1, i.isBulletOutSide = !1, i.sleepResolves = [], i.scene = t, i.shotGuide = new o_(t);
							var n = i.scene.gameZone,
								a = n.width,
								s = n.height;
							return i.shooter = new _T((0, Un.Z)(i), .5 * a, s - (s - 667) / 2 - 160), i.createObjectsPool(), i.shooter.setGuide(i.shotGuide), i.ballLayoutData = new ME(i.scene), i.grid = new WS((0, Un.Z)(i)), i.grid.setLayoutData(i.ballLayoutData), i.shooter.setLayoutData(i.ballLayoutData), i.shooter.setBallPool(i.bulletPool), i.ballLayoutData.setBallGrid(i.grid), i.shotGuide.setBallGrid(i.grid), i.scoreManager = new RP(t), i.guideManager = new xP(t), i.behaviorManager = new hP(t), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this)
						}, i.start = function() {
							e.prototype.start.call(this), this.startGame()
						}, i.stop = function() {
							e.prototype.stop.call(this)
						}, i.startGame = function() {
							var e = this.scene.level.getLevelData();
							e && (this.matchCountFail = 0, this.matchCountSuccess = 0, this.currentTurn = 0, this.scene.player.updateLastPlayed(), this.levelData = e, this.updateTheme(), this.grid.generateGridFromData(e.grid, e.colors), this.shooter.initBullet(), this.initMission(), this.gridObjectPool.calculateGeom(), this.gridObjectPool.changeColorGridObjects(), this.scene.bulletItemManager.resetProcessFillAllItem(), this.scoreManager.initDefault(), this.scoreManager.setScore(0), this.scene.header.progressBar.progress.setProgress(0, !0), this.scene.header.progressBar.alignStars(e.starsTarget), this.scoreManager.setTargetScore(e.starsTarget[e.starsTarget.length - 1]), this.shooter.startLevel(), this.scene.footer.startFreeItemSparkle(), this.updateMissionDetail(e.missionType), this.rescueTime = 1, this.isWin = !1, this.grid.isHasNoObjectRemoved = !0, this.swapBallsCount = 0, this.isSwapBallCounted = !0, this.shootTimes = 0, this.scene.hidableObjects.setActive(!0), this.scene.hidableObjects.setVisible(!0), this.scene.hidableObjects.setAlpha(1), this.isUseCoinRescue = !1, this.scene.background.setTint(16777215), this.scene.maskBackground.kill())
						}, i.pauseGame = function() {
							this.shooter.pause()
						}, i.resumeGame = function() {
							this.shooter.resume()
						}, i.restart = function() {}, i.endTurn = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t = this;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.abrupt("return", this.grid.endTurn((function() {
												var e = t.grid.descentController.getDy(),
													i = 70 * Math.abs(Math.floor(e / 29));
												t.scene.time.delayedCall(i, (function() {
													t.isWin || t.shooter.attachBullet()
												}))
											})));
										case 1:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.startTurn = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (!this.updateMission()) {
												e.next = 4;
												break
											}
											return this.win(), e.abrupt("return");
										case 4:
											return e.next = 6, this.grid.startTurn();
										case 6:
											if (this.increaseCurrentTurn(), this.isSwapBallCounted = !0, this.gridObjectPool.calculateGeom(), this.shotGuide.updateObstaclesToRaycaster(), 5 == this.shooter.getRemainingBullet() && this.scene.playWarningTextAnimation(), !(this.shooter.getRemainingBullet() <= 0)) {
												e.next = 14;
												break
											}
											return this.lose(), e.abrupt("return");
										case 14:
											t = this.scene.gameManager.guideManager.getIsShowingGuide(), t.isShowingGuide || this.scene.footer.setDisabled(!1, !0);
										case 16:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.update = function(e) {
							this.shooter.update(e)
						}, i.destroy = function() {
							this.grid.clearGrid(), this.guideManager.reset(), this.gridObjectPool.reset(), this.subGridObjectPool.reset(), this.bulletPool.reset(), this.shooter.pause(), this.shooter.reset(), this.scoreManager.reset(), this.sleepResolves = []
						}, i.debugWin = function() {
							this.isWin = !0, this.processPlayerLevelData(), this.scene.stateManager.nextLevel()
						}, i.debugLose = function() {
							this.lose()
						}, i.createObjectsPool = function() {
							this.bulletPool = new P_(this), this.gridObjectPool = new qB(this), this.subGridObjectPool = new nP(this), this.particlePool = new UO(this), this.spritePool = new KO(this)
						}, i.initMission = function() {
							var e = this.scene.header,
								t = e.missionBlock;
							if ("CollectBubbles" === this.levelData.missionType) {
								var i = this.grid.getColorBalls();
								return e.missionBlock.setModeCollectBubbles(), void t.setText("" + i.length)
							}
							var n = this.grid.getGemsBalls();
							return this.totalGems = n.length, this.gemCount = 0, t.setModeCollectGems(), void t.setText(this.gemCount + "/" + this.totalGems)
						}, i.updateMission = function() {
							var e = this.grid.getColorBalls(),
								t = this.scene.header,
								i = t.missionBlock;
							return "CollectBubbles" === this.levelData.missionType ? (t.missionBlock.setModeCollectBubbles(), i.setText("" + e.length), 0 === e.length) : 0 === this.grid.getGemsBalls().length
						}, i.win = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, i, n;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return this.sleepResolves = [], this.scene.footer.runFadeOutAnimation(), this.scene.footer.hideFreeItemSparkle(), this.scene.skipLevelCompleteButton.revive(), this.scene.vibrateController.handleCompleteLevel(), this.isWin = !0, this.scene.playWinningAnimation(), this.scene.bulletItemManager.stop(), this.guideManager.closeCurrentGuide(), t = this.sleepAsync(2e3), i = this.dropAndWinAsync(), e.next = 13, oe().all([t, i]);
										case 13:
											this.scene.runFadeOutHidableObjects(), n = this.scoreManager.getCurrentScore() + 500 * this.shooter.getRemainingBullet(), this.scoreManager.setCurrentScore(n), this.processPlayerLevelData(), this.scene.stateManager.nextLevel();
										case 18:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.dropAndWinAsync = function() {
							var e = (0, r.Z)(h().mark((function e() {
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, this.grid.dropWhenLevelEnd("success");
										case 2:
											return e.next = 4, this.shooter.celebrationWin();
										case 4:
											return e.next = 6, this.sleepAsync(500);
										case 6:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.sleepAsync = function(e) {
							var t = this;
							return this.scene.getIsSkipLevelComplete() ? oe().resolve() : new(oe())((function(i) {
								t.sleepResolves.push(i), (0, xo.qZ)(e).then(i)
							}))
						}, i.processPlayerLevelData = function() {
							var e, t = this.scene.gameManager.scoreManager.getStar(),
								i = this.scene.level.getLevel(),
								n = this.scene.level.getMaxLevel(),
								a = this.scene.player.getLevelStars(),
								s = n;
							n === i && (s = n + 1), t < a[i] && (t = a[i]);
							var r = (0, o.Z)({}, a, ((e = {})[i] = t, e));
							this.scene.player.updatePlayerLevel(s, r)
						}, i.lose = function() {
							this.scene.stateManager.rescue(), this.rescueTime += 1
						}, i.increaseGemCount = function() {
							var e = this.scene.header.missionBlock;
							this.gemCount += 1, e.setText(this.gemCount + "/" + this.totalGems)
						}, i.updateMissionDetail = function(e) {
							var t = aa.Z.DEFAULT.FRAME,
								i = this.scene.missionDetail,
								n = "CollectBubbles" === e ? "Pop all bubbles!" : "Collect gems!",
								a = "CollectBubbles" == e ? t.ICON_MISSION_BALLS_BIG : t.ICON_MISSION_GEMS_BIG;
							i.setText(n), i.setIcon(a)
						}, i.updateTheme = function() {
							this.levelData.isHard ? (this.scene.theme.changeTheme(aa.Z.THEME_GAMEPLAY.KEY, aa.Z.THEME_GAMEPLAY.HARD.KEY), this.scene.theme.changeTheme(zO, VO.KEY), this.scene.theme.changeTheme(Yn.Z.GAME_BACKGROUND_THEME.KEY, Yn.Z.GAME_BACKGROUND_THEME.HARD.KEY)) : (this.scene.theme.changeTheme(aa.Z.THEME_GAMEPLAY.KEY, aa.Z.THEME_GAMEPLAY.DEFAULT.KEY), this.scene.theme.changeTheme(zO, XO.KEY), this.scene.theme.changeTheme(Yn.Z.GAME_BACKGROUND_THEME.KEY, Yn.Z.GAME_BACKGROUND_THEME.DEFAULT.KEY))
						}, i.increaseMatchCountSuccess = function() {
							this.matchCountSuccess += 1, this.scene.analytics.event(Xt._.BUBBLE_MATCH, {
								level: this.scene.level.getLevel()
							})
						}, i.increaseMatchCountFail = function() {
							this.matchCountFail += 1, this.scene.analytics.event(Xt._.BUBBLE_MATCH_FAILED, {
								level: this.scene.level.getLevel(),
								is_out_side: this.isBulletOutSide
							})
						}, i.getMatchCountSuccess = function() {
							return this.matchCountSuccess
						}, i.getMatchCountFail = function() {
							return this.matchCountFail
						}, i.increaseSwapBallsTimes = function() {
							this.isSwapBallCounted && (this.swapBallsCount += 1, this.isSwapBallCounted = !1)
						}, i.getSwapBallsTime = function() {
							return this.swapBallsCount
						}, i.increaseShootTimes = function() {
							this.shootTimes += 1
						}, i.getShootTimes = function() {
							return this.shootTimes
						}, i.increaseCurrentTurn = function() {
							this.currentTurn += 1
						}, i.getCurrentTurn = function() {
							return this.currentTurn
						}, i.skipSleepAsync = function() {
							0 !== this.sleepResolves.length && (this.sleepResolves.forEach((function(e) {
								e()
							})), this.sleepResolves = [])
						}, i.setIsUseCoinRescue = function(e) {
							this.isUseCoinRescue = e
						}, i.getIsUseCoinRescue = function() {
							return this.isUseCoinRescue
						}, i.getAllBallsOnGrid = function() {
							return this.grid.getFlatGrid()
						}, i.getMissionBalls = function() {
							return "CollectBubbles" === this.levelData.missionType ? this.grid.getColorBalls() : this.grid.getGemsBalls()
						}, t
					}(wf),
					qO = JO,
					QO = Sf.STATUS,
					$O = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.itemActive = void 0, i.scene = t, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							this.setState(QO.READY)
						}, i.start = function() {
							if (!this.isRunning()) {
								var e = this.scene.player.getBullets();
								if (this.updateLimitBulletsItem(e), this.updateLimitUseBulletItems(), this.resetFreeItemsGottenCount(), this.setState(QO.RUNNING), this.itemActive) {
									this.itemActive = void 0;
									var t = this.scene.footer;
									t.itemObjects.setVisible(!0), t.itemObjects.setActive(!0), t.cancelButton.kill()
								}
							}
						}, i.stop = function() {
							this.isRunning() && this.setState(QO.STOPPED)
						}, i.getItem = function(e) {
							switch (e) {
								case "BombBulletItem":
									return this.scene.footer.bombBulletItem;
								case "ElectricBulletBallItem":
									return this.scene.footer.electricBulletBallItem;
								case "RainbowBulletBallItem":
									return this.scene.footer.rainbowBulletItem;
								case "RocketBulletItem":
									return this.scene.footer.rocketBulletItem
							}
						}, i.activeItem = function(e) {
							if (!this.isRunning() || this.scene.gameManager.shooter.getShooterState() !== nf.READY) return !1;
							this.itemActive = e;
							var t = this.scene.footer;
							return t.itemObjects.setVisible(!1), t.itemObjects.setActive(!1), t.cancelButton.revive(), this.scene.gameManager.shooter.attachBulletItem(), this.scene.gameManager.shooter.hideSpinningArrows(!0), this.scene.gameManager.gridObjectPool.changeColorGridObjects(), !0
						}, i.deActiveItem = function() {
							if (this.itemActive) {
								var e = this.scene.gameManager.shooter,
									t = this.scene.footer;
								t.itemObjects.setVisible(!0), t.itemObjects.setActive(!0), t.cancelButton.kill(), this.itemActive = void 0, e.getShooterState() == nf.READY && (e.attachBullet(), e.showSpinningArrows()), this.scene.gameManager.gridObjectPool.changeColorGridObjects()
							}
						}, i.getNameItemActive = function() {
							var e;
							return (null == (e = this.itemActive) ? void 0 : e.name) || ""
						}, i.updateLimitBulletsItem = function(e) {
							this.scene.footer.bombBulletItem.setLimitCount(e.BombBulletItem), this.scene.footer.rainbowBulletItem.setLimitCount(e.RainbowBulletBallItem), this.scene.footer.electricBulletBallItem.setLimitCount(e.ElectricBulletBallItem), this.scene.footer.rocketBulletItem.setLimitCount(e.RocketBulletItem)
						}, i.resetProcessFillAllItem = function() {
							this.scene.footer.bombBulletItem.resetProgressFillItem(), this.scene.footer.electricBulletBallItem.resetProgressFillItem(), this.scene.footer.rainbowBulletItem.resetProgressFillItem(), this.scene.footer.rocketBulletItem.resetProgressFillItem()
						}, i.getItemActive = function() {
							return this.itemActive
						}, i.updateLimitUseBulletItems = function() {
							var e, t, i, n, a = this.scene.level.getLevelData(),
								s = this.scene.footer;
							s.bombBulletItem.setLimitUseItem(null == a || null == (e = a.bulletItems) ? void 0 : e.BombBulletItem), s.rainbowBulletItem.setLimitUseItem(null == a || null == (t = a.bulletItems) ? void 0 : t.RainbowBulletBallItem), s.electricBulletBallItem.setLimitUseItem(null == a || null == (i = a.bulletItems) ? void 0 : i.ElectricBulletBallItem), s.rocketBulletItem.setLimitUseItem(null == a || null == (n = a.bulletItems) ? void 0 : n.RocketBulletItem)
						}, i.resetFreeItemsGottenCount = function() {
							var e = this.scene.footer;
							e.bombBulletItem.resetFreeItemGottenCount(), e.rainbowBulletItem.resetFreeItemGottenCount(), e.electricBulletBallItem.resetFreeItemGottenCount(), e.rocketBulletItem.resetFreeItemGottenCount()
						}, i.setDisabledItems = function(e) {
							var t = this.scene.footer;
							t.bombBulletItem.setDisabled(e), t.rainbowBulletItem.setDisabled(e), t.electricBulletBallItem.setDisabled(e), t.rocketBulletItem.setDisabled(e)
						}, t
					}(wf),
					ek = $O,
					tk = aa.Z.DEFAULT,
					ik = tk.KEY,
					nk = tk.FRAME,
					ak = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).scene = void 0, s.treasureBox = void 0, s.claimButton = void 0, s.popupFadeOutAnimation = void 0, s.nameTreasures = [], s.treasure = void 0, s.header = void 0, s.main = void 0, s.treasureExplosiveTimer = void 0, s.treasureItemExplosivesByKey = {}, s.iconRemoveAds = void 0, s.bulletFrom = {}, s.bulletsTo = {}, s.coinFrom = void 0, s.coinTo = void 0, s.open = function() {
								e.prototype.open.call((0, Un.Z)(s)), s.setAlpha(1);
								var t = s.scene.level.getLevelConfigMap(),
									i = s.scene.level.getLevel();
								s.nameTreasures = [];
								var n = t[i - 1].treasure;
								n && (s.nameTreasures = K()(n), s.treasure = n), 0 !== s.nameTreasures.length ? (n && s.updateUI(n), s.runOpenAnimation(), s.claimTreasureData()) : s.closePopup()
							}, s.handleClosePopup = function() {
								s.scene.audio.playSound(sa.Z.POPUP_OUT), s.popupFadeOutAnimation.next((function() {
									s.scene.screen.close(s.name), s.scene.scene.switch(In.C.DASHBOARD_SCENE)
								}))
							}, s.closePopup = function() {
								s.scene.audio.playSound(sa.Z.POPUP_OUT), s.treasureBox.reset(), s.scene.screen.close(s.name)
							}, s.handleClaim = function() {
								s.header.revive(), s.header.setAlpha(0), s.scene.audio.playSound(sa.Z.GIFT_RECEIVED), s.scene.tweens.add({
									targets: s.header,
									duration: 200,
									props: {
										alpha: {
											start: 0,
											from: 0,
											to: 1
										}
									}
								}), s.claimButton.kill();
								var e = s.bulletFrom,
									t = {},
									i = (s.coinFrom, []);
								Yr.Z.forEach((function(n) {
									var a, o = s.treasure[n];
									if (o) {
										var r = s.main.getBlock(n),
											l = s.header.getIconBlockPosition(n);
										if (r && l) {
											r.kill();
											var c = r.getIcon(),
												h = c.getWorldPosition();
											null == (a = s.treasureItemExplosivesByKey[n]) || a.setSizeIcon(c.width, c.height);
											var u = s.runTreasuresExplodeEffect(h, l, n, o);
											if (i.push(u), "Coin" !== n) {
												var d = e[n] || 0;
												d += o, t[n] = d
											} else o
										}
									}
								})), oe().all(i).then((function() {
									var e;
									null == (e = s.treasureExplosiveTimer) || e.remove(), s.treasureExplosiveTimer = s.scene.time.delayedCall(700, (function() {
										s.setDepth(Wn.Ks.POPUP), s.runCloseAnimation((function() {
											s.scene.nextLevelScreen.runFadeInContents()
										}))
									}))
								}))
							}, s.runTreasuresExplodeEffect = function() {
								var e = (0, r.Z)(h().mark((function e(t, i, n, a) {
									var o, r, l, c, u, d, p;
									return h().wrap((function(e) {
										for (;;) switch (e.prev = e.next) {
											case 0:
												if (o = 1, r = s.treasureItemExplosivesByKey[n]) {
													e.next = 4;
													break
												}
												return e.abrupt("return");
											case 4:
												return l = r.explode(o, t.x, t.y, i.x, i.y), c = l.allTweens, u = l.longestTween, d = s.bulletFrom, p = s.coinFrom, s.setDepth(jn.Z.ON_TOP), c.forEach((function(e) {
													e.on(Phaser.Tweens.Events.TWEEN_COMPLETE, (function() {
														if ("Coin" === n) return p += a / o, void s.updateCurrentQuantityTreasure(n, p);
														var e = d[n] || 0;
														e += a / o, s.updateCurrentQuantityTreasure(n, e)
													}))
												})), e.abrupt("return", new(oe())((function(e) {
													u.on(Phaser.Tweens.Events.TWEEN_COMPLETE, e)
												})));
											case 10:
											case "end":
												return e.stop()
										}
									}), e)
								})));
								return function(t, i, n, a) {
									return e.apply(this, arguments)
								}
							}(), s.scene = t, s.setDepth(Wn.Ks.POPUP), s.background.kill(), s.createTreasureBox(), s.createClaimButton(), s.createMain(), s.createIconRemoveAds(), s.createHeader(), s.createEffect(), s.add([s.treasureBox, s.claimButton, s.main, s.iconRemoveAds, s.header]), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.claimTreasureData = function() {
							var e = this,
								t = this.scene.player.getBullets(),
								i = {},
								n = this.scene.player.getCoins();
							this.bulletFrom = t, this.coinFrom = n, Yr.Z.forEach((function(a) {
								var s = e.treasure[a];
								if (s) {
									var o = e.main.getBlockPosition(a),
										r = e.header.getIconBlockPosition(a);
									if (o && r) {
										if ("Coin" === a) return n += s, void e.logEarnVirtualCurrency(s);
										var l = t[a] || 0;
										l += s, i[a] = l, e.logEarnItem(s, a)
									}
								}
							})), this.scene.player.updateCustomFields({
								bullets: i,
								coin: n
							}), this.bulletsTo = (0, o.Z)({}, i), this.coinTo = n
						}, i.setDepth = function(t) {
							for (var i in e.prototype.setDepth.call(this, t), this.treasureItemExplosivesByKey) {
								var n, a = i;
								null == (n = this.treasureItemExplosivesByKey[a]) || n.setDepth(t + 1)
							}
							return this
						}, i.getTreasureBoxClose = function() {
							return this.treasureBox.getTreasureClose()
						}, i.createTreasureBox = function() {
							this.treasureBox = new ya(this.scene)
						}, i.createClaimButton = function() {
							this.claimButton = new ea.Z(this.scene, ik, nk.BUTTON_GREEN, 134.5, 51), this.claimButton.setName("Claim");
							var e = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								text: this.scene.lang.getText("claim"),
								size: this.scene.fontSize(25),
								origin: {
									x: .5,
									y: .5
								},
								y: -3,
								maxWidth: 120
							});
							this.claimButton.add(e), this.claimButton.onClick = this.handleClaim
						}, i.createIconRemoveAds = function() {
							this.iconRemoveAds = this.scene.add.image(0, 0, ik, nk.ICON_ADS), this.iconRemoveAds.kill()
						}, i.align = function() {
							Phaser.Display.Align.In.Center(this.treasureBox, this.zone, 0, -30.5), Phaser.Display.Align.To.BottomCenter(this.claimButton, this.treasureBox, 0, 40), Phaser.Display.Align.In.TopRight(this.header, this.zone, -22, -4)
						}, i.logEarnVirtualCurrency = function(e) {
							this.scene.analytics.event(Xt._.EARN_VIRTUAL_CURRENCY, {
								value: e,
								virtual_currency_name: "coin",
								earn_from: "LevelTreasure"
							})
						}, i.logEarnItem = function(e, t) {
							this.scene.analytics.event(Xt._.EARN_ITEM, {
								value: e,
								item_name: t,
								earn_from: "LevelTreasure"
							})
						}, i.runOpenAnimation = function() {
							var e = this;
							this.scene.audio.playSound(sa.Z.POPUP_IN), this.fadeInBackground(), this.treasureBox.playOpenAnimation((function() {
								e.main.revive(), e.claimButton.revive(), e.main.playAnimation()
							})), this.claimButton.kill(), this.main.kill(), this.header.kill()
						}, i.updateUI = function(e) {
							this.main.updateUI(e), this.header.updateUI(e), e.RemoveAd ? this.iconRemoveAds.revive() : this.iconRemoveAds.kill(), this.align()
						}, i.createMain = function() {
							this.main = new na.Z(this.scene)
						}, i.createHeader = function() {
							this.header = new ta.Z(this.scene), this.header.kill(), this.header.setAlpha(0)
						}, i.createEffect = function() {
							this.createTreasureExplosivesByKey()
						}, i.createTreasureExplosivesByKey = function() {
							var e = this;
							Yr.Z.forEach((function(t) {
								var i = new Ba.Z(e.scene);
								"Coin" === t ? i.setTreasureGroup("Coin10") : i.setTreasureGroup(t), e.treasureItemExplosivesByKey[t] = i, i.setDepth(jn.Z.PRIORITY)
							}))
						}, i.updateCurrentQuantityTreasure = function(e, t) {
							this.header.updateTextBlock(e, t)
						}, i.runCloseAnimation = function(e) {
							var t = this;
							this.emit(GameCore.Screens.Events.RUN_CLOSE_ANIMATION), this.scene.tweens.add({
								targets: [this],
								duration: 150,
								props: {
									alpha: {
										start: 1,
										from: 1,
										to: 0
									}
								},
								onComplete: function() {
									t.header.kill(), t.closePopup(), e()
								}
							})
						}, i.fadeInBackground = function() {
							this.background.setAlpha(0), this.scene.tweens.add({
								targets: this.background,
								duration: 200,
								props: {
									alpha: {
										start: 0,
										from: 0,
										to: .5
									}
								}
							})
						}, t
					}(GameCore.Screen),
					sk = ak,
					ok = aa.Z.DEFAULT,
					rk = ok.KEY,
					lk = ok.FRAME,
					ck = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, rk, lk.BUTTON_GREEN, 153.5, 58.5) || this).text = void 0, i.createNextLevelText(), i.setName("NextLevel"), i
						}
						return (0, l.Z)(t, e), t.prototype.createNextLevelText = function() {
							this.text = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								text: this.scene.lang.getText("next"),
								size: this.scene.fontSize(25),
								origin: {
									x: .5,
									y: .5
								},
								maxWidth: 105
							}), Phaser.Display.Align.In.Center(this.text, this, 0, -3), this.add(this.text)
						}, t
					}(ea.Z),
					hk = ck,
					uk = aa.Z.DEFAULT,
					dk = uk.KEY,
					pk = uk.FRAME,
					mk = GameCore.Configs.ComebackBonus,
					fk = aa.Z.THEME,
					gk = fk.KEY,
					vk = fk.FRAME,
					yk = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).scene = void 0, s.bestScore = void 0, s.currentScore = void 0, s.prevLevelTreasure = void 0, s.nextLevelTreasure = void 0, s.levelEnableHighest = void 0, s.isAllowClick = !1, s.popup = void 0, s.headerTitle = void 0, s.closeButton = void 0, s.nextLevelButton = void 0, s.stars = void 0, s.treasureBoxIcon = void 0, s.progressBar = void 0, s.scoreNumberText = void 0, s.scoreText = void 0, s.popupShowUpAnimation = void 0, s.popupFadeOutAnimation = void 0, s.bonusBubble = void 0, s.open = function() {
								e.prototype.open.call((0, Un.Z)(s)), s.setAlphaAllContents(1), s.closeButton.setDisabled(!1), s.nextLevelButton.setDisabled(!1);
								var t = s.scene.level.getLevel();
								s.levelEnableHighest = s.scene.level.getMaxLevel(), s.updateLevelTreasure(), s.isAllowClick = !0, s.progressBar.kill(), s.treasureBoxIcon.kill();
								var i = s.scene.gameManager.scoreManager.getStar();
								s.updateLevelText(), s.updateScore(), s.updateProgressBar();
								var n = s.scene.player.getBonusBullets();
								if (n > mk.maxBonus && (n = mk.maxBonus), s.bonusBubble.setBonus(n), n > 0 && s.rerunBonusBubbleAnimation(), s.runOpenAnimation(), s.stars.runFillStarAnimation(i, 350, 400 * i), s.runShakingAnimation(750, 120, i), t === s.levelEnableHighest && s.nextLevelTreasure > 0) {
									s.progressBar.revive(), s.treasureBoxIcon.revive();
									var a = function() {};
									s.levelEnableHighest += 1, s.levelEnableHighest > s.nextLevelTreasure && (s.isAllowClick = !1, a = s.openTreasure), s.progressBar.runProgressAnimation(400 * i + 400, a)
								}
							}, s.handleNextLevel = function() {
								s.isAllowClick && (s.nextLevelButton.setDisabled(!0), s.nextLevelButton.setAlpha(1), s.scene.level.getLevelConfigMap().length - 1 < s.scene.level.getLevel() ? s.gotoDashboard() : (s.scene.player.getLevel() > GameCore.Configs.Ads.MinLevelToShow && s.scene.handleShowMidRollAd(), s.runCloseAnimation(), s.popupFadeOutAnimation.next((function() {
									s.scene.level.nextLevel(), s.scene.stateManager.ready(), s.close()
								}))))
							}, s.gotoDashboard = function() {
								s.handleClosePopup()
							}, s.handleClosePopup = function() {
								s.isAllowClick && (s.scene.level.nextLevel(), s.closeButton.setDisabled(!0), s.closeButton.setAlpha(1), s.scene.audio.playSound(sa.Z.POPUP_OUT), s.runCloseAnimation(), s.popupFadeOutAnimation.next((function() {
									s.scene.screen.close(s.name), s.scene.scene.switch(In.C.DASHBOARD_SCENE)
								})))
							}, s.closePopup = function() {
								s.scene.audio.playSound(sa.Z.POPUP_OUT), s.runCloseAnimation(), s.popupFadeOutAnimation.next((function() {
									s.scene.screen.close(s.name)
								}))
							}, s.openTreasure = function() {
								var e, t = s.scene.rewardTreasureScreen.getTreasureBoxClose(),
									i = s.treasureBoxIcon,
									n = t.getWorldPosition(),
									a = i.parentContainer.getWorldPosition(),
									o = {
										x: i.x,
										y: i.y
									},
									r = {
										x: n.x - a.x,
										y: n.y - a.y
									},
									l = i.scale,
									c = t.scale,
									h = A()(e = s.popup.getAll()).call(e, (function(e) {
										return e !== i
									}));
								s.scene.add.tween({
									targets: h,
									ease: Phaser.Math.Easing.Sine.Out,
									duration: 300,
									alpha: 0
								}), s.scene.add.tween({
									targets: i,
									ease: Phaser.Math.Easing.Sine.Out,
									duration: 600,
									props: {
										x: {
											from: o.x,
											to: r.x
										},
										y: {
											from: o.y,
											to: r.y
										},
										scale: {
											from: l,
											to: c
										}
									},
									onComplete: function() {
										i.setPosition(o.x, o.y), i.setScale(l), i.kill(), s.scene.screen.open(Wn.o4.REWARD_TREASURE_SCREEN)
									}
								})
							}, s.scene = t, s.initDefault(), s.createPopup(), s.createPopupContent(), s.align(), s.setDepth(Wn.Ks.POPUP), s.background.kill(), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							var e = this;
							this.levelEnableHighest = this.scene.level.getMaxLevel(), this.bestScore = this.scene.player.getBestScore(), this.currentScore = 0, this.prevLevelTreasure = 0, this.nextLevelTreasure = -1, this.isAllowClick = !0, this.scene.rewardTreasureScreen.on(GameCore.Screens.Events.CLOSE, (function() {
								e.isAllowClick = !0
							}))
						}, i.createPopupContent = function() {
							this.createTitle(), this.createMain(), this.createCloseButton(), this.createNextLevelButton(), this.createBonusBubbles(), this.popup.add([this.headerTitle, this.closeButton, this.nextLevelButton, this.scoreNumberText, this.scoreText, this.progressBar, this.stars, this.treasureBoxIcon, this.bonusBubble])
						}, i.createPopup = function() {
							this.popup = new ro(this.scene, 0, 0, 294.5, 363.5), this.add(this.popup), Phaser.Display.Align.In.Center(this.popup, this.zone)
						}, i.createTitle = function() {
							this.headerTitle = new Dh(this.scene, "" + this.scene.lang.getText({
								key: "level_{X}",
								variables: [1]
							}))
						}, i.createCloseButton = function() {
							this.closeButton = new ea.Z(this.scene, gk, vk.BUTTON_CLOSE, 37.5, 39), this.closeButton.setName("Close"), this.closeButton.onClick = this.handleClosePopup
						}, i.createNextLevelButton = function() {
							this.nextLevelButton = new hk(this.scene), this.nextLevelButton.onClick = this.handleNextLevel
						}, i.createTreasureBoxIcon = function() {
							this.treasureBoxIcon = this.scene.make.image({
								key: dk,
								frame: pk.TREASURE_CLOSE
							}), this.treasureBoxIcon.setWorldSize(53.5, 44.5)
						}, i.createMain = function() {
							this.createStars(), this.createScoreText(), this.createScoreNumberText(), this.createProgressBar(), this.createTreasureBoxIcon()
						}, i.createStars = function() {
							this.stars = new qh(this.scene)
						}, i.createScoreNumberText = function() {
							this.scoreNumberText = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(35),
								text: "0"
							}), this.scoreNumberText.setTint(16772312)
						}, i.createScoreText = function() {
							this.scoreText = ia.Z.addText(this.scene, {
								font: _a.Z.NORMAL.KEY,
								size: this.scene.fontSize(25),
								text: this.scene.lang.getText("score")
							}, !0)
						}, i.createProgressBar = function() {
							this.progressBar = new Sd(this.scene, {
								width: 228,
								isUseThemeDefault: !1
							}), this.updateLevelTreasure()
						}, i.createBonusBubbles = function() {
							this.bonusBubble = new Dc(this.scene, .5)
						}, i.align = function() {
							Phaser.Display.Align.In.TopCenter(this.headerTitle, this.popup, 0, 20), Phaser.Display.Align.In.TopRight(this.closeButton, this.popup, 14, 14), Phaser.Display.Align.In.BottomCenter(this.nextLevelButton, this.popup, 0, -30), Phaser.Display.Align.In.TopLeft(this.bonusBubble, this.nextLevelButton, -12, -15), Phaser.Display.Align.In.TopCenter(this.stars, this.popup, 0, -80), Phaser.Display.Align.In.Center(this.scoreText, this.popup, 0, -20), Phaser.Display.Align.In.Center(this.scoreNumberText, this.scoreText, 0, 50), Phaser.Display.Align.In.Center(this.progressBar, this.popup, 0, 60), Phaser.Display.Align.In.RightCenter(this.treasureBoxIcon, this.progressBar, 5, -5)
						}, i.runOpenAnimation = function() {
							this.scene.audio.playSound(sa.Z.POPUP_IN), this.runPopupEntrancesAnimation(0, 500)
						}, i.runCloseAnimation = function() {
							this.runPopupExitsAnimation(0, 300)
						}, i.runPopupEntrancesAnimation = function(e, t) {
							if (!this.popupShowUpAnimation) {
								var i = this.scene.world.getWorldSize().height,
									n = this.popup,
									a = n.y,
									s = n.scale;
								this.popupShowUpAnimation = new cr.Z({
									targets: [this.popup],
									delay: e,
									duration: t,
									props: {
										y: {
											start: i / 2,
											from: i / 2,
											to: a
										},
										alpha: {
											start: 0,
											from: 0,
											to: 1
										},
										scale: {
											start: 0,
											from: 0,
											to: s
										}
									}
								})
							}
							this.popupShowUpAnimation.play()
						}, i.runPopupExitsAnimation = function(e, t) {
							var i, n = this;
							this.popupFadeOutAnimation || (this.popupFadeOutAnimation = new qn.Z({
								targets: [this.popup],
								delay: e,
								duration: t,
								props: {
									y: 250,
									alpha: {
										start: 1,
										from: 1,
										to: 0
									},
									scale: 0
								},
								onComplete: function() {
									n.popup.setY(0)
								}
							})), null == (i = this.popupFadeOutAnimation) || i.play()
						}, i.updateScore = function() {
							this.scene.storage.getState();
							this.currentScore = this.scene.gameManager.scoreManager.getScore(), this.setScoreNumberText(this.currentScore)
						}, i.setScoreNumberText = function(e) {
							var t = GameCore.Utils.Number.numberWithCommas(e);
							this.scoreNumberText.setText(t), Phaser.Display.Align.In.Center(this.scoreNumberText, this.scoreText, 0, 30)
						}, i.updateLevelText = function() {
							var e = this.scene.level.getLevel();
							this.headerTitle.setText("" + this.scene.lang.getText({
								key: "level_{X}",
								variables: [e]
							}))
						}, i.updateProgressBar = function() {
							var e = this.levelEnableHighest - this.prevLevelTreasure - 1,
								t = this.nextLevelTreasure - this.prevLevelTreasure;
							t < e || e < 0 || e < 0 || this.progressBar.setProgress(e, t, 0)
						}, i.updateLevelTreasure = function() {
							var e = this.scene.level.getLevelConfigMap();
							this.nextLevelTreasure = -1, this.prevLevelTreasure = 0;
							for (var t = 0; t < e.length; t++)
								if (e[t].level < this.levelEnableHighest && e[t].treasure && (this.prevLevelTreasure = e[t].level), e[t].level >= this.levelEnableHighest && e[t].treasure) {
									this.nextLevelTreasure = e[t].level;
									break
								}
						}, i.runShakingAnimation = function(e, t, i, n) {
							var a = this;
							void 0 === e && (e = 0), void 0 === t && (t = 100), void 0 === i && (i = 0), void 0 === n && (n = .96), 0 !== i && this.scene.tweens.add({
								targets: [this.popup],
								delay: e,
								duration: t,
								ease: Phaser.Math.Easing.Quadratic.Out,
								props: {
									scale: {
										start: 1,
										from: 1,
										to: n
									}
								},
								yoyo: !0,
								onComplete: function() {
									a.runShakingAnimation(600 / i, t, i - 1, n - .01)
								}
							})
						}, i.rerunBonusBubbleAnimation = function() {
							Phaser.Display.Align.In.TopLeft(this.bonusBubble, this.nextLevelButton, -12, -15), this.bonusBubble.runAnimation()
						}, i.runFadeInContents = function() {
							var e, t = this,
								i = this.treasureBoxIcon,
								n = A()(e = this.popup.getAll()).call(e, (function(e) {
									return e !== i
								}));
							this.scene.add.tween({
								targets: n,
								ease: Phaser.Math.Easing.Sine.Out,
								duration: 300,
								alpha: 1,
								onComplete: function() {
									t.setAlphaAllContents(1)
								}
							})
						}, i.setAlphaAllContents = function(e) {
							var t, i = this.treasureBoxIcon;
							A()(t = this.popup.getAll()).call(t, (function(e) {
								return e !== i
							})).forEach((function(t) {
								return t.setAlpha(e)
							}))
						}, t
					}(GameCore.Screen),
					bk = yk,
					Ek = aa.Z.DEFAULT,
					Tk = Ek.KEY,
					Ak = Ek.FRAME,
					Sk = aa.Z.THEME,
					_k = Sk.KEY,
					Ck = Sk.FRAME,
					wk = GameCore.Configs.Gameplay,
					Bk = {
						BombBulletItem: {
							name: "bomb",
							frame: Ak.BUY_ITEM_BOMB_BIG,
							sizeX: 87.5,
							sizeY: 89.5,
							description: "Removes everything in a radius of 2!"
						},
						ElectricBulletBallItem: {
							name: "electric",
							frame: Ak.BUY_ITEM_ELECTRIC_BIG,
							sizeX: 78.5,
							sizeY: 78.5,
							description: "Removes a row of everything!"
						},
						RainbowBulletBallItem: {
							name: "rainbow",
							frame: Ak.BUY_ITEM_RAINBOW_BIG,
							sizeX: 78.5,
							sizeY: 78.5,
							description: "Rainbow can be matched with any bubbles!"
						},
						RocketBulletItem: {
							name: "rocket",
							frame: Ak.BUY_ITEM_ROCKET_BIG,
							sizeX: 73,
							sizeY: 73,
							description: "Removes everything in its way!"
						}
					},
					Ik = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).scene = void 0, s.popup = void 0, s.headerTitle = void 0, s.closeButton = void 0, s.buyButton = void 0, s.itemPrice = void 0, s.item = void 0, s.itemGlow = void 0, s.itemAmount = void 0, s.itemDescription = void 0, s.coinBlock = void 0, s.coinBlockBg = void 0, s.coinBlockIcon = void 0, s.coinBlockText = void 0, s.coinBar = void 0, s.popupShowUpAnimation = void 0, s.popupFadeOutAnimation = void 0, s.glowAnimation = void 0, s.coinBarFadeInAnimation = void 0, s.coinBarFadeOutAnimation = void 0, s.currentItemName = void 0, s.sparkleParticles = void 0, s.open = function(t) {
								e.prototype.open.call((0, Un.Z)(s)), s.buyButton.setDisabled(!1), s.updateItem(t.itemName), s.updatePlayerCoin(), s.runOpenAnimation()
							}, s.handleCloseScreen = function() {
								s.runCloseAnimation(), s.popupFadeOutAnimation.next((function() {
									s.scene.screen.close(s.name)
								}))
							}, s.handleBuyItem = function() {
								var e = s.scene.player.getCoins(),
									t = wk.ItemPrice["" + s.currentItemName].price;
								if (e >= t) {
									var i, n, a = s.currentItemName,
										o = wk.ItemPrice["" + s.currentItemName].amount,
										r = e - t;
									s.scene.player.updateCustomFields({
										bullets: (i = {}, i["" + a] = o, i),
										coin: r
									}), null == (n = s.scene.bulletItemManager.getItem(s.currentItemName)) || n.handleUseItem(), s.buyButton.setDisabled(!0), s.logSpendVirtualCurrency(t, a), s.logEarnItem(o, a), s.handleCloseScreen()
								} else {
									if (s.scene.payment.getPaymentEnable()) s.scene.payment.openStore();
									else s.scene.game.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
										message: s.scene.lang.getText("not_enough_coin"),
										duration: 1500,
										loading: !1
									})
								}
							}, s.handleCoinBarClick = function() {
								s.scene.payment.getPaymentEnable() ? s.scene.payment.openStore() : s.scene.screen.open(Wn.o4.REWARD_SCREEN, {
									awardCoins: GameCore.Configs.Gameplay.AwardCoins
								})
							}, s.scene = t, s.createPopup(), s.createTitle(), s.createItem(), s.createItemDescription(), s.createCloseButton(), s.createBuyButton(), s.createCoinBar(), s.createSparkleParticles(), s.setDepth(Wn.Ks.POPUP), s.background.setAlpha(.5), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createPopup = function() {
							this.popup = new ro(this.scene, 0, 0, 280, 350), this.add(this.popup), Phaser.Display.Align.In.Center(this.popup, this.zone)
						}, i.createTitle = function() {
							this.headerTitle = new Dh(this.scene, this.scene.lang.getText("bomb")), this.popup.add([this.headerTitle]), Phaser.Display.Align.In.TopCenter(this.headerTitle, this.popup, 0, 25)
						}, i.createCloseButton = function() {
							this.closeButton = new ea.Z(this.scene, _k, Ck.BUTTON_CLOSE, 37.5, 39), this.closeButton.setName("Close"), this.popup.add(this.closeButton), Phaser.Display.Align.In.TopRight(this.closeButton, this.popup, 14, 14), this.closeButton.onClick = this.handleCloseScreen
						}, i.createItem = function() {
							this.itemGlow = this.scene.make.image({
								key: Tk,
								frame: Ak.BUY_ITEM_GLOW
							}), this.itemGlow.setWorldSize(160, 160), this.item = this.scene.make.image({
								key: Tk,
								frame: Ak.BLANK
							}), this.item.setWorldSize(72, 60), this.itemAmount = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(30),
								text: "X1",
								origin: {
									x: .5,
									y: .5
								}
							}), this.popup.add([this.itemGlow, this.item, this.itemAmount]), Phaser.Display.Align.In.TopCenter(this.itemGlow, this.popup, 0, -25), Phaser.Display.Align.In.Center(this.item, this.itemGlow, 0, 0), Phaser.Display.Align.To.BottomRight(this.itemAmount, this.item, 0, -10)
						}, i.createItemDescription = function() {
							var e = this.popup.width;
							this.itemDescription = ia.Z.addText(this.scene, {
								font: _a.Z.NORMAL.KEY,
								size: this.scene.fontSize(20),
								text: this.scene.lang.getText("Rainbow can be matched with any bubbles!"),
								maxWidth: .75 * e
							}, !0), this.itemDescription.setOrigin(.5, .5), this.popup.add(this.itemDescription), Phaser.Display.Align.In.Center(this.itemDescription, this.popup, 0, 25)
						}, i.createBuyButton = function() {
							this.buyButton = new ea.Z(this.scene, Tk, Ak.BUTTON_GREEN, 153.5, 58.5), this.buyButton.setName("Buy");
							var e = ia.Z.addText(this.scene, {
									font: _a.Z.PRIMARY.KEY,
									text: this.scene.lang.getText("buy"),
									size: this.scene.fontSize(24),
									origin: {
										x: .5,
										y: .5
									},
									maxWidth: 75,
									maxHeight: 30
								}),
								t = aa.Z.DEFAULT,
								i = t.KEY,
								n = t.FRAME,
								a = this.scene.make.image({
									key: i,
									frame: n.ICON_COIN
								});
							a.setWorldSize(24, 24.5), this.itemPrice = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(24),
								text: "100"
							}), this.buyButton.add([e, a, this.itemPrice]), Phaser.Display.Align.In.Center(e, this.buyButton, -30, -4), Phaser.Display.Align.To.RightCenter(a, e, 4, 0), Phaser.Display.Align.To.RightCenter(this.itemPrice, a, 2, 0), this.popup.add(this.buyButton), Phaser.Display.Align.In.BottomCenter(this.buyButton, this.popup, 0, -40), this.buyButton.onClick = this.handleBuyItem
						}, i.createCoinBar = function() {
							this.coinBar = new cv(this.scene), this.coinBar.onClick = this.handleCoinBarClick, Phaser.Display.Align.In.TopRight(this.coinBar, this.zone, -22, -8), this.add(this.coinBar)
						}, i.runOpenAnimation = function() {
							var e = this;
							this.scene.audio.playSound(sa.Z.POPUP_IN), this.runPopupEntrancesAnimation(0, 400), this.runCoinBarEntrancesAnimation(), this.popupShowUpAnimation.next((function() {
								e.runGlowAnimation(), e.sparkleParticles.run(2, e.item.x, e.item.y)
							}))
						}, i.runCloseAnimation = function() {
							var e, t = this;
							this.runPopupExitsAnimation(0, 300), null == (e = this.glowAnimation) || e.remove(), this.sparkleParticles.stop(), this.runCoinBarExitsAnimation(), this.popupFadeOutAnimation.next((function() {
								t.itemGlow.setAngle(0)
							}))
						}, i.runPopupEntrancesAnimation = function(e, t) {
							if (!this.popupShowUpAnimation) {
								var i = this.popup,
									n = i.y,
									a = i.scale;
								this.popupShowUpAnimation = new cr.Z({
									targets: [this.popup],
									delay: e,
									duration: t,
									props: {
										y: {
											start: 350,
											from: 350,
											to: n
										},
										alpha: {
											start: 0,
											from: 0,
											to: 1
										},
										scale: {
											start: 0,
											from: 0,
											to: a
										}
									}
								})
							}
							this.popupShowUpAnimation.play()
						}, i.runCoinBarEntrancesAnimation = function() {
							this.coinBarFadeInAnimation || (this.coinBarFadeInAnimation = new Jn.Z({
								targets: [this.coinBar],
								duration: 500
							})), this.coinBarFadeInAnimation.play()
						}, i.runPopupExitsAnimation = function(e, t) {
							var i, n = this;
							this.popupFadeOutAnimation || (this.popupFadeOutAnimation = new qn.Z({
								targets: [this.popup],
								delay: e,
								duration: t,
								props: {
									y: 250,
									alpha: {
										start: 1,
										from: 1,
										to: 0
									},
									scale: 0
								},
								onComplete: function() {
									n.popup.setY(0), n.scene.screen.close(n.name)
								}
							})), null == (i = this.popupFadeOutAnimation) || i.play()
						}, i.runCoinBarExitsAnimation = function() {
							this.coinBarFadeOutAnimation || (this.coinBarFadeOutAnimation = new qn.Z({
								targets: [this.coinBar],
								duration: 500
							})), this.coinBarFadeOutAnimation.play()
						}, i.runGlowAnimation = function() {
							var e;
							this.glowAnimation || (this.glowAnimation = new Qr.Z({
								targets: [this.itemGlow],
								repeat: -1,
								duration: 6e3
							})), null == (e = this.glowAnimation) || e.play()
						}, i.createSparkleParticles = function() {
							this.sparkleParticles = new du(this.scene), this.popup.add(this.sparkleParticles)
						}, i.updateItem = function(e) {
							this.currentItemName = e, this.item.setFrame("" + Bk["" + e].frame), this.item.setWorldSize(Bk["" + e].sizeX, Bk["" + e].sizeY), this.headerTitle.setText("" + this.scene.lang.getText(Bk["" + e].name)), this.itemDescription.setText("" + this.scene.lang.getText(Bk["" + e].description)), this.itemPrice.setText("" + wk.ItemPrice["" + e].price), this.itemAmount.setText("X" + wk.ItemPrice["" + e].amount)
						}, i.updatePlayerCoin = function() {
							var e = this.scene.player.getCoins();
							this.coinBar.setValue(e)
						}, i.logSpendVirtualCurrency = function(e, t) {
							this.scene.analytics.event(Xt._.SPEND_VIRTUAL_CURRENCY, {
								value: e,
								item_name: t,
								virtual_currency_name: "coin"
							})
						}, i.logEarnItem = function(e, t) {
							this.scene.analytics.event(Xt._.EARN_ITEM, {
								value: e,
								item_name: t,
								earn_from: "BuyItem"
							})
						}, t
					}(GameCore.Screen),
					Pk = Ik,
					xk = aa.Z.GAMEPLAY.EFFECTS,
					Ok = xk.KEY,
					kk = xk.FRAME,
					Rk = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, Ok) || this).emitter1 = void 0, i.emitter2 = void 0, i.emitter3 = void 0, i.emitZone = void 0, i.createEmitZone(), i.setDepth(jn.Z.EFFECT), i.createExplodeAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitZone = function() {
							this.emitZone = new Phaser.Geom.Circle(0, 0, 12)
						}, i.createExplodeAnimation = function() {
							var e = 1 / this.scene.world.getPixelRatio(),
								t = {
									frame: [kk.PARTICLE_CIRCLE_2],
									scale: {
										min: 1.25,
										max: 2
									},
									speed: {
										min: 100,
										max: 200
									},
									lifespan: {
										min: 400,
										max: 1e3
									},
									gravityY: 120,
									tint: [10672151, 3914751, 16752653, 16732192, 16744680],
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									particleClass: Mk,
									on: !1
								},
								i = {
									frame: [kk.PARTICLE_STAR],
									scale: {
										min: .5,
										max: 1
									},
									alpha: {
										start: 1,
										end: 0,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									speed: {
										min: 30,
										max: 45
									},
									lifespan: {
										min: 1e3,
										max: 1e3
									},
									emitZone: {
										source: this.emitZone,
										type: "random"
									},
									on: !1,
									particleClass: Lk
								},
								n = {
									frame: [kk.GLOW_4],
									scale: {
										start: 7 * e,
										end: 30 * e
									},
									alpha: {
										start: .5,
										end: 0
									},
									lifespan: 500,
									tint: [10672151, 3914751, 16752653, 16732192, 16744680],
									particleClass: Mk,
									on: !1
								};
							this.emitter1 = this.createEmitter(t), this.emitter2 = this.createEmitter(i), this.emitter3 = this.createEmitter(n)
						}, i.explode = function(e, t) {
							this.emitter1.explode(100, e, t), this.emitter2.explode(20, e, t), this.emitter3.explode(1, e, t)
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager),
					Mk = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).scale = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var o = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								r = Math.atan2(this.y - i, this.x - t);
							this.velocityX = o * Math.cos(r), this.velocityY = o * Math.sin(r);
							var l = 1 / this.emitter.manager.scene.world.getPixelRatio();
							this.scaleX = l * this.scaleX, this.scaleY = l * this.scaleY, this.scale = this.scaleX, this.rotation = r
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.scaleX = (1 - Phaser.Math.Easing.Quintic.In(this.lifeT)) * this.scale, this.scaleY = (1 - Phaser.Math.Easing.Quintic.In(this.lifeT)) * this.scale, a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					Lk = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).scale = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i);
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var o = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								r = Math.atan2(this.y - i, this.x - t);
							this.velocityX = o * Math.cos(r), this.velocityY = o * Math.sin(r);
							var l = 1 / this.emitter.manager.scene.world.getPixelRatio();
							this.scaleX = l * this.scaleX, this.scaleY = l * this.scaleY, this.scale = this.scaleX, this.rotation = r
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n);
							return this.scaleX = (1 - Phaser.Math.Easing.Bounce.InOut(this.lifeT)) * this.scale, this.scaleY = (1 - Phaser.Math.Easing.Bounce.InOut(this.lifeT)) * this.scale, a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					Gk = Rk,
					Dk = aa.Z.DEFAULT,
					Fk = Dk.KEY,
					Nk = Dk.FRAME,
					Zk = aa.Z.THEME,
					Uk = Zk.KEY,
					jk = Zk.FRAME,
					Yk = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).background = void 0, i.backgroundPopup = void 0, i.text = void 0, i.icon = void 0, i.iconHeader = void 0, i.createUI(), i.setDepth(jn.Z.UI), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createUI = function() {
							this.createBackground(), this.createBackgroundPopup(), this.createIcon(), this.createText(), this.createIconHeader(), this.add([this.background, this.backgroundPopup, this.icon, this.text, this.iconHeader])
						}, i.createBackground = function() {
							var e = this.scene.gameZone,
								t = e.width,
								i = e.height;
							this.background = this.scene.add.image(0, 0, "screen-background"), this.background.setWorldSize(t + 2, i + 2), this.background.setAlpha(.5)
						}, i.createBackgroundPopup = function() {
							this.backgroundPopup = this.scene.make.image({
								key: Uk,
								frame: jk.POPUP_MISSION
							}), this.backgroundPopup.setWorldSize(294.5, 90.5)
						}, i.createIcon = function() {
							this.icon = this.scene.make.image({
								key: Fk,
								frame: Nk.ICON_MISSION_BALLS_BIG
							}), this.icon.setWorldSize(50.5, 45)
						}, i.createIconHeader = function() {
							this.iconHeader = new kh(this.scene), this.iconHeader.setWorldSize(53.5, 58.5), Phaser.Display.Align.To.TopCenter(this.iconHeader, this.backgroundPopup, 0, -30)
						}, i.createText = function() {
							this.text = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(26),
								text: this.scene.lang.getText("pop_all_bubbles") + "!",
								origin: {
									x: .5,
									y: .5
								},
								maxWidth: 200,
								maxHeight: 40
							}), this.text.setScale(1), this.text.setTint(16772312)
						}, i.setText = function(e) {
							var t = "Pop all bubbles!" === e ? this.scene.lang.getText("pop_all_bubbles") : this.scene.lang.getText("collect_gems");
							this.text.setText(t + "!"), Phaser.Display.Align.In.Center(this.text, this.backgroundPopup, 25)
						}, i.setIcon = function(e) {
							this.icon.setFrame("" + e, !1, !1), Phaser.Display.Align.In.LeftCenter(this.icon, this.backgroundPopup, -20)
						}, t
					}(Phaser.GameObjects.Container),
					Wk = aa.Z.EFFECTS,
					Kk = Wk.KEY,
					Hk = Wk.FRAME,
					zk = function(e) {
						function t(i) {
							var n;
							return (n = e.call(this, i, Kk, Hk.FX_COMET) || this).bombEmitter = void 0, n.rocketEmitter = void 0, n.emitZone = void 0, n.scene = void 0, n.scene = i, n.emitZone = new Phaser.Geom.Circle(0, 0, 20), n.createEmitters(), n.kill(), t.bombPosition = n.scene.footer.bombBulletItem.getWorldPosition(), t.rocketPosition = n.scene.footer.rocketBulletItem.getWorldPosition(), n.scene.add.existing((0, Un.Z)(n)), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmitters = function() {
							var e = 1 / this.scene.world.getPixelRatio();
							this.bombEmitter = this.createEmitter({
								on: !1,
								frame: Hk.FX_COMET,
								speed: {
									min: 500,
									max: 700
								},
								scale: {
									start: .6 * e,
									end: e
								},
								lifespan: {
									min: 1e3,
									max: 1200
								},
								emitZone: {
									source: this.emitZone,
									type: "random"
								},
								particleClass: Xk
							}), this.rocketEmitter = this.createEmitter({
								on: !1,
								frame: Hk.FX_COMET,
								speed: {
									min: 500,
									max: 700
								},
								scale: {
									start: .6 * e,
									end: e
								},
								lifespan: {
									min: 1e3,
									max: 1200
								},
								emitZone: {
									source: this.emitZone,
									type: "random"
								},
								particleClass: Xk
							})
						}, i.explode = function(e, t, i, n) {
							var a = this;
							this.revive();
							if ("BombItem" == n) {
								this.stopBombEmitter();
								for (var s = 0; s < 5; s++) this.scene.time.delayedCall(50 * s, (function() {
									a.bombEmitter.explode(e / 5, t, i)
								}))
							} else {
								this.stopRocketEmitter();
								for (var o = 0; o < 5; o++) this.scene.time.delayedCall(50 * o, (function() {
									a.rocketEmitter.explode(e / 5, t, i)
								}))
							}
						}, i.startBombParticleMoving = function(e) {
							this.bombEmitter.forEachAlive((function(t) {
								t.startMovingTo(e)
							}), this.bombEmitter)
						}, i.startRocketParticleMoving = function(e) {
							this.rocketEmitter.forEachAlive((function(t) {
								t.startMovingTo(e)
							}), this.rocketEmitter)
						}, i.stopBombEmitter = function() {
							this.bombEmitter.forEachAlive((function(e) {
								return e.resetPosition()
							}), this.bombEmitter), this.bombEmitter.killAll(), this.bombEmitter.stop()
						}, i.stopRocketEmitter = function() {
							this.rocketEmitter.forEachAlive((function(e) {
								return e.resetPosition()
							}), this.rocketEmitter), this.rocketEmitter.killAll(), this.rocketEmitter.stop()
						}, i.stop = function() {
							this.stopBombEmitter(), this.stopRocketEmitter()
						}, t
					}(Phaser.GameObjects.Particles.ParticleEmitterManager);
				zk.bombPosition = void 0, zk.rocketPosition = void 0;
				var Xk = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).isMove = void 0, i._x = void 0, i._y = void 0, i.distX = void 0, i.distY = void 0, i.split = 2, i.startMovingTime = void 0, i.positionMoveTo = void 0, i.airFrictionX = void 0, i.airFrictionY = void 0, i._angle = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.fire = function(t, i) {
							e.prototype.fire.call(this, t, i), this.airFrictionX = .03 * Math.random() + .03, this.airFrictionY = .03 * Math.random() + .03, this.isMove = !1;
							var n = this.emitter,
								a = n.x,
								s = n.y;
							t || (t = a.defaultValue), i || (i = s.defaultValue);
							var o = Phaser.Math.Distance.Between(0, 0, this.velocityX, this.velocityY),
								r = Math.atan2(this.y - i, this.x - t);
							this.velocityX = o * Math.cos(r), this.velocityY = o * Math.sin(r), this._angle = r
						}, i.startMovingTo = function(e) {
							this.isMove = !0, this.positionMoveTo = e, this.distX = this.positionMoveTo.x - this.x, this.distY = this.positionMoveTo.y - this.y, this.startMovingTime = this.lifeT, this._x = this.x, this._y = this.y
						}, i.update = function(t, i, n) {
							var a = e.prototype.update.call(this, t, i, n),
								s = (this.lifeT - this.startMovingTime) / (1 - this.startMovingTime),
								o = t;
							if (this.isMove) this.x = this._x + this.distX * Phaser.Math.Easing.Cubic.In(s), this.y = this._y + this.distY * Phaser.Math.Easing.Cubic.In(s);
							else {
								for (var r = Math.sqrt(Math.pow(this.velocityX, 2) + Math.pow(this.velocityY, 2)); o > 16.67;) r -= Vk(r, .2, this.airFrictionX) / 60, o -= 16.67;
								r -= Vk(r, .2, this.airFrictionX) * o / 1e3;
								var l = this._angle;
								this.velocityX = r * Math.cos(l), this.velocityY = r * Math.sin(l)
							}
							return a
						}, t
					}(Phaser.GameObjects.Particles.Particle),
					Vk = function(e, t, i) {
						return void 0 === t && (t = .1), void 0 === i && (i = .04), t * e + ra()(e) * i * e * e
					},
					Jk = zk,
					qk = {
						COLOR_BALL: "ColorBallTutorial",
						WHITE_BALL: "WhiteBallTutorial",
						BAT_BALL: "BatTutorial",
						DRUG_BOMB: "BombDrugTutorial",
						ELECTRIC_BALL: "ElectricBallTutorial",
						THUNDER_BALL: "ThunderBallTutorial",
						HEXAGON_WIRE: "HexagonWireTutorial",
						STONE: "StoneTutorial",
						EARTHEN_POT: "EarthenPotTutorial",
						BLACK_HOLE: "BlackHoleTutorial",
						PLUS_MINUS_BALL: "PlusMinusBallTutorial",
						BEETLE: "LadyBirdTutorial",
						COLOR_BOMB: "ColorBombTutorial",
						ELECTRIC_BULLET: "ElectricBulletTutorial",
						IRON_SHELL: "IronShellTutorial",
						LAVA_BALL: "LavaBallTutorial",
						LEAVES: "LeavesTutorial",
						MUMMY: "MummyTutorial",
						QUESTION_MARK_BALL: "QuestionMarkBallTutorial",
						RAINBOW_BULLET: "RainbowBulletTutorial",
						RDE_BALL: "RandomDirectionElectricBallTutorial",
						SPIDER_WEB: "SpiderWebTutorial",
						SPIDER: "SpiderTutorial",
						SWITCH_BLACK_HOLE: "SwitchBlackHoleTutorial",
						TWO_COLORS_BALL: "TwoColorsBallTutorial",
						EMPTY_BALL: "EmptyBallTutorial"
					},
					Qk = function(e) {
						function t(t, i, n) {
							var a;
							void 0 === i && (i = ""), void 0 === n && (n = "");
							var s = t.scene;
							return (a = e.call(this, s, 0, 0, i, n) || this).dynamicGuide = void 0, a.objectType = void 0, a.depthIndex = 0, a.status = 0, a.fadeOutTween = void 0, a.defaultStatus = void 0, a.guideObject = void 0, a.dynamicGuide = t, a.dynamicGuide.add((0, Un.Z)(a)), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function(e) {
							var t;
							null == (t = this.fadeOutTween) || t.remove(), void 0 !== e && (this.setStatus(e), this.defaultStatus = e)
						}, i.updateDepthObjects = function(e) {
							this.setDepth(e + this.depthIndex)
						}, i.runFadeOutTween = function() {
							var e = this;
							this.scene && (this.fadeOutTween = this.scene.tweens.add({
								targets: this,
								duration: 200,
								alpha: {
									from: 1,
									to: .3
								},
								onComplete: function() {
									e.kill()
								},
								onCompleteScope: this
							}))
						}, i.destroyObject = function() {
							var e;
							this.destroy(), null == (e = this.fadeOutTween) || e.remove()
						}, i.setStatus = function(e) {
							this.status = e
						}, i.getStatus = function() {
							return this.status
						}, i.explode = function() {}, i.preKill = function(e) {
							var t = this;
							this.scene && this.scene.tweens.add({
								targets: this,
								duration: 200,
								alpha: {
									from: 1,
									to: .3
								},
								onComplete: function() {
									t.kill(), e && e()
								},
								onCompleteScope: this
							})
						}, i.getUI = function() {
							return [this]
						}, t
					}(Phaser.GameObjects.Image),
					$k = aa.Z.GAMEPLAY.GAME_OBJECTS,
					eR = $k.KEY,
					tR = $k.FRAME,
					iR = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, eR, tR.LEAVES) || this).leavesExplodeParticle = void 0, i.depthIndex = jn.X.LEAVES, i.setDisplaySize(37, 36.5), i.objectType = "Leaves", i.createLeavesExplodeParticle(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createLeavesExplodeParticle = function() {
							this.leavesExplodeParticle = new fx(this.scene), this.dynamicGuide.add(this.leavesExplodeParticle)
						}, i.explode = function() {
							var e, t;
							this.scene && (this.scene.audio.playSound(sa.Z.LEAVES_EXPLODE), this.preKill(), null == (e = this.leavesExplodeParticle) || e.revive(), null == (t = this.leavesExplodeParticle) || t.explode(this.x, this.y))
						}, i.destroyObject = function() {
							var t;
							e.prototype.destroyObject.call(this), null == (t = this.leavesExplodeParticle) || t.destroy()
						}, i.getUI = function() {
							return this.guideObject ? [this] : []
						}, t
					}(Qk),
					nR = aa.Z.GAMEPLAY.GAME_OBJECTS,
					aR = nR.KEY,
					sR = nR.FRAME,
					oR = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, aR, sR.BLANK) || this).ladybirdImage = void 0, i.leavesExplodeParticle = void 0, i.flyTween = void 0, i.targetGuideObject = void 0, i.getUI = function() {
								return [i.ladybirdImage]
							}, i.depthIndex = jn.X.LADYBIRD, i.objectType = "Ladybird", i.createLadybirdImage(), i.createLeavesExplodeParticle(), i.setScale(0), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createLeavesExplodeParticle = function() {
							this.leavesExplodeParticle = new fx(this.scene), this.dynamicGuide.add(this.leavesExplodeParticle)
						}, i.createLadybirdImage = function() {
							this.ladybirdImage = this.scene.make.image({
								key: aR,
								frame: sR.LADYBIRD
							}), this.ladybirdImage.setWorldSize(14.5, 15.5), this.ladybirdImage.setFlipX(!0), this.dynamicGuide.add(this.ladybirdImage)
						}, i.updateDepthObjects = function(t) {
							var i;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.ladybirdImage) || i.setDepth(t + this.depthIndex)
						}, i.kill = function() {
							e.prototype.kill.call(this), this.ladybirdImage.kill(), this.flyTween = void 0, this.targetGuideObject = void 0
						}, i.revive = function() {
							var t, i;
							e.prototype.revive.call(this), null == (t = this.ladybirdImage) || t.revive(), null == (i = this.ladybirdImage) || i.setPosition(this.x + 9, this.y - 7)
						}, i.destroyObject = function() {
							var t, i, n;
							e.prototype.destroyObject.call(this), null == (t = this.ladybirdImage) || t.destroy(), null == (i = this.leavesExplodeParticle) || i.destroy(), null == (n = this.flyTween) || n.remove()
						}, i.fly = function(e) {
							var t = this;
							if (this.scene) {
								this.scene.audio.playSound(sa.Z.LEAVES_EXPLODE), this.leavesExplodeParticle.revive(), this.leavesExplodeParticle.explode(this.x, this.y);
								var i = this.guideObject.getSubObject("Leaves");
								i ? (i.setAlpha(1), i.revive()) : this.guideObject.addSubObject(new iR(this.dynamicGuide)), this.dynamicGuide.bringToTop(this.leavesExplodeParticle), this.dynamicGuide.bringToTop(this.ladybirdImage), this.flyTween = this.scene.tweens.add({
									targets: this.ladybirdImage,
									duration: 400,
									props: {
										x: {
											value: e.x + 9,
											ease: Phaser.Math.Easing.Linear
										},
										y: {
											value: e.y - 7,
											ease: Phaser.Math.Easing.Quadratic.Out
										}
									},
									onComplete: function() {
										t.scene && (t.targetGuideObject = e, t.flyTween = void 0)
									}
								})
							}
						}, i.setAlpha = function(t, i, n, a) {
							return e.prototype.setAlpha.call(this, t, i, n, a), this.ladybirdImage.setAlpha(t), this
						}, i.setPosition = function(t, i, n, a) {
							if (e.prototype.setPosition.call(this, t, i, a, n), this.flyTween) return this;
							var s, o;
							this.targetGuideObject ? null == (s = this.ladybirdImage) || s.setPosition(this.targetGuideObject.x + 9, this.targetGuideObject.y - 7) : null == (o = this.ladybirdImage) || o.setPosition(this.x + 9, this.y - 7);
							return this
						}, t
					}(Qk),
					rR = function(e) {
						function t(t, i, n, a, s) {
							var o, r = t.scene;
							return (o = e.call(this, r, i, n, a, s) || this).dynamicGuide = void 0, o.subObjects = [], o.row = -1, o.col = -1, o.geom = void 0, o.color = void 0, o.dropTween = void 0, o.fadeOutAnimation = void 0, o.fadeInAnimation = void 0, o.jiggleTween = void 0, o.status = 0, o.config = void 0, o.dynamicGuide = t, o.dynamicGuide.add((0, Un.Z)(o)), o.setDepth(jn.Z.BALL), o.calculateGeom(), o
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function(e) {
							e && (this.status = e)
						}, i.destroyObject = function() {
							var e, t, i, n;
							this.destroy(), null == (e = this.subObjects) || e.forEach((function(e) {
								null == e || e.destroyObject()
							})), null == (t = this.dropTween) || t.remove(), null == (i = this.fadeOutAnimation) || i.remove(), null == (n = this.jiggleTween) || n.remove()
						}, i.explode = function(e) {}, i.preKill = function(e) {
							var t = this;
							this.scene && this.scene.tweens.add({
								targets: this,
								duration: 200,
								alpha: {
									from: 1,
									to: .3
								},
								onComplete: function() {
									t.kill(), e && e()
								},
								onCompleteScope: this
							})
						}, i.revive = function() {
							var t = this;
							e.prototype.revive.call(this), this.setAlpha(1), this.setRotation(0), this.subObjects.forEach((function(e) {
								e.kill()
							})), this.config && this.config.subObjects && this.config.subObjects.forEach((function(e) {
								var i = t.getSubObject(e.type);
								i && (i.setPosition(t.x, t.y), i.revive(), i.initDefault())
							}))
						}, i.calculateGeom = function() {
							var e = this.getWorldPosition(),
								t = e.x,
								i = e.y,
								n = 19.629909152447276,
								a = [{
									x: t + 17,
									y: i - n / 2
								}, {
									x: t,
									y: i - n
								}, {
									x: t - 17,
									y: i - n / 2
								}, {
									x: t - 17,
									y: i + n / 2
								}, {
									x: t,
									y: i + n
								}, {
									x: t + 17,
									y: i + n / 2
								}],
								s = _()(a).call(a, (function(e) {
									return new Phaser.Geom.Point(e.x, e.y)
								}));
							return this.geom = new Phaser.Geom.Polygon(s), this.geom
						}, i.getGeom = function() {
							return this.geom
						}, i.getColor = function() {
							return this.color
						}, i.setColor = function(e) {
							this.color = e
						}, i.startAnimationIdle = function() {}, i.stopAnimationIdle = function() {}, i.addSubObject = function(e) {
							this.subObjects.push(e), e.setPosition(this.x, this.y)
						}, i.setDepth = function(t) {
							return e.prototype.setDepth.call(this, t), this.updateDepthObjects(t), this
						}, i.updateDepthObjects = function(e) {
							this.subObjects.forEach((function(t) {
								t.updateDepthObjects(e)
							}))
						}, i.removeSubObject = function(e) {
							var t;
							this.subObjects = A()(t = this.subObjects).call(t, (function(t) {
								return t !== e
							}))
						}, i.getSubObject = function(e) {
							var t;
							return ye()(t = this.subObjects).call(t, (function(t) {
								return t.objectType === e
							}))
						}, i.drop = function() {
							var e = this;
							if (this.scene) {
								var t = this.dynamicGuide.zone,
									i = this.x,
									n = this.y,
									a = Phaser.Math.Between(3, -3),
									s = this.dynamicGuide.height - 60 - this.y + a,
									o = this.dynamicGuide.height - 60 + a,
									r = Math.random() * (Math.PI / 3) + Math.PI / 3,
									l = Math.pow(3.5 + 13 * Math.sin(r), 2) - 14 * (n - o),
									c = (3.5 + 13 * Math.sin(r) + Math.sqrt(l)) / 7,
									h = (3.5 + 13 * Math.sin(r) - Math.sqrt(l)) / 7,
									u = s * Phaser.Math.Between(4, 6),
									d = c > 0 ? Math.floor(c) : Math.floor(h),
									p = 17 / this.scene.world.getPixelRatio(),
									m = this.angle * Math.PI / 180,
									f = r < Math.PI / 2 ? -1 * (Math.random() * Math.PI / 3 + Math.PI / 3) : Math.random() * Math.PI / 3 + Math.PI / 3;
								this.dropTween = this.scene.tweens.addCounter({
									from: 0,
									to: 1,
									duration: u,
									onUpdate: function(a) {
										var s = a.getValue(),
											o = i - 13 * Math.cos(r) * d * s;
										(o <= t.x - t.width / 2 + 1.5 * p || o >= t.x + t.width / 2 - 1.5 * p) && (o = e.x);
										var l = n - (13 * Math.sin(r) * d * s - .5 * Math.pow(d * s, 2) * 7);
										e.setRotation(m + s * f), e.setPosition(o, l)
									},
									onComplete: function() {
										e.runFadeOutAnimation(), e.scene.audio.playSound(sa.Z.BUBBLE_IN_THE_HOLE, {}, !0, 100)
									}
								})
							}
						}, i.jiggle = function(e, t, i) {
							var n = this;
							if (this.scene) {
								var a = {
									x: this.x,
									y: this.y
								};
								this.jiggleTween && this.jiggleTween.complete(), this.x = a.x, this.y = a.y, this.jiggleTween = this.scene.tweens.addCounter({
									from: 0,
									to: t,
									yoyo: !0,
									duration: 150,
									loop: 1,
									delay: i,
									onUpdate: function(t) {
										if (n.active) {
											var i = t.data[0].previous || 0,
												a = t.getValue() - i;
											1 === t.loopCounter ? (n.x += a * e.x, n.y += a * e.y) : (n.x -= a / 4 * e.x, n.y -= a / 4 * e.y), n.subObjects.forEach((function(e) {
												e.setPosition(n.x, n.y)
											})), n.alignObjects()
										} else t.complete()
									},
									ease: "Sine.easeOut",
									onComplete: function() {
										n.x = a.x, n.y = a.y
									}
								})
							}
						}, i.runFadeOutAnimation = function(e, t) {
							if (void 0 === e && (e = 400), void 0 === t && (t = 0), this.scene) {
								var i = this.getUI();
								this.fadeOutAnimation = this.scene.tweens.add({
									targets: i,
									duration: e,
									delay: t,
									alpha: 0,
									onComplete: function() {
										i.forEach((function(e) {
											e.setActive(!1), e.setVisible(!1)
										}))
									},
									onCompleteScope: this
								})
							}
						}, i.runFadeInAnimation = function(e, t) {
							if (void 0 === e && (e = 400), void 0 === t && (t = 0), this.scene) {
								var i = this.getUI();
								this.fadeInAnimation = this.scene.tweens.add({
									targets: i,
									duration: e,
									delay: t,
									alpha: 1,
									onStart: function() {
										i.forEach((function(e) {
											e.setActive(!0), e.setVisible(!0)
										}))
									}
								})
							}
						}, i.getUI = function() {
							var e = [this];
							return this.subObjects.forEach((function(t) {
								var i = t.getUI();
								e.push.apply(e, i)
							})), e
						}, i.setStatus = function(e, t) {
							void 0 === t && (t = 0), this.status = e
						}, i.getStatus = function() {
							return this.status
						}, i.setConfig = function(e) {
							this.config = e
						}, i.runFadeInContents = function() {}, i.alignObjects = function() {}, t
					}(Phaser.GameObjects.Image),
					lR = rR,
					cR = aa.Z.GAMEPLAY,
					hR = cR.EFFECTS,
					uR = cR.GAME_OBJECTS,
					dR = uR.KEY,
					pR = uR.FRAME,
					mR = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, dR, pR.COLOR_BOMB) || this).ringEffect = void 0, a.glow = void 0, a.lightRayParticle = void 0, a.colors = [], a.shineSprites = [], a.colors = [new Phaser.Display.Color(221, 24, 18, 255), new Phaser.Display.Color(246, 135, 0, 255), new Phaser.Display.Color(252, 228, 0, 255), new Phaser.Display.Color(139, 245, 0, 255), new Phaser.Display.Color(87, 122, 254, 255), new Phaser.Display.Color(144, 63, 160, 255)], a.createRingEffect(), a.createGlow(), a.createLightRayParticle(), a.createShineSprites(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createShineSprites = function() {
							for (var e, t = 0; t < 12; t++) {
								var i = this.scene.make.sprite({
									key: dR,
									alpha: .8,
									depth: jn.Z.EFFECT
								});
								i.kill(), this.shineSprites.push(i)
							}
							this.dynamicGuide.add(y()(e = []).call(e, this.shineSprites))
						}, i.createGlow = function() {
							this.glow = this.scene.make.image({
								key: hR.KEY,
								frame: hR.FRAME.GLOW_4
							}), this.glow.setDepth(jn.Z.EFFECT_HIGH), this.glow.setWorldSize(50, 50), this.glow.kill(), this.dynamicGuide.add(this.glow)
						}, i.destroyObject = function() {
							var t, i, n, a;
							e.prototype.destroyObject.call(this), null == (t = this.glow) || t.destroy(), null == (i = this.ringEffect) || i.destroy(), null == (n = this.lightRayParticle) || n.destroy(), null == (a = this.shineSprites) || a.forEach((function(e) {
								null == e || e.destroy()
							}))
						}, i.createRingEffect = function() {
							this.ringEffect = this.scene.make.image({
								key: hR.KEY,
								frame: hR.FRAME.RING31
							}), this.ringEffect.setWorldSize(64, 64), this.ringEffect.setDepth(jn.Z.EFFECT_HIGH), this.ringEffect.kill(), this.dynamicGuide.add(this.ringEffect)
						}, i.createLightRayParticle = function() {
							this.lightRayParticle = new Tx(this.scene), this.dynamicGuide.add(this.lightRayParticle), this.lightRayParticle.kill(), this.lightRayParticle.setDepth(jn.Z.EFFECT)
						}, i.preKill = function(e) {
							this.kill()
						}, i.changeColorNeighbors = function(e, t) {
							var i = this;
							if (this.scene) {
								this.scene.audio.playSound(sa.Z.COLOR_BOMB_EXPLODE);
								var n = this.scale;
								e.forEach((function(e, n) {
									var a = i.shineSprites[n];
									a.setTexture(dR).setDepth(e.depth + jn.X.SHINE).setScale(1.1 * e.scale).setPosition(e.x, e.y).play("color-ball-shine"), a.revive(), a.once(Phaser.Animations.Events.ANIMATION_COMPLETE, (function() {
										a.kill(), a.off(Phaser.Animations.Events.ANIMATION_UPDATE)
									})), e.setColor(t)
								})), this.lightRayParticle.revive(), this.lightRayParticle.explode(this.x, this.y), this.ringEffect.setPosition(this.x, this.y), this.ringEffect.setScale(0), this.ringEffect.revive(), this.glow.setPosition(this.x, this.y), this.glow.setScale(0), this.glow.revive(), this.scene.tweens.add({
									targets: [this.ringEffect, this.glow],
									scale: {
										from: 0 * n,
										to: 3 * n
									},
									alpha: {
										from: 0,
										to: .8,
										duration: 300,
										ease: Phaser.Math.Easing.Sine.In,
										hold: 150,
										yoyo: !0
									},
									ease: Phaser.Math.Easing.Quartic.Out,
									duration: 500,
									onComplete: function() {
										var e, t;
										i.scene && (null == (e = i.ringEffect) || e.kill(), null == (t = i.glow) || t.kill())
									}
								}), this.scene.tweens.addCounter({
									from: 0,
									to: 1,
									duration: 600,
									onUpdate: function(e) {
										var t = e.getValue() * (i.colors.length - 1),
											n = Math.floor(t),
											a = Math.ceil(t),
											s = Phaser.Display.Color.Interpolate.ColorWithColor(i.colors[n], i.colors[a], 100, 100 * (t - n)),
											o = Phaser.Display.Color.GetColor(s.r, s.g, s.b);
										i.ringEffect.setTint(o), i.glow.setTint(o)
									}
								})
							}
						}, t
					}(lR),
					fR = aa.Z.GAMEPLAY.GAME_OBJECTS,
					gR = fR.KEY,
					vR = fR.FRAME,
					yR = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, gR, vR.BLACK_HOLE) || this).blackHoleSparkle = void 0, a.spinningAnimation = void 0, a.createBlackHoleSparkle(a.x, a.y), a.runSpinningAnimation(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createBlackHoleSparkle = function(e, t) {
							this.blackHoleSparkle = new BA(this.scene), this.blackHoleSparkle.run(4, e, t), this.blackHoleSparkle.setDepth(jn.Z.EFFECT), this.blackHoleSparkle.kill(), this.dynamicGuide.add(this.blackHoleSparkle)
						}, i.runSpinningAnimation = function() {
							var e;
							null == (e = this.spinningAnimation) || e.remove(), this.spinningAnimation = this.scene.tweens.add({
								targets: this,
								duration: 2e3,
								ease: Phaser.Math.Easing.Linear,
								angle: {
									from: this.angle,
									to: this.angle + 360
								},
								repeat: -1
							})
						}, i.revive = function() {
							e.prototype.revive.call(this), this.runSpinningAnimation()
						}, i.kill = function() {
							var t;
							e.prototype.kill.call(this), this.blackHoleSparkle.kill(), null == (t = this.spinningAnimation) || t.remove()
						}, i.destroyObject = function() {
							var t, i;
							e.prototype.destroyObject.call(this), null == (t = this.spinningAnimation) || t.remove(), null == (i = this.blackHoleSparkle) || i.destroy()
						}, i.suckInObject = function(e) {
							this.scene && (this.scene.audio.playSound(sa.Z.BLACK_HOLE), this.scene.tweens.add({
								targets: e,
								duration: 300,
								ease: Phaser.Math.Easing.Sine.In,
								x: this.x,
								y: this.y,
								scale: "*=0.2",
								alpha: {
									from: 1,
									to: 0
								},
								onComplete: function() {
									null == e || e.kill()
								}
							}))
						}, i.drop = function() {
							var t;
							this.blackHoleSparkle.kill(), null == (t = this.spinningAnimation) || t.remove(), e.prototype.drop.call(this)
						}, i.initDefault = function(t) {
							var i = this;
							this.scene && (e.prototype.initDefault.call(this, t), this.scene.time.delayedCall(750, (function() {
								i.scene && i.blackHoleSparkle.revive()
							})))
						}, i.getUI = function() {
							return [this]
						}, i.alignObjects = function() {
							if (this.scene) {
								var e = this.x - this.blackHoleSparkle.emitter.x.propertyValue,
									t = this.y - this.blackHoleSparkle.emitter.y.propertyValue;
								this.blackHoleSparkle.setPosition(e, t)
							}
						}, t
					}(lR),
					bR = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS,
					ER = bR.KEY,
					TR = bR.FRAME,
					AR = aa.Z.GAMEPLAY.EFFECTS,
					SR = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, ER, TR.BOMB_DRUG) || this).explosiveSprite = void 0, a.explosiveParticle = void 0, a.createExplosiveSprite(), a.createExplosiveParticle(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createExplosiveParticle = function() {
							this.explosiveParticle = new ZP(this.scene), this.dynamicGuide.add(this.explosiveParticle)
						}, i.createExplosiveSprite = function() {
							this.explosiveSprite = this.scene.make.sprite({
								key: ER,
								alpha: .8,
								depth: jn.Z.EFFECT_HIGH
							}), this.explosiveSprite.kill(), this.dynamicGuide.add(this.explosiveSprite)
						}, i.explode = function() {
							var e = this;
							if (this.scene) {
								this.preKill();
								var t = 1 / this.scene.world.getPixelRatio(),
									i = this.x,
									n = this.y;
								this.explosiveSprite.setTexture(AR.KEY, AR.FRAME.BOMB_DRUG_EXPLOSION).setScale(t).setPosition(i, n).setTint(12864885), this.explosiveSprite.revive(), this.scene.tweens.add({
									targets: this.explosiveSprite,
									duration: 600,
									props: {
										scale: {
											from: t,
											to: 1.8 * t
										},
										alpha: {
											from: 1,
											to: 0
										}
									},
									onComplete: function() {
										var t;
										null == (t = e.explosiveSprite) || t.kill()
									}
								}), this.explosiveParticle.explode(i, n), this.scene.audio.playSound(sa.Z.BOMB_EXPLODE, {}, !0, 60)
							}
						}, i.destroyObject = function() {
							var t, i;
							e.prototype.destroyObject.call(this), null == (t = this.explosiveSprite) || t.destroy(), null == (i = this.explosiveParticle) || i.destroy()
						}, t
					}(lR),
					_R = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS,
					CR = _R.KEY,
					wR = _R.FRAME,
					BR = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, CR, wR.BALL_BLUE) || this).explosiveSprite = void 0, a.createExplosiveSprite(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function(t) {
							e.prototype.initDefault.call(this, t)
						}, i.createExplosiveSprite = function() {
							this.explosiveSprite = this.scene.make.sprite({
								key: CR,
								alpha: .8,
								depth: jn.Z.EFFECT
							}), this.explosiveSprite.kill(), this.dynamicGuide.add(this.explosiveSprite)
						}, i.destroyObject = function() {
							var t;
							e.prototype.destroyObject.call(this), null == (t = this.explosiveSprite) || t.destroy()
						}, i.getColor = function() {
							return this.color
						}, i.setColor = function(e) {
							switch (this.setTexture(CR), e) {
								case wc.I.Red:
									this.setFrame(wR.BALL_RED);
									break;
								case wc.I.Green:
									this.setFrame(wR.BALL_GREEN);
									break;
								case wc.I.Blue:
									this.setFrame(wR.BALL_BLUE);
									break;
								case wc.I.Yellow:
									this.setFrame(wR.BALL_YELLOW);
									break;
								case wc.I.Pink:
									this.setFrame(wR.BALL_PINK);
									break;
								case wc.I.Violet:
									this.setFrame(wR.BALL_VIOLET);
									break;
								case wc.I.Cyan:
									this.setFrame(wR.BALL_CYAN);
									break;
								case wc.I.Orange:
									this.setFrame(wR.BALL_ORANGE)
							}
							this.color = e
						}, i.explode = function(e) {
							this.scene && this.effectExplode(e)
						}, i.rainbowExplode = function() {
							var e = this;
							if (this.scene) {
								this.kill();
								var t = 1 / this.scene.world.getPixelRatio(),
									i = this.x,
									n = this.y;
								this.explosiveSprite.setTexture(aa.Z.GAMEPLAY.EFFECTS.KEY, aa.Z.GAMEPLAY.EFFECTS.FRAME.RAINBOW_EFFECT).setScale(.7 * t).setTint(16777215).setAlpha(1).setPosition(i, n).revive(), this.scene.audio.playSound(sa.Z.RAINBOW_ITEM_EXPLODE, {}, !0, 35), this.scene.tweens.add({
									targets: this.explosiveSprite,
									scale: 1.4 * t,
									alpha: {
										from: .8,
										to: 0,
										duration: 400
									},
									duration: 400,
									onComplete: function() {
										var t;
										null == (t = e.explosiveSprite) || t.kill()
									}
								})
							}
						}, i.effectExplode = function(e) {
							e && "Rainbow" == e ? this.rainbowExplode() : this.normalExplode()
						}, i.normalExplode = function() {
							var e = this;
							if (this.scene) {
								this.preKill();
								var t = this.color,
									i = this.x,
									n = this.y,
									a = 1 / this.scene.world.getPixelRatio();
								this.explosiveSprite.revive(), this.explosiveSprite.setScale(a).setTint(t).setPosition(i, n), this.explosiveSprite.play("color-ball-explosion"), this.explosiveSprite.once(Phaser.Animations.Events.ANIMATION_COMPLETE, (function() {
									e.explosiveSprite.kill()
								})), this.scene.audio.playSound(sa.Z.BUBBLE_POP, {}, !0, 35)
							}
						}, i.startAnimationIdle = function() {}, i.stopAnimationIdle = function() {}, i.revive = function() {
							e.prototype.revive.call(this), this.config && this.config.color && this.setColor(this.config.color)
						}, t
					}(lR),
					IR = aa.Z.GAMEPLAY.GAME_OBJECTS,
					PR = IR.KEY,
					xR = IR.FRAME,
					OR = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, PR, xR.EMPTY_BALL) || this).emptyGeom = void 0, a.emptyBallExplodeParticle = void 0, a.isUsingEmptyGeom = !0, a.emptyGeom = new Phaser.Geom.Polygon, a.createEmptyBallExplodeParticle(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEmptyBallExplodeParticle = function() {
							this.emptyBallExplodeParticle = new cx(this.scene), this.dynamicGuide.add(this.emptyBallExplodeParticle)
						}, i.getGeom = function() {
							return this.isUsingEmptyGeom ? this.emptyGeom : this.geom
						}, i.preKill = function(e) {
							var t = this;
							if (this.scene) {
								var i = this.scale;
								this.scene.tweens.add({
									targets: this,
									duration: 200,
									scale: {
										from: i,
										to: 1.4 * i
									},
									onComplete: function() {
										t.kill(), t.setScale(i), e && e()
									},
									onCompleteScope: this,
									ease: Phaser.Math.Easing.Sine.Out
								})
							}
						}, i.explode = function() {
							if (this.scene) {
								this.scene.audio.playSound(sa.Z.BUBBLE_POP), this.preKill();
								var e = this.x,
									t = this.y;
								this.emptyBallExplodeParticle.explode(e, t)
							}
						}, i.destroyObject = function() {
							var t;
							e.prototype.destroyObject.call(this), null == (t = this.emptyBallExplodeParticle) || t.destroy()
						}, t
					}(lR),
					kR = aa.Z.GAMEPLAY.GAME_OBJECTS,
					RR = kR.KEY,
					MR = kR.FRAME,
					LR = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, RR, MR.MUMMY_FULL) || this).mummyExplodeSprite = void 0, a.mummyExplodeParticle = void 0, a.breakTween = void 0, a.health = 2, a.createMummyExplodeSprite(), a.createMummyExplodeParticle(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function(t) {
							var i;
							e.prototype.initDefault.call(this), null == (i = this.mummyExplodeParticle) || i.kill(), this.setHealth(2)
						}, i.revive = function() {
							e.prototype.revive.call(this), this.initDefault()
						}, i.createMummyExplodeSprite = function() {
							var e = aa.Z.GAMEPLAY.EFFECTS,
								t = e.KEY,
								i = e.FRAME;
							this.mummyExplodeSprite = this.scene.make.sprite({
								key: t,
								frame: i.GLOW_4,
								alpha: 1
							}), this.mummyExplodeSprite.kill(), this.dynamicGuide.add(this.mummyExplodeSprite)
						}, i.createMummyExplodeParticle = function() {
							this.mummyExplodeParticle = new Wx(this.scene), this.dynamicGuide.add(this.mummyExplodeParticle)
						}, i.explode = function() {
							var e = this;
							if (this.scene) {
								this.preKill();
								var t = this.x,
									i = this.y,
									n = 1 / this.scene.world.getPixelRatio();
								this.mummyExplodeSprite.revive(), this.mummyExplodeSprite.setScale(n).setAlpha(1).setPosition(t, i), this.mummyExplodeParticle.revive(), this.mummyExplodeParticle.explode(t, i), this.breakTween = this.scene.tweens.add({
									targets: this.mummyExplodeSprite,
									ease: Phaser.Math.Easing.Sine.In,
									duration: 100,
									alpha: {
										from: 1,
										to: 0
									},
									onComplete: function() {
										e.mummyExplodeSprite.kill()
									}
								})
							}
						}, i.setHealth = function(e) {
							this.health = e, 1 == e ? this.setFrame(MR.MUMMY_LOW) : 2 == e && this.setFrame(MR.MUMMY_FULL)
						}, i.lowerHealth = function() {
							var e, t, i = this;
							if (this.scene) {
								var n = 1 / this.scene.world.getPixelRatio(),
									a = this.x,
									s = this.y;
								this.mummyExplodeSprite.revive(), this.mummyExplodeSprite.setScale(n).setAlpha(1).setPosition(a, s), this.mummyExplodeParticle.revive(), this.mummyExplodeParticle.explode(a, s), this.setHealth(1), null == (e = this.scene) || e.audio.playSound(sa.Z.STONE_EXPLODE_1), this.breakTween = null == (t = this.scene) ? void 0 : t.tweens.add({
									targets: this.mummyExplodeSprite,
									ease: Phaser.Math.Easing.Sine.In,
									duration: 100,
									alpha: {
										from: 1,
										to: 0
									},
									onComplete: function() {
										i.mummyExplodeSprite.kill()
									}
								})
							}
						}, i.preKill = function(e) {
							var t = this;
							this.scene.tweens.add({
								targets: this,
								duration: 200,
								alpha: {
									from: 1,
									to: 0
								},
								onComplete: function() {
									var i;
									null == (i = t.mummyExplodeSprite) || i.kill(), e && e()
								},
								onCompleteScope: this
							})
						}, i.kill = function() {
							var t, i;
							e.prototype.kill.call(this), null == (t = this.mummyExplodeSprite) || t.kill(), null == (i = this.mummyExplodeParticle) || i.kill()
						}, i.destroyObject = function() {
							var t, i, n;
							e.prototype.destroyObject.call(this), null == (t = this.mummyExplodeSprite) || t.destroy(), null == (i = this.mummyExplodeParticle) || i.destroy(), null == (n = this.breakTween) || n.remove(), this.breakTween = void 0
						}, i.getHealth = function() {
							return this.health
						}, t
					}(lR),
					GR = LR,
					DR = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS,
					FR = DR.KEY,
					NR = DR.FRAME,
					ZR = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, FR, NR.BALL_BLUE) || this).questionMarkTransparent = void 0, a.explosiveSprite = void 0, a.colors = void 0, a.createQuestionMarkTransparent(), a.createExplosiveSprite(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							var t, i;
							e.prototype.initDefault.call(this), null == (t = this.questionMarkTransparent) || t.revive(), null == (i = this.questionMarkTransparent) || i.setAlpha(0).setPosition(this.x, this.y);
							var n = this.colors[Phaser.Math.RND.between(0, this.colors.length - 1)];
							return this.setColor(n), this
						}, i.createQuestionMarkTransparent = function() {
							if (this.scene) {
								this.colors = [wc.I.Red, wc.I.Blue];
								var e = aa.Z.GAMEPLAY.GAME_OBJECTS,
									t = e.KEY,
									i = e.FRAME;
								this.questionMarkTransparent = this.scene.make.image({
									key: t,
									frame: i.BALL_QUESTION_MARK
								}), this.questionMarkTransparent.setWorldSize(34, 34), this.dynamicGuide.add(this.questionMarkTransparent), this.questionMarkTransparent.setPosition(this.x, this.y).setAlpha(0)
							}
						}, i.createExplosiveSprite = function() {
							this.explosiveSprite = this.scene.make.sprite({
								key: FR,
								alpha: .8,
								depth: jn.Z.EFFECT
							}), this.explosiveSprite.kill(), this.dynamicGuide.add(this.explosiveSprite)
						}, i.kill = function() {
							var t;
							e.prototype.kill.call(this), null == (t = this.questionMarkTransparent) || t.kill()
						}, i.preKill = function(e) {
							var t, i = this;
							null == (t = this.scene) || t.tweens.add({
								targets: [this.questionMarkTransparent],
								duration: 200,
								alpha: {
									from: 1,
									to: 0
								},
								onComplete: function() {
									var t;
									i.scene && (i.kill(), null == (t = i.questionMarkTransparent) || t.kill(), e && e())
								},
								onCompleteScope: this,
								ease: Phaser.Math.Easing.Sine.In
							})
						}, i.destroyObject = function() {
							var t;
							e.prototype.destroyObject.call(this), null == (t = this.questionMarkTransparent) || t.destroy()
						}, i.revive = function() {
							e.prototype.revive.call(this), this.initDefault()
						}, i.setColor = function(e) {
							if (this.scene) {
								switch (this.setTexture(FR), e) {
									case wc.I.Red:
										this.setFrame(NR.BALL_RED);
										break;
									case wc.I.Green:
										this.setFrame(NR.BALL_GREEN);
										break;
									case wc.I.Blue:
										this.setFrame(NR.BALL_BLUE);
										break;
									case wc.I.Yellow:
										this.setFrame(NR.BALL_YELLOW);
										break;
									case wc.I.Pink:
										this.setFrame(NR.BALL_PINK);
										break;
									case wc.I.Violet:
										this.setFrame(NR.BALL_VIOLET);
										break;
									case wc.I.Cyan:
										this.setFrame(NR.BALL_CYAN);
										break;
									case wc.I.Orange:
										this.setFrame(NR.BALL_ORANGE)
								}
								this.color = e
							}
						}, i.explode = function() {
							var e = this;
							this.preKill();
							var t = this.color,
								i = this.x,
								n = this.y,
								a = 1 / this.scene.world.getPixelRatio();
							this.explosiveSprite.revive(), this.explosiveSprite.setScale(a).setTint(t).setPosition(i, n), this.explosiveSprite.play("color-ball-explosion"), this.explosiveSprite.once(Phaser.Animations.Events.ANIMATION_COMPLETE, (function() {
								e.explosiveSprite.kill()
							}))
						}, i.changeBallColor = function(e) {
							var t, i = this;
							if (this.scene) {
								e || (e = this.colors[Phaser.Math.RND.between(0, this.colors.length - 1)]);
								var n = 1 / this.scene.world.getPixelRatio();
								null == (t = this.scene) || t.tweens.add({
									targets: [this],
									duration: 150,
									props: {
										scale: {
											start: n,
											from: n,
											to: 0
										}
									},
									onComplete: function() {
										i.scene && (e && i.setColor(e), i.scene.tweens.add({
											targets: i,
											duration: 150,
											props: {
												scale: {
													start: 0,
													from: 0,
													to: n
												}
											}
										}))
									}
								})
							}
						}, i.runFadeInAnimation = function(e, t) {
							var i;
							void 0 === e && (e = 400), void 0 === t && (t = 0), this.scene && (this.initDefault(), null == (i = this.scene) || i.tweens.add({
								targets: [this, this.questionMarkTransparent],
								duration: e,
								delay: t,
								alpha: {
									from: 0,
									to: 1
								}
							}))
						}, i.runFadeOutAnimation = function(e, t) {
							if (void 0 === e && (e = 400), void 0 === t && (t = 0), this.scene) {
								var i = this.getUI();
								this.fadeOutAnimation = this.scene.tweens.add({
									targets: [i, this, this.questionMarkTransparent],
									duration: e,
									delay: t,
									alpha: 0,
									onComplete: function() {
										i.forEach((function(e) {
											e.setActive(!1), e.setVisible(!1)
										}))
									},
									onCompleteScope: this
								})
							}
						}, i.updateDepthObjects = function(t) {
							var i;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.questionMarkTransparent) || i.setDepth(t + jn.X.QUESTION_MARK_TRANSPARENT)
						}, i.changColors = function(e) {
							this.colors = e
						}, i.getUI = function() {
							return [this, this.questionMarkTransparent]
						}, i.alignObjects = function() {
							this.questionMarkTransparent.setPosition(this.x, this.y)
						}, t
					}(lR),
					UR = ZR,
					jR = aa.Z.GAMEPLAY.GAME_OBJECTS,
					YR = jR.KEY,
					WR = jR.FRAME,
					KR = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, YR, WR.PLUS_BALL) || this).explosiveSprite = void 0, a.changeBulletText = void 0, a.ballScale = void 0, a.ballScale = 1 / a.scene.world.getPixelRatio(), a.createExplosiveSprite(), a.createChangeBulletText(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createChangeBulletText = function() {
							this.changeBulletText = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(36),
								text: "+ 1",
								origin: {
									x: .5,
									y: .5
								}
							}), this.changeBulletText.kill(), this.dynamicGuide.add(this.changeBulletText)
						}, i.createExplosiveSprite = function() {
							this.explosiveSprite = this.scene.make.sprite({
								key: YR,
								alpha: .8,
								depth: jn.Z.EFFECT
							}), this.explosiveSprite.kill(), this.dynamicGuide.add(this.explosiveSprite)
						}, i.initDefault = function(e) {
							this.config && this.config.status && this.setStatus(this.config.status)
						}, i.changeRemainingBullets = function() {
							var e = this;
							if (this.scene) {
								this.preKill();
								var t = this.x,
									i = this.y,
									n = 1 / this.scene.world.getPixelRatio();
								this.explosiveSprite.revive(), this.status > 0 ? (this.explosiveSprite.setTexture(YR, WR.PLUS_BALL_EXPLOSION), this.changeBulletText.setText("+ 1")) : (this.explosiveSprite.setTexture(YR, WR.MINUS_BALL_EXPLOSION), this.changeBulletText.setText("- 1")), this.explosiveSprite.setScale(n).setDepth(jn.Z.EFFECT).setPosition(t, i - 20), this.explosiveSprite.revive();
								var a = this.dynamicGuide.shooter.getLauncherPosition(),
									s = a.x,
									o = a.y;
								this.changeBulletText.revive(), this.dynamicGuide.shooter.updateRemainingBullet(this.status), this.changeBulletText.setScale(n).setDepth(jn.Z.EFFECT).setPosition(s + 20 * Math.random() - 10, o - 70 + 20 * Math.random() - 10), this.changeBulletText.revive(), this.scene.tweens.add({
									targets: [this.explosiveSprite, this.changeBulletText],
									duration: 200,
									ease: Phaser.Math.Easing.Sine.In,
									scale: {
										from: n,
										to: 1.2 * n
									},
									onComplete: function() {
										e.scene && e.scene.tweens.add({
											targets: [e.explosiveSprite, e.changeBulletText],
											duration: 200,
											ease: Phaser.Math.Easing.Sine.Out,
											y: "-=10",
											onComplete: function() {
												e.explosiveSprite.kill(), e.changeBulletText.kill()
											}
										})
									}
								}), this.scene.audio.playSound(sa.Z.BUBBLE_POP)
							}
						}, i.changeGridObject = function() {
							var e = this,
								t = this.ballScale;
							this.scene && this.scene.tweens.add({
								targets: this,
								duration: 200,
								ease: Phaser.Math.Easing.Sine.In,
								props: {
									scale: {
										from: t,
										to: .2 * t
									},
									alpha: {
										from: 1,
										to: 0
									}
								},
								onComplete: function() {
									if (e.scene) {
										var i = -e.status;
										e.setStatus(i), e.scene.tweens.add({
											targets: e,
											duration: 200,
											ease: Phaser.Math.Easing.Sine.Out,
											props: {
												scale: {
													from: .2 * t,
													to: t
												},
												alpha: {
													from: 0,
													to: 1
												}
											}
										})
									}
								}
							})
						}, i.setStatus = function(t) {
							e.prototype.setStatus.call(this, t), t > 0 ? this.setFrame(WR.PLUS_BALL) : this.setFrame(WR.MINUS_BALL)
						}, i.destroyObject = function() {
							var t, i;
							e.prototype.destroyObject.call(this), null == (t = this.explosiveSprite) || t.destroy(), null == (i = this.changeBulletText) || i.destroy()
						}, t
					}(lR),
					HR = aa.Z.GAMEPLAY.GAME_OBJECTS,
					zR = HR.KEY,
					XR = HR.FRAME,
					VR = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, zR, XR.BLANK) || this).batHeadSprite = void 0, i.batFlyingSprite = void 0, i.batLeftWingSprite = void 0, i.batRightWingSprite = void 0, i.batContainer = void 0, i.leftWingIdleAnimation = void 0, i.rightWingIdleAnimation = void 0, i.flyUpTween = void 0, i.flyToTween = void 0, i.depthIndex = jn.X.BAT, i.objectType = "Bat", i.createBat(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							var t, i, n, a;
							return e.prototype.initDefault.call(this), this.setScale(0), null == (t = this.batHeadSprite) || t.revive(), null == (i = this.batLeftWingSprite) || i.revive(), null == (n = this.batRightWingSprite) || n.revive(), null == (a = this.batFlyingSprite) || a.kill(), this.createIdleAnimation(), this
						}, i.createBat = function() {
							this.batContainer = this.scene.add.container(), this.createBatHead(), this.createBatWings(), this.createBatFlyingWing(), this.batContainer.setSize(34, 34), this.batContainer.add([this.batRightWingSprite, this.batLeftWingSprite, this.batFlyingSprite, this.batHeadSprite]), this.dynamicGuide.add(this.batContainer)
						}, i.createBatWings = function() {
							this.batRightWingSprite = this.scene.add.sprite(0, 0, zR, XR.BAT_RIGHT_WING_CLOSED), this.batRightWingSprite.setDisplaySize(15, 24), this.batRightWingSprite.setOrigin(.5, 0), this.batRightWingSprite.setPosition(13, -10), this.batLeftWingSprite = this.scene.add.sprite(0, 0, zR, XR.BAT_LEFT_WING_CLOSED), this.batLeftWingSprite.setDisplaySize(15, 24), this.batLeftWingSprite.setOrigin(.5, 0), this.batLeftWingSprite.setPosition(-13, -10)
						}, i.createBatHead = function() {
							this.batHeadSprite = this.scene.add.sprite(0, 0, zR, XR.BAT_HEAD), this.batHeadSprite.setDisplaySize(29, 15), this.batHeadSprite.setPosition(0, -13)
						}, i.createBatFlyingWing = function() {
							this.batFlyingSprite = this.scene.add.sprite(0, 0, zR, XR.BAT), this.batFlyingSprite.setDisplaySize(40, 35), this.batFlyingSprite.kill(), this.batFlyingSprite.setPosition(0, -5)
						}, i.updateDepthObjects = function(e) {
							var t;
							null == (t = this.batContainer) || t.setDepth(e + this.depthIndex)
						}, i.setPosition = function(t, i, n, a) {
							var s;
							return e.prototype.setPosition.call(this, t, i, n, a), null == (s = this.batContainer) || s.setPosition(t, i, n, a), this
						}, i.getUI = function() {
							return [this.batContainer]
						}, i.setAlpha = function(e, t, i, n) {
							return this.batContainer.setAlpha(e), this
						}, i.destroyObject = function() {
							var t, i, n, a, s;
							e.prototype.destroyObject.call(this), null == (t = this.batContainer) || t.destroy(), null == (i = this.leftWingIdleAnimation) || i.remove(), null == (n = this.rightWingIdleAnimation) || n.remove(), null == (a = this.flyUpTween) || a.remove(), null == (s = this.flyToTween) || s.remove()
						}, i.createIdleAnimation = function() {
							var e = this;
							this.scene && (this.leftWingIdleAnimation = this.scene.tweens.add({
								targets: [this.batLeftWingSprite],
								props: {
									rotation: {
										from: 0,
										to: -.1
									}
								},
								duration: 600,
								yoyo: !0,
								repeat: -1,
								ease: Phaser.Math.Easing.Sine.InOut,
								onStart: function() {
									var t;
									null == (t = e.batLeftWingSprite) || t.setRotation(0)
								}
							}), this.rightWingIdleAnimation = this.scene.tweens.add({
								targets: [this.batRightWingSprite],
								props: {
									rotation: {
										from: 0,
										to: .1
									}
								},
								duration: 600,
								yoyo: !0,
								repeat: -1,
								ease: Phaser.Math.Easing.Sine.InOut,
								onStart: function() {
									var t;
									null == (t = e.batRightWingSprite) || t.setRotation(0)
								}
							}))
						}, i.stopIdleAnimation = function() {
							var e, t, i, n, a;
							null == (e = this.batHeadSprite) || e.kill(), null == (t = this.batRightWingSprite) || t.kill(), null == (i = this.batLeftWingSprite) || i.kill(), null == (n = this.leftWingIdleAnimation) || n.remove(), null == (a = this.rightWingIdleAnimation) || a.remove()
						}, i.flyUp = function(e) {
							var t = this;
							if (this.scene) {
								this.stopIdleAnimation(), this.batFlyingSprite.revive(), this.batFlyingSprite.play({
									key: "bat-flying",
									repeat: -1
								});
								var i = 32 * Math.abs(Math.floor(10 / 29)) + 300,
									n = Math.abs(10) < 106 ? this.y + 10 : this.y + 106 * ra()(10);
								this.scene.audio.playSound(sa.Z.BAT_FLYING), this.flyUpTween = this.scene.tweens.add({
									targets: [this.guideObject],
									duration: i,
									props: {
										y: {
											value: n
										}
									},
									onUpdate: function() {
										t.setPosition(t.guideObject.x, t.guideObject.y)
									},
									onComplete: function() {
										t.scene && (t.flyUpTween = void 0, t.setPosition(t.x, n), t.flyToTween = t.scene.tweens.add({
											targets: [t.guideObject],
											duration: 1200,
											props: {
												y: {
													value: e.y,
													ease: Phaser.Math.Easing.Quadratic.Out
												},
												x: {
													value: e.x,
													ease: Phaser.Math.Easing.Quadratic.Out
												}
											},
											onUpdate: function() {
												t.setPosition(t.guideObject.x, t.guideObject.y)
											},
											onComplete: function() {
												var e, i, n;
												t.scene && (t.setPosition(t.guideObject.x, t.guideObject.y), t.flyToTween = void 0, null == (e = t.batFlyingSprite) || e.stop(), null == (i = t.batFlyingSprite) || i.setFrame(aa.Z.GAMEPLAY.GAME_OBJECTS.FRAME.BAT), null == (n = t.batFlyingSprite) || n.kill(), t.restartIdleAnimation())
											}
										}))
									}
								})
							}
						}, i.restartIdleAnimation = function() {
							var e, t, i, n, a;
							null == (e = this.batHeadSprite) || e.revive(), null == (t = this.batRightWingSprite) || t.revive(), null == (i = this.batLeftWingSprite) || i.revive(), null == (n = this.leftWingIdleAnimation) || n.restart(), null == (a = this.rightWingIdleAnimation) || a.restart()
						}, i.kill = function() {
							var t, i, n, a, s, o, r;
							e.prototype.kill.call(this), null == (t = this.leftWingIdleAnimation) || t.remove(), null == (i = this.rightWingIdleAnimation) || i.remove(), null == (n = this.flyUpTween) || n.complete(), null == (a = this.flyToTween) || a.complete(), null == (s = this.batHeadSprite) || s.kill(), null == (o = this.batLeftWingSprite) || o.kill(), null == (r = this.batRightWingSprite) || r.kill()
						}, i.preKill = function(e) {
							var t = this;
							this.scene && this.scene.tweens.add({
								targets: this.batContainer,
								duration: 200,
								alpha: {
									from: 1,
									to: 0
								},
								onComplete: function() {
									var i;
									t.scene && (t.kill(), null == (i = t.batContainer) || i.setAlpha(1), e && e())
								},
								onCompleteScope: this
							})
						}, t
					}(Qk),
					JR = aa.Z.GAMEPLAY.GAME_OBJECTS,
					qR = JR.KEY,
					QR = JR.FRAME,
					$R = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, 0, 0, qR, QR.FIREFLY_PREFIX + 0) || this).dynamicGuide = void 0, n.dynamicGuide = i, n.setDisplaySize(15, 15), n.kill(), n.dynamicGuide.add((0, Un.Z)(n)), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return this
						}, i.preKill = function() {
							this.scene.tweens.add({
								targets: this,
								duration: 200,
								alpha: {
									from: 1,
									to: .3
								},
								onComplete: this.kill,
								onCompleteScope: this
							})
						}, i.flyTo = function(e, t, i) {
							var n = this;
							if (void 0 === t && (t = 1200), void 0 === i && (i = 0), this.scene) {
								this.dynamicGuide.bringToTop(this);
								var a = e.x - this.x,
									s = e.y - this.y,
									o = Math.sqrt(Math.pow(a, 2) + Math.pow(s, 2)),
									r = Math.random() * o * .5 + .5 * o * (Math.random() > .5 ? 1 : -1),
									l = Math.random() * o * .5 + .5 * o * (Math.random() > .5 ? 1 : -1),
									c = Math.atan2(s, a),
									h = new Phaser.Math.Vector2(this.x, this.y),
									u = new Phaser.Math.Vector2(e.x, e.y),
									d = new Phaser.Math.Vector2(r * Math.cos(c) - l * Math.sin(c) + h.x, r * Math.sin(c) + l * Math.cos(c) + h.y),
									p = new Phaser.Math.Vector2((o - r) * Math.cos(c) + l * Math.sin(c) + h.x, (o - r) * Math.sin(c) - l * Math.cos(c) + h.y),
									m = new Phaser.Curves.CubicBezier(h, d, p, u),
									f = 1 / this.scene.world.getPixelRatio();
								this.setScale(1.7 * f), this.scene.tweens.add({
									targets: this,
									duration: i,
									props: {
										scale: {
											start: 1.7 * f,
											from: 1.7 * f,
											to: f
										}
									}
								});
								var g = new LO(this.scene);
								this.dynamicGuide.add(g), this.scene.tweens.addCounter({
									from: 0,
									to: 1,
									duration: t,
									delay: i + 50,
									onUpdate: function(e) {
										if (n.scene) {
											var t = e.getValue(),
												i = m.getPointAt(t);
											n.setPosition(i.x, i.y);
											var a = new xO(n.scene);
											n.dynamicGuide.add(a), a.explode(1, i)
										}
									},
									onComplete: function() {
										g.explode(20, {
											x: n.x,
											y: n.y
										}), n.kill()
									}
								})
							}
						}, i.setDepth = function(t) {
							return e.prototype.setDepth.call(this, t), this
						}, t
					}(Phaser.GameObjects.Sprite),
					eM = $R,
					tM = aa.Z.GAMEPLAY.GAME_OBJECTS,
					iM = tM.KEY,
					nM = tM.FRAME,
					aM = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, iM, nM.FIREFLY_CAP) || this).lavas = [], a.lavaFlyInsideBallAnimations = [], a.background = void 0, a.lavaExplodeParticle = void 0, a.flyLavas = function(e) {
								a.scene && (a.preKill(), a.lavas.forEach((function(t, i) {
									t.flyTo(e[i])
								})))
							}, a.createBackground(), a.createLavas(), a.createLavaExplodeParticle(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							var t, i, n, a = this;
							return e.prototype.initDefault.call(this), null == (t = this.lavas) || t.forEach((function(e) {
								e.setPosition(a.x, a.y), e.initDefault(), e.revive(), e.setAlpha(0), a.dynamicGuide.moveBelow(e, a)
							})), null == (i = this.background) || i.revive(), null == (n = this.background) || n.setAlpha(0).setPosition(this.x, this.y), this
						}, i.revive = function() {
							e.prototype.revive.call(this), this.initDefault()
						}, i.createLavas = function() {
							for (var e = 0; e < 3; e++) {
								var t = new eM(this.scene, this.dynamicGuide);
								this.lavas.unshift(t)
							}
							this.dynamicGuide.bringToTop(this)
						}, i.createBackground = function() {
							this.background = this.scene.make.image({
								key: iM,
								frame: nM.FIREFLY_EMPTY_BOTTLE
							}), this.background.setWorldSize(34, 34), this.dynamicGuide.add(this.background), this.background.setPosition(this.x, this.y).setAlpha(0)
						}, i.createLavaExplodeParticle = function() {
							this.lavaExplodeParticle = new LO(this.scene), this.dynamicGuide.add(this.lavaExplodeParticle)
						}, i.explode = function() {
							var e = this,
								t = this.x,
								i = this.y,
								n = 1 / this.scene.world.getPixelRatio();
							this.lavaExplodeParticle.explode(20, {
								x: t,
								y: i
							}), this.lavas.forEach((function(a) {
								var s = Math.atan2(a.x - t, a.y - i),
									o = a.x + 5 * Math.sin(s),
									r = a.y + 5 * Math.cos(s);
								e.scene && e.scene.add.tween({
									targets: a,
									scale: {
										start: n,
										from: n,
										to: 1.7 * n
									},
									x: o,
									y: r,
									duration: 500,
									ease: Phaser.Math.Easing.Sine.Out
								})
							}))
						}, i.preKill = function(e) {
							var t = this;
							this.scene.tweens.add({
								targets: this,
								duration: 200,
								alpha: {
									from: 1,
									to: 0
								},
								onComplete: function() {
									var i;
									t.scene && (null == (i = t.background) || i.kill(), t.stopIdleAnimation(), e && e())
								},
								onCompleteScope: this
							})
						}, i.kill = function() {
							var t, i;
							e.prototype.kill.call(this), null == (t = this.background) || t.kill(), this.stopIdleAnimation(), null == (i = this.lavas) || i.forEach((function(e) {
								null == e || e.kill()
							}))
						}, i.destroyObject = function() {
							var t, i;
							0 != this.lavaFlyInsideBallAnimations.length && this.lavaFlyInsideBallAnimations.forEach((function(e) {
								null == e || e.remove()
							})), null == (t = this.background) || t.destroy(), null == (i = this.lavas) || i.forEach((function(e) {
								null == e || e.destroy()
							})), e.prototype.destroyObject.call(this)
						}, i.runIdleAnimation = function() {
							var e, t = this,
								i = 1 / (null == (e = this.scene) ? void 0 : e.world.getPixelRatio()) || 1,
								n = [{
									scale: .9,
									from: 4 * Math.PI / 3,
									to: Math.PI / 3,
									x: 2,
									y: -2,
									flipX: !1
								}, {
									scale: .7,
									from: 0,
									to: 2 * Math.PI,
									x: 0,
									y: 0,
									flipX: !0
								}, {
									scale: .5,
									from: 3 * Math.PI / 4,
									to: -Math.PI / 2,
									x: 0,
									y: 0,
									flipX: !1
								}];
							this.lavas.forEach((function(e, a) {
								var s;
								if (e && e.scene) {
									var o = n[a],
										r = Math.random() * Math.PI,
										l = Math.random() > .5 ? -1 : 1,
										c = (o.from - r) * l,
										h = (o.to - r) * l;
									null == e || e.play({
										key: "firefly-flying",
										repeat: -1,
										frameRate: 15
									}), null == e || e.setScale(o.scale * i).setFlipX(o.flipX), null == e || e.setAlpha(1), t.lavaFlyInsideBallAnimations[a] = null == (s = t.scene) ? void 0 : s.tweens.addCounter({
										from: c,
										to: h,
										duration: Phaser.Math.Between(3e3, 4500),
										loop: -1,
										yoyo: !0,
										onUpdate: function(i) {
											null == e || e.setPosition(8 * Math.cos(i.getValue()) + t.x + o.x, 8 * Math.sin(i.getValue()) + t.y + o.y)
										}
									})
								}
							}))
						}, i.runFadeInAnimation = function(e, t) {
							var i, n = this;
							void 0 === e && (e = 400), void 0 === t && (t = 0), this.scene && (this.initDefault(), null == (i = this.scene) || i.tweens.add({
								targets: [this, this.background, this.lavas],
								duration: e,
								delay: t,
								alpha: {
									from: 0,
									to: 1
								},
								onComplete: function() {
									var e;
									3 === (null == (e = n.lavas) ? void 0 : e.length) && n.runIdleAnimation()
								}
							}))
						}, i.stopIdleAnimation = function() {
							0 !== this.lavaFlyInsideBallAnimations.length && this.lavaFlyInsideBallAnimations.forEach((function(e) {
								null == e || e.remove()
							}))
						}, i.updateDepthObjects = function(t) {
							var i, n;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.lavas) || i.forEach((function(e) {
								null == e || e.setDepth(t + jn.X.LAVA)
							})), null == (n = this.background) || n.setDepth(t + jn.X.LAVA_BALL_BACKGROUND)
						}, i.getUI = function() {
							var e;
							return y()(e = [this]).call(e, this.lavas, [this.background])
						}, i.alignObjects = function() {
							this.background.setPosition(this.x, this.y)
						}, t
					}(lR),
					sM = aM,
					oM = aa.Z.GAMEPLAY,
					rM = oM.GAME_OBJECTS,
					lM = oM.EFFECTS,
					cM = rM.KEY,
					hM = rM.FRAME,
					uM = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, cM, hM.ELECTRIC_BALL) || this).electricGlow = void 0, a.electricRing = void 0, a.lightningExplodeSprite = void 0, a.lightningExplodeCenterSprite = void 0, a.electricRingTween1 = void 0, a.electricRingTween2 = void 0, a.electricRingTween3 = void 0, a.electricParticles = void 0, a.createElectricGlow(), a.createElectricRing(), a.createElectricIdleParticle(), a.createLightningExplodeSprites(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							var t, i, n, a, s, o, r;
							return e.prototype.initDefault.call(this), null == (t = this.electricGlow) || t.revive(), null == (i = this.electricGlow) || i.setPosition(this.x, this.y).setAlpha(0), null == (n = this.electricGlow) || n.setDisplaySize(50, 50), null == (a = this.electricRing) || a.revive(), null == (s = this.electricRing) || s.setPosition(this.x, this.y).setAlpha(0), null == (o = this.electricRing) || o.setDisplaySize(32, 32), null == (r = this.electricParticles) || r.setPosition(this.x, this.y), this
						}, i.runFadeInAnimation = function(t, i) {
							var n = this;
							void 0 === t && (t = 400), void 0 === i && (i = 0), e.prototype.runFadeInAnimation.call(this, t, i), this.scene.time.delayedCall(i, (function() {
								n.scene && n.startAnimationIdle()
							}))
						}, i.revive = function() {
							e.prototype.revive.call(this), this.initDefault()
						}, i.createElectricGlow = function() {
							this.electricGlow = this.scene.make.image({
								key: lM.KEY,
								frame: lM.FRAME.GLOW_4
							}), this.electricGlow.setAlpha(1), this.electricGlow.setTint(1796271), this.dynamicGuide.add(this.electricGlow), this.dynamicGuide.sendToBack(this.electricGlow)
						}, i.createElectricRing = function() {
							this.electricRing = this.scene.make.image({
								key: aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.KEY,
								frame: aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.FRAME.THUNDER_BALL_GLOW
							}), this.electricRing.setAlpha(.5), this.dynamicGuide.add(this.electricRing), this.dynamicGuide.sendToBack(this.electricRing)
						}, i.createElectricIdleParticle = function() {
							this.electricParticles = new f_(this.scene), this.dynamicGuide.add(this.electricParticles), this.electricParticles.explode(0, 0), this.electricParticles.kill()
						}, i.createLightningExplodeSprites = function() {
							var e = 1 / this.scene.world.getPixelRatio();
							this.lightningExplodeSprite = this.scene.make.image({
								key: lM.KEY,
								frame: lM.FRAME.FX_ELECTRIC
							}), this.lightningExplodeSprite.setDepth(jn.Z.EFFECT_HIGH).setAlpha(1).setWorldSize(225, 31.80379746835443), this.dynamicGuide.add(this.lightningExplodeSprite), this.lightningExplodeSprite.kill(), this.lightningExplodeCenterSprite = this.scene.make.image({
								key: lM.KEY,
								frame: lM.FRAME.GLOW_3
							}).setScale(3.5 * e, 2.3 * e).setDepth(jn.Z.EFFECT_HIGH + 1).setAlpha(1), this.dynamicGuide.add(this.lightningExplodeCenterSprite), this.lightningExplodeCenterSprite.kill()
						}, i.startAnimationIdle = function() {
							var e;
							if (this.scene) {
								this.stopAnimationIdle(), this.electricRingTween1 = this.scene.tweens.add({
									targets: this.electricGlow,
									duration: 100,
									yoyo: !0,
									repeat: -1,
									alpha: {
										from: 1,
										to: .8,
										ease: Phaser.Math.Easing.Quadratic.In
									}
								}), this.electricRingTween2 = this.scene.tweens.add({
									targets: this.electricRing,
									duration: 300,
									yoyo: !0,
									repeat: -1,
									alpha: {
										from: .5,
										to: 0,
										ease: Phaser.Math.Easing.Quadratic.In
									}
								});
								var t = 1 / this.scene.world.getPixelRatio();
								this.electricRingTween3 = this.scene.tweens.add({
									targets: this.electricGlow,
									duration: 300,
									yoyo: !0,
									repeat: -1,
									scale: {
										from: 1.5 * t,
										to: 1 * t
									},
									ease: Phaser.Math.Easing.Cubic.In
								}), null == (e = this.electricParticles) || e.revive()
							}
						}, i.stopAnimationIdle = function() {
							var e, t, i, n;
							null == (e = this.electricRingTween1) || e.stop(), null == (t = this.electricRingTween2) || t.stop(), null == (i = this.electricRingTween3) || i.stop(), null == (n = this.electricParticles) || n.kill()
						}, i.explode = function() {
							var e, t, i, n, a = this;
							if (this.scene) {
								this.preKill();
								var s = this.x,
									o = this.y,
									r = 1 / this.scene.world.getPixelRatio();
								null == (e = this.lightningExplodeSprite) || e.revive(), null == (t = this.lightningExplodeSprite) || t.setPosition(0, o), null == (i = this.lightningExplodeCenterSprite) || i.revive(), null == (n = this.lightningExplodeCenterSprite) || n.setPosition(s, o), this.stopAnimationIdle(), this.scene.tweens.add({
									targets: [this.lightningExplodeSprite],
									alpha: {
										from: 1,
										to: .6,
										ease: Phaser.Math.Easing.Sine.In
									},
									displayHeight: {
										from: 55.23259493670886,
										to: 0,
										ease: Phaser.Math.Easing.Sine.In
									},
									duration: 360,
									onComplete: function() {
										var e;
										null == (e = a.lightningExplodeSprite) || e.kill()
									}
								}), this.scene.tweens.add({
									targets: [this.lightningExplodeCenterSprite],
									alpha: {
										from: 1,
										to: .4
									},
									scaleX: {
										from: 3.5 * r,
										to: r
									},
									scaleY: {
										from: 2.3 * r,
										to: r
									},
									ease: Phaser.Math.Easing.Sine.In,
									duration: 360,
									onComplete: function() {
										var e;
										null == (e = a.lightningExplodeCenterSprite) || e.kill()
									}
								}), this.scene.audio.playSound(sa.Z.ELECTRIC_EXPLODE)
							}
						}, i.destroyObject = function() {
							var t, i, n, a, s, o;
							e.prototype.destroyObject.call(this), null == (t = this.electricRingTween1) || t.remove(), this.electricRingTween1 = void 0, null == (i = this.electricRingTween2) || i.remove(), this.electricRingTween2 = void 0, null == (n = this.electricRingTween3) || n.remove(), this.electricRingTween3 = void 0, null == (a = this.electricGlow) || a.destroy(), null == (s = this.electricRing) || s.destroy(), null == (o = this.electricParticles) || o.destroy()
						}, i.kill = function() {
							var t, i, n, a, s, o, r, l;
							e.prototype.kill.call(this), null == (t = this.lightningExplodeSprite) || t.kill(), null == (i = this.lightningExplodeSprite) || i.kill(), null == (n = this.electricRing) || n.kill(), null == (a = this.electricGlow) || a.kill(), null == (s = this.electricRingTween1) || s.remove(), null == (o = this.electricRingTween2) || o.remove(), null == (r = this.electricRingTween3) || r.remove(), null == (l = this.electricParticles) || l.kill()
						}, i.alignObjects = function() {
							var e, t, i, n = this.x,
								a = this.y;
							null == (e = this.electricGlow) || e.setPosition(n, a), null == (t = this.electricRing) || t.setPosition(n, a), null == (i = this.electricParticles) || i.setPosition(n, a)
						}, t
					}(lR),
					dM = aa.Z.GAMEPLAY.GAME_OBJECTS,
					pM = dM.KEY,
					mM = dM.FRAME,
					fM = function(e) {
						function t(t, i, n) {
							return e.call(this, t, i, n, pM, mM.STONE) || this
						}
						return (0, l.Z)(t, e), t
					}(lR),
					gM = aa.Z.GAMEPLAY.GAME_OBJECTS,
					vM = gM.KEY,
					yM = gM.FRAME,
					bM = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, vM, yM.EARTHEN_POT) || this).earthPotExplodeParticle = void 0, a.createEarthenPotExplodeParticle(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEarthenPotExplodeParticle = function() {
							this.earthPotExplodeParticle = new nx(this.scene), this.dynamicGuide.add(this.earthPotExplodeParticle)
						}, i.explode = function() {
							var e;
							if (this.scene) {
								this.preKill();
								var t = this.x,
									i = this.y;
								null == (e = this.earthPotExplodeParticle) || e.explode(t, i)
							}
						}, i.destroyObject = function() {
							e.prototype.destroyObject.call(this), this.earthPotExplodeParticle.destroy()
						}, t
					}(lR),
					EM = aa.Z.GAMEPLAY,
					TM = EM.GAME_OBJECTS,
					AM = EM.EFFECTS,
					SM = TM.KEY,
					_M = TM.FRAME,
					CM = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n) || this).copyTween = void 0, a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function() {
							return e.prototype.initDefault.call(this), this.color = wc.I.White, this.setTexture(SM), this.setFrame(_M.BALL_WHITE), this
						}, i.destroyObject = function() {
							var t;
							e.prototype.destroyObject.call(this), null == (t = this.copyTween) || t.remove(), this.copyTween = void 0
						}, i.explode = function() {
							this.explosiveSprite.setAlpha(.8), e.prototype.explode.call(this)
						}, i.copyColor = function(e) {
							var t = this;
							this.scene && (this.explosiveSprite.setTexture(AM.KEY, AM.FRAME.GLOW_7).setDepth(jn.Z.EFFECT).setAlpha(0).setWorldSize(80, 80), this.explosiveSprite.revive(), this.scene.audio.playSound(sa.Z.COPY_BALL_EXPLODE, {}, !0, 60), this.copyTween = this.scene.tweens.add({
								targets: this.explosiveSprite,
								duration: 150,
								alpha: {
									from: 0,
									to: 1,
									ease: Phaser.Math.Easing.Quadratic.In
								},
								yoyo: !0,
								delay: 73,
								onYoyo: function() {
									t.setColor(e)
								},
								onUpdate: function() {
									var e = t.x,
										i = t.y;
									t.explosiveSprite.setPosition(e, i)
								},
								onComplete: function() {
									var e;
									null == (e = t.explosiveSprite) || e.kill()
								}
							}))
						}, t
					}(BR),
					wM = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS,
					BM = wM.KEY,
					IM = wM.FRAME,
					PM = aa.Z.GAMEPLAY.EFFECTS,
					xM = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n) || this).thunderObject = void 0, a.thunderGlow = void 0, a.thunderGlowIdle = void 0, a.thunderGlowCircleIdle = void 0, a.thunderGlowIdleTween = void 0, a.createThunderGlow(), a.createThunderGlowIdle(), a.createThunderObject(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.getColor = function() {
							return this.color
						}, i.setColor = function(t) {
							switch (e.prototype.setColor.call(this, t), t) {
								case wc.I.Red:
									this.thunderObject.setFrame(IM.THUNDER2_RED);
									break;
								case wc.I.Green:
									this.thunderObject.setFrame(IM.THUNDER2_GREEN);
									break;
								case wc.I.Blue:
									this.thunderObject.setFrame(IM.THUNDER2_BLUE);
									break;
								case wc.I.Yellow:
									this.thunderObject.setFrame(IM.THUNDER2_YELLOW);
									break;
								case wc.I.Pink:
									this.thunderObject.setFrame(IM.THUNDER2_PINK);
									break;
								case wc.I.Violet:
									this.thunderObject.setFrame(IM.THUNDER2_PURPLE);
									break;
								case wc.I.Cyan:
									this.thunderObject.setFrame(IM.THUNDER2_SKY_BLUE);
									break;
								case wc.I.Orange:
									this.thunderObject.setFrame(IM.THUNDER2_ORANGE)
							}
							this.color = t, this.thunderObject.setDisplaySize(20.5, 28)
						}, i.createThunderObject = function() {
							var e = this.x,
								t = this.y;
							this.thunderObject = this.scene.make.image({
								key: BM,
								frame: IM.THUNDER2_RED
							}), this.dynamicGuide.add(this.thunderObject), this.thunderObject.setAlpha(0).setPosition(e, t)
						}, i.createThunderGlow = function() {
							var e = this.x,
								t = this.y;
							this.thunderGlow = this.scene.make.image({
								key: PM.KEY,
								frame: PM.FRAME.GLOW_4
							}), this.thunderGlow.setTint(14719252), this.thunderGlow.setWorldSize(80, 80), this.dynamicGuide.add(this.thunderGlow), this.thunderGlow.setPosition(e, t).setAlpha(0)
						}, i.createThunderGlowIdle = function() {
							var e = this.x,
								t = this.y;
							this.thunderGlowIdle = this.scene.make.image({
								key: BM,
								frame: IM.THUNDER_GLOW
							}), this.thunderGlowIdle.setDisplaySize(20.5, 27.5), this.thunderGlowCircleIdle = this.scene.make.image({
								key: BM,
								frame: IM.THUNDER_BALL_GLOW
							}), this.thunderGlowCircleIdle.setDisplaySize(38, 38), this.dynamicGuide.add([this.thunderGlowIdle, this.thunderGlowCircleIdle]), this.thunderGlowIdle.setPosition(e, t), this.thunderGlowCircleIdle.setPosition(e, t), this.thunderGlowIdle.kill(), this.thunderGlowCircleIdle.kill()
						}, i.createThunderGlowIdleTween = function() {
							var e;
							this.scene && (null == (e = this.thunderGlowIdleTween) || e.remove(), this.thunderGlowIdleTween = this.scene.tweens.add({
								targets: [this.thunderGlowIdle, this.thunderGlowCircleIdle],
								duration: 600,
								alpha: {
									from: 0,
									to: .6
								},
								repeat: -1,
								yoyo: !0
							}))
						}, i.explode = function() {
							var e = this,
								t = this.color,
								i = this.x,
								n = this.y,
								a = 1 / this.scene.world.getPixelRatio();
							this.explosiveSprite.revive(), this.explosiveSprite.setScale(a).setTint(t).setPosition(i, n), this.explosiveSprite.play("color-ball-explosion"), this.explosiveSprite.once(Phaser.Animations.Events.ANIMATION_COMPLETE, (function() {
								e.explosiveSprite.kill()
							}))
						}, i.thunderFlyTo = function(e) {
							var t = this;
							if (this.scene) {
								this.preKill();
								var i = e.y,
									n = e.x;
								this.thunderObject.setFrame(IM.THUNDER_GLOW), this.thunderObject.setTint(16645037);
								var a = 1 / this.scene.world.getPixelRatio();
								this.scene.tweens.add({
									targets: this.thunderObject,
									scale: 1.5 * a,
									duration: 300
								}), this.scene.tweens.add({
									targets: this.thunderGlow,
									alpha: 1,
									duration: 300
								}), this.thunderObject.revive(), this.thunderGlow.revive(), this.thunderGlowIdle.kill(), this.thunderGlowCircleIdle.kill(), this.thunderGlowIdleTween.remove(), this.scene.tweens.add({
									targets: [this.thunderObject, this.thunderGlow],
									y: {
										value: i,
										duration: 500,
										ease: Phaser.Math.Easing.Quadratic.In
									},
									x: {
										value: n,
										duration: 500,
										ease: Phaser.Math.Easing.Linear
									},
									offset: 0,
									duration: 500,
									delay: 300,
									onComplete: function() {
										t.scene && t.scene.tweens.add({
											targets: [t.thunderObject, t.thunderGlow],
											duration: 200,
											alpha: {
												from: 1,
												to: .3
											},
											onComplete: function() {
												t.thunderObject.kill(), t.thunderGlow.kill()
											}
										})
									}
								})
							}
						}, i.preKill = function(e) {
							var t = this;
							this.scene.tweens.add({
								targets: this,
								duration: 200,
								alpha: {
									from: 1,
									to: 0
								},
								onComplete: function() {
									t.thunderGlowIdle.kill(), t.thunderGlowCircleIdle.kill(), t.thunderGlowIdleTween.remove(), e && e()
								},
								onCompleteScope: this
							})
						}, i.kill = function() {
							e.prototype.kill.call(this), this.thunderGlowIdleTween.remove(), this.thunderObject.kill(), this.thunderGlow.kill(), this.thunderGlowIdle.kill(), this.thunderGlowCircleIdle.kill(), this.thunderGlowCircleIdle.setAlpha(0)
						}, i.initDefault = function() {
							var e = this.x,
								t = this.y,
								i = 1 / this.scene.world.getPixelRatio();
							this.thunderObject.revive(), this.thunderGlowIdle.revive(), this.thunderGlowCircleIdle.revive(), this.thunderObject.setPosition(e, t).setAlpha(0).setScale(i), this.thunderGlowIdle.setPosition(e, t).setAlpha(0), this.thunderGlowCircleIdle.setPosition(e, t).setAlpha(0), this.thunderGlow.setPosition(e, t).setAlpha(0), this.setColor(this.color)
						}, i.runFadeInAnimation = function(t, i) {
							var n = this;
							void 0 === t && (t = 400), void 0 === i && (i = 0), e.prototype.runFadeInAnimation.call(this, t, i), this.scene.time.delayedCall(i, (function() {
								n.scene && n.createThunderGlowIdleTween()
							}))
						}, i.getUI = function() {
							return [this, this.thunderObject, this.thunderGlowCircleIdle, this.thunderGlowIdle]
						}, i.updateDepthObjects = function(t) {
							var i, n, a, s;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.thunderObject) || i.setDepth(t + jn.X.THUNDER), null == (n = this.thunderGlowCircleIdle) || n.setDepth(t + jn.X.THUNDER), null == (a = this.thunderGlowIdle) || a.setDepth(t + jn.X.THUNDER), null == (s = this.thunderGlow) || s.setDepth(t + jn.X.THUNDER)
						}, i.destroyObject = function() {
							var t, i, n, a, s;
							e.prototype.destroyObject.call(this), null == (t = this.thunderGlowCircleIdle) || t.destroy(), null == (i = this.thunderGlow) || i.destroy(), null == (n = this.thunderGlowIdle) || n.destroy(), null == (a = this.thunderObject) || a.destroy(), null == (s = this.thunderGlowIdleTween) || s.remove()
						}, i.alignObjects = function() {
							var e = this.x,
								t = this.y;
							this.thunderObject.setPosition(e, t), this.thunderGlowIdle.setPosition(e, t), this.thunderGlowCircleIdle.setPosition(e, t), this.thunderGlow.setPosition(e, t)
						}, t
					}(BR),
					OM = aa.Z.GAMEPLAY.GAME_OBJECTS,
					kM = OM.KEY,
					RM = OM.FRAME,
					MM = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, kM, RM.HEXAGON_WIRE) || this).depthIndex = jn.X.HEXAGON_WIRE, i.setDisplaySize(68, 68), i.objectType = "HexagonWire", i
						}
						return (0, l.Z)(t, e), t
					}(Qk),
					LM = aa.Z.GAMEPLAY.GAME_OBJECTS,
					GM = LM.KEY,
					DM = LM.FRAME,
					FM = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, GM, DM.SPIDER_WEB) || this).explosiveSprite = void 0, i.spiderWebExplodeParticle = void 0, i.depthIndex = jn.X.SPIDER_WEB, i.objectType = "SpiderWeb", i.setDisplaySize(33, 34.5), i.createExplosiveSprite(), i.createSpiderWebExplodeParticle(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createSpiderWebExplodeParticle = function() {
							this.spiderWebExplodeParticle = new CO(this.scene), this.dynamicGuide.add(this.spiderWebExplodeParticle)
						}, i.createExplosiveSprite = function() {
							this.explosiveSprite = this.scene.make.sprite({
								key: aa.Z.GAMEPLAY.EFFECTS.KEY,
								alpha: .8,
								depth: jn.Z.EFFECT
							}), this.explosiveSprite.kill(), this.dynamicGuide.add(this.explosiveSprite)
						}, i.explode = function() {
							var e = this;
							if (this.scene) {
								this.preKill(), this.scene.audio.playSound(sa.Z.SPIDER_WEB_EXPLODE);
								var t = this.x,
									i = this.y,
									n = 1 / this.scene.world.getPixelRatio();
								this.explosiveSprite.setFrame(aa.Z.GAMEPLAY.EFFECTS.FRAME.GLOW_4).setScale(n).setDepth(jn.Z.EFFECT_HIGH).setAlpha(1).setPosition(t, i), this.spiderWebExplodeParticle.explode(t, i), this.scene.tweens.add({
									targets: this.explosiveSprite,
									duration: 100,
									alpha: {
										from: 1,
										to: 0,
										ease: Phaser.Math.Easing.Sine.In
									},
									onComplete: function() {
										var t;
										e.scene && (null == (t = e.explosiveSprite) || t.kill())
									}
								})
							}
						}, i.destroyObject = function() {
							var t, i;
							e.prototype.destroyObject.call(this), null == (t = this.spiderWebExplodeParticle) || t.destroy(), null == (i = this.explosiveSprite) || i.destroy()
						}, i.getUI = function() {
							return this.guideObject ? [this] : []
						}, t
					}(Qk),
					NM = aa.Z.GAMEPLAY.GAME_OBJECTS,
					ZM = NM.KEY,
					UM = NM.FRAME,
					jM = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, ZM, UM.BLANK) || this).spiderImage = void 0, i.spiderWebImage = void 0, i.moveTween = void 0, i.targetGuideObject = void 0, i.depthIndex = jn.X.SPIDER, i.objectType = "Spider", i.createSpiderImage(), i.createSpiderWebImage(), i.setScale(0), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function(t) {
							var i;
							e.prototype.initDefault.call(this, t), null == (i = this.spiderImage) || i.setPosition(this.x - 8, this.y - 6)
						}, i.destroyObject = function() {
							var t, i, n;
							e.prototype.destroyObject.call(this), null == (t = this.spiderImage) || t.destroy(), null == (i = this.spiderWebImage) || i.destroy(), null == (n = this.moveTween) || n.remove()
						}, i.createSpiderWebImage = function() {
							this.spiderWebImage = this.scene.make.image({
								key: ZM,
								frame: UM.SPIDER_WEB
							}), this.spiderWebImage.setWorldSize(34, 32), this.spiderWebImage.kill(), this.dynamicGuide.add(this.spiderWebImage)
						}, i.createSpiderImage = function() {
							this.spiderImage = this.scene.make.image({
								key: ZM,
								frame: UM.SPIDER
							}), this.spiderImage.setWorldSize(18, 17.5), this.spiderImage.setFlipX(!0), this.dynamicGuide.add(this.spiderImage)
						}, i.updateDepthObjects = function(t) {
							e.prototype.updateDepthObjects.call(this, t), this.spiderWebImage.setDepth(this.depth), this.spiderImage.setDepth(this.depth)
						}, i.kill = function() {
							var t;
							e.prototype.kill.call(this), null == (t = this.spiderImage) || t.kill(), this.targetGuideObject = void 0
						}, i.move = function(e) {
							var t = this;
							if (this.scene) {
								var i = this.guideObject.getSubObject("SpiderWeb");
								i ? (i.setAlpha(1), i.revive()) : this.guideObject.addSubObject(new FM(this.dynamicGuide)), this.spiderWebImage.setPosition(this.x, this.y), this.spiderWebImage.revive();
								var n = 1 / this.scene.world.getPixelRatio();
								this.scene.tweens.add({
									targets: this.spiderWebImage,
									duration: 300,
									props: {
										scale: {
											start: n,
											from: n,
											to: 1.5 * n
										}
									},
									yoyo: !0,
									onUpdate: function() {
										var e;
										null == (e = t.spiderWebImage) || e.setPosition(t.guideObject.x, t.guideObject.y)
									},
									onStart: function() {
										t.scene && t.scene.audio.playSound(sa.Z.SPIDER_WEB_EXPLODE)
									},
									onComplete: function() {
										var e;
										null == (e = t.spiderWebImage) || e.kill()
									}
								}), this.moveTween = this.scene.tweens.add({
									targets: [this.spiderImage],
									duration: 400,
									props: {
										x: {
											value: e.x - 8,
											ease: Phaser.Math.Easing.Linear
										},
										y: {
											value: e.y - 6,
											ease: Phaser.Math.Easing.Quadratic.Out
										}
									},
									onComplete: function() {
										t.scene && (t.targetGuideObject = e, t.moveTween = void 0)
									}
								})
							}
						}, i.getUI = function() {
							return [this, this.spiderImage]
						}, i.setAlpha = function(t, i, n, a) {
							var s;
							return e.prototype.setAlpha.call(this, t, i, n, a), null == (s = this.spiderImage) || s.setAlpha(t), this
						}, i.setPosition = function(t, i, n, a) {
							if (e.prototype.setPosition.call(this, t, i, n, a), this.moveTween) return this;
							var s, o;
							this.targetGuideObject ? null == (s = this.spiderImage) || s.setPosition(this.targetGuideObject.x - 8, this.targetGuideObject.y - 6) : null == (o = this.spiderImage) || o.setPosition(this.x - 8, this.y - 6);
							return this
						}, t
					}(Qk),
					YM = aa.Z.GAMEPLAY.GAME_OBJECTS,
					WM = YM.KEY,
					KM = YM.FRAME,
					HM = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n) || this).setTexture(WM), a.setFrame(KM.SWITCH_BLACK_HOLE), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.setStatus = function(t, i) {
							var n = this;
							void 0 === i && (i = 0), e.prototype.setStatus.call(this, t), 1 == t ? (this.setTint(16777215), this.runSpinningAnimation(), this.scene.time.delayedCall(i, (function() {
								n.scene && n.blackHoleSparkle.revive()
							}))) : (this.setTint(8355711), this.spinningAnimation.remove(), this.scene.time.delayedCall(i, (function() {
								n.scene && n.blackHoleSparkle.kill()
							})))
						}, i.runChangeStatusAnimation = function(e) {
							var t = this,
								i = new Phaser.Display.Color(255, 255, 255),
								n = new Phaser.Display.Color(127, 127, 127);
							this.scene.tweens.addCounter({
								from: 0,
								to: 1,
								duration: 300,
								ease: Phaser.Math.Easing.Sine.InOut,
								onUpdate: function(a) {
									var s, o, r = a.getValue();
									1 === e ? (s = n, o = i) : (s = i, o = n);
									var l = Phaser.Display.Color.Interpolate.ColorWithColor(s, o, 100, 100 * r),
										c = Phaser.Display.Color.GetColor(l.r, l.g, l.b);
									t.setTint(c)
								},
								onComplete: function() {
									t.scene && t.setStatus(e)
								}
							})
						}, t
					}(yR),
					zM = aa.Z.GAMEPLAY.GAME_OBJECTS,
					XM = zM.KEY,
					VM = zM.FRAME,
					JM = aa.Z.GAMEPLAY.EFFECTS,
					qM = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n, XM, VM.COMPASS) || this).direction = 0, a.arrow = void 0, a.highlight = void 0, a.glows1 = [], a.glows2 = [], a.glow = void 0, a.glowBlue = void 0, a.explodeWidth = void 0, a.RDEExplodeSprite = void 0, a.RDEExplodeCenterSprite = void 0, a.createRDEExplodeSprite(), a.createGlowBlue(), a.createArrow(), a.createHighlight(), a.createGlows1(), a.createGlows2(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function(e) {
							var t = 1 / this.scene.world.getPixelRatio();
							this.setScale(t), this.setStatus(e)
						}, i.setRotation = function(e) {
							var t;
							return null == (t = this.arrow) || t.setRotation(e), this.direction = e, this
						}, i.kill = function() {
							var t, i, n, a, s;
							e.prototype.kill.call(this), null == (t = this.arrow) || t.kill(), null == (i = this.highlight) || i.kill(), this.glows1.forEach((function(e) {
								return null == e ? void 0 : e.kill()
							})), this.glows2.forEach((function(e) {
								return null == e ? void 0 : e.kill()
							})), null == (n = this.glowBlue) || n.kill(), null == (a = this.RDEExplodeSprite) || a.kill(), null == (s = this.RDEExplodeCenterSprite) || s.kill()
						}, i.revive = function() {
							var t, i, n;
							e.prototype.revive.call(this), null == (t = this.arrow) || t.revive(), null == (i = this.highlight) || i.revive(), this.glows1.forEach((function(e) {
								return null == e ? void 0 : e.revive()
							})), this.glows2.forEach((function(e) {
								return null == e ? void 0 : e.revive()
							})), null == (n = this.glowBlue) || n.revive()
						}, i.createArrow = function() {
							this.arrow = this.scene.make.image({
								key: XM,
								frame: VM.COMPASS_NEEDLE
							}), this.arrow.setWorldSize(34, 34), this.dynamicGuide.add(this.arrow), this.arrow.setPosition(this.x, this.y), this.arrow.kill()
						}, i.createHighlight = function() {
							this.highlight = this.scene.make.image({
								key: XM,
								frame: VM.COMPASS_HIGHLIGHT
							}), this.highlight.setWorldSize(34, 34), this.dynamicGuide.add(this.highlight), this.highlight.setPosition(this.x, this.y), this.highlight.kill()
						}, i.randomDirection = function() {
							var e, t = this,
								i = A()(e = [TC.Z.Left, TC.Z.UpLeft, TC.Z.Right, TC.Z.UpRight]).call(e, (function(e) {
									return e != t.direction
								}));
							this.direction = i[Phaser.Math.RND.between(0, i.length - 1)]
						}, i.getDirection = function() {
							return this.direction
						}, i.preKill = function(t) {
							var i = this;
							e.prototype.preKill.call(this, (function() {
								i.arrow.kill(), i.highlight.kill()
							}))
						}, i.setStatus = function(t) {
							if (t) {
								switch (e.prototype.setStatus.call(this, t), t) {
									case 1:
										this.direction = TC.Z.Left;
										break;
									case 2:
										this.direction = TC.Z.Right;
										break;
									case 3:
										this.direction = TC.Z.UpLeft;
										break;
									case 4:
										this.direction = TC.Z.UpRight
								}
								this.setRotation(this.direction)
							}
						}, i.updateDepthObjects = function(t) {
							var i, n, a, s, o, r, l;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.RDEExplodeSprite) || i.setDepth(t + 1), null == (n = this.RDEExplodeCenterSprite) || n.setDepth(t + 1), null == (a = this.glowBlue) || a.setDepth(t + 1), null == (s = this.arrow) || s.setDepth(t + 1), null == (o = this.highlight) || o.setDepth(t + 1), null == (r = this.glows1) || r.forEach((function(e) {
								return null == e ? void 0 : e.setDepth(t + 1)
							})), null == (l = this.glows2) || l.forEach((function(e) {
								return null == e ? void 0 : e.setDepth(t + 1)
							}))
						}, i.getUI = function() {
							return [this, this.arrow, this.highlight]
						}, i.createRDEExplodeSprite = function() {
							this.RDEExplodeSprite = this.scene.make.sprite({
								key: aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.KEY,
								frame: aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.FRAME.ELECTRIC_EXPLODE
							}), this.dynamicGuide.add(this.RDEExplodeSprite), this.RDEExplodeSprite.kill(), this.RDEExplodeCenterSprite = this.scene.make.sprite({
								key: JM.KEY,
								frame: JM.FRAME.GLOW_3
							}), this.dynamicGuide.add(this.RDEExplodeCenterSprite), this.RDEExplodeCenterSprite.kill()
						}, i.createGlowBlue = function() {
							this.glowBlue = this.scene.make.image({
								key: JM.KEY,
								frame: JM.FRAME.GLOW_4
							}), this.glowBlue.setWorldSize(80, 80), this.glowBlue.setTint(5194421), this.glowBlue.kill(), this.dynamicGuide.add(this.glowBlue)
						}, i.createGlows1 = function() {
							for (var e = 0; e < 4; e++) {
								var t = this.scene.make.image({
									key: JM.KEY,
									frame: JM.FRAME.GLOW_7
								});
								t.setWorldSize(32, 32), t.kill(), this.glows1.push(t)
							}
							this.dynamicGuide.add(this.glows1)
						}, i.createGlows2 = function() {
							for (var e = 0; e < 4; e++) {
								var t = this.scene.make.image({
									key: JM.KEY,
									frame: JM.FRAME.GLOW_7
								});
								t.setWorldSize(32, 32), t.kill(), this.glows2.push(t)
							}
							this.dynamicGuide.add(this.glows2)
						}, i.explode = function() {
							var e, t = this;
							if (this.scene) {
								this.kill();
								var i = 1 / this.scene.world.getPixelRatio(),
									n = this.getDirection();
								this.scene.gameZone.width;
								this.glows1.forEach((function(e) {
									e.revive(), e.setPosition(t.x + Phaser.Math.RND.between(-10, 10), t.y + Phaser.Math.RND.between(-10, 10)), e.setScale(2.5 * i), e.setAlpha(1)
								})), this.glows2.forEach((function(e) {
									e.revive(), e.setPosition(t.x, t.y), e.setScale(1.5 * i), e.setAlpha(1)
								})), this.glowBlue.revive(), this.glowBlue.setPosition(this.x, this.y).setScale(1.7 * i).setAlpha(1), this.scene.audio.playSound(sa.Z.COMPASS_EXPLODE), this.scene.tweens.add({
									targets: y()(e = []).call(e, this.glows1),
									duration: 100,
									props: {
										scale: {
											start: 2.5 * i,
											from: 2.5 * i,
											to: i
										},
										alpha: {
											start: 1,
											from: 1,
											to: 0
										}
									},
									onComplete: function() {
										var e;
										t.scene && (t.scene.tweens.add({
											targets: y()(e = []).call(e, t.glows2),
											duration: 450,
											props: {
												scale: {
													start: 1.5 * i,
													from: 1.5 * i,
													to: .7 * i
												},
												alpha: {
													start: 1,
													from: 1,
													to: 0
												}
											}
										}), t.scene.tweens.add({
											targets: [t.glowBlue],
											duration: 450,
											props: {
												scale: {
													start: 1.7 * i,
													from: 1.7 * i,
													to: 0
												},
												alpha: {
													start: 1,
													from: 1,
													to: 0
												}
											},
											onComplete: function() {
												t.glows1.forEach((function(e) {
													e.kill()
												})), t.glows2.forEach((function(e) {
													e.kill()
												})), t.glowBlue.kill()
											}
										}))
									}
								}), this.RDEExplodeSprite.revive(), this.RDEExplodeSprite.setOrigin(0, .5).setPosition(this.x, this.y).setAlpha(1).setDisplaySize(this.explodeWidth, 42).setRotation(Math.PI + n), this.RDEExplodeCenterSprite.revive(), this.RDEExplodeCenterSprite.setScale(3.5 * i, 2.3 * i).setAlpha(1).setPosition(this.x, this.y).setRotation(Math.PI + n), this.scene.tweens.add({
									targets: [this.RDEExplodeSprite],
									alpha: {
										from: 1,
										to: .6,
										ease: Phaser.Math.Easing.Sine.In
									},
									displayHeight: {
										from: 42,
										to: 0,
										ease: Phaser.Math.Easing.Sine.In
									},
									duration: 400,
									onComplete: function() {
										t.RDEExplodeSprite.kill()
									}
								}), this.scene.tweens.add({
									targets: [this.RDEExplodeCenterSprite],
									alpha: {
										from: 1,
										to: .4
									},
									scaleX: {
										from: 3.5 * i,
										to: i
									},
									scaleY: {
										from: 2.3 * i,
										to: i
									},
									ease: Phaser.Math.Easing.Sine.In,
									duration: 400,
									onComplete: function() {
										t.RDEExplodeCenterSprite.kill()
									}
								})
							}
						}, i.destroyObject = function() {
							var t, i, n, a, s;
							e.prototype.destroyObject.call(this), null == (t = this.arrow) || t.destroy(), null == (i = this.highlight) || i.destroy(), this.glows1.forEach((function(e) {
								return null == e ? void 0 : e.destroy()
							})), this.glows2.forEach((function(e) {
								return null == e ? void 0 : e.destroy()
							})), null == (n = this.glowBlue) || n.destroy(), null == (a = this.RDEExplodeSprite) || a.destroy(), null == (s = this.RDEExplodeCenterSprite) || s.destroy()
						}, i.setExplodeWidth = function(e) {
							this.explodeWidth = e
						}, i.runArrowRotation = function(e) {
							var t = this,
								i = this.arrow.rotation;
							this.scene && this.scene.tweens.add({
								targets: this.arrow,
								props: {
									rotation: {
										from: i,
										to: e
									}
								},
								duration: 1e3,
								ease: Phaser.Math.Easing.Elastic.Out,
								onComplete: function() {
									t.setRotation(e)
								}
							})
						}, i.alignObjects = function() {
							var e = this.x,
								t = this.y;
							this.arrow.setPosition(e, t), this.highlight.setPosition(e, t)
						}, t
					}(lR),
					QM = aa.Z.GAMEPLAY.GAME_OBJECTS,
					$M = QM.KEY,
					eL = QM.FRAME,
					tL = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, $M, eL.BLANK) || this).ironShellState = "close", i.tweenPlayAnimation = void 0, i.depthIndex = jn.X.IRON_SHELL, i.objectType = "IronShell", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.initDefault = function(t) {
							void 0 !== this.defaultStatus ? this.setStatus(this.defaultStatus) : e.prototype.initDefault.call(this, t)
						}, i.setStatus = function(t) {
							e.prototype.setStatus.call(this, t), t ? (this.setFrame(eL.PREFIX_IRON_SHELL + 5), this.setDisplaySize(34, 32.5), this.setIronShellState("open")) : (this.setFrame(eL.PREFIX_IRON_SHELL + 0), this.setDisplaySize(34, 37.5), this.setIronShellState("close"))
						}, i.setIronShellState = function(e) {
							this.ironShellState = e
						}, i.play = function() {
							var e, t = this;
							if (this.scene) {
								var i;
								"open" === this.ironShellState ? (i = "close-iron-shell", this.ironShellState = "close") : (i = "open-iron-shell", this.ironShellState = "open"), null == (e = this.tweenPlayAnimation) || e.remove();
								var n = this.scene.anims.get(i);
								this.tweenPlayAnimation = this.scene.tweens.addCounter({
									from: 0,
									to: 1,
									duration: n.duration,
									onUpdate: function(e) {
										var i = e.getValue(),
											a = n.getFrameByProgress(i);
										t.setTexture(a.textureKey, a.frame.name)
									}
								})
							}
						}, i.destroyObject = function() {
							var t;
							e.prototype.destroyObject.call(this), null == (t = this.tweenPlayAnimation) || t.remove()
						}, t
					}(Qk),
					iL = aa.Z.GAMEPLAY.GAME_OBJECTS,
					nL = iL.KEY,
					aL = iL.FRAME,
					sL = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n) || this).subColor = void 0, a.subColorImage = void 0, a.matchedColor = void 0, a.hasTwoColors = !0, a.createSubColorImage(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createSubColorImage = function() {
							this.subColor = wc.I.Red, this.subColorImage = this.scene.make.image({
								key: nL,
								frame: aL.TWO_COLORS_BLUE
							}), this.subColorImage.setDisplaySize(28.5, 30), this.subColorImage.setOrigin(.3947368421, .56666666666), this.subColorImage.setPosition(this.x, this.y), this.dynamicGuide.add(this.subColorImage)
						}, i.explode = function() {
							if (this.hasTwoColors) return this.scene.tweens.add({
								targets: this,
								duration: 200,
								ease: Phaser.Math.Easing.Sine.In,
								scale: "*=1.4",
								yoyo: !0
							}), this.effectExplode(), void this.updateColorAfterMatch();
							e.prototype.explode.call(this)
						}, i.setSubColor = function(e) {
							switch (this.subColorImage.setTexture(nL), e) {
								case wc.I.Red:
									this.subColorImage.setFrame(aL.TWO_COLORS_RED);
									break;
								case wc.I.Green:
									this.subColorImage.setFrame(aL.TWO_COLORS_GREEN);
									break;
								case wc.I.Blue:
									this.subColorImage.setFrame(aL.TWO_COLORS_BLUE);
									break;
								case wc.I.Yellow:
									this.subColorImage.setFrame(aL.TWO_COLORS_YELLOW);
									break;
								case wc.I.Pink:
									this.subColorImage.setFrame(aL.TWO_COLORS_PINK);
									break;
								case wc.I.Violet:
									this.subColorImage.setFrame(aL.TWO_COLORS_VIOLET);
									break;
								case wc.I.Cyan:
									this.subColorImage.setFrame(aL.TWO_COLORS_CYAN);
									break;
								case wc.I.Orange:
									this.subColorImage.setFrame(aL.TWO_COLORS_ORANGE)
							}
							this.subColor = e
						}, i.getSubColor = function() {
							return this.subColor
						}, i.updateColorAfterMatch = function() {
							this.subColor !== this.matchedColor && this.setColor(this.subColor), this.subColorImage.kill(), this.hasTwoColors = !1
						}, i.normalExplode = function() {
							var e = this,
								t = 1 / this.scene.world.getPixelRatio(),
								i = this.matchedColor,
								n = this.x,
								a = this.y;
							i || (i = this.getColor()), this.explosiveSprite.setTexture(nL).setScale(t).setTint(i).setAlpha(.8).setPosition(n, a), this.explosiveSprite.revive(), this.explosiveSprite.play("color-ball-explosion"), this.explosiveSprite.once(Phaser.Animations.Events.ANIMATION_COMPLETE, (function() {
								e.explosiveSprite.kill()
							}))
						}, i.setAlpha = function(t, i, n, a) {
							return e.prototype.setAlpha.call(this, t, i, n, a), this.subColorImage.setAlpha(t), this
						}, i.getUI = function() {
							return [this, this.subColorImage]
						}, i.revive = function() {
							e.prototype.revive.call(this), this.subColorImage.revive()
						}, i.kill = function() {
							e.prototype.kill.call(this), this.subColorImage.kill()
						}, i.destroyObject = function() {
							var t;
							e.prototype.destroy.call(this), null == (t = this.subColorImage) || t.destroy()
						}, i.updateDepthObjects = function(t) {
							var i;
							e.prototype.updateDepthObjects.call(this, t), null == (i = this.subColorImage) || i.setDepth(t + jn.X.SUB_COLOR)
						}, i.jiggle = function(e, t, i) {
							var n = this;
							if (this.scene) {
								var a = {
									x: this.x,
									y: this.y
								};
								this.jiggleTween && this.jiggleTween.complete(), this.x = a.x, this.y = a.y, this.jiggleTween = this.scene.tweens.addCounter({
									from: 0,
									to: t,
									yoyo: !0,
									duration: 150,
									loop: 1,
									delay: i,
									onUpdate: function(t) {
										if (n.active) {
											var i = t.data[0].previous || 0,
												a = t.getValue() - i;
											1 === t.loopCounter ? (n.x += a * e.x, n.y += a * e.y) : (n.x -= a / 4 * e.x, n.y -= a / 4 * e.y), n.getUI().forEach((function(e) {
												e.setPosition(n.x, n.y)
											})), n.subObjects.forEach((function(e) {
												e.setPosition(n.x, n.y)
											})), n.subColorImage.setPosition(n.x, n.y)
										} else t.complete()
									},
									ease: "Sine.easeOut",
									onComplete: function() {
										n.scene && (n.x = a.x, n.y = a.y)
									}
								})
							}
						}, i.setMatchedColor = function(e) {
							this.matchedColor = e
						}, i.getMatchedColor = function() {
							return this.matchedColor
						}, i.initDefault = function(t) {
							e.prototype.initDefault.call(this, t), this.matchedColor = this.subColor, this.hasTwoColors = !0
						}, t
					}(BR);

				function oL(e, t) {
					var i = "undefined" !== typeof uo() && mo()(e) || e["@@iterator"];
					if (i) return (i = i.call(e)).next.bind(i);
					if (Array.isArray(e) || (i = function(e, t) {
							var i;
							if (!e) return;
							if ("string" === typeof e) return rL(e, t);
							var n = tt()(i = Object.prototype.toString.call(e)).call(i, 8, -1);
							"Object" === n && e.constructor && (n = e.constructor.name);
							if ("Map" === n || "Set" === n) return co()(e);
							if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return rL(e, t)
						}(e)) || t && e && "number" === typeof e.length) {
						i && (e = i);
						var n = 0;
						return function() {
							return n >= e.length ? {
								done: !0
							} : {
								done: !1,
								value: e[n++]
							}
						}
					}
					throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
				}

				function rL(e, t) {
					(null == t || t > e.length) && (t = e.length);
					for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
					return n
				}
				var lL = Math.sqrt(3) / 2,
					cL = [
						[
							[-1, -1],
							[-1, 0],
							[0, -1],
							[0, 1],
							[1, -1],
							[1, 0]
						],
						[
							[-1, 0],
							[-1, 1],
							[0, -1],
							[0, 1],
							[1, 0],
							[1, 1]
						]
					],
					hL = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).index = 0, i.staggered = !1, i.size = 0, i.count = 0, i.firstX = 0, i
						}
						return (0, l.Z)(t, e), t
					}((0, P.Z)(Array)),
					uL = function() {
						function e(e, t) {
							this.scene = void 0, this.dynamicGuide = void 0, this.size = void 0, this.grid = [], this.rowSize = 0, this.dynamicGuide = t, this.scene = e, this.rowSize = 5, this.size = new Phaser.Structs.Size(34, 34)
						}
						var t = e.prototype;
						return t.generateGridFromData = function(e, t) {
							this.clearGrid();
							for (var i, n = e.length, a = oL(e); !(i = a()).done;) {
								var s = i.value;
								this.spawnRow(s, n, t)
							}
						}, t.spawnRow = function(e, t, i) {
							void 0 === t && (t = 0), this.addRowToBottom(e, t, i)
						}, t.addRowToBottom = function(e, t, i) {
							var n = this;
							void 0 === t && (t = 0);
							var a = this.size.width,
								s = new hL;
							this.grid.push(s);
							var o = this.calculatorHeadDistanceOfRow(s.size);
							s.firstX = o, e.forEach((function(e, t) {
								var i = n.createObjectFromConfig({
									row: n.grid.length - 1,
									col: t
								}, e);
								i ? (s.push(i), s.count += 1) : s.push(void 0), o += a
							})), s.staggered && s.push(void 0)
						}, t.calculatorHeadDistanceOfRow = function(e) {
							var t = this.size.width;
							return -(.5 * e) * t + .5 * t
						}, t.createObjectFromConfig = function(e, t) {
							var i = this,
								n = this.getXYByRowCol(e),
								a = n.x,
								s = n.y,
								o = t.objectType;
							if (o) {
								var r, l = this.createNewGuideObject(a, s, o);
								if (l.row = e.row, l.col = e.col, l instanceof BR) {
									var c = t.color || wc.I.Blue;
									l.setColor(c), l instanceof sL && t.subColor && l.setSubColor(t.subColor)
								}
								if (l.setDepth(jn.Z.BALL), l.initDefault(t.status), l.setWorldSize(34, 34), t.subObjects && t.subObjects.length > 0) _()(r = t.subObjects).call(r, (function(e) {
									return i.createNewSubGuideObject(e)
								})).forEach((function(e) {
									e && (e.guideObject = l, l.addSubObject(e))
								}));
								return l.setConfig(t), l.initDefault(t.status), l.setDepth(jn.Z.BALL), l
							}
						}, t.createNewGuideObject = function(e, t, i) {
							switch (i) {
								case "EmptyBall":
									return new OR(this.dynamicGuide, e, t);
								case "Mummy":
									return new GR(this.dynamicGuide, e, t);
								case "RandomDirectionElectricBall":
									return new qM(this.dynamicGuide, e, t);
								case "QuestionMarkBall":
									return new UR(this.dynamicGuide, e, t);
								case "PlusMinusBall":
									return new KR(this.dynamicGuide, e, t);
								case "ColorBomb":
									return new mR(this.dynamicGuide, e, t);
								case "TwoColorsBall":
									return new sL(this.dynamicGuide, e, t);
								case "LavaBall":
									return new sM(this.dynamicGuide, e, t);
								case "BlackHole":
									return new yR(this.dynamicGuide, e, t);
								case "SwitchBlackHole":
									return new HM(this.dynamicGuide, e, t);
								case "ElectricBall":
									return new uM(this.dynamicGuide, e, t);
								case "Stone":
									return new fM(this.dynamicGuide, e, t);
								case "EarthenPot":
									return new bM(this.dynamicGuide, e, t);
								case "WhiteBall":
									return new CM(this.dynamicGuide, e, t);
								case "BombDrug":
									return new SR(this.dynamicGuide, e, t);
								default:
									return new BR(this.dynamicGuide, e, t);
								case "ThunderBall":
									return new xM(this.dynamicGuide, e, t)
							}
						}, t.createNewSubGuideObject = function(e) {
							var t;
							switch (e.type) {
								case "Spider":
									t = new jM(this.dynamicGuide);
									break;
								case "Ladybird":
									t = new oR(this.dynamicGuide);
									break;
								case "Bat":
									(t = new VR(this.dynamicGuide)).initDefault();
									break;
								case "Leaves":
									t = new iR(this.dynamicGuide);
									break;
								case "IronShell":
									(t = new tL(this.dynamicGuide)).initDefault(e.status);
									break;
								case "SpiderWeb":
									t = new FM(this.dynamicGuide);
									break;
								case "HexagonWire":
									t = new MM(this.dynamicGuide)
							}
							return t
						}, t.getXYByRowCol = function(e) {
							var t = e.row,
								i = e.col,
								n = this.topY + t * this.ballInterval + .5 * this.size.height;
							return {
								x: this.calculatorHeadDistanceOfRow(t % 2 === 0 ? this.rowSize : this.rowSize - 1) + i * this.size.width,
								y: n
							}
						}, t.getObjectAt = function(e) {
							var t = e.row,
								i = e.col,
								n = this.grid[t];
							if (n && n[i]) return n[i]
						}, t.clearGrid = function() {
							this.grid.forEach((function(e) {
								A()(e).call(e, (function(e) {
									return e
								})).forEach((function(e) {
									null == e || e.destroyObject()
								}))
							})), this.cleanUpEmptyRows(), this.grid = []
						}, t.removeObjectAt = function(e) {
							var t = e.col,
								i = e.row;
							this.grid[i][t] = void 0, this.grid[i].count -= 1
						}, t.cleanUpEmptyRows = function() {
							for (var e = this.grid.length - 1; e >= 0; --e) {
								if (this.grid[e].count > 0) return;
								this.grid.pop()
							}
						}, t.showAllGuideGrid = function() {
							var e = this;
							this.grid.forEach((function(t) {
								t.forEach((function(t) {
									if (t) {
										var i = e.getXYByRowCol(t),
											n = i.x,
											a = i.y;
										t.setPosition(n, a), t.revive(), t.initDefault()
									}
								}))
							}))
						}, t.hideAllGuideGrid = function(e) {
							void 0 === e && (e = !0), this.grid.forEach((function(t) {
								t.forEach((function(t) {
									t && (e ? t.kill() : (t.setAlpha(0), t.subObjects.forEach((function(e) {
										null == e || e.setAlpha(0)
									}))))
								}))
							}))
						}, t.getGrid = function() {
							return this.grid
						}, t.getFlatGrid = function() {
							var e = [];
							return this.grid.forEach((function(t) {
								t.forEach((function(t) {
									t && e.push(t)
								}))
							})), e
						}, t.jiggleNeighborsBall = function(e, t) {
							void 0 === t && (t = 3);
							var i = this.getXYByRowCol(e),
								n = i.x,
								a = i.y,
								s = this.getAdjacentObjects({
									row: e.row,
									col: e.col
								}, t, !1),
								o = [20, 18, 16, 14, 12, 10, 8, 6, 4, 2, 1];
							s.forEach((function(e, i) {
								var s = o[o.length - t + i - 1];
								e.forEach((function(e) {
									var t = e.x - n,
										o = e.y - a,
										r = new Phaser.Math.Vector2(t, o);
									r.normalize(), e.jiggle(r, s, 33 * i)
								}))
							}))
						}, t.getAdjacentObjects = function(e, t, i) {
							var n = this;
							void 0 === t && (t = 1), void 0 === i && (i = !0);
							var a = e.row,
								s = e.col,
								o = [],
								r = [],
								l = [],
								c = this.getNeighborsPositionAt(a, s),
								h = this.filterBallsByPositions(c);
							h = A()(h).call(h, (function(e) {
								if (e.active) return e
							})), o.push(h), l.push.apply(l, h), i ? r.push(h) : r.push(_()(c).call(c, (function(e) {
								return {
									row: e[0],
									col: e[1]
								}
							})));
							for (var u = function(e) {
									var t = r[r.length - 1];
									if (i && (0 == o[o.length - 1].length && o.pop(), 0 == t.length)) return r.pop(), "break";
									var a = [],
										s = [];
									t.forEach((function(e) {
										var t = n.getNeighborsPositionAt(e.row, e.col),
											o = n.filterBallsByPositions(t);
										i ? o.forEach((function(e) {
											Se()(l).call(l, e) < 0 && a.push(e)
										})) : t.forEach((function(e) {
											var t = e[0],
												i = e[1];
											ye()(l).call(l, (function(e) {
												return e.row === t && e.col === i
											})) || a.push({
												row: t,
												col: i
											})
										})), o.forEach((function(e) {
											Se()(l).call(l, e) < 0 && e.active && (l.push(e), s.push(e))
										}))
									})), r.push(a), o.push(s)
								}, d = 0; d < t - 1; d++) {
								if ("break" === u()) break
							}
							return o
						}, t.getNeighborsPositionAt = function(e, t) {
							var i = this,
								n = this.isRowStaggered(e),
								a = cL[+n],
								s = _()(a).call(a, (function(i) {
									return [e + i[0], t + i[1]]
								})),
								o = A()(s).call(s, (function(e) {
									var t = e[0],
										n = e[1],
										a = i.rowSize - +i.isRowStaggered(t);
									return n >= 0 && n < a && t >= 0
								}));
							return o
						}, t.isRowStaggered = function(e) {
							return e % 2 != 0
						}, t.filterBallsByPositions = function(e) {
							var t = this,
								i = [];
							return e.forEach((function(e) {
								var n = e[0],
									a = e[1],
									s = t.grid[n];
								if (s) {
									var o = s[a];
									o && i.push(o)
								}
							})), i
						}, t.attachObject = function(e, t, i) {
							if (t === this.grid.length) {
								var n = new hL(this.rowSize);
								ko()(n).call(n, void 0);
								var a = this.grid[t - 1];
								a ? (n.staggered = !a.staggered, n.firstX = a.firstX + this.size.width / 2, n.size = a.size + 1, a.staggered ? n.firstX -= this.size.width : n.size -= 2) : (n.staggered = !1, n.size = 11, n.firstX = this.calculatorHeadDistanceOfRow(n.size)), this.grid.push(n)
							}
							var s = this.getXYByRowCol({
									row: t,
									col: i
								}),
								o = s.x,
								r = s.y,
								l = this.grid[t];
							l && (e.row = t, e.col = i, l[i] = e, l.count += 1, e.setPosition(o, r), e.revive(), e.subObjects.length && e.subObjects.forEach((function(e) {
								null == e || e.revive()
							})))
						}, (0, V.Z)(e, [{
							key: "topY",
							get: function() {
								return 6
							}
						}, {
							key: "ballInterval",
							get: function() {
								return this.size.height * lL
							}
						}, {
							key: "firstRow",
							get: function() {
								return this.grid[0]
							}
						}]), e
					}(),
					dL = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n) || this).speed = void 0, a.pathFollower = void 0, a.speed = 300, a.pathFollower = new Bm, a
						}
						return (0, l.Z)(t, e), t.prototype.shootByLines = function(e, t) {
							var i = this;
							if (0 !== e.length && this.scene) {
								for (var n = new Phaser.Curves.Path(e[0].x, e[0].y), a = 1; a < e.length; a++) n.lineTo(e[a].x, e[a].y);
								this.pathFollower.setGameObjects([this]), this.pathFollower.setPath(n);
								var s = {
									x: this.x,
									y: this.y
								};
								this.pathFollower.setRotateToPath(!0, Math.PI / 2);
								var o = 0;
								this.pathFollower.start(this.speed, {
									onUpdate: function() {
										if (i.scene) {
											var e = 1 / i.scene.world.getPixelRatio();
											ra()(o) !== ra()(i.x - s.x) && (0 !== o && i.scene.audio.playSound(sa.Z.BUBBLE_BOUNCE), o = i.x - s.x), s.x = i.x, s.y = i.y, i.setScale(e / 1.1, 1.2 * e)
										}
									},
									onComplete: t
								})
							}
						}, t
					}(BR),
					pL = aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES,
					mL = pL.KEY,
					fL = pL.FRAME,
					gL = aa.Z.GAMEPLAY.EFFECTS,
					vL = gL.KEY,
					yL = gL.FRAME,
					bL = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n) || this).ringEffect = void 0, a.glow = void 0, a.glow2 = void 0, a.colors = void 0, a.tweenScale = void 0, a.tweenAlpha = void 0, a.tweenColor = void 0, a.createGlows(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.kill = function() {
							var t, i, n, a, s, o;
							e.prototype.kill.call(this), null == (t = this.tweenAlpha) || t.remove(), null == (i = this.tweenColor) || i.remove(), null == (n = this.tweenScale) || n.remove(), null == (a = this.ringEffect) || a.kill(), null == (s = this.glow) || s.kill(), null == (o = this.glow2) || o.kill()
						}, i.createGlows = function() {
							this.ringEffect = this.scene.make.image({
								key: vL,
								frame: yL.RING_EFFECT
							}), this.ringEffect.setWorldSize(64, 64), this.glow = this.scene.make.image({
								key: vL,
								frame: yL.GLOW_4,
								alpha: .5
							}), this.glow.setWorldSize(68, 68), this.glow2 = this.scene.make.image({
								key: vL,
								frame: yL.GLOW_4,
								alpha: .5
							}), this.glow2.setWorldSize(68 * .7, 68 * .7), this.dynamicGuide.add([this.ringEffect, this.glow, this.glow2]), this.ringEffect.setPosition(this.x, this.y), this.glow.setPosition(this.x, this.y), this.glow2.setPosition(this.x, this.y), this.ringEffect.kill(), this.glow.kill(), this.glow2.kill(), this.colors = [new Phaser.Display.Color(221, 24, 18, 255), new Phaser.Display.Color(246, 135, 0, 255), new Phaser.Display.Color(252, 228, 0, 255), new Phaser.Display.Color(139, 245, 0, 255), new Phaser.Display.Color(87, 122, 254, 255), new Phaser.Display.Color(144, 63, 160, 255)]
						}, i.setColor = function(e) {
							this.setTexture(mL), this.setFrame(fL.BULLET_ITEM_RAINBOW), this.setDisplaySize(34, 34), this.color = wc.I.Rainbow
						}, i.startAnimationIdle = function() {
							var e, t, i, n = this;
							if (this.scene) {
								var a = 1 / this.scene.world.getPixelRatio();
								this.stopAnimationIdle(), null == (e = this.glow) || e.setPosition(this.x, this.y), null == (t = this.ringEffect) || t.setPosition(this.x, this.y), null == (i = this.glow2) || i.setPosition(this.x, this.y), this.tweenScale = this.scene.tweens.add({
									targets: this.ringEffect,
									scale: {
										from: 0 * a,
										to: 1.2 * a
									},
									alpha: {
										from: 0,
										to: 1,
										duration: 300,
										yoyo: !0,
										hold: 600,
										repeatDelay: 300,
										repeat: -1,
										ease: Phaser.Math.Easing.Sine.In
									},
									ease: Phaser.Math.Easing.Quartic.Out,
									duration: 1200,
									repeatDelay: 300,
									repeat: -1,
									onStart: function() {
										n.ringEffect.revive()
									}
								}), this.tweenAlpha = this.scene.tweens.add({
									targets: this.glow,
									delay: 300,
									alpha: {
										start: 0,
										from: 0,
										to: .4
									},
									onStart: function() {
										n.glow.revive(), n.glow2.revive()
									},
									onUpdate: function() {
										n.glow2.alpha = 1.1 * n.glow.alpha
									},
									duration: 300,
									yoyo: !0,
									loop: -1
								}), this.tweenColor = this.scene.tweens.addCounter({
									from: 0,
									to: 1,
									duration: 1e3,
									repeat: -1,
									onUpdate: function(e) {
										var t, i, a = e.getValue() * (n.colors.length - 1),
											s = Math.floor(a),
											o = Math.ceil(a),
											r = Phaser.Display.Color.Interpolate.ColorWithColor(n.colors[s], n.colors[o], 100, 100 * (a - s)),
											l = Phaser.Display.Color.GetColor(r.r, r.g, r.b);
										null == (t = n.ringEffect) || t.setTint(l), null == (i = n.glow) || i.setTint(l)
									}
								})
							}
						}, i.stopAnimationIdle = function() {
							var e, t, i, n, a, s;
							null == (e = this.tweenAlpha) || e.remove(), null == (t = this.tweenColor) || t.remove(), null == (i = this.tweenScale) || i.remove(), null == (n = this.ringEffect) || n.kill(), null == (a = this.glow) || a.kill(), null == (s = this.glow2) || s.kill()
						}, i.explode = function() {
							var e = this;
							if (this.scene) {
								this.preKill();
								var t = this.scene,
									i = 1 / t.world.getPixelRatio();
								this.explosiveSprite.active || (this.explosiveSprite = this.scene.make.sprite({
									key: vL,
									alpha: .8
								}), this.dynamicGuide.add(this.explosiveSprite));
								var n = this.x,
									a = this.y;
								this.explosiveSprite.revive(), this.explosiveSprite.setFrame(yL.RAINBOW_EFFECT).setScale(.7 * i).setAlpha(1).setPosition(n, a), t.tweens.add({
									targets: this,
									scale: 1.4 * i,
									alpha: 0,
									duration: 200
								}), t.tweens.add({
									targets: this.explosiveSprite,
									scale: 1.5 * i,
									alpha: {
										from: .8,
										to: 0,
										duration: 400
									},
									duration: 400,
									onComplete: function() {
										var t;
										e.scene && (null == (t = e.explosiveSprite) || t.kill(), e.kill())
									}
								})
							}
						}, i.getColor = function() {
							return this.color
						}, i.destroyObject = function() {
							var t, i, n, a, s, o, r;
							e.prototype.destroyObject.call(this), null == (t = this.explosiveSprite) || t.destroy(), null == (i = this.tweenAlpha) || i.remove(), null == (n = this.tweenColor) || n.remove(), null == (a = this.tweenScale) || a.remove(), null == (s = this.ringEffect) || s.destroy(), null == (o = this.glow) || o.destroy(), null == (r = this.glow2) || r.destroy()
						}, t
					}(dL),
					EL = aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES,
					TL = (EL.KEY, EL.FRAME, aa.Z.GAMEPLAY),
					AL = TL.EFFECTS,
					SL = TL.GAME_OBJECTS,
					_L = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n) || this).electricGlow = void 0, a.electricRing = void 0, a.electricRingTween1 = void 0, a.electricRingTween2 = void 0, a.electricRingTween3 = void 0, a.electricParticles = void 0, a.createGlows(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.kill = function() {
							var t, i, n, a, s, o;
							e.prototype.kill.call(this), null == (t = this.electricGlow) || t.kill(), null == (i = this.electricRing) || i.kill(), null == (n = this.electricRingTween1) || n.remove(), null == (a = this.electricRingTween2) || a.remove(), null == (s = this.electricRingTween3) || s.remove(), null == (o = this.electricParticles) || o.kill()
						}, i.initDefault = function() {
							e.prototype.initDefault.call(this), this.setRotation(0)
						}, i.createGlows = function() {
							this.electricGlow = this.scene.make.image({
								key: AL.KEY,
								frame: AL.FRAME.GLOW_4
							}), this.electricGlow.setAlpha(1), this.electricGlow.setTint(1796271), this.electricGlow.setWorldSize(68, 68), this.electricRing = this.scene.make.image({
								key: aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.KEY,
								frame: aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.FRAME.THUNDER_BALL_GLOW
							}), this.electricRing.setAlpha(.5), this.electricRing.setWorldSize(38, 38), this.dynamicGuide.add([this.electricGlow, this.electricRing]), this.electricGlow.setPosition(this.x, this.y), this.electricRing.setPosition(this.x, this.y), this.dynamicGuide.moveBelow(this.electricGlow, this), this.dynamicGuide.moveBelow(this.electricRing, this), this.electricGlow.kill(), this.electricRing.kill()
						}, i.createParticles = function() {
							this.electricParticles = new f_(this.scene), this.dynamicGuide.add(this.electricParticles)
						}, i.setColor = function(e) {
							this.setTexture(SL.KEY), this.setFrame(SL.FRAME.ELECTRIC_BALL), this.setDisplaySize(34, 34), this.color = wc.I.Electric
						}, i.startAnimationIdle = function() {
							if (this.scene) {
								var e = 1 / this.scene.world.getPixelRatio();
								this.stopAnimationIdle(), this.createParticles(), this.electricGlow.revive(), this.electricRing.revive(), this.electricParticles.revive(), this.electricGlow.setPosition(this.x, this.y), this.electricRing.setPosition(this.x, this.y), this.electricParticles.explode(0, 0), this.electricParticles.setPosition(this.x, this.y), this.electricRingTween1 = this.scene.tweens.add({
									targets: this.electricGlow,
									duration: 100,
									yoyo: !0,
									repeat: -1,
									alpha: {
										from: 1,
										to: .8,
										ease: Phaser.Math.Easing.Quadratic.In
									}
								}), this.electricRingTween2 = this.scene.tweens.add({
									targets: this.electricRing,
									duration: 300,
									yoyo: !0,
									repeat: -1,
									alpha: {
										from: .5,
										to: 0,
										ease: Phaser.Math.Easing.Quadratic.In
									}
								}), this.electricRingTween3 = this.scene.tweens.add({
									targets: this.electricGlow,
									duration: 300,
									yoyo: !0,
									repeat: -1,
									scale: {
										from: 1.5 * e,
										to: 1 * e
									},
									ease: Phaser.Math.Easing.Cubic.In
								})
							}
						}, i.stopAnimationIdle = function() {
							var e, t, i, n, a, s;
							null == (e = this.electricRingTween1) || e.remove(), null == (t = this.electricRingTween2) || t.remove(), null == (i = this.electricRingTween3) || i.remove(), null == (n = this.electricGlow) || n.kill(), null == (a = this.electricRing) || a.kill(), null == (s = this.electricParticles) || s.kill()
						}, i.explode = function() {
							if (this.scene) {
								this.preKill();
								var e = this.scene,
									t = 1 / e.world.getPixelRatio(),
									i = 270 / 118.5 * 16.75,
									n = e.make.sprite({
										key: AL.KEY,
										frame: AL.FRAME.FX_ELECTRIC
									});
								n.setPosition(0, this.y - 34).setAlpha(1).setWorldSize(270, i);
								var a = e.make.sprite({
									key: AL.KEY,
									frame: AL.FRAME.GLOW_3
								});
								a.setScale(3.5 * t, 2.3 * t).setAlpha(1).setPosition(0, this.y - 34), this.dynamicGuide.add([n, a]), e.tweens.add({
									targets: [n],
									alpha: {
										from: 1,
										to: .6,
										ease: Phaser.Math.Easing.Sine.In
									},
									displayHeight: {
										from: i,
										to: 0,
										ease: Phaser.Math.Easing.Sine.In
									},
									duration: 300,
									onComplete: function() {
										null == n || n.kill()
									}
								}), e.tweens.add({
									targets: [a],
									alpha: {
										from: 1,
										to: .4
									},
									scaleX: {
										from: 3.5 * t,
										to: t
									},
									scaleY: {
										from: 2.3 * t,
										to: t
									},
									ease: Phaser.Math.Easing.Sine.In,
									duration: 300,
									onComplete: function() {
										null == a || a.kill()
									}
								})
							}
						}, i.getColor = function() {
							return this.color
						}, i.destroyObject = function() {
							var t, i, n, a, s, o;
							e.prototype.destroyObject.call(this), null == (t = this.electricGlow) || t.destroy(), null == (i = this.electricRing) || i.destroy(), null == (n = this.electricRingTween1) || n.remove(), null == (a = this.electricRingTween2) || a.remove(), null == (s = this.electricRingTween3) || s.remove(), null == (o = this.electricParticles) || o.destroy()
						}, t
					}(dL),
					CL = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS,
					wL = CL.KEY,
					BL = CL.FRAME,
					IL = function(e) {
						function t(t, i, n) {
							var a, s = t.scene;
							return (a = e.call(this, s, i, n) || this).dynamicGuide = void 0, a.launcher = void 0, a.currentBullet = void 0, a.nextBullet = void 0, a.bullets = [], a.nextBulletScale = .75, a.bulletScale = void 0, a.shotGuide = void 0, a.tutorialHand = void 0, a.shootingPosition = void 0, a.nextShootingPosition = void 0, a.vecN = void 0, a.vecS = void 0, a.radius = void 0, a.bulletIndex = 0, a.remainingBulletText = void 0, a.remainingBullet = 8, a.swapBullets = function() {
								var e = 1 / a.scene.world.getPixelRatio();
								a.scene.audio.playSound(sa.Z.SWITCH_BALL), a.swapBulletsLogic(), a.nextBullet && (a.runScaleNextBulletAnimation(a.nextBullet.scale, a.nextBulletScale * a.bulletScale), a.runRotateNextBulletAnimation()), a.currentBullet && (a.runScaleCurrentBulletAnimation(a.nextBulletScale * a.bulletScale, e), a.runRotateCurrentBulletAnimation())
							}, a.attachNewBullet = function() {
								var e, t, i = 1 / a.scene.world.getPixelRatio();
								(a.currentBullet = a.nextBullet, null != (e = a.currentBullet) && e.active) || (null == (t = a.currentBullet) || t.setScale(a.nextBulletScale * a.bulletScale).revive());
								a.runScaleCurrentBulletAnimation(a.nextBulletScale * a.bulletScale, i), a.runRotateCurrentBulletAnimation(), a.bulletIndex += 1;
								var n = a.bullets[a.bulletIndex];
								n && (n.setScale(0), n.setPosition(a.nextShootingPosition.x, a.nextShootingPosition.y), n.revive(), a.nextBullet = n, a.scene.tweens.add({
									targets: a.nextBullet,
									scale: {
										from: 0,
										to: i * a.nextBulletScale
									},
									duration: 300
								}))
							}, a.dynamicGuide = t, a.createLauncher(), a.createRemainingBulletText(), a.initBulletPosition(), a.initVectors(), a.radius = a.vecS.length(), a.bulletScale = 1 / a.scene.world.getPixelRatio(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createRemainingBulletText = function() {
							this.remainingBulletText = ia.Z.addText(this.scene, {
								font: _a.Z.NUMBERS_SYMBOLS.KEY,
								size: this.scene.fontSize(23),
								text: "" + this.remainingBullet,
								origin: {
									x: .5,
									y: .4
								}
							}), this.add(this.remainingBulletText)
						}, i.setShotGuide = function(e) {
							this.shotGuide = e
						}, i.setTutorialHand = function(e) {
							this.tutorialHand = e
						}, i.createLauncher = function() {
							this.launcher = this.scene.make.image({
								key: wL,
								frame: BL.SHOOTER
							}), this.launcher.setWorldSize(68.5, 68.5), this.add(this.launcher)
						}, i.initBullets = function(e) {
							var t = this;
							e.forEach((function(e) {
								var i = t.getNewGuideBullet(e);
								i.kill(), t.bullets.push(i)
							}))
						}, i.initBulletPosition = function() {
							this.shootingPosition = {
								x: this.x,
								y: this.y - 30
							}, this.nextShootingPosition = {
								x: this.x + 30 * Math.cos(Math.PI / 4.4),
								y: this.y + 30 * Math.sin(Math.PI / 4.4)
							}
						}, i.initVectors = function() {
							var e = this.nextShootingPosition.x - this.x,
								t = this.nextShootingPosition.y - this.y;
							this.vecN = new Phaser.Math.Vector2(e, t);
							var i = this.shootingPosition.x - this.x,
								n = this.shootingPosition.y - this.y;
							this.vecS = new Phaser.Math.Vector2(i, n)
						}, i.swapBulletsLogic = function() {
							var e = this.currentBullet;
							this.currentBullet = this.nextBullet, this.nextBullet = e
						}, i.runRotateNextBulletAnimation = function() {
							var e = this;
							this.scene.tweens.addCounter({
								from: this.vecS.angle(),
								to: this.vecN.angle(),
								duration: 300,
								onUpdate: function(t) {
									var i = t.getValue();
									e.nextBullet && (e.nextBullet.x = e.launcher.x + Math.cos(i) * e.radius + e.x, e.nextBullet.y = e.launcher.y + Math.sin(i) * e.radius + e.y)
								}
							})
						}, i.runScaleNextBulletAnimation = function(e, t, i) {
							void 0 === i && (i = 300), this.scene.tweens.add({
								targets: this.nextBullet,
								scale: {
									from: e,
									to: t
								},
								duration: i
							})
						}, i.runRotateCurrentBulletAnimation = function() {
							var e = this;
							this.scene.tweens.addCounter({
								from: this.vecN.angle() + 2 * Math.PI,
								to: this.vecS.angle(),
								duration: 300,
								onUpdate: function(t) {
									var i = t.getValue();
									e.currentBullet && (e.currentBullet.x = e.x + e.launcher.x + Math.cos(i) * e.radius, e.currentBullet.y = e.y + e.launcher.y + Math.sin(i) * e.radius)
								}
							})
						}, i.runScaleCurrentBulletAnimation = function(e, t, i) {
							var n = this;
							void 0 === i && (i = 300), this.scene.tweens.add({
								targets: this.currentBullet,
								scale: {
									from: e,
									to: t
								},
								duration: i,
								onComplete: function() {
									n.currentBullet && n.currentBullet.startAnimationIdle()
								}
							})
						}, i.runFadeInAnimation = function(e) {
							var t = this;
							void 0 === e && (e = 0);
							var i = 1 / this.scene.world.getPixelRatio();
							this.currentBullet = this.bullets[0], this.currentBullet && (this.currentBullet.setPosition(this.shootingPosition.x, this.shootingPosition.y), this.currentBullet.setScale(0), this.currentBullet.revive(), this.currentBullet.initDefault(), this.nextBullet = this.bullets[1], this.nextBullet && (this.nextBullet.setPosition(this.nextShootingPosition.x, this.nextShootingPosition.y), this.nextBullet.setScale(0), this.nextBullet.revive(), this.bulletIndex = 1, this.revive(), this.setAlpha(0), this.scene.add.tween({
								targets: [this, this.tutorialHand],
								alpha: 1,
								delay: e,
								duration: 300,
								onComplete: function() {
									t.runScaleCurrentBulletAnimation(0, i, 150), t.runScaleNextBulletAnimation(0, t.nextBulletScale * t.bulletScale, 150)
								}
							})))
						}, i.runFadeOutAnimation = function() {
							var e = this,
								t = 1 / this.scene.world.getPixelRatio();
							this.bulletIndex = 0, this.runScaleCurrentBulletAnimation(t, 0), this.runScaleNextBulletAnimation(this.nextBulletScale * this.bulletScale, 0), this.scene.add.tween({
								targets: [this, this.tutorialHand],
								alpha: {
									from: 1,
									to: 0
								},
								delay: 300,
								duration: 300,
								onComplete: function() {
									e.hide()
								}
							})
						}, i.getNewGuideBullet = function(e) {
							var t;
							switch (e) {
								case wc.I.Rainbow:
									(t = new bL(this.dynamicGuide, this.shootingPosition.x, this.shootingPosition.y)).setColor(e), t.setWorldSize(34, 34);
									break;
								case wc.I.Electric:
									t = new _L(this.dynamicGuide, this.nextShootingPosition.x, this.nextShootingPosition.y);
									break;
								case wc.I.Rocket:
								case wc.I.Bomb:
								default:
									t = new dL(this.dynamicGuide, this.nextShootingPosition.x, this.nextShootingPosition.y)
							}
							return t.setDepth(jn.Z.BULLET), t.setColor(e), t.setWorldSize(34, 34), this.dynamicGuide.add(t), t.setDepth(jn.Z.BULLET), t
						}, i.shoot = function(e, t, i) {
							var n = this;
							if (void 0 === t && (t = 300), this.currentBullet) {
								var a = this.currentBullet;
								this.currentBullet = void 0;
								var s = a.scale;
								this.scene.time.delayedCall(t, (function() {
									var t;
									n.scene.audio.playSound(sa.Z.SHOOT_BUBBLE), n.dynamicGuide.hideShotGuide(), n.dynamicGuide.tutorialHand.unHold(0, !1), n.attachNewBullet();
									var o = n.dynamicGuide.getWorldPosition(),
										r = _()(t = n.dynamicGuide.shotGuide.getLines()).call(t, (function(e) {
											return {
												x: e.x - o.x,
												y: e.y - o.y
											}
										}));
									r[r.length - 1] = e, a.shootByLines(r, (function() {
										a.setScale(s), i && i()
									}))
								}))
							}
						}, i.hide = function() {
							var e, t;
							null == (e = this.currentBullet) || e.kill(), null == (t = this.nextBullet) || t.kill(), this.tutorialHand.hide(), this.kill()
						}, i.clear = function() {
							this.hide(), this.currentBullet = void 0, this.nextBullet = void 0, this.tutorialHand.setAlpha(0), this.bulletIndex = 0, this.bullets.forEach((function(e) {
								e.destroyObject()
							})), this.bullets = []
						}, i.getLauncherPosition = function() {
							return {
								x: this.launcher.x + this.x,
								y: this.launcher.y + this.y
							}
						}, i.updateRemainingBullet = function(e) {
							this.remainingBullet += e, this.remainingBulletText.setText("" + this.remainingBullet)
						}, i.showRemainingBulletText = function() {
							this.remainingBulletText.revive(), this.remainingBullet = 8, this.remainingBulletText.setText("8")
						}, i.hideRemainingBulletText = function() {
							this.remainingBulletText.kill()
						}, t
					}(Phaser.GameObjects.Container),
					PL = function() {
						function e(e) {
							this.scene = void 0, this.dynamicGuide = void 0, this.timeline = void 0, this.defaultConfig = void 0, this.tutorialType = void 0, this.dataGrid = void 0, this.bulletColors = void 0, this.scene = e.scene, this.dynamicGuide = e, this.defaultConfig = {
								targets: this.dynamicGuide.shooter,
								props: {
									alpha: 1
								}
							}, this.init()
						}
						var t = e.prototype;
						return t.init = function() {}, t.createTimeline = function() {
							this.timeline = this.scene.tweens.createTimeline({})
						}, t.addConfigToTimeline = function(e) {
							if (this.timeline) {
								var t = (0, Ai.TS)(e, this.defaultConfig);
								this.timeline.add(t)
							}
						}, t.run = function() {
							var e;
							this.createTimeline(), null == (e = this.timeline) || e.play()
						}, t.complete = function() {
							var e;
							null == (e = this.timeline) || e.destroy(), this.timeline = void 0
						}, e
					}(),
					xL = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(20);
										var t = 290 * Math.PI / 180,
											n = 254 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-16);
										var t = e.grid.getXYByRowCol({
												row: 2,
												col: 1
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 2,
												col: 1
											}), null == n || n.explode()
										}))
									},
									duration: 700
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 1,
												col: 0
											}, {
												row: 1,
												col: 1
											}, {
												row: 1,
												col: 2
											}, {
												row: 1,
												col: 3
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}))
									},
									duration: 500
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.animateSwapBullets()
									},
									duration: 900
								}
							}, i.step5 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-19);
										var t = 251 * Math.PI / 180,
											n = 289 * Math.PI / 180;
										e.shotGuide.updateObstaclesToRaycaster(), e.showShotGuide(wc.I.Red), e.runMovingShotGuideTween(300, 600, t, n)
									},
									delay: 100,
									duration: 800
								}
							}, i.step6 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(19);
										var t = e.grid.getXYByRowCol({
												row: 1,
												col: 3
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 1,
												col: 3
											}), null == n || n.explode()
										}))
									},
									duration: 800
								}
							}, i.step7 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 0,
												col: 0
											}, {
												row: 0,
												col: 1
											}, {
												row: 0,
												col: 2
											}, {
												row: 0,
												col: 3
											}, {
												row: 0,
												col: 4
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}))
									},
									duration: 800
								}
							}, i.step8 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.grid.hideAllGuideGrid(), i.dynamicGuide.shooter.runFadeOutAnimation()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 800
								}
							}, i.tutorialType = "ColorBallTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Red
								}, {
									objectType: "ColorBall",
									color: wc.I.Red
								}, {
									objectType: "ColorBall",
									color: wc.I.Red
								}, {
									objectType: "ColorBall",
									color: wc.I.Red
								}, {
									objectType: "ColorBall",
									color: wc.I.Red
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Blue
								}, {
									objectType: "ColorBall",
									color: wc.I.Blue
								}, {
									objectType: "ColorBall",
									color: wc.I.Blue
								}, {
									objectType: "ColorBall",
									color: wc.I.Blue
								}]
							], this.bulletColors = [wc.I.Blue, wc.I.Blue, wc.I.Red, wc.I.Blue];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(20);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4()), this.addConfigToTimeline(this.step5()), this.addConfigToTimeline(this.step6()), this.addConfigToTimeline(this.step7()), this.addConfigToTimeline(this.step8())
						}, t
					}(PL),
					OL = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).toCol = void 0, i.step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(24);
										var t = 294 * Math.PI / 180,
											n = 258 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-12);
										var t = e.grid.getXYByRowCol({
												row: 3,
												col: 1
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 3,
												col: 1
											}), null == n || n.explode()
										}))
									},
									onComplete: function() {
										var e = i.dynamicGuide.tutorialHand;
										i.scene.add.tween({
											targets: [e],
											alpha: {
												from: 1,
												to: 0
											},
											delay: 300,
											duration: 300,
											onComplete: function() {
												e.hide()
											}
										})
									},
									duration: 700
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 2,
												col: 0
											}, {
												row: 2,
												col: 1
											}, {
												row: 2,
												col: 2
											}, {
												row: 2,
												col: 3
											}, {
												row: 2,
												col: 4
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(t) {
											if (t && (t.explode(), t instanceof xM)) {
												i.toCol = Math.random() > .5 ? 0 : 3;
												var n = e.grid.getXYByRowCol({
													row: 1,
													col: i.toCol
												});
												null == t || t.thunderFlyTo(n)
											}
										}))
									},
									duration: 1e3
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = i.toCol ? [{
												row: 0,
												col: 2
											}, {
												row: 0,
												col: 3
											}, {
												row: 0,
												col: 4
											}, {
												row: 1,
												col: 2
											}, {
												row: 1,
												col: 3
											}] : [{
												row: 0,
												col: 0
											}, {
												row: 0,
												col: 1
											}, {
												row: 1,
												col: 0
											}, {
												row: 1,
												col: 1
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}))
									},
									duration: 900
								}
							}, i.step5 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.shooter.runFadeOutAnimation(), i.dynamicGuide.runFadeOutAllGuideObjects()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 1200
								}
							}, i.tutorialType = "ThunderBallTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Violet
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Violet
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Green
								}, {
									objectType: "ColorBall",
									color: wc.I.Green
								}, {
									objectType: "ThunderBall",
									color: wc.I.Green
								}, {
									objectType: "ColorBall",
									color: wc.I.Green
								}, {
									objectType: "ColorBall",
									color: wc.I.Green
								}]
							], this.bulletColors = [wc.I.Green, wc.I.Green];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(20);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4()), this.addConfigToTimeline(this.step5())
						}, t
					}(PL),
					kL = aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.KEY,
					RL = function() {
						function e(e) {
							this.scene = void 0, this.dynamicGuide = void 0, this.shotGuide = void 0, this.config = void 0, this.color = void 0, this.rainbowStraights = [], this.straights = [], this.pointsParticle = [], this.glowsPoint = [], this.bgPointEnd = void 0, this.glowsTween = void 0, this.scene = e.scene, this.shotGuide = e, this.dynamicGuide = e.dynamicGuide, this.config = HS[wc.I.Blue], this.color = wc.I.Blue, this.createGlowsPoint(), this.createBgPointEnd(), this.init()
						}
						var t = e.prototype;
						return t.init = function() {
							0 === this.straights.length && (this.createLineShotGuide(), this.createPointsParticle())
						}, t.createLineShotGuide = function() {
							if (this.config) {
								for (var e = this.shotGuide.getLimitLine(), t = this.scene.world.getPixelRatio(), i = 1 / t, n = 0; n < e; n++) {
									var a, s = null == (a = HS[wc.I.Rainbow]) ? void 0 : a.frameStraight,
										o = new JS(this.scene, kL, s),
										r = this.scene.make.image({
											key: kL,
											frame: this.config.frameStraight
										});
									o.setTileScale(i, i), this.rainbowStraights.push(o), this.straights.push(r), i > .6 / t && (i -= .2 / t)
								}
								this.dynamicGuide.add(this.rainbowStraights), this.dynamicGuide.add(this.straights), this.setDepthLineShotGuide(jn.Z.SHOOT_GUIDE)
							}
						}, t.createGlowsAnimation = function() {
							if (!this.glowsTween || this.glowsTween.state === Phaser.Tweens.REMOVED) {
								var e = 1 / this.scene.world.getPixelRatio();
								this.glowsTween = this.scene.tweens.add({
									targets: this.glowsPoint,
									duration: 300,
									props: {
										scale: {
											start: .2 * e,
											from: .2 * e,
											to: .6 * e
										}
									},
									yoyo: !0,
									loop: -1
								})
							}
						}, t.createGlowsPoint = function() {
							for (var e = this.shotGuide.getLimitLine(), t = 0; t < e; t++) {
								var i = this.scene.make.image({
									key: aa.Z.GAMEPLAY.EFFECTS.KEY,
									frame: aa.Z.GAMEPLAY.EFFECTS.FRAME.GLOW_7
								});
								i.setWorldSize(1, 1), i.kill(), i.setDepth(jn.Z.EFFECT_HIGH), this.glowsPoint.push(i)
							}
							this.dynamicGuide.add(this.glowsPoint)
						}, t.createBgPointEnd = function() {
							this.config && (this.bgPointEnd = this.scene.make.image({
								key: kL,
								frame: this.config.frameBgPoint,
								alpha: .7
							}), this.bgPointEnd.kill(), this.bgPointEnd.setDepth(jn.Z.BACKGROUND), this.dynamicGuide.add(this.bgPointEnd))
						}, t.createPointsParticle = function() {
							if (this.config) {
								for (var e = this.shotGuide.getLimitLine(), t = 0; t < e; t++) {
									var i = new VS(this.scene);
									i.createPointEmitter(this.config.frameBgPoint), i.setDepth(jn.Z.EFFECT), this.pointsParticle.push(i)
								}
								this.dynamicGuide.add(this.pointsParticle)
							}
						}, t.setDepthLineShotGuide = function(e) {
							for (var t = this.shotGuide.getLimitLine(), i = 0; i < t; i++) this.rainbowStraights[i].setDepth(e), this.straights[i].setDepth(e)
						}, t.setConfigShotGuide = function(e) {
							this.config = e
						}, t.hide = function() {
							var e;
							this.bgPointEnd.kill(), null == (e = this.glowsTween) || e.remove(), this.setVisibleLineShotGuide(!1);
							for (var t = 0; t < this.rainbowStraights.length; t++) this.rainbowStraights[t].setVisible(!1), this.straights[t].setVisible(!1), this.glowsPoint[t].setVisible(!1), this.pointsParticle[t].stop()
						}, t.setVisibleLineShotGuide = function(e) {
							for (var t = 0; t < this.straights.length; t++) this.rainbowStraights[t].setVisible(e), this.straights[t].setVisible(e)
						}, t.updateConfig = function(e) {
							if (this.config = HS[e], this.config && this.color !== e) {
								this.color = e;
								for (var t = 0; t < this.rainbowStraights.length; t++) this.straights[t].setFrame(this.config.frameStraight)
							}
						}, t.updateSpeedEffectShotGuide = function(e) {
							var t = this.shotGuide.getLines(),
								i = this.shotGuide.getLimitLine();
							if (!(t.length <= 1))
								for (var n = .9 * this.scene.world.getPixelRatio() * e * 60 / 1e3, a = 0; a < i; a++) this.rainbowStraights[a].visible && this.color === wc.I.Rainbow && this.rainbowStraights[a].updateSpeedX(n)
						}, t.updateEffectShotGuide = function() {
							this.updateLines(), this.updatePointsParticle(), this.updateGlowsPoint()
						}, t.updateLines = function() {
							var e = this.dynamicGuide.getWorldPosition(),
								t = this.shotGuide.getLines();
							this.setVisibleLineShotGuide(!1);
							for (var i = this.scene.world.getPixelRatio(), n = 1 / i, a = 0; a < t.length - 1; a++) {
								var s = t[a],
									o = t[a + 1];
								if (a < this.rainbowStraights.length) {
									var r = Phaser.Math.Distance.Between(s.x, s.y, o.x, o.y),
										l = Math.atan2(o.y - s.y, o.x - s.x),
										c = (s.x + o.x) / 2 - e.x,
										h = (s.y + o.y) / 2 - e.y;
									this.color === wc.I.Rainbow ? (this.rainbowStraights[a].setPosition(c + .5, h), this.rainbowStraights[a].setTileWidth(r), this.rainbowStraights[a].setRotation(l), this.rainbowStraights[a].setVisible(!0)) : (this.straights[a].setPosition(c + .5, h), this.straights[a].setWorldSize(r, 18.5 * n * i), this.straights[a].setRotation(l), this.straights[a].setVisible(!0)), n > .6 / i && (n -= .2 / i)
								}
							}
						}, t.updatePointsParticle = function() {
							if (this.config) {
								var e = this.dynamicGuide.getWorldPosition(),
									t = this.shotGuide.getLines(),
									i = this.shotGuide.getLimitLine(),
									n = .6;
								if (!(t.length <= 1)) {
									var a;
									if (t.length < 3) null == (a = this.glowsTween) || a.remove();
									else this.createGlowsAnimation();
									for (var s = 0; s < this.pointsParticle.length; s++)
										if (s < t.length - 1) {
											var o, r = t[s + 1];
											if (this.pointsParticle[s].setPosition(r.x - e.x, r.y - e.y), s === i - 1 || s >= t.length - 2) null == (o = this.pointsParticle[s]) || o.stop();
											else this.pointsParticle[s].setScale(n + .2), this.pointsParticle[s].start(this.config.frameBgPoint);
											n > .3 && (n -= .1)
										} else {
											var l;
											null == (l = this.pointsParticle[s]) || l.stop()
										}
								}
							}
						}, t.updateGlowsPoint = function() {
							for (var e = this.dynamicGuide.getWorldPosition(), t = this.shotGuide.getLines(), i = this.shotGuide.getLimitLine(), n = 0; n < this.glowsPoint.length; n++)
								if (n < t.length - 1) {
									var a = t[n + 1];
									this.glowsPoint[n].setPosition(a.x - e.x, a.y - e.y), n >= t.length - 2 || n === i - 1 ? this.glowsPoint[n].kill() : this.glowsPoint[n].revive()
								} else this.glowsPoint[n].kill()
						}, t.updateBgPointEnd = function(e, t) {
							if (this.config) {
								var i = this.dynamicGuide.getWorldPosition();
								this.bgPointEnd.setPosition(e.x - i.x, e.y - i.y), this.bgPointEnd.setScale(t), this.bgPointEnd.revive(), this.bgPointEnd.setFrame(this.config.frameBgPoint), this.bgPointEnd.setWorldSize(27 * .55, 27.5 * .55)
							}
						}, e
					}(),
					ML = function() {
						function e(e) {
							this.scene = void 0, this.dynamicGuide = void 0, this.ballGrid = void 0, this.limitLine = 3, this.raycaster = void 0, this.lines = [], this.positionCollide = void 0, this.objectCollide = void 0, this.effectShotGuide = void 0, this.zone = void 0, this.obstaclePolygon = void 0, this.graphic = void 0, this.dynamicGuide = e, this.scene = e.scene, this.graphic = this.scene.add.graphics(), this.createRaycasterObject(), this.createEffectShotGuide()
						}
						var t = e.prototype;
						return t.createEffectShotGuide = function() {
							this.effectShotGuide = new RL(this)
						}, t.setZone = function(e) {
							this.zone = e
						}, t.createRaycasterObject = function() {
							this.raycaster = new a_(this.scene, 17)
						}, t.showFrom = function(e, t, i, n) {
							if (void 0 === n && (n = wc.I.Red), this.updateRaycaster(e, t, i), this.effectShotGuide.updateConfig(n), this.effectShotGuide.init(), this.effectShotGuide.updateEffectShotGuide(), this.lines.length > 1) {
								var a = this.lines[this.lines.length - 1],
									s = 1.2 / this.scene.world.getPixelRatio() - .05 * (this.lines.length - 1);
								this.lines.length > this.limitLine && (a = this.lines[this.limitLine], s = 1.2 / this.scene.world.getPixelRatio() - .15), this.effectShotGuide.updateBgPointEnd(a, s)
							}
						}, t.hide = function() {
							this.effectShotGuide.hide()
						}, t.getLimitLine = function() {
							return this.limitLine
						}, t.setBallGrid = function(e) {
							this.ballGrid = e
						}, t.destroy = function() {
							this.hide()
						}, t.reset = function() {
							this.hide(), this.lines = []
						}, t.isCollideGridObjectPool = function() {
							return !!this.objectCollide
						}, t.getXYCollideGrid = function() {
							return this.positionCollide
						}, t.getLines = function() {
							return this.lines
						}, t.updateRaycaster = function(e, t, i) {
							this.graphic.setVisible(!0), this.graphic.setDepth(1e9), this.graphic.clear(), this.graphic.lineStyle(1, 16711935, .5);
							var n = e,
								a = t,
								s = n,
								o = a,
								r = i.angle(),
								l = this.raycaster.rayToward(n, a, r);
							if (this.lines = [{
									x: s,
									y: o
								}], this.positionCollide = void 0, this.objectCollide = void 0, !1 !== l)
								for (; l;) {
									if (l.isOutTop) return void this.lines.push({
										x: l.x,
										y: l.y
									});
									if (n = l.x, a = l.y, r = l.reflectAngle, !l.isBound && !l.isOutTop) {
										s = l.x, o = l.y, this.lines.push({
											x: s,
											y: o
										}), this.positionCollide = {
											x: s,
											y: o
										}, l.gameObject instanceof lR && (this.objectCollide = l.gameObject);
										break
									}
									s = l.x, o = l.y, this.lines.push({
										x: s,
										y: o
									});
									var c = 2 * Math.cos(l.reflectAngle),
										h = -2 * Math.sin(l.reflectAngle);
									l = this.raycaster.rayToward(n + c, a + h, r)
								}
						}, t.updateObstaclesToRaycaster = function() {
							var e = this;
							this.raycaster.clearObstacle(), this.obstaclePolygon = [];
							var t = this.zone.getBounds();
							this.raycaster.setBoundLeft(t.x), this.raycaster.setBoundRight(t.x + t.width), this.raycaster.setBoundTop(t.y - 10), this.raycaster.setLineTopGridY(t.y);
							var i = this.ballGrid.getFlatGrid();
							i && i.forEach((function(t) {
								if (t.active && t.getGeom) {
									var i = t.getGeom();
									e.raycaster.addObstacle(t, i), e.obstaclePolygon.push(i)
								}
							}))
						}, t.addObstacleToRaycaster = function(e, t) {
							this.raycaster.addObstacle(e, t), this.obstaclePolygon.push(t)
						}, t.updateSpeedEffectShotGuide = function(e) {
							this.effectShotGuide.updateSpeedEffectShotGuide(e)
						}, e
					}(),
					LL = ML,
					GL = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-15);
										var t = 255 * Math.PI / 180,
											n = 282 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = e.grid.getXYByRowCol({
												row: 0,
												col: 3
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 0,
												col: 3
											}), i.scene.time.delayedCall(750, (function() {
												null == n || n.runFadeOutAnimation()
											}))
										}))
									},
									duration: 650
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 1,
												col: 2
											}, {
												row: 1,
												col: 3
											}, {
												row: 2,
												col: 2
											}, {
												row: 2,
												col: 3
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}))
									},
									duration: 1e3
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.runFadeOutAllGuideObjects(), i.dynamicGuide.shooter.runFadeOutAnimation()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 1e3
								}
							}, i.tutorialType = "EmptyBallTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}],
								[{
									objectType: "EmptyBall"
								}, {
									objectType: "EmptyBall"
								}, {
									objectType: "EmptyBall"
								}, {
									objectType: "EmptyBall"
								}],
								[{
									objectType: "EmptyBall"
								}, {
									objectType: "EmptyBall"
								}, {
									objectType: "EmptyBall"
								}, {
									objectType: "EmptyBall"
								}, {
									objectType: "EmptyBall"
								}]
							], this.bulletColors = [wc.I.Green, wc.I.Cyan, wc.I.Orange];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(-16);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4())
						}, t
					}(PL),
					DL = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(20);
										var t = 290 * Math.PI / 180,
											n = 220 * Math.PI / 180;
										e.runMovingShotGuideTween(400, 800, t, n)
									},
									duration: 1200
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = e.grid.getXYByRowCol({
												row: 1,
												col: 0
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											null == n || n.explode(), e.grid.jiggleNeighborsBall({
												row: 1,
												col: 0
											})
										}))
									},
									duration: 1100
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 0,
												col: 0
											}, {
												row: 0,
												col: 1
											}, {
												row: 0,
												col: 2
											}, {
												row: 0,
												col: 3
											}, {
												row: 0,
												col: 4
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}))
									},
									duration: 550
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-50);
										var t = 220 * Math.PI / 180,
											n = 337 * Math.PI / 180;
										e.runMovingShotGuideTween(400, 800, t, n)
									},
									duration: 1200
								}
							}, i.step5 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = e.grid.getXYByRowCol({
												row: 3,
												col: 3
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											null == n || n.explode(), e.grid.jiggleNeighborsBall({
												row: 3,
												col: 3
											})
										}))
									},
									duration: 1100
								}
							}, i.step6 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 2,
												col: 2
											}, {
												row: 3,
												col: 1
											}, {
												row: 3,
												col: 2
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											if (e) {
												e.explode();
												var t = e.getSubObject("HexagonWire");
												t && t.runFadeOutTween()
											}
										}))
									},
									duration: 500
								}
							}, i.step7 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 1,
												col: 1
											}, {
												row: 1,
												col: 2
											}, {
												row: 2,
												col: 1
											}, {
												row: 2,
												col: 3
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.drop()
										})), i.dynamicGuide.shooter.runFadeOutAnimation()
									},
									duration: 1150
								}
							}, i.step8 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.grid.hideAllGuideGrid()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 800
								}
							}, i.tutorialType = "HexagonWireTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Green
								}, {
									objectType: "ColorBall",
									color: wc.I.Green
								}, {
									objectType: "ColorBall",
									color: wc.I.Green
								}, {
									objectType: "ColorBall",
									color: wc.I.Green
								}, {
									objectType: "ColorBall",
									color: wc.I.Green
								}],
								[{}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}],
								[{}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow,
									subObjects: [{
										type: "HexagonWire"
									}]
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}],
								[{}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}]
							], this.bulletColors = [wc.I.Green, wc.I.Yellow, wc.I.Violet, wc.I.Yellow];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(20);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4()), this.addConfigToTimeline(this.step5()), this.addConfigToTimeline(this.step6()), this.addConfigToTimeline(this.step7()), this.addConfigToTimeline(this.step8())
						}, t
					}(PL),
					FL = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-10);
										var t = 260 * Math.PI / 180,
											n = 335 * Math.PI / 180;
										e.runMovingShotGuideTween(400, 800, t, n)
									},
									duration: 1200
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide.grid.getXYByRowCol({
												row: 2,
												col: 2
											}),
											t = i.dynamicGuide.shooter.currentBullet;
										i.dynamicGuide.shooter.shoot(e, 300, (function() {
											null == t || t.explode(), i.dynamicGuide.grid.jiggleNeighborsBall({
												row: 2,
												col: 2
											})
										}))
									},
									duration: 1200
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide.grid.getObjectAt({
											row: 1,
											col: 2
										});
										e && e.explode()
									},
									duration: 50
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 1,
												col: 1
											}, {
												row: 1,
												col: 3
											}, {
												row: 0,
												col: 2
											}, {
												row: 0,
												col: 3
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}))
									},
									duration: 800
								}
							}, i.step5 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.shooter.runFadeOutAnimation(), i.dynamicGuide.runFadeOutAllGuideObjects()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 1e3
								}
							}, i.tutorialType = "BombDrugTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Green
								}, {
									objectType: "ColorBall",
									color: wc.I.Green
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Green
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "BombDrug"
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}],
								[{}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}]
							], this.bulletColors = [wc.I.Green, wc.I.Yellow, wc.I.Violet];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(-10);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4()), this.addConfigToTimeline(this.step5())
						}, t
					}(PL),
					NL = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).updateColorsQuestionMarkBall = function() {
								for (var e = i.dynamicGuide, t = [{
										row: 1,
										col: 1
									}, {
										row: 1,
										col: 2
									}], n = _()(t).call(t, (function(t) {
										return e.grid.getObjectAt(t)
									})), a = [wc.I.Red, wc.I.Blue, wc.I.Yellow], s = 0; s < n.length; s++) {
									var o = n[s];
									o && o instanceof UR && o.changColors(a)
								}
							}, i.step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(20);
										var t = 290 * Math.PI / 180,
											n = 254 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-16);
										var t = e.grid.getXYByRowCol({
												row: 2,
												col: 1
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 2,
												col: 1
											}), null == n || n.explode()
										}))
									},
									duration: 700
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										for (var e = i.dynamicGuide, t = [{
												row: 0,
												col: 0
											}, {
												row: 0,
												col: 1
											}, {
												row: 1,
												col: 0
											}], n = _()(t).call(t, (function(t) {
												return e.grid.getObjectAt(t)
											})), a = [{
												row: 1,
												col: 1
											}, {
												row: 1,
												col: 2
											}, {
												row: 1,
												col: 3
											}], s = _()(a).call(a, (function(t) {
												return e.grid.getObjectAt(t)
											})), o = 0; o < s.length; o++) {
											var r = s[o];
											if (r && r instanceof UR) {
												if (r.getColor() != wc.I.Yellow) break;
												n.push(r)
											}
										}
										n.forEach((function(e) {
											e && e.explode()
										}))
									},
									duration: 500
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 1,
												col: 1
											}, {
												row: 1,
												col: 2
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e instanceof UR && e.changeBallColor()
										}));
										var n = e.grid.getObjectAt({
											row: 1,
											col: 3
										});
										n && n instanceof UR && n.changeBallColor(wc.I.Blue)
									},
									duration: 500
								}
							}, i.step5 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.animateSwapBullets()
									},
									duration: 900
								}
							}, i.step6 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-19);
										var t = 251 * Math.PI / 180,
											n = 289 * Math.PI / 180;
										e.shotGuide.updateObstaclesToRaycaster(), e.runMovingShotGuideTween(300, 600, t, n)
									},
									delay: 100,
									duration: 800
								}
							}, i.step7 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(19);
										var t = e.grid.getXYByRowCol({
												row: 2,
												col: 3
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 2,
												col: 3
											}), null == n || n.explode()
										}))
									},
									duration: 800
								}
							}, i.step8 = function() {
								return {
									onStart: function() {
										for (var e = i.dynamicGuide, t = [{
												row: 0,
												col: 4
											}, {
												row: 1,
												col: 3
											}], n = _()(t).call(t, (function(t) {
												return e.grid.getObjectAt(t)
											})), a = [{
												row: 1,
												col: 1
											}, {
												row: 1,
												col: 2
											}], s = _()(a).call(a, (function(t) {
												return e.grid.getObjectAt(t)
											})), o = s.length - 1; o >= 0; o--) {
											var r = s[o];
											if (r && r instanceof UR) {
												if (r.getColor() != wc.I.Blue) break;
												n.push(r)
											}
										}
										n.forEach((function(e) {
											e && e.explode()
										}))
									},
									duration: 800
								}
							}, i.step9 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 1,
												col: 1
											}, {
												row: 1,
												col: 2
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e instanceof UR && e.changeBallColor()
										}))
									},
									duration: 800
								}
							}, i.step10 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.runFadeOutAllGuideObjects(), i.dynamicGuide.shooter.runFadeOutAnimation()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 1200
								}
							}, i.tutorialType = "QuestionMarkBallTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "ColorBall",
									color: wc.I.Red
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "ColorBall",
									color: wc.I.Blue
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "QuestionMarkBall"
								}, {
									objectType: "QuestionMarkBall"
								}, {
									objectType: "QuestionMarkBall"
								}]
							], this.bulletColors = [wc.I.Yellow, wc.I.Red, wc.I.Blue, wc.I.Blue];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(20);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.updateColorsQuestionMarkBall(), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4()), this.addConfigToTimeline(this.step5()), this.addConfigToTimeline(this.step6()), this.addConfigToTimeline(this.step7()), this.addConfigToTimeline(this.step8()), this.addConfigToTimeline(this.step9()), this.addConfigToTimeline(this.step10())
						}, t
					}(PL),
					ZL = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-20);
										var t = 250 * Math.PI / 180,
											n = 300 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(30);
										var t = e.grid.getXYByRowCol({
												row: 3,
												col: 3
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										i.scene.time.delayedCall(300, (function() {
											e.shooter.updateRemainingBullet(-1)
										})), e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 3,
												col: 3
											}), null == n || n.explode()
										}))
									},
									duration: 700
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide.grid.getObjectAt({
											row: 2,
											col: 4
										});
										null == e || e.changeRemainingBullets()
									},
									duration: 0
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = e.grid.getObjectAt({
												row: 2,
												col: 0
											});
										null == t || t.changeGridObject();
										var n = e.grid.getObjectAt({
											row: 2,
											col: 2
										});
										null == n || n.changeGridObject()
									},
									duration: 100
								}
							}, i.step5 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(30);
										var t = 300 * Math.PI / 180,
											n = 209 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step6 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-61);
										var t = e.grid.getXYByRowCol({
												row: 3,
												col: 0
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										i.scene.time.delayedCall(300, (function() {
											e.shooter.updateRemainingBullet(-1)
										})), e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 3,
												col: 0
											}), null == n || n.explode()
										}))
									},
									duration: 1e3
								}
							}, i.step7 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide.grid.getObjectAt({
											row: 2,
											col: 0
										});
										null == e || e.changeRemainingBullets()
									},
									duration: 200
								}
							}, i.step8 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide.grid.getObjectAt({
											row: 2,
											col: 2
										});
										null == e || e.changeGridObject()
									},
									duration: 1e3
								}
							}, i.step9 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.runFadeOutAllGuideObjects(), i.dynamicGuide.shooter.runFadeOutAnimation()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.shooter.updateRemainingBullet(2), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 1e3
								}
							}, i.tutorialType = "PlusMinusBallTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}],
								[{
									objectType: "PlusMinusBall",
									status: 1
								}, {}, {
									objectType: "PlusMinusBall",
									status: -1
								}, {}, {
									objectType: "PlusMinusBall",
									status: 1
								}]
							], this.bulletColors = [wc.I.Cyan, wc.I.Orange, wc.I.Cyan, wc.I.Orange];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(-20);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4()), this.addConfigToTimeline(this.step5()), this.addConfigToTimeline(this.step6()), this.addConfigToTimeline(this.step7()), this.addConfigToTimeline(this.step8()), this.addConfigToTimeline(this.step9())
						}, t
					}(PL),
					UL = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-20);
										var t = 250 * Math.PI / 180,
											n = 285 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = e.grid.getXYByRowCol({
												row: 2,
												col: 3
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											if (n) {
												i.scene.time.delayedCall(3500, (function() {
													null == n || n.runFadeOutAnimation()
												})), n.calculateGeom();
												var t = n.getGeom();
												e.shotGuide.addObstacleToRaycaster(n, t)
											}
											e.grid.jiggleNeighborsBall({
												row: 2,
												col: 3
											})
										}))
									},
									duration: 800
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = e.grid.getObjectAt({
												row: 1,
												col: 1
											}),
											n = e.grid.getObjectAt({
												row: 2,
												col: 2
											}),
											a = null == n ? void 0 : n.getSubObject("Spider");
										a && a instanceof jM && a.move(t)
									},
									duration: 200
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(15);
										var t = 285 * Math.PI / 180,
											n = 203 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step5 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = e.grid.getXYByRowCol({
												row: 3,
												col: 1
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											null == n || n.explode(), e.grid.jiggleNeighborsBall({
												row: 2,
												col: 3
											})
										}))
									},
									duration: 1150
								}
							}, i.step6 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 1,
												col: 1
											}, {
												row: 2,
												col: 1
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}));
										var n = e.grid.getObjectAt({
											row: 2,
											col: 2
										});
										if (n) {
											var a = n.getSubObject("Spider"),
												s = n.getSubObject("SpiderWeb");
											null == a || a.preKill(), i.scene.time.delayedCall(1050, (function() {
												null == s || s.preKill()
											}))
										}
									},
									duration: 1e3
								}
							}, i.step7 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.shooter.runFadeOutAnimation(), i.dynamicGuide.runFadeOutAllGuideObjects()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 1200
								}
							}, i.tutorialType = "SpiderTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}],
								[{}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "ColorBall",
									color: wc.I.Green,
									subObjects: [{
										type: "Spider"
									}]
								}]
							], this.bulletColors = [wc.I.Green, wc.I.Yellow, wc.I.Cyan, wc.I.Cyan];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(-20);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4()), this.addConfigToTimeline(this.step5()), this.addConfigToTimeline(this.step6()), this.addConfigToTimeline(this.step7())
						}, t
					}(PL),
					jL = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(20);
										var t = 290 * Math.PI / 180,
											n = 265 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-16);
										var t = e.grid.getXYByRowCol({
												row: 3,
												col: 1
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 3,
												col: 1
											}), null == n || n.explode()
										}))
									},
									duration: 700
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = e.grid.getObjectAt({
												row: 2,
												col: 2
											});
										null == t || t.preKill();
										var n = [{
												row: 0,
												col: 1
											}, {
												row: 0,
												col: 2
											}, {
												row: 0,
												col: 3
											}, {
												row: 1,
												col: 0
											}, {
												row: 1,
												col: 2
											}, {
												row: 1,
												col: 1
											}, {
												row: 1,
												col: 2
											}, {
												row: 1,
												col: 3
											}, {
												row: 2,
												col: 0
											}, {
												row: 2,
												col: 1
											}, {
												row: 2,
												col: 3
											}, {
												row: 2,
												col: 4
											}],
											a = _()(n).call(n, (function(t) {
												return e.grid.getObjectAt(t)
											})),
											s = [wc.I.Green, wc.I.Orange, wc.I.Cyan, wc.I.Violet];
										t.changeColorNeighbors(a, s[Phaser.Math.RND.between(0, s.length - 1)])
									},
									duration: 1e3
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.shooter.runFadeOutAnimation(), i.dynamicGuide.runFadeOutAllGuideObjects()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 800
								}
							}, i.tutorialType = "ColorBombTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Green
								}, {
									objectType: "ColorBomb"
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}]
							], this.bulletColors = [wc.I.Green, wc.I.Cyan, wc.I.Orange, wc.I.Violet];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(20);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4())
						}, t
					}(PL),
					YL = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-10);
										var t = 260 * Math.PI / 180,
											n = 328 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(60);
										var t = e.grid.getXYByRowCol({
												row: 2,
												col: 4
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 2,
												col: 4
											}), null == n || n.explode()
										}))
									},
									duration: 1e3
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 2,
												col: 1
											}, {
												row: 2,
												col: 2
											}, {
												row: 2,
												col: 3
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}));
										var n = [{
											row: 1,
											col: 0
										}, {
											row: 1,
											col: 1
										}, {
											row: 1,
											col: 2
										}, {
											row: 1,
											col: 3
										}];
										_()(n).call(n, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && (e.setMatchedColor(wc.I.Violet), e.explode())
										}))
									},
									duration: 800
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.shooter.runFadeOutAnimation(), i.dynamicGuide.runFadeOutAllGuideObjects()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 1e3
								}
							}, i.tutorialType = "TwoColorsBallTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{}, {
									objectType: "TwoColorsBall",
									color: wc.I.Green,
									subColor: wc.I.Orange
								}, {
									objectType: "TwoColorsBall",
									color: wc.I.Green,
									subColor: wc.I.Orange
								}, {
									objectType: "TwoColorsBall",
									color: wc.I.Green,
									subColor: wc.I.Orange
								}],
								[{
									objectType: "TwoColorsBall",
									color: wc.I.Green,
									subColor: wc.I.Violet
								}, {
									objectType: "TwoColorsBall",
									color: wc.I.Green,
									subColor: wc.I.Violet
								}, {
									objectType: "TwoColorsBall",
									color: wc.I.Blue,
									subColor: wc.I.Violet
								}, {
									objectType: "TwoColorsBall",
									color: wc.I.Blue,
									subColor: wc.I.Violet
								}],
								[{}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}]
							], this.bulletColors = [wc.I.Violet, wc.I.Green, wc.I.Orange, wc.I.Blue];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(-10);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4())
						}, t
					}(PL),
					WL = [
						[{
							row: 0,
							col: 1
						}, {
							row: 1,
							col: 0
						}, {
							row: 0,
							col: 4
						}],
						[{
							row: 0,
							col: 0
						}, {
							row: 1,
							col: 2
						}, {
							row: 2,
							col: 0
						}],
						[{
							row: 0,
							col: 3
						}, {
							row: 1,
							col: 1
						}, {
							row: 2,
							col: 2
						}],
						[{
							row: 1,
							col: 0
						}, {
							row: 2,
							col: 0
						}, {
							row: 2,
							col: 3
						}]
					],
					KL = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).randomIndex = void 0, i.step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-20);
										var t = 250 * Math.PI / 180,
											n = 301 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(31);
										var t = e.grid.getXYByRowCol({
												row: 3,
												col: 3
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 3,
												col: 3
											}), null == n || n.explode()
										}))
									},
									onComplete: function() {
										var e = i.dynamicGuide.tutorialHand;
										i.scene.add.tween({
											targets: [e],
											alpha: {
												from: 1,
												to: 0
											},
											delay: 300,
											duration: 300,
											onComplete: function() {
												e.hide()
											}
										})
									},
									duration: 700
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 2,
												col: 4
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(t) {
											if (t && (t.explode(), t instanceof sM)) {
												i.randomIndex = Phaser.Math.Between(0, 3);
												var n = [e.grid.getXYByRowCol(WL[i.randomIndex][0]), e.grid.getXYByRowCol(WL[i.randomIndex][1]), e.grid.getXYByRowCol(WL[i.randomIndex][2])];
												t.flyLavas(n)
											}
										}))
									},
									duration: 1400
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [WL[i.randomIndex][0], WL[i.randomIndex][1], WL[i.randomIndex][2]];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}))
									},
									duration: 500
								}
							}, i.step5 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.shooter.runFadeOutAnimation(), i.dynamicGuide.runFadeOutAllGuideObjects()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 1200,
									delay: 300
								}
							}, i.tutorialType = "LavaBallTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Blue
								}, {
									objectType: "ColorBall",
									color: wc.I.Blue
								}, {
									objectType: "ColorBall",
									color: wc.I.Blue
								}, {
									objectType: "ColorBall",
									color: wc.I.Blue
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Red
								}, {
									objectType: "ColorBall",
									color: wc.I.Red
								}, {
									objectType: "ColorBall",
									color: wc.I.Red
								}, {
									objectType: "ColorBall",
									color: wc.I.Red
								}, {
									objectType: "LavaBall"
								}]
							], this.bulletColors = [wc.I.Blue, wc.I.Blue, wc.I.Red, wc.I.Blue];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(20);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4()), this.addConfigToTimeline(this.step5())
						}, t
					}(PL),
					HL = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(20);
										var t = 290 * Math.PI / 180,
											n = 327 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = e.grid.getXYByRowCol({
												row: 2,
												col: 4
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 2,
												col: 4
											}), i.scene.time.delayedCall(20, (function() {
												var e = i.dynamicGuide.grid.getObjectAt({
													row: 2,
													col: 3
												});
												n && e && e.suckInObject(n)
											}))
										}))
									},
									duration: 1e3
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(57);
										var t = 327 * Math.PI / 180,
											n = 243 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = e.grid.getXYByRowCol({
												row: 3,
												col: 0
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											null == n || n.explode(), e.grid.jiggleNeighborsBall({
												row: 3,
												col: 0
											})
										}))
									},
									duration: 700
								}
							}, i.step5 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 0,
												col: 2
											}, {
												row: 1,
												col: 0
											}, {
												row: 1,
												col: 1
											}, {
												row: 1,
												col: 2
											}, {
												row: 1,
												col: 3
											}, {
												row: 2,
												col: 0
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										})), i.dynamicGuide.shooter.runFadeOutAnimation()
									},
									duration: 200
								}
							}, i.step6 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 2,
												col: 1
											}, {
												row: 2,
												col: 2
											}, {
												row: 2,
												col: 3
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.drop()
										}))
									},
									duration: 1200
								}
							}, i.step7 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.shooter.runFadeOutAnimation(), i.dynamicGuide.runFadeOutAllGuideObjects()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 1e3
								}
							}, i.tutorialType = "BlackHoleTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "BlackHole"
								}, {
									objectType: "BlackHole"
								}, {
									objectType: "BlackHole"
								}]
							], this.bulletColors = [wc.I.Cyan, wc.I.Orange, wc.I.Violet, wc.I.Violet];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(20);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4()), this.addConfigToTimeline(this.step5()), this.addConfigToTimeline(this.step6()), this.addConfigToTimeline(this.step7())
						}, t
					}(PL),
					zL = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e;
										null == (e = i.dynamicGuide.shooter.nextBullet) || e.kill();
										var t = i.dynamicGuide;
										t.setShotGuideTo(30);
										var n = 300 * Math.PI / 180,
											a = 260 * Math.PI / 180;
										t.runMovingShotGuideTween(300, 800, n, a)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-10);
										var t = e.grid.getXYByRowCol({
												row: 3,
												col: 1
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											null == n || n.stopAnimationIdle(), null == n || n.explode()
										}))
									},
									onComplete: function() {
										var e = i.dynamicGuide.tutorialHand;
										i.scene.add.tween({
											targets: [e],
											alpha: {
												from: 1,
												to: 0
											},
											duration: 300,
											onComplete: function() {
												e.hide()
											}
										})
									},
									duration: 700
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 2,
												col: 0
											}, {
												row: 2,
												col: 1
											}, {
												row: 2,
												col: 2
											}, {
												row: 2,
												col: 3
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode("Rainbow")
										}))
									},
									duration: 800
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.runFadeOutAllGuideObjects(), i.dynamicGuide.shooter.runFadeOutAnimation()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 1200
								}
							}, i.tutorialType = "RainbowBulletTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Green
								}, {
									objectType: "ColorBall",
									color: wc.I.Green
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}, {}]
							], this.bulletColors = [wc.I.Rainbow, wc.I.Orange, wc.I.Cyan];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(30);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4())
						}, t
					}(PL),
					XL = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(20);
										var t = 290 * Math.PI / 180,
											n = 253 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-17);
										var t = e.grid.getXYByRowCol({
												row: 2,
												col: 1
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 2,
												col: 1
											}), null == n || n.explode()
										}))
									},
									duration: 800
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 1,
												col: 0
											}, {
												row: 1,
												col: 1
											}, {
												row: 1,
												col: 2
											}, {
												row: 1,
												col: 3
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}))
									},
									duration: 500
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.animateSwapBullets()
									},
									duration: 900
								}
							}, i.step5 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-17);
										var t = 253 * Math.PI / 180,
											n = 289 * Math.PI / 180;
										e.shotGuide.updateObstaclesToRaycaster(), e.showShotGuide(wc.I.Red), e.runMovingShotGuideTween(300, 600, t, n)
									},
									delay: 100,
									duration: 800
								}
							}, i.step6 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(19);
										var t = e.grid.getXYByRowCol({
												row: 1,
												col: 3
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 1,
												col: 3
											}), null == n || n.explode()
										}))
									},
									duration: 800
								}
							}, i.step7 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 0,
												col: 0
											}, {
												row: 0,
												col: 1
											}, {
												row: 0,
												col: 2
											}, {
												row: 0,
												col: 3
											}, {
												row: 0,
												col: 4
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}))
									},
									duration: 800
								}
							}, i.step8 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.shooter.runFadeOutAnimation(), i.dynamicGuide.runFadeOutAllGuideObjects()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 1200
								}
							}, i.tutorialType = "ElectricBallTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Red
								}, {
									objectType: "ColorBall",
									color: wc.I.Red
								}, {
									objectType: "ColorBall",
									color: wc.I.Red
								}, {
									objectType: "ElectricBall"
								}, {
									objectType: "ColorBall",
									color: wc.I.Red
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Blue
								}, {
									objectType: "ElectricBall"
								}, {
									objectType: "ColorBall",
									color: wc.I.Blue
								}, {
									objectType: "ColorBall",
									color: wc.I.Blue
								}]
							], this.bulletColors = [wc.I.Blue, wc.I.Blue, wc.I.Red, wc.I.Blue];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(20);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4()), this.addConfigToTimeline(this.step5()), this.addConfigToTimeline(this.step6()), this.addConfigToTimeline(this.step7()), this.addConfigToTimeline(this.step8())
						}, t
					}(PL),
					VL = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-15);
										var t = 255 * Math.PI / 180,
											n = 208 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-62);
										var t = e.grid.getXYByRowCol({
												row: 3,
												col: 0
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											null == n || n.explode(), e.grid.jiggleNeighborsBall({
												row: 3,
												col: 0
											})
										}))
									},
									duration: 1100
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 0,
												col: 2
											}, {
												row: 0,
												col: 3
											}, {
												row: 0,
												col: 4
											}, {
												row: 1,
												col: 1
											}, {
												row: 2,
												col: 1
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}))
									},
									duration: 100
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.shooter.runFadeOutAnimation();
										var e = i.dynamicGuide,
											t = [{
												row: 1,
												col: 2
											}, {
												row: 1,
												col: 3
											}, {
												row: 2,
												col: 2
											}, {
												row: 2,
												col: 3
											}, {
												row: 2,
												col: 4
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.drop()
										}))
									},
									duration: 1300
								}
							}, i.step5 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.runFadeOutAllGuideObjects(), i.dynamicGuide.shooter.runFadeOutAnimation()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 1e3
								}
							}, i.tutorialType = "StoneTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Violet
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Red
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "Stone"
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Red
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "Stone"
								}, {
									objectType: "Stone"
								}, {
									objectType: "ColorBall",
									color: wc.I.Red
								}]
							], this.bulletColors = [wc.I.Yellow, wc.I.Violet, wc.I.Red];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(-15);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4()), this.addConfigToTimeline(this.step5())
						}, t
					}(PL),
					JL = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e;
										null == (e = i.dynamicGuide.shooter.nextBullet) || e.kill();
										var t = i.dynamicGuide;
										t.setShotGuideTo(30);
										var n = 295 * Math.PI / 180,
											a = 260 * Math.PI / 180;
										t.runMovingShotGuideTween(300, 800, n, a)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-10);
										var t = e.grid.getXYByRowCol({
												row: 3,
												col: 1
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 3,
												col: 1
											}), null == n || n.stopAnimationIdle(), null == n || n.explode()
										}))
									},
									onComplete: function() {
										var e = i.dynamicGuide.tutorialHand;
										i.scene.add.tween({
											targets: [e],
											alpha: {
												from: 1,
												to: 0
											},
											duration: 300,
											onComplete: function() {
												e.hide()
											}
										})
									},
									duration: 700
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 2,
												col: 0
											}, {
												row: 2,
												col: 1
											}, {
												row: 2,
												col: 2
											}, {
												row: 2,
												col: 3
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}))
									},
									duration: 800
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.shooter.runFadeOutAnimation(), i.dynamicGuide.runFadeOutAllGuideObjects()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 1200
								}
							}, i.tutorialType = "ElectricBulletTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Green
								}, {
									objectType: "ColorBall",
									color: wc.I.Green
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}, {}]
							], this.bulletColors = [wc.I.Electric, wc.I.Red];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(30);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4())
						}, t
					}(PL),
					qL = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(20);
										var t = 290 * Math.PI / 180,
											n = 269.999 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-.001);
										var t = e.grid.getXYByRowCol({
												row: 2,
												col: 2
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											null == n || n.explode(), e.grid.jiggleNeighborsBall({
												row: 2,
												col: 2
											})
										}))
									},
									duration: 700
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 1,
												col: 1
											}, {
												row: 1,
												col: 2
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}))
									},
									duration: 500
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-19);
										var t = 251 * Math.PI / 180,
											n = 277 * Math.PI / 180;
										e.shotGuide.updateObstaclesToRaycaster(), e.runMovingShotGuideTween(300, 600, t, n)
									},
									delay: 100,
									duration: 800
								}
							}, i.step5 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(19);
										var t = e.grid.getXYByRowCol({
												row: 1,
												col: 2
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot({
											x: t.x,
											y: t.y
										}, 300, (function() {
											null == n || n.explode(), e.grid.jiggleNeighborsBall({
												row: 1,
												col: 2
											})
										}))
									},
									duration: 800
								}
							}, i.step6 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 0,
												col: 2
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}))
									},
									duration: 800
								}
							}, i.step7 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.runFadeOutAllGuideObjects(), i.dynamicGuide.shooter.runFadeOutAnimation()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 1200
								}
							}, i.tutorialType = "EarthenPotTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Red
								}, {
									objectType: "ColorBall",
									color: wc.I.Red
								}, {
									objectType: "EarthenPot"
								}, {
									objectType: "ColorBall",
									color: wc.I.Red
								}, {
									objectType: "ColorBall",
									color: wc.I.Red
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Blue
								}, {
									objectType: "EarthenPot"
								}, {
									objectType: "EarthenPot"
								}, {
									objectType: "ColorBall",
									color: wc.I.Blue
								}]
							], this.bulletColors = [wc.I.Blue, wc.I.Blue, wc.I.Red, wc.I.Blue];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(20);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4()), this.addConfigToTimeline(this.step5()), this.addConfigToTimeline(this.step6()), this.addConfigToTimeline(this.step7())
						}, t
					}(PL),
					QL = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(20);
										var t = 290 * Math.PI / 180,
											n = 268 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = e.grid.getXYByRowCol({
												row: 2,
												col: 2
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											null == n || n.explode(), e.grid.jiggleNeighborsBall({
												row: 2,
												col: 2
											})
										}))
									},
									duration: 700
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 2,
												col: 0
											}, {
												row: 2,
												col: 1
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}));
										var n = [{
											row: 1,
											col: 0
										}, {
											row: 1,
											col: 1
										}, {
											row: 1,
											col: 2
										}];
										_()(n).call(n, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e instanceof CM && e.copyColor(wc.I.Cyan)
										}))
									},
									duration: 500
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.shotGuide.updateObstaclesToRaycaster(), e.setShotGuideTo(-2);
										var t = 268 * Math.PI / 180,
											n = 255 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step5 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = e.grid.getXYByRowCol({
												row: 2,
												col: 1
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											null == n || n.explode(), e.grid.jiggleNeighborsBall({
												row: 2,
												col: 1
											})
										}))
									},
									duration: 700
								}
							}, i.step6 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 1,
												col: 0
											}, {
												row: 1,
												col: 1
											}, {
												row: 1,
												col: 2
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}));
										var n = [{
											row: 0,
											col: 0
										}, {
											row: 0,
											col: 1
										}, {
											row: 0,
											col: 2
										}, {
											row: 0,
											col: 3
										}, {
											row: 1,
											col: 3
										}];
										_()(n).call(n, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e instanceof CM && e.copyColor(wc.I.Cyan)
										}))
									},
									duration: 700
								}
							}, i.step7 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.runFadeOutAllGuideObjects(), i.dynamicGuide.shooter.runFadeOutAnimation()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 1e3
								}
							}, i.tutorialType = "WhiteBallTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "WhiteBall"
								}, {
									objectType: "WhiteBall"
								}, {
									objectType: "WhiteBall"
								}, {
									objectType: "WhiteBall"
								}, {
									objectType: "WhiteBall"
								}],
								[{
									objectType: "WhiteBall"
								}, {
									objectType: "WhiteBall"
								}, {
									objectType: "WhiteBall"
								}, {
									objectType: "WhiteBall"
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}]
							], this.bulletColors = [wc.I.Cyan, wc.I.Cyan, wc.I.Cyan, wc.I.Cyan];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(20);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4()), this.addConfigToTimeline(this.step5()), this.addConfigToTimeline(this.step6()), this.addConfigToTimeline(this.step7())
						}, t
					}(PL),
					$L = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(20);
										var t = 290 * Math.PI / 180,
											n = 254 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-16);
										var t = e.grid.getXYByRowCol({
												row: 2,
												col: 1
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 2,
												col: 1
											}), null == n || n.explode()
										}))
									},
									duration: 700
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 1,
												col: 0
											}, {
												row: 1,
												col: 1
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e instanceof GR && e.lowerHealth()
										}))
									},
									duration: 500
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-19);
										var t = 251 * Math.PI / 180,
											n = 255 * Math.PI / 180;
										e.shotGuide.updateObstaclesToRaycaster(), e.runMovingShotGuideTween(300, 600, t, n)
									},
									delay: 100,
									duration: 800
								}
							}, i.step5 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-15);
										var t = e.grid.getXYByRowCol({
												row: 2,
												col: 1
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 2,
												col: 1
											}), null == n || n.explode()
										}))
									},
									duration: 800
								}
							}, i.step6 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 1,
												col: 0
											}, {
												row: 1,
												col: 1
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}))
									},
									duration: 800
								}
							}, i.step7 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.runFadeOutAllGuideObjects(), i.dynamicGuide.shooter.runFadeOutAnimation()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 1200
								}
							}, i.tutorialType = "MummyTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Red
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "Mummy"
								}, {
									objectType: "ColorBall",
									color: wc.I.Red
								}],
								[{
									objectType: "Mummy"
								}, {
									objectType: "Mummy"
								}, {
									objectType: "Mummy"
								}, {
									objectType: "ColorBall",
									color: wc.I.Blue
								}]
							], this.bulletColors = [wc.I.Blue, wc.I.Blue, wc.I.Red, wc.I.Blue];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(20);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4()), this.addConfigToTimeline(this.step5()), this.addConfigToTimeline(this.step6()), this.addConfigToTimeline(this.step7())
						}, t
					}(PL),
					eG = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 2,
												col: 1
											}, {
												row: 2,
												col: 2
											}, {
												row: 2,
												col: 3
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.setStatus(1, 420)
										})), e.setShotGuideTo(20);
										var n = 290 * Math.PI / 180,
											a = 327 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, n, a)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								var e = i.dynamicGuide;
								return {
									onStart: function() {
										var t = e.grid.getXYByRowCol({
												row: 2,
												col: 4
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 2,
												col: 4
											}), i.scene.time.delayedCall(20, (function() {
												var e = i.dynamicGuide.grid.getObjectAt({
													row: 2,
													col: 3
												});
												n && e && e.suckInObject(n)
											}))
										}))
									},
									onComplete: function() {
										var t = [{
											row: 2,
											col: 1
										}, {
											row: 2,
											col: 2
										}, {
											row: 2,
											col: 3
										}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.runChangeStatusAnimation(0)
										}))
									},
									completeDelay: 1e3,
									duration: 700
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(57);
										var t = 327 * Math.PI / 180,
											n = 279 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step4 = function() {
								var e = i.dynamicGuide;
								return {
									onStart: function() {
										e.setShotGuideTo(9);
										var t = e.grid.getXYByRowCol({
												row: 3,
												col: 2
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 3,
												col: 2
											}), e.grid.attachObject(n, 3, 2)
										}))
									},
									onComplete: function() {
										var t = [{
											row: 2,
											col: 1
										}, {
											row: 2,
											col: 2
										}, {
											row: 2,
											col: 3
										}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.runChangeStatusAnimation(1)
										}))
									},
									completeDelay: 300,
									duration: 700
								}
							}, i.step5 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.grid.getFlatGrid().forEach((function(e) {
											e.active && e.calculateGeom()
										})), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster();
										var e = i.dynamicGuide;
										e.setShotGuideTo(9);
										var t = 279 * Math.PI / 180,
											n = 241 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step6 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = e.grid.getXYByRowCol({
												row: 3,
												col: 0
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 3,
												col: 0
											}), null == n || n.explode()
										}))
									},
									duration: 700
								}
							}, i.step7 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 0,
												col: 2
											}, {
												row: 1,
												col: 0
											}, {
												row: 1,
												col: 1
											}, {
												row: 1,
												col: 2
											}, {
												row: 1,
												col: 3
											}, {
												row: 2,
												col: 0
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}))
									},
									duration: 500
								}
							}, i.step8 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 2,
												col: 1
											}, {
												row: 2,
												col: 2
											}, {
												row: 2,
												col: 3
											}, {
												row: 3,
												col: 2
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.drop()
										}))
									},
									onComplete: function() {
										i.dynamicGuide.grid.removeObjectAt({
											row: 3,
											col: 2
										})
									},
									duration: 1e3
								}
							}, i.step9 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.shooter.runFadeOutAnimation(), i.dynamicGuide.runFadeOutAllGuideObjects()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.grid.getFlatGrid().forEach((function(e) {
											e.active && e.calculateGeom()
										})), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 1200
								}
							}, i.tutorialType = "SwitchBlackHoleTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "SwitchBlackHole"
								}, {
									objectType: "SwitchBlackHole"
								}, {
									objectType: "SwitchBlackHole"
								}]
							], this.bulletColors = [wc.I.Cyan, wc.I.Violet, wc.I.Orange, wc.I.Violet];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(20);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4()), this.addConfigToTimeline(this.step5()), this.addConfigToTimeline(this.step6()), this.addConfigToTimeline(this.step7()), this.addConfigToTimeline(this.step8()), this.addConfigToTimeline(this.step9())
						}, t
					}(PL),
					tG = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = e.grid.getObjectAt({
												row: 2,
												col: 0
											}),
											n = e.grid.getObjectAt({
												row: 2,
												col: 2
											}),
											a = e.grid.getObjectAt({
												row: 2,
												col: 4
											});
										null == t || t.setStatus(4), null == n || n.setStatus(2), null == a || a.setStatus(3), e.setShotGuideTo(20);
										var s = 290 * Math.PI / 180,
											o = 241 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, s, o)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-29);
										var t = e.grid.getXYByRowCol({
												row: 3,
												col: 0
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 3,
												col: 0
											}), null == n || n.explode()
										}))
									},
									duration: 700
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 0,
												col: 1
											}, {
												row: 1,
												col: 0
											}],
											n = e.grid.getObjectAt({
												row: 2,
												col: 0
											});
										n && (n.setExplodeWidth(84), n.explode()), _()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}))
									},
									duration: 500
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = e.grid.getObjectAt({
												row: 2,
												col: 2
											}),
											n = e.grid.getObjectAt({
												row: 2,
												col: 4
											});
										null == t || t.runArrowRotation(Math.PI / 3), null == n || n.runArrowRotation(0)
									},
									duration: 300
								}
							}, i.step5 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-29);
										var t = 241 * Math.PI / 180,
											n = 301 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step6 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(31);
										var t = e.grid.getXYByRowCol({
												row: 3,
												col: 3
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 3,
												col: 3
											}), null == n || n.explode()
										}))
									},
									duration: 700
								}
							}, i.step7 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 1,
												col: 1
											}, {
												row: 2,
												col: 1
											}, {
												row: 2,
												col: 3
											}],
											n = e.grid.getObjectAt({
												row: 2,
												col: 2
											});
										n && (n.setExplodeWidth(84), n.explode());
										var a = e.grid.getObjectAt({
											row: 2,
											col: 4
										});
										a && (a.setExplodeWidth(184), a.explode()), _()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}))
									},
									duration: 500
								}
							}, i.step8 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.shooter.runFadeOutAnimation(), i.dynamicGuide.runFadeOutAllGuideObjects()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 1200
								}
							}, i.tutorialType = "RandomDirectionElectricBallTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}],
								[{
									objectType: "RandomDirectionElectricBall",
									status: 4
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "RandomDirectionElectricBall",
									status: 2
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "RandomDirectionElectricBall",
									status: 3
								}]
							], this.bulletColors = [wc.I.Blue, wc.I.Blue, wc.I.Red, wc.I.Blue];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(20);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4()), this.addConfigToTimeline(this.step5()), this.addConfigToTimeline(this.step6()), this.addConfigToTimeline(this.step7()), this.addConfigToTimeline(this.step8())
						}, t
					}(PL),
					iG = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(20);
										var t = 290 * Math.PI / 180,
											n = 214 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = e.grid.getXYByRowCol({
												row: 2,
												col: 0
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											null == n || n.explode(), e.grid.jiggleNeighborsBall({
												row: 2,
												col: 0
											})
										}))
									},
									duration: 950
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 1,
												col: 0
											}, {
												row: 1,
												col: 1
											}, {
												row: 1,
												col: 2
											}, {
												row: 1,
												col: 3
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}))
									},
									duration: 550
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 2,
												col: 1
											}, {
												row: 2,
												col: 2
											}, {
												row: 2,
												col: 3
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.drop()
										}))
									},
									duration: 0
								}
							}, i.step5 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 3,
												col: 1
											}, {
												row: 3,
												col: 2
											}],
											n = _()(t).call(t, (function(t) {
												return e.grid.getObjectAt(t)
											})),
											a = [{
												row: 0,
												col: 0
											}, {
												row: 0,
												col: 4
											}],
											s = _()(a).call(a, (function(t) {
												return e.grid.getXYByRowCol(t)
											}));
										n.forEach((function(e, t) {
											var i = e.getSubObject("Bat");
											null == i || i.flyUp(s[t])
										}))
									},
									duration: 1200
								}
							}, i.step6 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.grid.getFlatGrid().forEach((function(e) {
											e.active && e.calculateGeom()
										})), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster();
										var e = i.dynamicGuide;
										e.setShotGuideTo(-56);
										var t = 214 * Math.PI / 180,
											n = 277 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step7 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = e.grid.getXYByRowCol({
												row: 1,
												col: 2
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											null == n || n.explode(), e.grid.jiggleNeighborsBall({
												row: 1,
												col: 2
											})
										}))
									},
									duration: 800
								}
							}, i.step8 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 0,
												col: 1
											}, {
												row: 0,
												col: 2
											}, {
												row: 0,
												col: 3
											}, {
												row: 3,
												col: 1
											}, {
												row: 3,
												col: 2
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											if (e) {
												e.explode();
												var t = e.getSubObject("Bat");
												null == t || t.preKill()
											}
										}))
									},
									duration: 550
								}
							}, i.step9 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.runFadeOutAllGuideObjects(), i.dynamicGuide.shooter.runFadeOutAnimation()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.grid.getFlatGrid().forEach((function(e) {
											e.active && e.calculateGeom()
										})), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 800
								}
							}, i.tutorialType = "BatTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{}, {
									objectType: "ColorBall",
									color: wc.I.Red
								}, {
									objectType: "ColorBall",
									color: wc.I.Red
								}, {
									objectType: "ColorBall",
									color: wc.I.Red
								}, {}],
								[{
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}],
								[{}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}],
								[{}, {
									objectType: "ColorBall",
									color: wc.I.Red,
									subObjects: [{
										type: "Bat"
									}]
								}, {
									objectType: "ColorBall",
									color: wc.I.Red,
									subObjects: [{
										type: "Bat"
									}]
								}]
							], this.bulletColors = [wc.I.Yellow, wc.I.Red, wc.I.Red, wc.I.Red];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(20);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4()), this.addConfigToTimeline(this.step5()), this.addConfigToTimeline(this.step6()), this.addConfigToTimeline(this.step7()), this.addConfigToTimeline(this.step8()), this.addConfigToTimeline(this.step9())
						}, t
					}(PL),
					nG = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(20);
										var t = 290 * Math.PI / 180,
											n = 258 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = e.grid.getXYByRowCol({
												row: 3,
												col: 1
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											null == n || n.explode(), e.grid.jiggleNeighborsBall({
												row: 3,
												col: 1
											})
										}))
									},
									duration: 600
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 2,
												col: 0
											}, {
												row: 2,
												col: 1
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											e && e.explode()
										}))
									},
									duration: 200
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 1,
												col: 0
											}, {
												row: 1,
												col: 1
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											if (e) {
												var t = e.getSubObject("Leaves");
												null == t || t.explode()
											}
										}))
									},
									duration: 300
								}
							}, i.step5 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-10);
										var t = 260 * Math.PI / 180,
											n = 285 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step6 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = e.grid.getXYByRowCol({
												row: 2,
												col: 3
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 2,
												col: 3
											}), i.scene.time.delayedCall(1200, (function() {
												null == n || n.runFadeOutAnimation()
											}))
										}))
									},
									duration: 800
								}
							}, i.step7 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 1,
												col: 2
											}, {
												row: 1,
												col: 3
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											if (e) {
												var t = e.getSubObject("Leaves");
												null == t || t.explode()
											}
										}))
									},
									duration: 1100
								}
							}, i.step8 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.shooter.runFadeOutAnimation(), i.dynamicGuide.runFadeOutAllGuideObjects()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 1200
								}
							}, i.tutorialType = "LeavesTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Cyan,
									subObjects: [{
										type: "Leaves"
									}]
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange,
									subObjects: [{
										type: "Leaves"
									}]
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan,
									subObjects: [{
										type: "Leaves"
									}]
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange,
									subObjects: [{
										type: "Leaves"
									}]
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan,
									subObjects: [{
										type: "Leaves"
									}]
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Orange,
									subObjects: [{
										type: "Leaves"
									}]
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan,
									subObjects: [{
										type: "Leaves"
									}]
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange,
									subObjects: [{
										type: "Leaves"
									}]
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan,
									subObjects: [{
										type: "Leaves"
									}]
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Yellow
								}, {
									objectType: "ColorBall",
									color: wc.I.Yellow
								}]
							], this.bulletColors = [wc.I.Yellow, wc.I.Green, wc.I.Orange, wc.I.Cyan];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(30);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4()), this.addConfigToTimeline(this.step5()), this.addConfigToTimeline(this.step6()), this.addConfigToTimeline(this.step7()), this.addConfigToTimeline(this.step8())
						}, t
					}(PL),
					aG = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(20);
										var t = 290 * Math.PI / 180,
											n = 250 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-20);
										var t = e.grid.getXYByRowCol({
												row: 3,
												col: 1
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 3,
												col: 1
											}), null == n || n.explode()
										}))
									},
									duration: 600
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 2,
												col: 1
											}, {
												row: 2,
												col: 2
											}, {
												row: 2,
												col: 3
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											if (e) {
												e.explode();
												var t = e.getSubObject("IronShell");
												null == t || t.preKill()
											}
										}))
									},
									duration: 500
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 1,
												col: 0
											}, {
												row: 1,
												col: 1
											}, {
												row: 1,
												col: 2
											}, {
												row: 1,
												col: 3
											}, {
												row: 2,
												col: 0
											}, {
												row: 2,
												col: 4
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											if (e) {
												var t = e.getSubObject("IronShell");
												null == t || t.play()
											}
										}))
									},
									duration: 100
								}
							}, i.step5 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-20);
										var t = 250 * Math.PI / 180,
											n = 338 * Math.PI / 180;
										e.shotGuide.updateObstaclesToRaycaster(), e.runMovingShotGuideTween(300, 100, t, n)
									},
									duration: 500
								}
							}, i.step6 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(68);
										var t = e.grid.getXYByRowCol({
												row: 2,
												col: 1
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 2,
												col: 1
											}), null == n || n.explode()
										}))
									},
									duration: 1250
								}
							}, i.step7 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 0,
												col: 2
											}, {
												row: 1,
												col: 1
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											if (e) {
												e.explode();
												var t = e.getSubObject("IronShell");
												null == t || t.preKill()
											}
										}))
									},
									duration: 800
								}
							}, i.step8 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 1,
												col: 0
											}, {
												row: 1,
												col: 2
											}, {
												row: 1,
												col: 3
											}, {
												row: 2,
												col: 0
											}, {
												row: 2,
												col: 4
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											if (e) {
												var t = e.getSubObject("IronShell");
												null == t || t.play()
											}
										}))
									},
									duration: 800
								}
							}, i.step9 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.runFadeOutAllGuideObjects(), i.dynamicGuide.shooter.runFadeOutAnimation()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 1e3
								}
							}, i.tutorialType = "IronShellTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Orange,
									subObjects: [{
										type: "IronShell",
										status: 0
									}]
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan,
									subObjects: [{
										type: "IronShell",
										status: 0
									}]
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange,
									subObjects: [{
										type: "IronShell",
										status: 0
									}]
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan,
									subObjects: [{
										type: "IronShell",
										status: 0
									}]
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Orange,
									subObjects: [{
										type: "IronShell",
										status: 1
									}]
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet,
									subObjects: [{
										type: "IronShell",
										status: 1
									}]
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet,
									subObjects: [{
										type: "IronShell",
										status: 1
									}]
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet,
									subObjects: [{
										type: "IronShell",
										status: 1
									}]
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan,
									subObjects: [{
										type: "IronShell",
										status: 0
									}]
								}]
							], this.bulletColors = [wc.I.Violet, wc.I.Cyan, wc.I.Cyan, wc.I.Orange];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(30);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4()), this.addConfigToTimeline(this.step5()), this.addConfigToTimeline(this.step6()), this.addConfigToTimeline(this.step7()), this.addConfigToTimeline(this.step8()), this.addConfigToTimeline(this.step9())
						}, t
					}(PL),
					sG = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(20);
										var t = 290 * Math.PI / 180,
											n = 260 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-16);
										var t = e.grid.getXYByRowCol({
												row: 3,
												col: 1
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											e.grid.jiggleNeighborsBall({
												row: 3,
												col: 1
											}), null == n || n.explode()
										}))
									},
									duration: 600
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 2,
												col: 1
											}, {
												row: 2,
												col: 2
											}];
										_()(t).call(t, (function(t) {
											return e.grid.getObjectAt(t)
										})).forEach((function(e) {
											if (e) {
												var t = e.getSubObject("SpiderWeb");
												null == t || t.explode()
											}
										}))
									},
									duration: 800
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.shooter.runFadeOutAnimation(), i.dynamicGuide.runFadeOutAllGuideObjects()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 700
								}
							}, i.tutorialType = "SpiderWebTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Violet
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}],
								[{}, {
									objectType: "ColorBall",
									color: wc.I.Green,
									subObjects: [{
										type: "SpiderWeb"
									}]
								}, {
									objectType: "ColorBall",
									color: wc.I.Green,
									subObjects: [{
										type: "SpiderWeb"
									}]
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}]
							], this.bulletColors = [wc.I.Green, wc.I.Yellow, wc.I.Violet, wc.I.Yellow];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(30);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4())
						}, t
					}(PL),
					oG = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).step1 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-20);
										var t = 250 * Math.PI / 180,
											n = 285 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step2 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(15);
										var t = e.grid.getXYByRowCol({
												row: 2,
												col: 3
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											if (n) {
												n.calculateGeom();
												var t = n.getGeom();
												e.shotGuide.addObstacleToRaycaster(n, t), i.scene.time.delayedCall(3500, (function() {
													n.runFadeOutAnimation()
												}))
											}
											e.grid.jiggleNeighborsBall({
												row: 2,
												col: 3
											})
										}))
									},
									duration: 800
								}
							}, i.step3 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = e.grid.getObjectAt({
												row: 1,
												col: 2
											}),
											n = e.grid.getObjectAt({
												row: 2,
												col: 2
											});
										if (n) {
											var a = n.getSubObject("Ladybird");
											a && a instanceof oR && a.fly(t)
										}
									},
									duration: 200
								}
							}, i.step4 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(15);
										var t = 285 * Math.PI / 180,
											n = 203 * Math.PI / 180;
										e.runMovingShotGuideTween(300, 800, t, n)
									},
									duration: 1100
								}
							}, i.step5 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide;
										e.setShotGuideTo(-67);
										var t = e.grid.getXYByRowCol({
												row: 3,
												col: 1
											}),
											n = i.dynamicGuide.shooter.currentBullet;
										e.shooter.shoot(t, 300, (function() {
											null == n || n.explode(), e.grid.jiggleNeighborsBall({
												row: 3,
												col: 1
											})
										}))
									},
									duration: 1150
								}
							}, i.step6 = function() {
								return {
									onStart: function() {
										var e = i.dynamicGuide,
											t = [{
												row: 0,
												col: 3
											}, {
												row: 1,
												col: 2
											}, {
												row: 2,
												col: 2
											}],
											n = _()(t).call(t, (function(t) {
												return e.grid.getObjectAt(t)
											}));
										n.forEach((function(e) {
											if (e) {
												var t = e.subObjects;
												null == t || t.forEach((function(e) {
													e instanceof oR ? i.scene.time.delayedCall(300, (function() {
														i.scene && (null == e || e.preKill())
													})) : null == e || e.explode()
												}))
											}
										})), i.scene.time.delayedCall(300, (function() {
											n.forEach((function(e) {
												e.explode()
											}))
										}))
									},
									duration: 1e3
								}
							}, i.step7 = function() {
								return {
									onStart: function() {
										i.dynamicGuide.shooter.runFadeOutAnimation(), i.dynamicGuide.runFadeOutAllGuideObjects()
									},
									onComplete: function() {
										i.dynamicGuide.grid.showAllGuideGrid(), i.dynamicGuide.grid.hideAllGuideGrid(!1), i.dynamicGuide.runFadeInAllGuideObjects(), i.dynamicGuide.shotGuide.updateObstaclesToRaycaster(), i.dynamicGuide.shooter.runFadeInAnimation(), i.run()
									},
									duration: 1200
								}
							}, i.tutorialType = "LadyBirdTutorial", i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.init = function() {
							e.prototype.init.call(this), this.dataGrid = [
								[{
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}],
								[{
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange
								}, {
									objectType: "ColorBall",
									color: wc.I.Cyan
								}],
								[{}, {
									objectType: "ColorBall",
									color: wc.I.Green
								}, {
									objectType: "ColorBall",
									color: wc.I.Orange,
									subObjects: [{
										type: "Ladybird"
									}]
								}]
							], this.bulletColors = [wc.I.Green, wc.I.Orange, wc.I.Cyan, wc.I.Cyan];
							var t = this.dynamicGuide.tutorialHand;
							this.dynamicGuide.setShotGuideTo(-20);
							var i = this.dynamicGuide.shotGuideDirect,
								n = 4 * this.dynamicGuide.guideSpace,
								a = this.dynamicGuide.shooter.shootingPosition;
							t.setPosition(a.x + i.x * n, a.y + i.y * n), t.setAlpha(0), t.show()
						}, i.createTimeline = function() {
							e.prototype.createTimeline.call(this), this.addConfigToTimeline(this.step1()), this.addConfigToTimeline(this.step2()), this.addConfigToTimeline(this.step3()), this.addConfigToTimeline(this.step4()), this.addConfigToTimeline(this.step5()), this.addConfigToTimeline(this.step6()), this.addConfigToTimeline(this.step7())
						}, t
					}(PL),
					rG = aa.Z.THEME,
					lG = rG.KEY,
					cG = rG.FRAME,
					hG = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).grid = void 0, i.shooter = void 0, i.tutorialHand = void 0, i.tutorial = void 0, i.shotGuideDirect = void 0, i.guideSpace = void 0, i.effectShotGuideTween = void 0, i.background = void 0, i.zone = void 0, i.shotGuide = void 0, i.animateSwapBullets = function() {
								var e = i.shooter.tutorialHand;
								e.setPosition(i.shooter.x, i.shooter.y), e.tap(300, !0, i.shooter.swapBullets)
							}, i.runMovingShotGuideTween = function(e, t, n, a) {
								var s = i.shooter,
									o = s.currentBullet,
									r = s.shootingPosition;
								if (o) {
									var l = o.getColor(),
										c = i.shotGuideDirect,
										h = 4 * i.guideSpace,
										u = r.x,
										d = r.y;
									i.tutorialHand.show(), i.tutorialHand.setPosition(u + c.x * h, d + c.y * h), i.tutorialHand.tapAndHold(t - 200), i.scene.tweens.addCounter({
										from: n,
										to: a,
										ease: Phaser.Math.Easing.Sine.InOut,
										duration: e,
										onUpdate: function(e) {
											c.setAngle(e.getValue()), i.tutorialHand.setPosition(u + c.x * h, d + c.y * h), i.showShotGuide(l)
										},
										delay: t
									})
								}
							}, i.configGuide(), i.createBackground(), i.createZone(), i.setSize(i.background.width, i.background.height), i.grid = new uL(i.scene, (0, Un.Z)(i)), i.createTutorialHand(), i.createShotGuide(), i.createShooter(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.configGuide = function() {
							this.shotGuideDirect = new Phaser.Math.Vector2(0, -1), this.shotGuideDirect.setAngle(290 * Math.PI / 180), this.guideSpace = 18
						}, i.createTutorialHand = function() {
							this.tutorialHand = new fP(this.scene), this.tutorialHand.setDepth(jn.Z.TUTORIAL_HAND), this.add(this.tutorialHand)
						}, i.createShooter = function() {
							this.shooter = new IL(this, 0, this.height - 60), this.add(this.shooter), this.shooter.setTutorialHand(this.tutorialHand), this.shooter.setShotGuide(this.shotGuide)
						}, i.createShotGuide = function() {
							this.shotGuide = new LL(this), this.shotGuide.setZone(this.zone), this.shotGuide.setBallGrid(this.grid)
						}, i.createBackground = function() {
							this.background = this.scene.make.image({
								key: lG,
								frame: cG.SETTING_BOX
							}), this.background.setWorldSize(243.5, 275), this.background.setPosition(0, 137.5), this.add(this.background)
						}, i.createZone = function() {
							this.zone = this.scene.add.zone(0, this.background.height / 2, this.background.width - 20, this.background.height - 10), this.add(this.zone)
						}, i.setShotGuideTo = function(e) {
							this.shotGuideDirect.setAngle((270 + e) * Math.PI / 180)
						}, i.init = function(e) {
							var t = this.createNewTutorial(e);
							this.tutorial = t, this.shooter.clear(), this.grid.clearGrid(), "PlusMinusBallTutorial" === e ? this.shooter.showRemainingBulletText() : this.shooter.hideRemainingBulletText(), this.shooter.initBullets(t.bulletColors), this.grid.generateGridFromData(t.dataGrid, []), this.grid.hideAllGuideGrid(!1), this.tutorialHand.unHold(0, !0), this.shotGuide.updateObstaclesToRaycaster(), this.hideShotGuide(), this.sortChildren()
						}, i.createNewTutorial = function(e) {
							switch (e) {
								case "EmptyBallTutorial":
									return new GL(this);
								case "MummyTutorial":
									return new $L(this);
								case "SpiderTutorial":
									return new UL(this);
								case "LadyBirdTutorial":
									return new oG(this);
								case "QuestionMarkBallTutorial":
									return new NL(this);
								case "PlusMinusBallTutorial":
									return new ZL(this);
								case "BatTutorial":
									return new iG(this);
								case "LeavesTutorial":
									return new nG(this);
								case "IronShellTutorial":
									return new aG(this);
								case "SpiderWebTutorial":
									return new sG(this);
								case "ColorBombTutorial":
									return new jL(this);
								case "TwoColorsBallTutorial":
									return new YL(this);
								case "LavaBallTutorial":
									return new KL(this);
								case "BlackHoleTutorial":
									return new HL(this);
								case "ElectricBallTutorial":
									return new XL(this);
								case "StoneTutorial":
									return new VL(this);
								case "EarthenPotTutorial":
									return new qL(this);
								case "WhiteBallTutorial":
									return new QL(this);
								case "BombDrugTutorial":
									return new FL(this);
								case "HexagonWireTutorial":
									return new DL(this);
								case "SwitchBlackHoleTutorial":
									return new eG(this);
								case "RandomDirectionElectricBallTutorial":
									return new tG(this);
								default:
									return new xL(this);
								case "RainbowBulletTutorial":
									return new zL(this);
								case "ElectricBulletTutorial":
									return new JL(this);
								case "ThunderBallTutorial":
									return new OL(this)
							}
						}, i.runEntrancesAnimation = function(e) {
							var t = this;
							this.scene.time.delayedCall(e, (function() {
								var e;
								t.shooter.runFadeInAnimation(), t.runFadeInAllGuideObjects(), null == (e = t.tutorial) || e.run()
							}))
						}, i.runFadeInAllGuideObjects = function() {
							var e = this.grid.getGrid(),
								t = 0;
							e.forEach((function(e) {
								e.forEach((function(e) {
									e && (e.getUI().forEach((function(e) {
										return e.setAlpha(0)
									})), e.runFadeInAnimation(400, t))
								})), t += 200
							}))
						}, i.close = function() {
							var e;
							this.shooter.clear(), this.grid.clearGrid(), null == (e = this.tutorial) || e.complete(), this.tutorial = void 0
						}, i.showShotGuide = function(e) {
							var t = this.shooter.shootingPosition,
								i = this.getWorldPosition(),
								n = i.x,
								a = i.y;
							this.shotGuide.showFrom(n + t.x, a + t.y, this.shotGuideDirect, e)
						}, i.hideShotGuide = function() {
							this.shotGuide.hide()
						}, i.sortChildren = function() {
							var e;
							ji()(e = this.list).call(e, (function(e, t) {
								return e.depth - t.depth
							}))
						}, i.runFadeOutAllGuideObjects = function() {
							this.grid.getFlatGrid().forEach((function(e) {
								e && e.runFadeOutAnimation(400, 0)
							}))
						}, t
					}(Phaser.GameObjects.Container),
					uG = function(e) {
						function t(t, i, n, a) {
							var s;
							return (s = e.call(this, t, i, n, a) || this).popup = void 0, s.understoodButton = void 0, s.tutorialText = void 0, s.popupShowUpAnimation = void 0, s.popupFadeOutAnimation = void 0, s.dynamicGuide = void 0, s.open = function(t) {
								s.prepareOpenScreen(t), e.prototype.open.call((0, Un.Z)(s)), s.runOpenAnimation()
							}, s.closePopup = function() {
								s.scene.audio.playSound(sa.Z.POPUP_OUT, {
									volume: .6
								}), s.runCloseAnimation(), s.popupFadeOutAnimation.next((function() {
									s.dynamicGuide.close(), s.scene.screen.close(s.name), s.scene.events.emit(fm.s.CLOSE_DYNAMIC_GUIDE)
								}))
							}, s.createPopup(), s.createPopupContent(), s.createUnderstoodButton(), s.setDepth(Wn.Ks.POPUP), s.setY(-50), s.background.setAlpha(.5), s
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.prepareOpenScreen = function(e) {
							if (this.dynamicGuide.init("ColorBallTutorial"), e) {
								var t = qk[e.key],
									i = this.scene.lang.getText(e.message);
								this.tutorialText.setText(i), t && (this.popup.setScale(1), this.dynamicGuide.init(t))
							}
						}, i.createPopup = function() {
							this.popup = new jr(this.scene, 0, 0, 300, 400), this.add(this.popup), Phaser.Display.Align.In.Center(this.popup, this.zone)
						}, i.createPopupContent = function() {
							this.createTutorialText(), this.dynamicGuide = new hG(this.scene), this.popup.add(this.dynamicGuide), Phaser.Display.Align.In.Center(this.dynamicGuide, this.popup, 0, -this.dynamicGuide.height / 2)
						}, i.createTutorialText = function() {
							this.tutorialText = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(16),
								text: "HIT THE SAME COLOR BALL\nTO MAKE IT EXPLODE",
								origin: {
									x: .5,
									y: .5
								}
							});
							var e = this.scene.lang.getCurrentLanguage(),
								t = ["ja"];
							ue()(t).call(t, e) ? Phaser.Display.Align.In.TopCenter(this.tutorialText, this.popup, 0, -12) : Phaser.Display.Align.In.TopCenter(this.tutorialText, this.popup, 0, -20), this.popup.add(this.tutorialText)
						}, i.createUnderstoodButton = function() {
							var e = aa.Z.DEFAULT,
								t = e.KEY,
								i = e.FRAME;
							this.understoodButton = new ea.Z(this.scene, t, i.BUTTON_GREEN_SHORT, 100.5, 38.5), this.understoodButton.setName("Ok"), this.understoodButton.onClick = this.closePopup;
							var n = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(24),
								text: this.scene.lang.getText("ok"),
								origin: {
									x: .5,
									y: .5
								}
							});
							Phaser.Display.Align.In.Center(n, this.understoodButton, 0, -3), this.understoodButton.add(n), this.popup.add(this.understoodButton), Phaser.Display.Align.In.BottomCenter(this.understoodButton, this.popup, 0, -20)
						}, i.runOpenAnimation = function() {
							this.scene.audio.playSound(sa.Z.POPUP_IN), this.runPopupEntrancesAnimation(0, 400), this.dynamicGuide.runEntrancesAnimation(400)
						}, i.runCloseAnimation = function() {
							this.runPopupExitsAnimation(0, 400)
						}, i.runPopupEntrancesAnimation = function(e, t) {
							if (!this.popupShowUpAnimation) {
								var i = this.popup,
									n = i.y,
									a = i.scale;
								this.popupShowUpAnimation = new cr.Z({
									targets: [this.popup],
									delay: e,
									duration: t,
									props: {
										y: {
											start: 350,
											from: 350,
											to: n
										},
										alpha: {
											start: 0,
											from: 0,
											to: 1
										},
										scale: {
											start: 0,
											from: 0,
											to: a
										}
									}
								})
							}
							this.popupShowUpAnimation.play()
						}, i.runPopupExitsAnimation = function(e, t) {
							var i, n = this;
							this.popupFadeOutAnimation || (this.popupFadeOutAnimation = new qn.Z({
								targets: [this.popup],
								delay: e,
								duration: t,
								props: {
									y: 250,
									alpha: {
										start: 1,
										from: 1,
										to: 0
									},
									scale: 0
								},
								onComplete: function() {
									n.popup.setY(0), n.scene.screen.close(n.name)
								}
							})), null == (i = this.popupFadeOutAnimation) || i.play()
						}, t
					}(GameCore.Screen),
					dG = uG,
					pG = aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES,
					mG = pG.KEY,
					fG = pG.FRAME,
					gG = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, {
								key: mG,
								frame: fG.BLANK,
								width: i,
								height: n
							}) || this).button.setAlpha(1e-5), a.createText(), a.scene.add.existing((0, Un.Z)(a)), a
						}
						return (0, l.Z)(t, e), t.prototype.createText = function() {
							var e = ia.Z.addText(this.scene, {
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(18),
								origin: {
									x: .5,
									y: .5
								}
							});
							e.setText(this.scene.lang.getText("click_to_skip_animation")), Phaser.Display.Align.In.BottomCenter(e, this.button, 0, -90), this.add(e)
						}, (0, V.Z)(t, [{
							key: "onClick",
							set: function(e) {
								this.updateSize(), this.setInteractive({
									useHandCursor: !0
								}), this.off(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, e), this.on(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, e)
							}
						}]), t
					}(Ia.Z),
					vG = aa.Z.GAMEPLAY,
					yG = vG.GAMEPLAY_TEXTURES,
					bG = (vG.EFFECTS, yG.KEY),
					EG = yG.FRAME,
					TG = aa.Z.THEME,
					AG = TG.KEY,
					SG = (TG.FRAME, function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).gameSettings = void 0, i.header = void 0, i.footer = void 0, i.lineTopGrid = void 0, i.uiContainer = void 0, i.hidableObjects = void 0, i.floatingScorePool = void 0, i.shotGuide = void 0, i.tailParticles = void 0, i.scoreCounter = void 0, i.vibrateController = void 0, i.readyScreen = void 0, i.pauseScreen = void 0, i.gameOverScreen = void 0, i.rescueScreen = void 0, i.nextLevelScreen = void 0, i.rewardTreasureScreen = void 0, i.buyItemScreen = void 0, i.rewardScreen = void 0, i.guideScreen = void 0, i.gameModeManager = void 0, i.stateManager = void 0, i.physicsManager = void 0, i.animationsManager = void 0, i.itemManager = void 0, i.bulletItemManager = void 0, i.gameManager = void 0, i.isNeedShowGuide = void 0, i.timerEvents = [], i.warningText = void 0, i.warningTextAnimation = void 0, i.missionDetail = void 0, i.textLevelCompleted = void 0, i.winningFireworkParticle = void 0, i.bombItem = void 0, i.rocketItem = void 0, i.freeItemExplosive = void 0, i.bombItemStartPosition = void 0, i.rocketItemStartPosition = void 0, i.bonusBubble = void 0, i.skipLevelCompleteButton = void 0, i.isSkipLevelComplete = !1, i.maskBackground = void 0, i.run = function() {
								i.stateManager.ready(), i.screen.closeAllScreens(), i.time.delayedCall(1e3, (function() {
									i.logPageviewOnOpen()
								}));
								var e = i.player.getPlayerSettings();
								i.vibrateController.setAllowVibrate(e.vibrate);
								var t = [{
									selector: ot,
									callback: function(e) {
										i.vibrateController.setAllowVibrate(e.vibrate)
									}
								}, {
									selector: ft,
									callback: function(e) {
										e && (i.buyItemScreen.coinBar.setValue(e), i.rescueScreen.coinBar.setValue(e))
									}
								}];
								i.handleStateChange(t), i.handleBulletItemChange()
							}, i.create = function() {
								e.prototype.create.call((0, Un.Z)(i)), i.createBackground(Yn.Z.GAME_BACKGROUND_THEME.KEY), i.maskBackground = i.add.image(0, 0, bG, EG.BLANK);
								var t = i.world.getWorldSize(),
									n = t.width,
									a = t.height;
								i.maskBackground.setPosition(n / 2, a / 2), i.maskBackground.setWorldSize(n, a), i.maskBackground.setTint(0), i.maskBackground.kill(), i.gameSettings = new Af((0, Un.Z)(i)), i.createLineTopGrid(), i.createController(), i.createParticle(), i.createGlobalAnims(), i.createUI(), i.handleEvents(), i.createManagers(), i.checkAndAddShortcut(), i.createUiContainer(), i.createWarningText(), i.createMissionDetail(), i.createBombItem(), i.createRocketItem(), i.createFreeItemExplosive(), i.createTextLevelComplete(), i.createBonusBubble(), i.createSkipLevelCompleteButton(), i.winningFireworkParticle = new Gk((0, Un.Z)(i)), i.createLeftRightZone(), i.createHidableObjects(), i.stateManager = new rb((0, Un.Z)(i)), i.stateManager.init()
							}, i.pauseGame = function() {
								var e, t;
								i.tweens.pauseAll(), i.gameManager.pauseGame(), i.tailParticles.pause(), i.footer.pauseFreeItemSparkle(), i.freeItemExplosive.pause(), null == (e = i.bonusBubble) || e.explodeParticle.pause(), i.timerEvents = A()(t = i.timerEvents).call(t, (function(e) {
									return e.paused = !0, !e.hasDispatched
								}))
							}, i.resumeGame = function() {
								var e, t;
								i.tweens.resumeAll(), i.gameManager.resumeGame(), i.tailParticles.resume(), i.footer.resumeFreeItemSparkle(), i.freeItemExplosive.resume(), null == (e = i.bonusBubble) || e.explodeParticle.resume(), i.timerEvents = A()(t = i.timerEvents).call(t, (function(e) {
									return e.paused = !1, !e.hasDispatched
								}))
							}, i.destroyGamePlay = function() {
								i.stopManager(), i.destroyOldObject(), i.resetObjectPools(), i.removeAllListeners(), i.timerEvents = [], i.tweens.killAll(), i.time.removeAllEvents()
							}, i.winningFireworkTimerEvents = [], i.handleShowMidRollAd = (0, r.Z)(h().mark((function e() {
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (!1 !== i.ads.canbeShowInterstitialAd()) {
												e.next = 2;
												break
											}
											return e.abrupt("return");
										case 2:
											return i.audio.pauseMusic(), i.audio.muteAllSound(), i.game.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
												message: i.lang.getText("loading_ads"),
												duration: 0,
												loading: !0
											}), e.prev = 5, e.next = 8, i.ads.showMidRollAdAsync();
										case 8:
											e.next = 13;
											break;
										case 10:
											e.prev = 10, e.t0 = e.catch(5);
										case 13:
											i.game.globalScene.screen.close(Wn.o4.NOTIFY_SCREEN), i.audio.playMusic(), i.audio.unmuteAllSound(), i.ads.preloadMidRollAdAsync().catch((function() {}));
										case 17:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[5, 10]
								])
							}))), i.handleSkipLevelComplete = function() {
								i.setIsSkipLevelComplete(!0), i.skipLevelCompleteButton.kill(), i.winningFireworkParticle.kill(), i.winningFireworkTimerEvents.forEach((function(e) {
									e.remove()
								})), i.gameManager.skipSleepAsync(), i.tweens.getAllTweens().forEach((function(e) {
									e.complete && e.complete()
								})), i.gameManager.shooter.skipCelebrationShoots(), i.gameManager.scoreManager.killAllScoreTexts(), i.audio.stopSound(sa.Z.CHEERING)
							}, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.preload = function() {
							var e = this;
							this.events.on(Phaser.Scenes.Events.WAKE, this.run), this.events.on(Phaser.Scenes.Events.CREATE, this.run), GameCore.Utils.Valid.isDebugger() && (this.input.keyboard.on("keydown-E", (function() {
								GameCore.Utils.Valid.isDebugger() && (e.ads.hideBannerAdAsync(), e.game.globalScene.events.emit(In.K.SWITCH, In.C.LEVEL_EDITOR_SCENE))
							})), this.input.keyboard.on("keydown-A", (function() {
								e.gameManager.debugWin()
							})), this.input.keyboard.on("keydown-L", (function() {
								e.gameManager.debugLose()
							})), this.input.keyboard.on("keydown-X", (function() {
								GameCore.Utils.Valid.isDebugger() && e.player.updateBonusBubble(0)
							})), this.input.keyboard.on("keydown-G", (function() {
								GameCore.Utils.Valid.isDebugger() && e.screen.open(Wn.o4.GUIDE_SCREEN)
							})))
						}, i.createController = function() {
							this.vibrateController = new Zf(this)
						}, i.createObjectPools = function() {
							this.floatingScorePool = new mm(this)
						}, i.createParticle = function() {
							this.tailParticles = new db(this)
						}, i.createGlobalAnims = function() {
							new Dy(this)
						}, i.createManagers = function() {
							this.gameModeManager = new Ff(this), this.gameModeManager.init(), this.gameManager = new qO(this), this.gameManager.init(), this.physicsManager = new pE(this), this.physicsManager.init(), this.animationsManager = new gE(this), this.animationsManager.init(), this.itemManager = new OE(this), this.itemManager.init(), this.bulletItemManager = new ek(this), this.bulletItemManager.init()
						}, i.createUI = function() {
							this.createPauseScreen(), this.createRescueScreen(), this.createGameOverScreen(), this.createRewardTreasureScreen(), this.createNextLevelScreen(), this.createBuyItemScreen(), this.createRewardScreen(), this.createGuideScreen(), this.createHeader(), this.createFooter()
						}, i.createReadyScreen = function() {
							this.readyScreen = this.screen.add(Wn.o4.READY_SCREEN, Wg)
						}, i.createPauseScreen = function() {
							this.pauseScreen = this.screen.add(Wn.o4.PAUSE_SCREEN, Qg)
						}, i.createRescueScreen = function() {
							this.rescueScreen = this.screen.add(Wn.o4.RESCUE_SCREEN, bv)
						}, i.createGameOverScreen = function() {
							this.gameOverScreen = this.screen.add(Wn.o4.GAME_OVER_SCREEN, Ug)
						}, i.createNextLevelScreen = function() {
							this.nextLevelScreen = this.screen.add(Wn.o4.NEXT_LEVEL_SCREEN, bk)
						}, i.createRewardTreasureScreen = function() {
							this.rewardTreasureScreen = this.screen.add(Wn.o4.REWARD_TREASURE_SCREEN, sk)
						}, i.createBuyItemScreen = function() {
							this.buyItemScreen = this.screen.add(Wn.o4.BUY_ITEM_SCREEN, Pk)
						}, i.createRewardScreen = function() {
							this.rewardScreen = this.screen.add(Wn.o4.REWARD_SCREEN, Za)
						}, i.createGuideScreen = function() {
							this.guideScreen = this.screen.add(Wn.o4.GUIDE_SCREEN, dG)
						}, i.createHeader = function() {
							this.header = new Rg(this), Phaser.Display.Align.In.TopCenter(this.header, this.gameZone)
						}, i.createFooter = function() {
							var e = this,
								t = this.ads.getBannerHeight();
							this.footer = new yf(this), this.footer.pauseButton.onClick = function() {
								e.screen.open(Wn.o4.PAUSE_SCREEN), e.stateManager.pause()
							}, Phaser.Display.Align.In.BottomCenter(this.footer, this.gameZone, 0, -t - 50), this.footer.setDepth(jn.Z.BUTTON)
						}, i.createHidableObjects = function() {
							this.hidableObjects = this.make.group({}), this.hidableObjects.addMultiple([this.header, this.footer, this.lineTopGrid, this.gameManager.shooter, this.gameManager.shooter.remainingBulletText])
						}, i.handleEvents = function() {
							var e = this;
							this.events.on(Phaser.Scenes.Events.SLEEP, (function() {
								e.stateManager.quit()
							}))
						}, i.checkAndAddShortcut = function() {
							var e;
							this.game.player.getPlayer().isUserNew || (null == (e = this.gameModeManager) ? void 0 : e.gameMode) !== Wl.jt && this.facebook.attemptToAddShortcut()
						}, i.update = function(e, t) {
							this.stateManager.update(t)
						}, i.handleGameModeChange = function() {
							var e = this,
								t = [{
									selector: sp.fQ,
									callback: function(t) {
										t !== e.gameModeManager.gameMode && (e.gameModeManager.stop(), e.gameModeManager.setGameMode(t), e.gameModeManager.start())
									}
								}];
							this.handleStateChange(t)
						}, i.handleBulletItemChange = function() {
							var e = this,
								t = [{
									selector: mt,
									callback: function(t) {
										e.bulletItemManager.updateLimitBulletsItem(t)
									}
								}];
							this.handleStateChange(t)
						}, i.startManager = function() {
							this.stateManager.start(), this.gameModeManager.start(), this.gameManager.start(), this.physicsManager.start(), this.animationsManager.start(), this.bulletItemManager.start()
						}, i.stopManager = function() {
							this.stateManager.stop(), this.gameModeManager.stop(), this.physicsManager.stop(), this.animationsManager.stop(), this.itemManager.stop(), this.bulletItemManager.stop()
						}, i.destroyOldObject = function() {
							var e, t, i, n, a, s, o, r, l, c, h;
							null == (e = this.warningText) || e.kill(), null == (t = this.missionDetail) || t.kill(), null == (i = this.footer) || i.destroyOldObjects(), null == (n = this.bombItem) || n.kill(), null == (a = this.rocketItem) || a.kill(), null == (s = this.textLevelCompleted) || s.kill(), null == (o = this.header) || null == (r = o.progressBar) || r.destroyOldObjects(), null == (l = this.freeItemExplosive) || l.stop(), this.bonusBubble.destroyOldObjects(), null == (c = this.bonusBubble) || c.explodeParticle.stop(), null == (h = this.bonusBubble) || h.kill()
						}, i.resetObjectPools = function() {
							var e;
							this.gameManager.destroy(), null == (e = this.floatingScorePool) || e.reset()
						}, i.removeAllListeners = function() {
							this.events.off(Ef.SHOOT_BALL), this.events.off(Ef.TIMER_CREATED)
						}, i.createLineTopGrid = function() {
							var e = this.gameZone,
								t = e.width,
								i = e.height;
							this.lineTopGrid = new uE(this, 0, .5 * i), this.lineTopGrid.setWorldSize(t, 5.5), Phaser.Display.Align.In.Center(this.lineTopGrid, this.gameZone)
						}, i.createUiContainer = function() {
							this.uiContainer = new Phaser.GameObjects.Container(this), this.uiContainer.add([this.header]), this.uiContainer.setDepth(jn.Z.UI), this.add.existing(this.uiContainer)
						}, i.createWarningText = function() {
							var e = this.gameZone.width;
							this.warningText = ia.Z.addText(this, {
								font: _a.Z.PRIMARY.KEY,
								size: this.fontSize(46),
								text: this.lang.getText({
									key: "{X}_bubbles_left",
									variables: [5]
								}),
								origin: {
									x: .5,
									y: .5
								},
								depth: jn.Z.PRIORITY,
								maxWidth: .9 * e
							}), this.warningText.setAlpha(0), this.warningText.kill()
						}, i.playWarningTextAnimation = function() {
							var e = this;
							this.vibrateController.handleWarning();
							var t = this.world.getWorldSize(),
								i = t.width,
								n = t.height;
							this.warningText.revive(), this.warningText.setPosition(2 * i, n / 2), this.tweens.add({
								targets: this.warningText,
								duration: 300,
								props: {
									x: {
										from: i,
										to: i / 2,
										ease: Phaser.Math.Easing.Cubic.In
									},
									alpha: {
										from: 0,
										to: 1,
										ease: Phaser.Math.Easing.Quadratic.In
									}
								},
								completeDelay: 1e3,
								onComplete: function() {
									e.tweens.add({
										targets: e.warningText,
										duration: 300,
										props: {
											x: {
												from: i / 2,
												to: -i,
												ease: Phaser.Math.Easing.Cubic.Out
											},
											alpha: {
												from: 1,
												to: 0,
												ease: Phaser.Math.Easing.Quadratic.Out
											}
										},
										onComplete: function() {
											e.warningText.kill()
										}
									})
								}
							})
						}, i.createMissionDetail = function() {
							this.missionDetail = new Yk(this), Phaser.Display.Align.In.Center(this.missionDetail, this.gameZone), this.missionDetail.setAlpha(0), this.missionDetail.kill()
						}, i.playMissionDetailAnimation = function(e) {
							var t = this;
							this.missionDetail.revive(), this.missionDetail.setAlpha(0), this.tweens.add({
								targets: this.missionDetail,
								duration: 400,
								alpha: {
									from: 0,
									to: 1,
									ease: Phaser.Math.Easing.Quadratic.In
								},
								completeDelay: 800,
								onComplete: function() {
									t.tweens.add({
										targets: t.missionDetail,
										duration: 400,
										alpha: {
											from: 1,
											to: 0,
											ease: Phaser.Math.Easing.Quadratic.Out
										},
										onComplete: function() {
											t.missionDetail.kill(), e && e()
										}
									})
								}
							})
						}, i.createTextLevelComplete = function() {
							this.textLevelCompleted = this.make.image({
								key: aa.Z.GAMEPLAY.EFFECTS.KEY,
								frame: aa.Z.GAMEPLAY.EFFECTS.FRAME.TEXT_LEVEL_COMPLETED
							}), this.textLevelCompleted.setDepth(jn.Z.UI), this.textLevelCompleted.setWorldSize(336.5, 109.5), Phaser.Display.Align.In.Center(this.textLevelCompleted, this.gameZone, 0, -50)
						}, i.createBombItem = function() {
							var e = 1 / this.world.getPixelRatio();
							this.bombItem = this.make.image({
								key: yG.KEY,
								frame: yG.FRAME.BULLET_ITEM_BOMB
							}), this.bombItem.setScale(e).setDepth(jn.Z.UI + 2).setWorldSize(34.5, 35.5), Phaser.Display.Align.In.Center(this.bombItem, this.gameZone, 0, 60), this.bombItemStartPosition = {
								x: this.bombItem.x,
								y: this.bombItem.y
							}
						}, i.runBombItemFadeInAnimation = function() {
							var e = this,
								t = 1 / this.world.getPixelRatio();
							this.tweens.add({
								targets: [this.bombItem],
								duration: 300,
								ease: Phaser.Math.Easing.Cubic.Out,
								props: {
									scale: {
										start: t,
										from: t,
										to: 1.5 * t
									}
								},
								completeDelay: 300,
								onStart: function() {
									e.bombItem.revive(), e.bombItem.setScale(t).setAlpha(1).setPosition(e.bombItemStartPosition.x, e.bombItemStartPosition.y), e.freeItemExplosive.explode(45, e.bombItem.x, e.bombItem.y, "BombItem"), e.audio.playSound(sa.Z.COMBO_REACH)
								},
								onComplete: function() {
									e.runBombItemFadeOutAnimation();
									var t = e.footer.bombBulletItem.getWorldPosition();
									e.freeItemExplosive.startBombParticleMoving(t)
								}
							})
						}, i.runBombItemFadeOutAnimation = function() {
							var e = this,
								t = 1 / this.world.getPixelRatio(),
								i = this.bombItem.getWorldPosition(),
								n = this.footer.bombBulletItem,
								a = n.getWorldPosition();
							this.tweens.add({
								targets: [this.bombItem],
								duration: 500,
								ease: Phaser.Math.Easing.Cubic.In,
								props: {
									x: {
										start: i.x,
										from: i.x,
										to: a.x
									},
									y: {
										start: i.y,
										from: i.y,
										to: a.y
									},
									scale: {
										start: 1.5 * t,
										from: 1.5 * t,
										to: t
									}
								},
								onComplete: function() {
									e.bombItem.setPosition(i.x, i.y), e.bombItem.setScale(t), e.bombItem.setAlpha(1), e.bombItem.kill(), n.runReachedProgressAnimation()
								}
							})
						}, i.createRocketItem = function() {
							var e = 1 / this.world.getPixelRatio();
							this.rocketItem = this.make.image({
								key: yG.KEY,
								frame: yG.FRAME.BULLET_ITEM_ROCKET
							}), this.rocketItem.setScale(e).setDepth(jn.Z.UI + 2).setWorldSize(31, 32.5), Phaser.Display.Align.In.Center(this.rocketItem, this.gameZone, 0, 60), this.rocketItemStartPosition = {
								x: this.rocketItem.x,
								y: this.rocketItem.y
							}
						}, i.runRocketItemFadeInAnimation = function() {
							var e = this,
								t = 1 / this.world.getPixelRatio();
							this.tweens.add({
								targets: [this.rocketItem],
								duration: 300,
								ease: Phaser.Math.Easing.Cubic.Out,
								props: {
									scale: {
										start: t,
										from: t,
										to: 1.5 * t
									}
								},
								completeDelay: 300,
								onStart: function() {
									e.rocketItem.revive(), e.rocketItem.setScale(t).setAlpha(1).setPosition(e.rocketItemStartPosition.x, e.rocketItemStartPosition.y), e.freeItemExplosive.explode(45, e.rocketItem.x, e.rocketItem.y, "RocketItem"), e.audio.playSound(sa.Z.COMBO_REACH)
								},
								onComplete: function() {
									e.runRocketItemFadeOutAnimation();
									var t = e.footer.rocketBulletItem.getWorldPosition();
									e.freeItemExplosive.startRocketParticleMoving(t)
								}
							})
						}, i.runRocketItemFadeOutAnimation = function() {
							var e = this,
								t = 1 / this.world.getPixelRatio(),
								i = this.rocketItem.getWorldPosition(),
								n = this.footer.rocketBulletItem,
								a = n.getWorldPosition();
							this.tweens.add({
								targets: [this.rocketItem],
								duration: 500,
								ease: Phaser.Math.Easing.Cubic.In,
								props: {
									x: {
										start: i.x,
										from: i.x,
										to: a.x
									},
									y: {
										start: i.y,
										from: i.y,
										to: a.y
									},
									scale: {
										start: 1.5 * t,
										from: 1.5 * t,
										to: t
									}
								},
								onComplete: function() {
									e.rocketItem.setPosition(i.x, i.y), e.rocketItem.setScale(t), e.rocketItem.setAlpha(1), e.rocketItem.kill(), n.runReachedProgressAnimation()
								}
							})
						}, i.createFreeItemExplosive = function() {
							this.freeItemExplosive = new Jk(this), this.freeItemExplosive.setDepth(jn.Z.UI + 1)
						}, i.createBonusBubble = function() {
							this.bonusBubble = new Dc(this, .75, !0), this.bonusBubble.setAlpha(0), this.bonusBubble.kill()
						}, i.createSkipLevelCompleteButton = function() {
							var e = this.world.getWorldSize(),
								t = e.width,
								i = e.height;
							this.skipLevelCompleteButton = new gG(this, t, i), this.skipLevelCompleteButton.onClick = this.handleSkipLevelComplete, Phaser.Display.Align.In.Center(this.skipLevelCompleteButton, this.gameZone), this.skipLevelCompleteButton.kill()
						}, i.runBonusBubblesAnimation = function(e) {
							var t = this,
								i = this.world.getWorldSize(),
								n = i.width,
								a = i.height;
							this.bonusBubble.setPosition(n - n / 8, a - (a - 667) / 2 - 160);
							var s = this.bonusBubble.x,
								o = this.player.getBonusBullets(),
								r = this.gameManager.levelData.colors;
							this.tweens.add({
								targets: this.bonusBubble,
								duration: 600,
								ease: Phaser.Math.Easing.Back.Out,
								props: {
									x: {
										from: s + 80,
										to: s
									},
									scale: {
										from: .5,
										to: 1
									},
									alpha: {
										start: 0,
										from: 0,
										to: 1
									}
								},
								onStart: function() {
									t.bonusBubble.setDepth(jn.Z.ITEM - 1), t.bonusBubble.setBonus(o), t.bonusBubble.setPosition(s + 80, t.bonusBubble.y), t.bonusBubble.revive()
								},
								onComplete: function() {
									t.bonusBubble.createBonusBullets(o, r), t.bonusBubble.setDepth(jn.Z.BULLET + 1), t.bonusBubble.runAddBubblesAnimation((function() {
										t.tweens.add({
											targets: t.bonusBubble,
											duration: 600,
											ease: Phaser.Math.Easing.Back.In,
											props: {
												x: {
													from: s,
													to: s + 80
												},
												scale: {
													from: 1,
													to: .5
												},
												alpha: {
													start: 1,
													from: 1,
													to: 0
												}
											},
											onStart: function() {
												t.bonusBubble.setDepth(jn.Z.ITEM - 1)
											}
										})
									})), e && e()
								}
							})
						}, i.playWinningAnimation = function() {
							var e = this;
							this.winningFireworkTimerEvents = [];
							var t = 1 / this.world.getPixelRatio() * 1.25,
								i = this.world.getWorldSize(),
								n = i.width,
								a = i.height;
							this.winningFireworkParticle.revive(), this.audio.playSound(sa.Z.CHEERING);
							for (var s = 0; s < 10; s++) this.winningFireworkTimerEvents.push(this.time.delayedCall(200 * s, (function() {
								var t = Math.random() * n,
									i = 400 * Math.random() + (a - 667) / 2 + 100;
								e.winningFireworkParticle.explode(t, i)
							})));
							this.textLevelCompleted.revive(), new Jn.Z({
								targets: [this.textLevelCompleted],
								duration: 300,
								props: {
									scale: {
										start: .5 * t,
										from: .5 * t,
										to: 1 * t
									}
								},
								yoyo: !0,
								hold: 500,
								onComplete: function() {
									e.textLevelCompleted.kill()
								}
							}).play()
						}, i.getCorrectGameSize = function() {
							var e = this.world.getWorldSize(),
								t = e.width,
								i = e.height;
							return {
								width: t,
								height: Math.max(667, i)
							}
						}, i.scaleGame = function() {
							var e = this.cameras.main,
								t = this.world.getZoomRatio(),
								i = this.world.getWorldSize(),
								n = i.width,
								a = i.height;
							a < 667 && (t /= 667 / a), e.setZoom(t), e.centerOn(n / 2, a / 2)
						}, i.createGameZone = function() {
							var e = this.world.getWorldSize(),
								t = e.width,
								i = e.height;
							i < 667 && (t *= 667 / i, i = 667), this.gameZone = new Phaser.GameObjects.Zone(this, 0, 0, t, i), this.gameZone.setOrigin(0, 0)
						}, i.createLeftRightZone = function() {
							var e = this.world.getWorldSize(),
								t = e.width,
								i = (e.height, this.gameZone),
								n = i.width,
								a = i.height,
								s = this.theme;
							if (n > t) {
								var o, r = (null == (o = s.getCurrentTheme(AG).params) ? void 0 : o.color) || 12686939,
									l = this.add.image(0, 0, bG, EG.BLANK);
								l.setWorldSize((n - t) / 2, a), l.setTint(r), l.setAlpha(.8), Phaser.Display.Align.In.LeftCenter(l, this.gameZone);
								var c = this.add.image(0, 0, bG, EG.BLANK);
								c.setWorldSize((n - t) / 2, a), c.setTint(r), c.setAlpha(.8), Phaser.Display.Align.In.RightCenter(c, this.gameZone), this.uiContainer.add([l, c]), s.events.on(s.EVENTS.THEME_CHANGE + "-" + AG, (function() {
									var e, t = (null == (e = s.getCurrentTheme(AG).params) ? void 0 : e.color) || 12686939;
									l.setTint(t), c.setTint(t)
								}))
							}
						}, i.runFadeOutHidableObjects = function() {
							var e, t, i = this,
								n = A()(e = this.hidableObjects.getChildren()).call(e, (function(e) {
									return e !== i.footer
								})),
								a = new Phaser.Display.Color(255, 255, 255),
								s = new Phaser.Display.Color(127, 127, 127);
							if (this.isSkipLevelComplete) {
								this.footer.hideFreeItemSparkle(), n.forEach((function(e) {
									e.setAlpha(0)
								})), this.hidableObjects.setVisible(!0), this.hidableObjects.setActive(!0);
								var o = Phaser.Display.Color.Interpolate.ColorWithColor(a, s, 100, 100),
									r = Phaser.Display.Color.GetColor(o.r, o.g, o.b);
								this.background.setTint(r)
							} else this.tweens.add({
								targets: y()(t = []).call(t, n),
								duration: 300,
								ease: Phaser.Math.Easing.Sine.InOut,
								alpha: 0,
								onStart: function() {
									i.footer.hideFreeItemSparkle()
								},
								onComplete: function() {
									i.hidableObjects.setVisible(!1), i.hidableObjects.setActive(!1)
								}
							}), this.maskBackground.revive(), this.maskBackground.setAlpha(0), this.tweens.add({
								targets: this.maskBackground,
								alpha: .5,
								duration: 300,
								ease: Phaser.Math.Easing.Sine.InOut
							})
						}, i.getIsSkipLevelComplete = function() {
							return this.isSkipLevelComplete
						}, i.setIsSkipLevelComplete = function(e) {
							this.isSkipLevelComplete = e
						}, t
					}(En.Z));
				var _G = SG,
					CG = function(e) {
						return e.leaderboards
					},
					wG = ((0, $.P1)([function(e) {
						return CG(e).leaderboardId
					}], (function(e) {
						return e
					})), (0, $.P1)([function(e) {
						return CG(e).leaders
					}], (function(e) {
						return e
					}))),
					BG = (0, $.P1)([function(e) {
						return CG(e).isRequesting
					}], (function(e) {
						return e
					})),
					IG = aa.Z.DEFAULT,
					PG = IG.KEY,
					xG = IG.FRAME,
					OG = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).homeButton = void 0, i.shareButton = void 0, i.scene = t, i.createButtons(), i.alignButtons(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.alignButtons = function() {
							Phaser.Display.Align.In.Center(this.homeButton, this, -75), Phaser.Display.Align.In.Center(this.shareButton, this, 75)
						}, i.createButtons = function() {
							this.createHomeButton(), this.createShareButton()
						}, i.createHomeButton = function() {
							this.homeButton = new ea.Z(this.scene, PG, xG.BUTTON_GREEN, 134, 68), this.homeButton.setName("Home");
							var e = this.scene.make.bitmapText({
									font: _a.Z.PRIMARY.KEY,
									size: this.scene.fontSize(20),
									text: "Home",
									origin: {
										x: .5,
										y: .5
									}
								}),
								t = this.scene.make.image({
									key: PG,
									frame: xG.ICON_HOME
								});
							t.setWorldSize(31, 26), this.homeButton.setName("Home"), this.homeButton.add([e, t]), this.add(this.homeButton), Phaser.Display.Align.In.Center(t, this.homeButton, -29, -3), Phaser.Display.Align.To.RightCenter(e, t, 6, 1)
						}, i.createShareButton = function() {
							this.shareButton = new ea.Z(this.scene, PG, xG.BUTTON_BLUE_LONG, 134, 68), this.shareButton.setName("Share");
							var e = this.scene.make.bitmapText({
									font: _a.Z.PRIMARY.KEY,
									size: this.scene.fontSize(20),
									text: "Share",
									origin: {
										x: .5,
										y: .5
									}
								}),
								t = this.scene.make.image({
									key: PG,
									frame: xG.BLANK
								});
							t.setWorldSize(28.5, 27), this.shareButton.setName("Share"), this.shareButton.add([e, t]), this.add(this.shareButton), Phaser.Display.Align.In.Center(t, this.shareButton, -31, -3), Phaser.Display.Align.To.RightCenter(e, t, 6, 1)
						}, t
					}(Phaser.GameObjects.Container),
					kG = OG,
					RG = aa.Z.DEFAULT,
					MG = RG.KEY,
					LG = RG.FRAME,
					GG = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).button = void 0, n.avatar = void 0, n.rankIcon = void 0, n.rankText = void 0, n.username = void 0, n.scoreText = void 0, n.background = void 0, n.showPopUp = void 0, n.showItems = void 0, n.payload = void 0, n.handleChallengeFriend = function() {
								var e = n.payload.playerId;
								n.scene.storage.dispatch((0, Ua.Xp)(e))
							}, n.createBackground(), n.updateSize(), n.createAvatar(), n.createRank(), n.createUsername(), n.createScore(), n.createButton(), i && n.updateInfo(i), n.scene.add.existing((0, Un.Z)(n)), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.updateInfo = function(e) {
							e && (this.payload = (0, o.Z)({
								scoreRight: !0,
								isHighlight: !1,
								useChallenge: !1
							}, e), this.updateBackground(), this.updateAvatar(), this.updateRank(), this.updateUsername(), this.updateScore(), this.updatePosition())
						}, i.updatePosition = function() {
							var e = this.payload.scoreRight,
								t = this.payload.useChallenge;
							if (this.button.setVisible(!!t), e) {
								this.username.setFontSize(20), Phaser.Display.Align.In.LeftCenter(this.username, this.background, -90, 1);
								var i = this.scene.fontSize(20);
								this.scoreText.setFontSize(i), this.scoreText.setOrigin(1, .5), this.scoreText.setPosition(130, 1)
							} else {
								this.username.setFontSize(16), Phaser.Display.Align.In.TopLeft(this.username, this.background, -90, -8);
								var n = this.scene.fontSize(18);
								this.scoreText.setFontSize(n), this.scoreText.setOrigin(0, .5), this.scoreText.setPosition(-55, 10)
							}
						}, i.createBackground = function() {
							this.background = this.scene.make.image({
								key: MG,
								frame: LG.LEADERBOARD_BG_LIGHT
							}), this.background.setWorldSize(290.5, 43.5), this.add(this.background)
						}, i.updateBackground = function() {
							var e = "";
							e = this.payload.isHighlight ? LG.LEADERBOARD_BG_LIGHT : LG.LEADERBOARD_BG_DARK, this.background.setFrame(e), this.background.setWorldSize(290.5, 43.5)
						}, i.updateSize = function() {
							var e = this.background,
								t = e.width,
								i = e.height;
							this.setSize(t, i)
						}, i.createAvatar = function() {
							this.avatar = new Eo(this.scene, {
								key: MG,
								frame: LG.AVATAR_FRAME_PURPLE,
								background: LG.AVATAR_BG,
								width: 38,
								height: 40,
								loadDelay: 300
							}), this.add(this.avatar), Phaser.Display.Align.In.LeftCenter(this.avatar, this.background, -45, -2)
						}, i.updateAvatar = function() {
							var e = this.payload,
								t = e.playerId,
								i = e.photo;
							this.avatar.loadPhoto(t, i)
						}, i.createRank = function() {
							this.createRankIcon(), this.createRankText()
						}, i.updateRank = function() {
							this.updateRankIcon(), this.updateRankText()
						}, i.getRankIconSymbol = function(e) {
							var t = "";
							switch (e) {
								case 1:
								case 2:
								case 3:
								case 0:
									t = LG.BLANK
							}
							return t
						}, i.createRankIcon = function() {
							var e = LG.BLANK;
							this.rankIcon = this.scene.make.image({
								key: MG,
								frame: e
							}), this.rankIcon.setPosition(-119, 0), this.add(this.rankIcon)
						}, i.updateRankIcon = function() {
							var e = +this.payload.score,
								t = +this.payload.rank;
							0 === e && (t = 0);
							var i = this.getRankIconSymbol(t);
							this.rankIcon.setFrame(i), "" == i ? this.rankIcon.kill() : this.rankIcon.revive(), this.rankIcon.setWorldSize(39, 47.5), 0 === t && this.rankIcon.setWorldSize(11, 16)
						}, i.createRankText = function() {
							this.rankText = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(15),
								text: "",
								origin: {
									x: .5,
									y: .5
								}
							}), this.add(this.rankText)
						}, i.updateRankText = function() {
							var e = +this.payload.score,
								t = this.payload.rank;
							0 === e && (t = 0);
							var i = "" + t;
							if (this.rankText.revive(), t < 4 && this.rankText.kill(), t > 999) {
								var n = this.scene.fontSize(13);
								this.rankText.setFontSize(n), i = GameCore.Utils.Number.toAbbreviatedString(+t, {
									fractionalDigits: 1,
									removeLastZero: !0
								})
							}
							this.rankText.setText(i), this.rankText.setPosition(-120, 2)
						}, i.createUsername = function() {
							this.username = this.scene.make.text({
								style: {
									fontFamily: _a.Z.FONT_FAMILY
								},
								origin: {
									x: 0,
									y: .5
								}
							}), this.username.setText(""), this.username.setTint(14342381), this.username.setHighQuality(), this.add(this.username)
						}, i.updateUsername = function() {
							var e = this.payload.name;
							if (e) {
								var t = GameCore.Utils.String.getShortName(e, 12),
									i = GameCore.Utils.String.removeDiacritics(t);
								this.username.setText(i)
							}
						}, i.createScore = function() {
							this.scoreText = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(20),
								origin: {
									x: 0,
									y: .5
								}
							}), this.scoreText.setTint(16777215), this.add(this.scoreText)
						}, i.updateScore = function() {
							var e = +this.payload.score,
								t = GameCore.Utils.Number.toAbbreviatedString(e, {
									startAbbreviate: 1e14
								});
							this.scoreText.setText(t)
						}, i.createButton = function() {
							this.button = new ea.Z(this.scene, MG, LG.BUTTON_GREEN_SHORT, 61.5, 32), this.button.setName("ChallengeFriend");
							var e = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(11),
								text: "Challenge"
							});
							this.button.add(e), this.add(this.button), Phaser.Display.Align.In.Center(e, this.button), Phaser.Display.Align.In.RightCenter(this.button, this.background, -10), this.button.onClick = this.handleChallengeFriend
						}, i.runShowPopUpAnimation = function(e, t) {
							var i = this;
							this.scene.tweens.killTweensOf(this);
							var n = this.y;
							this.showPopUp = new vo({
								targets: [this],
								delay: e,
								duration: t,
								props: {
									y: {
										start: this.y + 70,
										to: this.y
									}
								},
								onStop: function() {
									i.y = n
								}
							}), this.showPopUp.play()
						}, i.runShowItemAnimation = function(e, t) {
							var i = [this.avatar, this.rankText, this.button, this.username, this.scoreText];
							i.forEach((function(e) {
								return e.setScale(1)
							})), this.scene.tweens.killTweensOf(i), this.showItems = new cp({
								targets: i,
								duration: t,
								delay: this.scene.tweens.stagger(50, {
									start: e + 50
								}),
								props: {
									scale: {
										duration: 1e3,
										start: .8,
										end: 1,
										ease: Phaser.Math.Easing.Elastic.Out,
										easeParams: [.1, .45]
									}
								}
							}), this.showItems.play()
						}, i.runShowUpAnimation = function(e, t) {
							void 0 === e && (e = 0), void 0 === t && (t = 300);
							var i = 100 * e;
							this.runShowPopUpAnimation(i, t), this.runShowItemAnimation(i, t)
						}, t
					}(Phaser.GameObjects.Container),
					DG = GG;

				function FG(e, t) {
					var i = "undefined" !== typeof uo() && mo()(e) || e["@@iterator"];
					if (i) return (i = i.call(e)).next.bind(i);
					if (Array.isArray(e) || (i = function(e, t) {
							var i;
							if (!e) return;
							if ("string" === typeof e) return NG(e, t);
							var n = tt()(i = Object.prototype.toString.call(e)).call(i, 8, -1);
							"Object" === n && e.constructor && (n = e.constructor.name);
							if ("Map" === n || "Set" === n) return co()(e);
							if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return NG(e, t)
						}(e)) || t && e && "number" === typeof e.length) {
						i && (e = i);
						var n = 0;
						return function() {
							return n >= e.length ? {
								done: !0
							} : {
								done: !1,
								value: e[n++]
							}
						}
					}
					throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
				}

				function NG(e, t) {
					(null == t || t > e.length) && (t = e.length);
					for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
					return n
				}
				var ZG = function(e) {
						function t(t) {
							var i;
							(i = e.call(this, t) || this).scene = void 0, i.currentPlayerId = void 0, i.scroller = void 0, i.animationTween = void 0, i.scene = t;
							var n = i.scene.player;
							return i.currentPlayerId = n.getPlayerId(), i.createReuseScroller(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createReuseScroller = function() {
							this.scroller = new Vl(this.scene, {
								classType: DG,
								listConfigs: [],
								width: 280,
								height: 240,
								padding: 5,
								marginTop: 10,
								marginBottom: 10,
								maxScrollOver: .05
							}), this.scene.renderer instanceof Phaser.Renderer.WebGL.WebGLRenderer && this.scroller.createBound(aa.Z.DEFAULT.KEY, aa.Z.DEFAULT.FRAME.BLANK, 10, 2826565), this.scroller.createMask(), this.scroller.setPosition(0, 30), this.add(this.scroller)
						}, i.updateData = function() {
							var e = (0, r.Z)(h().mark((function e(t) {
								var i, n, a, s, o, r, l, c, u, d, p, m, f, g, v;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (!((i = Zi()(t) || []).length < 1)) {
												e.next = 5;
												break
											}
											return this.scene.isSwitchable = !0, this.scene.board.showMessage(!0, "Leaderboard is empty!"), e.abrupt("return");
										case 5:
											n = ji()(i).call(i, (function(e, t) {
												return +t.score - +e.score
											})), a = [], s = FG(n);
										case 8:
											if ((o = s()).done) {
												e.next = 26;
												break
											}
											if (r = o.value, l = r.playerId, c = r.photo, u = r.score, d = r.name, p = r.rank, l) {
												e.next = 14;
												break
											}
											return e.abrupt("continue", 24);
										case 14:
											if (m = this.currentPlayerId === l, f = this.scene.tabId === Ro.C, g = !m && this.scene.tabId === Ro.n, !m || !f) {
												e.next = 22;
												break
											}
											return e.next = 20, this.getCurrentPlayerRank(l);
										case 20:
											p = e.sent, GameCore.Configs.LeadersBoard.UseMock && (p = Phaser.Math.Between(999, 9999));
										case 22:
											v = {
												playerId: l,
												photo: c,
												name: d,
												rank: p,
												score: u,
												scoreRight: f,
												useChallenge: g,
												isHighlight: m
											}, a.push(v);
										case 24:
											e.next = 8;
											break;
										case 26:
											this.scroller.updateConfig(a), this.showLeaders();
										case 28:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), i.removeLeaders = function() {
							this.scroller.updateConfig([])
						}, i.getCurrentPlayerRank = function() {
							var e = (0, r.Z)(h().mark((function e(t) {
								var i;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, (0, fo.GA)(t);
										case 2:
											return i = e.sent, e.abrupt("return", i.rank);
										case 4:
										case "end":
											return e.stop()
									}
								}), e)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), i.getLeaders = function() {
							return this.scroller.getChildren()
						}, i.showLeaders = function() {
							var e = this,
								t = this.getLeaders();
							if (t.length < 1) return this.scene.isSwitchable = !0, void this.scene.board.showMessage(!0, "Leaderboard is empty!");
							for (var i = Math.min(t.length, 6), n = 0; n < i; n++) {
								var a = t[n];
								a && (a.setVisible(!0), a.runShowUpAnimation(n, 300))
							}
							var s = 300 + 100 * i + 250;
							this.scene.time.delayedCall(s, (function() {
								e.scene.isSwitchable = !0, e.scroller.setEnable(!0)
							}))
						}, t
					}(Phaser.GameObjects.Container),
					UG = ZG,
					jG = aa.Z.DEFAULT,
					YG = jG.KEY,
					WG = jG.FRAME,
					KG = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.tabWorld = void 0, i.tabFriends = void 0, i.textWorld = void 0, i.textFriends = void 0, i.scene = t, i.createTabFriends(), i.createTabWorld(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.selectTabFriends = function() {
							this.textWorld.setAlpha(.5), this.textFriends.setAlpha(1), this.tabFriends.button.setFrame(WG.LEADERBOARD_TAB_ON), this.tabWorld.button.setFrame(WG.LEADERBOARD_TAB_OFF)
						}, i.selectTabWorld = function() {
							this.textWorld.setAlpha(1), this.textFriends.setAlpha(.5), this.tabFriends.button.setFrame(WG.LEADERBOARD_TAB_OFF), this.tabWorld.button.setFrame(WG.LEADERBOARD_TAB_ON)
						}, i.createTabFriends = function() {
							this.tabFriends = new ea.Z(this.scene, YG, WG.LEADERBOARD_TAB_OFF), this.tabFriends.button.setWorldSize(101, 36.5), this.textFriends = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(18),
								text: "FRIENDS",
								origin: {
									x: .5,
									y: .4
								}
							}), this.tabFriends.setName("FriendsTab"), this.tabFriends.add(this.textFriends), Phaser.Display.Align.In.Center(this.tabFriends, this, -55, 10), this.add(this.tabFriends)
						}, i.createTabWorld = function() {
							this.tabWorld = new ea.Z(this.scene, YG, WG.LEADERBOARD_TAB_OFF), this.tabWorld.button.setWorldSize(101, 36.5), this.textWorld = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(18),
								text: "WORLD",
								origin: {
									x: .5,
									y: .4
								}
							}), this.tabWorld.setName("WorldTab"), this.tabWorld.add(this.textWorld), Phaser.Display.Align.In.Center(this.tabWorld, this, 55, 10), this.add(this.tabWorld)
						}, t
					}(Phaser.GameObjects.Container),
					HG = KG,
					zG = aa.Z.DEFAULT.FRAME,
					XG = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.background = void 0, i.tabs = void 0, i.leaders = void 0, i.loading = void 0, i.message = void 0, i.messageAnimation = void 0, i.scene = t, i.createBackground(), i.updateSize(), i.createLoading(), i.createMessage(), i.createContents(), i.createAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.showLoading = function(e) {
							this.loading.setVisible(e), this.showMessage(!1)
						}, i.showMessage = function(e, t) {
							this.message.setVisible(e), t && (this.message.setText(t), this.messageAnimation.play())
						}, i.createBackground = function() {
							this.background = new ro(this.scene, 0, 0, 310, 350), this.add(this.background)
						}, i.updateSize = function() {
							var e = this.background,
								t = e.width,
								i = e.height;
							this.setSize(t, i)
						}, i.createLoading = function() {
							this.loading = new yo.Z(this.scene), this.add(this.loading), this.loading.setTint(5982858), this.loading.setWorldSize(55, 55), Phaser.Display.Align.In.Center(this.loading, this.background)
						}, i.createMessage = function() {
							this.message = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(18),
								origin: {
									x: .5,
									y: .5
								}
							}), this.add(this.message), Phaser.Display.Align.In.Center(this.message, this.background)
						}, i.createContents = function() {
							this.createLeaders(), this.createTitle(), this.createTabs()
						}, i.createLeaders = function() {
							this.leaders = new UG(this.scene), this.add(this.leaders), Phaser.Display.Align.In.Center(this.leaders, this.background, 0, 0)
						}, i.createTitle = function() {
							var e = new io(this.scene, {
								title: "Leaderboards",
								titleSize: 25
							});
							e.changeRibbon(zG.RIBBON_PINK, 276.5, 68.5), e.changeBackground(zG.BLANK, 204, 61.5), Phaser.Display.Align.In.TopCenter(e, this.background, 0, 75), this.add(e)
						}, i.createTabs = function() {
							this.tabs = new HG(this.scene), this.add(this.tabs), Phaser.Display.Align.In.TopCenter(this.tabs, this.background, 0, -45)
						}, i.createAnimation = function() {
							this.messageAnimation = new yE.Z({
								targets: [this.message],
								duration: 60,
								repeat: 2
							})
						}, t
					}(Phaser.GameObjects.Container),
					VG = XG,
					JG = GameCore.Configs.LeadersBoard,
					qG = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).board = void 0, i.footerButtons = void 0, i.tabId = void 0, i.offset = void 0, i.isSwitchable = void 0, i.isRequesting = void 0, i.run = function() {
								i.isRequesting = !1;
								var e = [{
									selector: BG,
									callback: function(e) {
										if (i.isRequesting = e, i.board.showLoading(e), !1 === e) {
											var t = i.game.storage.getState(),
												n = wG(t);
											i.time.delayedCall(0, (function() {
												i.board.leaders.updateData(n)
											}))
										}
									}
								}];
								i.handleStateChange(e), i.selectFriendTab()
							}, i.handleSelectFriendTab = function() {
								i.isRequesting || i.isSwitchable && (i.isSwitchable = !1, i.selectFriendTab())
							}, i.handleSelectWorldTab = function() {
								i.isRequesting || i.isSwitchable && (i.isSwitchable = !1, i.selectWorldTab())
							}, i.handleHomeClick = function() {
								i.scene.switch(In.C.DASHBOARD_SCENE)
							}, i.handleShareLeaderboard = function() {
								i.storage.dispatch((0, Zl.mi)())
							}, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.preload = function() {
							this.events.on("wake", this.run), this.events.on("create", this.run)
						}, i.create = function() {
							e.prototype.create.call(this), this.createBackground(Yn.Z.OTHER_BACKGROUND.KEY), this.createBoard(), this.createFooter()
						}, i.selectFriendTab = function() {
							this.tabId = Ro.n, this.offset = 0, this.board.showLoading(!0), this.board.leaders.removeLeaders(), this.board.tabs.selectTabFriends(), this.storage.dispatch(No(JG.LeaderboardId, Ro.n, JG.Limit, this.offset))
						}, i.selectWorldTab = function() {
							this.tabId = Ro.C, this.offset = 0, this.board.showLoading(!0), this.board.leaders.removeLeaders(), this.board.tabs.selectTabWorld(), this.storage.dispatch(No(JG.LeaderboardId, Ro.C, JG.Limit, this.offset))
						}, i.loadMoreTabFriend = function() {
							this.isRequesting || (this.offset += JG.Limit, this.storage.dispatch(No(JG.LeaderboardId, Ro.n, JG.Limit, this.offset)))
						}, i.loadMoreTabWorld = function() {
							this.isRequesting || (this.offset += JG.Limit, this.storage.dispatch(No(JG.LeaderboardId, Ro.C, JG.Limit, this.offset)))
						}, i.createBoard = function() {
							this.board = new VG(this), Phaser.Display.Align.In.Center(this.board, this.gameZone), this.board.tabs.tabWorld.onClick = this.handleSelectWorldTab, this.board.tabs.tabFriends.onClick = this.handleSelectFriendTab
						}, i.createFooter = function() {
							this.footerButtons = new kG(this), Phaser.Display.Align.In.BottomCenter(this.footerButtons, this.board, 0, 45), this.footerButtons.homeButton.onClick = this.handleHomeClick, this.footerButtons.shareButton.onClick = this.handleShareLeaderboard
						}, t
					}(En.Z);
				var QG = qG,
					$G = GameCore.Configs.Notification.ApiUrl,
					eD = function() {
						var e = (0, r.Z)(h().mark((function e(t) {
							var i, n;
							return h().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return i = t.playerId, e.next = 3, (0, _e.v)("players/" + i, t, {}, $G, 10);
									case 3:
										return n = e.sent, e.abrupt("return", (null == n ? void 0 : n.data) || {});
									case 5:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}(),
					tD = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).name = "LoadResourceFail", n.message = t || "Load resource fail", n.payload = i, n
						}
						return (0, l.Z)(t, e), t
					}((0, P.Z)(Error)),
					iD = function() {
						return function(e, t) {
							var i = window.game,
								n = i.player,
								a = i.analytics,
								s = i.globalScene;
							try {
								var o = t(),
									r = (0, Rn.f)(o),
									l = ((0, Rn.F)(o), n.getPlayer(), (r.entryPointData || {}).type, 1 === n.getLevel());
								if (l && a.event(Xt._.NEW_USER), Wl.jt, l) return void e(nD());
								s.events.emit(In.K.SWITCH, In.C.DASHBOARD_SCENE)
							} catch (c) {
								s.events.emit(In.K.SWITCH, In.C.DASHBOARD_SCENE)
							}
						}
					},
					nD = function() {
						return function(e) {
							try {
								e((0, Ua.rq)())
							} catch (t) {
								throw new Error("processNewUserMode: " + t)
							}
						}
					},
					aD = i(55481),
					sD = {
						BACKGROUND: {
							KEY: "background",
							FILE: "./assets/music/bg_music.mp3"
						},
						EFFECTS: {
							KEY: "effects",
							FILE: "./assets/sounds/effects.mp3",
							JSON: "./assets/sounds/effects.json",
							PATH: "./assets/sounds/"
						}
					},
					oD = i(53891),
					rD = GameCore.Configs,
					lD = rD.AppId,
					cD = rD.Notification,
					hD = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).loadAtlas32bitParameterQueues = [], i.loadLevelReadyPromise = void 0, i.handleFBInstantGameStarted = function() {
								window.__fbGameReady = !0, i.player.requestConnectedPlayers(), setTimeout(i.subscribebot, 500)
							}, i.processAfterUpdatePlayerProfile = function() {
								cD.Enable && i.updatePlayerProfileToNotificationService()
							}, i.startGame = (0, r.Z)(h().mark((function e() {
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return i.storage.dispatch((0, aD.I)(In.C.LOAD_SCENE)), e.next = 3, i.storage.dispatch(iD());
										case 3:
											i.analytics.event(Xt._.APP_READY);
										case 4:
										case "end":
											return e.stop()
									}
								}), e)
							}))), i.subscribebot = function() {
								i.facebook.attemptToSubscribeBot()
							}, i.handleLoadMusicCompleted = function() {
								i.audio.initMusic(sD.BACKGROUND.KEY), i.audio.playMusic()
							}, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.preload = function() {
							var e = this;
							this.facebook.progressLoading.loadingProgressFbLoadScene(), this.analytics.event(Xt._.SCREEN_OPEN, {
								screen_name: "LoadScene"
							}), this.load.on("progress", (function(t) {
								e.facebook.progressLoading.onProgress(t)
							})), this.load.on(Phaser.Loader.Events.FILE_LOAD_ERROR, (function(e) {
								var t = new tD("Load resources at LoadScene failed.");
								(0, a.R0)(t, {
									file: null == e ? void 0 : e.url
								})
							})), this.load.on(Phaser.Loader.Events.COMPLETE, (function() {
								e.load.off(Phaser.Loader.Events.FILE_LOAD_ERROR)
							})), this.loadFonts(), this.loadNormalFonts(), this.load.image(Yn.Z.AVATAR.KEY, Yn.Z.AVATAR.FILE), this.load.image(Yn.Z.BACKGROUND.KEY, Yn.Z.BACKGROUND.FILE), this.load.atlas({
								key: aa.Z.DEFAULT.KEY,
								textureURL: aa.Z.DEFAULT.TEXTURE,
								atlasURL: aa.Z.DEFAULT.JSON
							}), this.load.atlas({
								key: aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.KEY,
								textureURL: aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.TEXTURE,
								atlasURL: aa.Z.FIRST_10_LEVELS_GAME_OBJECTS.JSON
							}), this.load.atlas({
								key: aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES.KEY,
								textureURL: aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES.TEXTURE,
								atlasURL: aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES.JSON
							}), this.loadBitmapFontFromAtlas(_a.Z.NUMBERS_SYMBOLS.KEY, aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES.KEY, _a.Z.NUMBERS_SYMBOLS.FRAME, _a.Z.NUMBERS_SYMBOLS.DATA), this.loadGameplayEffectTexture(), this.load.atlas({
								key: aa.Z.GAMEPLAY.GAME_OBJECTS.KEY,
								textureURL: aa.Z.GAMEPLAY.GAME_OBJECTS.TEXTURE,
								atlasURL: aa.Z.GAMEPLAY.GAME_OBJECTS.JSON
							}), this.load.atlas({
								key: aa.Z.EFFECTS.KEY,
								textureURL: aa.Z.EFFECTS.TEXTURE,
								atlasURL: aa.Z.EFFECTS.JSON
							}), this.load.atlas({
								key: aa.Z.THEME.DEFAULT.KEY,
								textureURL: aa.Z.THEME.DEFAULT.TEXTURE,
								atlasURL: aa.Z.THEME.DEFAULT.JSON
							}), this.load.atlas({
								key: aa.Z.THEME.HARD.KEY,
								textureURL: aa.Z.THEME.HARD.TEXTURE,
								atlasURL: aa.Z.THEME.HARD.JSON
							}), this.load.atlas({
								key: aa.Z.THEME_GAMEPLAY.DEFAULT.KEY,
								textureURL: aa.Z.THEME_GAMEPLAY.DEFAULT.TEXTURE,
								atlasURL: aa.Z.THEME_GAMEPLAY.DEFAULT.JSON
							}), this.load.atlas({
								key: aa.Z.THEME_GAMEPLAY.HARD.KEY,
								textureURL: aa.Z.THEME_GAMEPLAY.HARD.TEXTURE,
								atlasURL: aa.Z.THEME_GAMEPLAY.HARD.JSON
							}), GameCore.Utils.Device.isDesktop() || (this.load.image(Yn.Z.GAME_BACKGROUND_THEME.DEFAULT.KEY, Yn.Z.GAME_BACKGROUND_THEME.DEFAULT.FILE), this.load.image(Yn.Z.GAME_BACKGROUND_THEME.HARD.KEY, Yn.Z.GAME_BACKGROUND_THEME.HARD.FILE)), this.loadLevelReadyPromise = this.loadPlayerDataPromises()
						}, i.create = function() {
							this.initTheme(), this.createAsync()
						}, i.createAsync = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, this.loadLevelReadyPromise;
										case 2:
											this.player.updateData().then(this.processAfterUpdatePlayerProfile).catch(a.tO), t = this.player.getLevel(), this.level.preloadLevelDataAsync(t), this.analytics.event(Xt._.LOAD_COMPLETE), this.facebook.on("startgame", this.handleFBInstantGameStarted), this.facebook.gameStarted(), this.setupGlobalScene(), this.lazyLoadResource(), this.startGame();
										case 11:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.handleDisableAd = function() {
							var e = this;
							this.player.getPurchases().forEach((function(t) {
								var i = t.productID;
								if (ue()(i).call(i, "remove_ad")) {
									var n = Iu.Z.PRODUCTS[i];
									if (void 0 !== n.removeAdDays) {
										var a = n.removeAdDays,
											s = (new Date).valueOf() / 1e3,
											o = Number(t.purchaseTime) + 24 * a * 3600;
										s <= o && e.ads.setDisabledInterstitialAds(Math.ceil((o - s) / 86400))
									}
								}
							}))
						}, i.updatePlayerProfileToNotificationService = function() {
							var e = this.player.getPlayer(),
								t = e.playerId,
								i = e.name,
								n = e.photo,
								a = e.locale,
								s = e.ASID;
							eD({
								appId: lD,
								playerId: t,
								name: i,
								photo: n,
								locale: a,
								ASID: s
							})
						}, i.sendNotificationForNewUser = function() {
							if (this.player.getPlayerIsNew()) {
								var e = this.player.getPlayerASID();
								e && this.facebook.sendNotificationAsync({
									message: "Hi @[" + e + "] your friends are waiting to play with you, play now!",
									delayTime: 3600
								})
							}
						}, i.setupGlobalScene = function() {
							var e = this.scene.get(In.C.GLOBAL_SCENE);
							e instanceof oD.Z && e.setup()
						}, i.lazyLoadResource = function() {
							var e = this;
							setTimeout((function() {
								e.scene.wake(), e.loadSounds(), e.load32bitTextures(), e.load.start(), e.load.once(Phaser.Loader.Events.COMPLETE, (function() {
									e.scene.sleep(), e.load.off(Phaser.Loader.Events.FILE_COMPLETE)
								}))
							}), 1500)
						}, i.loadSounds = function() {
							var e = Phaser.Loader.Events.FILE_KEY_COMPLETE;
							this.load.once(e + "audio-" + sD.BACKGROUND.KEY, this.handleLoadMusicCompleted), this.load.audio(sD.BACKGROUND.KEY, sD.BACKGROUND.FILE);
							for (var t = 0, i = K()(sa.Z); t < i.length; t++) {
								var n = i[t],
									a = sa.Z[n];
								this.load.audio(a, [sD.EFFECTS.PATH + a + ".ogg", sD.EFFECTS.PATH + a + ".mp3"])
							}
							this.load.start()
						}, i.loadWideframesResource = function() {
							this.frameCapture.preload({
								"wide-frame-message-win": "./assets/wideframes/wide-frame-message-win.png"
							})
						}, i.loadPlayerDataPromises = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, i = this;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return t = [], e.prev = 1, t.push(new(oe())((function(e) {
												FBInstant.player.getDataAsync(["level", "levelStars", "lastTimePlayed", "bonusBullets", "purchases", "dailyRewarded", "specialEvents"]).then((function(t) {
													var n = Number(null == t ? void 0 : t.level) || 1,
														a = (null == t ? void 0 : t.levelStars) || {},
														s = Number(null == t ? void 0 : t.lastTimePlayed) || 0,
														o = Number(null == t ? void 0 : t.bonusBullets) || 0,
														r = (null == t ? void 0 : t.purchases) || [],
														l = (null == t ? void 0 : t.dailyRewarded) || {},
														c = (null == t ? void 0 : t.specialEvents) || {};
													if ("string" === typeof a) try {
														a = JSON.parse(a)
													} catch (u) {
														a = {}
													}
													if ("string" === typeof r) try {
														r = JSON.parse(r)
													} catch (d) {
														r = []
													}
													if ("string" === typeof l) try {
														l = JSON.parse(l)
													} catch (p) {
														l = {}
													}
													if ("string" === typeof c) try {
														c = JSON.parse(l)
													} catch (m) {
														c = {}
													}
													var h = {
														level: n,
														levelStars: a,
														lastTimePlayed: s,
														bonusBullets: o,
														purchases: r,
														dailyRewarded: l,
														specialEvents: c
													};
													i.storage.dispatch(Mt(h)), i.level.setLevel(n), i.handleDisableAd(), e({})
												})).catch(a.tO)
											}))), t.push(this.level.preloadLevelConfigMapAsync()), e.next = 6, oe().all(t);
										case 6:
											e.next = 11;
											break;
										case 8:
											e.prev = 8, e.t0 = e.catch(1), (0, a.tO)(e.t0);
										case 11:
										case "end":
											return e.stop()
									}
								}), e, this, [
									[1, 8]
								])
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.initTheme = function() {
							var e = this,
								t = aa.Z.THEME;
							this.theme.addTheme({
								key: aa.Z.THEME.KEY,
								themes: [{
									textureKey: t.DEFAULT.KEY,
									params: {
										color: t.DEFAULT.COLOR
									}
								}, {
									textureKey: t.HARD.KEY,
									params: {
										color: t.HARD.COLOR
									}
								}]
							}), GameCore.Utils.Device.isDesktop() ? this.theme.events.on(this.theme.EVENTS.THEME_CHANGE + "-" + t.KEY, (function() {
								var i = (0, pn.B)(),
									n = document.getElementById("background"),
									a = document.getElementById("line-left"),
									s = document.getElementById("line-right");
								e.theme.getCurrentTheme(t.KEY).textureKey === t.HARD.KEY ? (n.setAttribute("src", i + "assets/images/bg-desktop-hard.jpg"), a.setAttribute("src", i + "assets/images/line-hard.png"), s.setAttribute("src", i + "assets/images/line-hard.png")) : (n.setAttribute("src", i + "assets/images/bg-desktop.jpg"), a.setAttribute("src", i + "assets/images/line.png"), s.setAttribute("src", i + "assets/images/line.png"))
							})) : this.theme.addTheme({
								key: Yn.Z.GAME_BACKGROUND_THEME.KEY,
								themes: [{
									textureKey: Yn.Z.GAME_BACKGROUND_THEME.DEFAULT.KEY
								}, {
									textureKey: Yn.Z.GAME_BACKGROUND_THEME.HARD.KEY
								}]
							}), this.theme.addTheme({
								key: aa.Z.THEME_GAMEPLAY.KEY,
								themes: [{
									textureKey: aa.Z.THEME_GAMEPLAY.DEFAULT.KEY,
									params: {
										color: aa.Z.THEME_GAMEPLAY.DEFAULT.COLOR
									}
								}, {
									textureKey: aa.Z.THEME_GAMEPLAY.HARD.KEY,
									params: {
										color: aa.Z.THEME_GAMEPLAY.HARD.COLOR
									}
								}]
							})
						}, i.load32bitTextures = function() {
							var e = this.getParameterGameplayEffect32bitTexture();
							this.loadAtlas32bitParameterQueues = [{
								key: aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES.KEY,
								texture: aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES.TEXTURE,
								json: aa.Z.GAMEPLAY.GAMEPLAY_TEXTURES.JSON
							}, {
								key: aa.Z.THEME_GAMEPLAY.DEFAULT.KEY,
								texture: aa.Z.THEME_GAMEPLAY.DEFAULT.TEXTURE,
								json: aa.Z.THEME_GAMEPLAY.DEFAULT.JSON
							}, {
								key: aa.Z.THEME_GAMEPLAY.HARD.KEY,
								texture: aa.Z.THEME_GAMEPLAY.HARD.TEXTURE,
								json: aa.Z.THEME_GAMEPLAY.HARD.JSON
							}, e, {
								key: aa.Z.EFFECTS.KEY,
								texture: aa.Z.EFFECTS.TEXTURE,
								json: aa.Z.EFFECTS.JSON
							}, {
								key: aa.Z.DEFAULT.KEY,
								texture: aa.Z.DEFAULT.TEXTURE,
								json: aa.Z.DEFAULT.JSON
							}, {
								key: aa.Z.THEME.DEFAULT.KEY,
								texture: aa.Z.THEME.DEFAULT.TEXTURE,
								json: aa.Z.THEME.DEFAULT.JSON
							}, {
								key: aa.Z.THEME.HARD.KEY,
								texture: aa.Z.THEME.HARD.TEXTURE,
								json: aa.Z.THEME.HARD.JSON
							}], this.loadAtlas32bit(aa.Z.GAMEPLAY.GAME_OBJECTS.KEY, aa.Z.GAMEPLAY.GAME_OBJECTS.TEXTURE, aa.Z.GAMEPLAY.GAME_OBJECTS.JSON)
						}, i.getParameterGameplayEffect32bitTexture = function() {
							switch (this.scene.get(In.C.GAME_SCENE).lang.getCurrentLanguage()) {
								case "de":
									return {
										key: aa.Z.GAMEPLAY.EFFECTS.KEY, texture: aa.Z.GAMEPLAY.EFFECTS.DE_TEXTURE, json: aa.Z.GAMEPLAY.EFFECTS.DE_JSON
									};
								case "es":
									return {
										key: aa.Z.GAMEPLAY.EFFECTS.KEY, texture: aa.Z.GAMEPLAY.EFFECTS.ES_TEXTURE, json: aa.Z.GAMEPLAY.EFFECTS.ES_JSON
									};
								case "fr":
									return {
										key: aa.Z.GAMEPLAY.EFFECTS.KEY, texture: aa.Z.GAMEPLAY.EFFECTS.FR_TEXTURE, json: aa.Z.GAMEPLAY.EFFECTS.FR_JSON
									};
								case "id":
									return {
										key: aa.Z.GAMEPLAY.EFFECTS.KEY, texture: aa.Z.GAMEPLAY.EFFECTS.ID_TEXTURE, json: aa.Z.GAMEPLAY.EFFECTS.ID_JSON
									};
								case "it":
									return {
										key: aa.Z.GAMEPLAY.EFFECTS.KEY, texture: aa.Z.GAMEPLAY.EFFECTS.IT_TEXTURE, json: aa.Z.GAMEPLAY.EFFECTS.IT_JSON
									};
								case "ja":
									return {
										key: aa.Z.GAMEPLAY.EFFECTS.KEY, texture: aa.Z.GAMEPLAY.EFFECTS.JA_TEXTURE, json: aa.Z.GAMEPLAY.EFFECTS.JA_JSON
									};
								case "pt":
									return {
										key: aa.Z.GAMEPLAY.EFFECTS.KEY, texture: aa.Z.GAMEPLAY.EFFECTS.PT_TEXTURE, json: aa.Z.GAMEPLAY.EFFECTS.PT_JSON
									};
								case "ru":
									return {
										key: aa.Z.GAMEPLAY.EFFECTS.KEY, texture: aa.Z.GAMEPLAY.EFFECTS.RU_TEXTURE, json: aa.Z.GAMEPLAY.EFFECTS.RU_JSON
									};
								case "zh":
									return {
										key: aa.Z.GAMEPLAY.EFFECTS.KEY, texture: aa.Z.GAMEPLAY.EFFECTS.ZH_TEXTURE, json: aa.Z.GAMEPLAY.EFFECTS.ZH_JSON
									};
								case "tr":
									return {
										key: aa.Z.GAMEPLAY.EFFECTS.KEY, texture: aa.Z.GAMEPLAY.EFFECTS.TR_TEXTURE, json: aa.Z.GAMEPLAY.EFFECTS.TR_JSON
									};
								default:
									return {
										key: aa.Z.GAMEPLAY.EFFECTS.KEY, texture: aa.Z.GAMEPLAY.EFFECTS.TEXTURE, json: aa.Z.GAMEPLAY.EFFECTS.JSON
									}
							}
						}, i.loadImage32bit = function(e, t) {
							var i = t.replace("8bit", "32bit"),
								n = e + "-32bit";
							this.load.image(n, i), this.addEventOverride32BitTexture(n, e)
						}, i.loadAtlas32bit = function(e, t, i) {
							var n = t.replace("8bit", "32bit"),
								a = i.replace("8bit", "32bit"),
								s = e + "-32bit";
							this.load.atlas({
								key: s,
								textureURL: n,
								atlasURL: a
							}), this.addEventOverride32BitTexture(s, e)
						}, i.loadMultiAtlas32bit = function(e, t, i) {
							var n = t.replace("8bit", "32bit"),
								a = i.replace("8bit", "32bit"),
								s = e + "-32bit";
							this.load.multiatlas(s, n, a), this.addEventOverride32BitTexture(s, e)
						}, i.addEventOverride32BitTexture = function(e, t) {
							var i = this;
							this.load.on(Phaser.Loader.Events.FILE_COMPLETE, (function(n) {
								if (n == e && i.textures.exists(e) && i.textures.exists(t)) {
									var a = i.textures.get(e);
									if (i.textures.get(t).copy(a), 0 !== i.loadAtlas32bitParameterQueues.length) {
										var s = i.loadAtlas32bitParameterQueues.shift();
										s && i.loadAtlas32bit(s.key, s.texture, s.json)
									}
								}
							}))
						}, i.loadBitmapFontFromAtlas = function(e, t, i, n, a, s) {
							var o = this,
								r = e + "_data";
							return this.load.xml(r, n), this.load.once(Phaser.Loader.Events.COMPLETE, (function() {
								Phaser.GameObjects.BitmapText.ParseFromAtlas(o, e, t, i, r, a, s)
							})), this.load
						}, i.loadFonts = function() {
							switch (this.scene.get(In.C.GAME_SCENE).lang.getCurrentLanguage()) {
								case "de":
									this.load.bitmapFont(_a.Z.PRIMARY.KEY, _a.Z.PRIMARY.DE_TEXTURE, _a.Z.PRIMARY.DE_DATA);
									break;
								case "es":
									this.load.bitmapFont(_a.Z.PRIMARY.KEY, _a.Z.PRIMARY.ES_TEXTURE, _a.Z.PRIMARY.ES_DATA);
									break;
								case "fr":
									this.load.bitmapFont(_a.Z.PRIMARY.KEY, _a.Z.PRIMARY.FR_TEXTURE, _a.Z.PRIMARY.FR_DATA);
									break;
								case "id":
									this.load.bitmapFont(_a.Z.PRIMARY.KEY, _a.Z.PRIMARY.ID_TEXTURE, _a.Z.PRIMARY.ID_DATA);
									break;
								case "it":
									this.load.bitmapFont(_a.Z.PRIMARY.KEY, _a.Z.PRIMARY.IT_TEXTURE, _a.Z.PRIMARY.IT_DATA);
									break;
								case "ja":
									this.load.bitmapFont(_a.Z.PRIMARY.KEY, _a.Z.PRIMARY.JA_TEXTURE, _a.Z.PRIMARY.JA_DATA);
									break;
								case "pt":
									this.load.bitmapFont(_a.Z.PRIMARY.KEY, _a.Z.PRIMARY.PT_TEXTURE, _a.Z.PRIMARY.PT_DATA);
									break;
								case "ru":
									this.load.bitmapFont(_a.Z.PRIMARY.KEY, _a.Z.PRIMARY.RU_TEXTURE, _a.Z.PRIMARY.RU_DATA);
									break;
								case "zh":
									this.load.bitmapFont(_a.Z.PRIMARY.KEY, _a.Z.PRIMARY.ZH_TEXTURE, _a.Z.PRIMARY.ZH_DATA);
									break;
								case "tr":
									this.load.bitmapFont(_a.Z.PRIMARY.KEY, _a.Z.PRIMARY.TR_TEXTURE, _a.Z.PRIMARY.TR_DATA);
									break;
								default:
									this.load.bitmapFont(_a.Z.PRIMARY.KEY, _a.Z.PRIMARY.TEXTURE, _a.Z.PRIMARY.DATA)
							}
						}, i.loadNormalFonts = function() {
							switch (this.scene.get(In.C.GAME_SCENE).lang.getCurrentLanguage()) {
								case "ru":
									this.load.bitmapFont(_a.Z.NORMAL.KEY, _a.Z.NORMAL.RU_TEXTURE, _a.Z.NORMAL.RU_DATA);
									break;
								case "tr":
									this.load.bitmapFont(_a.Z.NORMAL.KEY, _a.Z.NORMAL.TR_TEXTURE, _a.Z.NORMAL.TR_DATA);
									break;
								case "zh":
									this.load.bitmapFont(_a.Z.NORMAL.KEY, _a.Z.NORMAL.ZH_TEXTURE, _a.Z.NORMAL.ZH_DATA);
									break;
								case "ja":
									this.load.bitmapFont(_a.Z.NORMAL.KEY, _a.Z.NORMAL.JA_TEXTURE, _a.Z.NORMAL.JA_DATA);
									break;
								case "pt":
									this.load.bitmapFont(_a.Z.NORMAL.KEY, _a.Z.NORMAL.PT_TEXTURE, _a.Z.NORMAL.PT_DATA);
									break;
								case "it":
									this.load.bitmapFont(_a.Z.NORMAL.KEY, _a.Z.NORMAL.IT_TEXTURE, _a.Z.NORMAL.IT_DATA);
									break;
								case "id":
									this.load.bitmapFont(_a.Z.NORMAL.KEY, _a.Z.NORMAL.ID_TEXTURE, _a.Z.NORMAL.ID_DATA);
									break;
								case "es":
									this.load.bitmapFont(_a.Z.NORMAL.KEY, _a.Z.NORMAL.ES_TEXTURE, _a.Z.NORMAL.ES_DATA);
									break;
								case "de":
									this.load.bitmapFont(_a.Z.NORMAL.KEY, _a.Z.NORMAL.DE_TEXTURE, _a.Z.NORMAL.DE_DATA);
									break;
								case "fr":
									this.load.bitmapFont(_a.Z.NORMAL.KEY, _a.Z.NORMAL.FR_TEXTURE, _a.Z.NORMAL.FR_DATA);
									break;
								default:
									this.load.bitmapFont(_a.Z.NORMAL.KEY, _a.Z.NORMAL.TEXTURE, _a.Z.NORMAL.DATA)
							}
						}, i.loadGameplayEffectTexture = function() {
							switch (this.scene.get(In.C.GAME_SCENE).lang.getCurrentLanguage()) {
								case "de":
									this.load.atlas({
										key: aa.Z.GAMEPLAY.EFFECTS.KEY,
										textureURL: aa.Z.GAMEPLAY.EFFECTS.DE_TEXTURE,
										atlasURL: aa.Z.GAMEPLAY.EFFECTS.DE_JSON
									});
									break;
								case "es":
									this.load.atlas({
										key: aa.Z.GAMEPLAY.EFFECTS.KEY,
										textureURL: aa.Z.GAMEPLAY.EFFECTS.ES_TEXTURE,
										atlasURL: aa.Z.GAMEPLAY.EFFECTS.ES_JSON
									});
									break;
								case "fr":
									this.load.atlas({
										key: aa.Z.GAMEPLAY.EFFECTS.KEY,
										textureURL: aa.Z.GAMEPLAY.EFFECTS.FR_TEXTURE,
										atlasURL: aa.Z.GAMEPLAY.EFFECTS.FR_JSON
									});
									break;
								case "id":
									this.load.atlas({
										key: aa.Z.GAMEPLAY.EFFECTS.KEY,
										textureURL: aa.Z.GAMEPLAY.EFFECTS.ID_TEXTURE,
										atlasURL: aa.Z.GAMEPLAY.EFFECTS.ID_JSON
									});
									break;
								case "it":
									this.load.atlas({
										key: aa.Z.GAMEPLAY.EFFECTS.KEY,
										textureURL: aa.Z.GAMEPLAY.EFFECTS.IT_TEXTURE,
										atlasURL: aa.Z.GAMEPLAY.EFFECTS.IT_JSON
									});
									break;
								case "ja":
									this.load.atlas({
										key: aa.Z.GAMEPLAY.EFFECTS.KEY,
										textureURL: aa.Z.GAMEPLAY.EFFECTS.JA_TEXTURE,
										atlasURL: aa.Z.GAMEPLAY.EFFECTS.JA_JSON
									});
									break;
								case "pt":
									this.load.atlas({
										key: aa.Z.GAMEPLAY.EFFECTS.KEY,
										textureURL: aa.Z.GAMEPLAY.EFFECTS.PT_TEXTURE,
										atlasURL: aa.Z.GAMEPLAY.EFFECTS.PT_JSON
									});
									break;
								case "ru":
									this.load.atlas({
										key: aa.Z.GAMEPLAY.EFFECTS.KEY,
										textureURL: aa.Z.GAMEPLAY.EFFECTS.RU_TEXTURE,
										atlasURL: aa.Z.GAMEPLAY.EFFECTS.RU_JSON
									});
									break;
								case "zh":
									this.load.atlas({
										key: aa.Z.GAMEPLAY.EFFECTS.KEY,
										textureURL: aa.Z.GAMEPLAY.EFFECTS.ZH_TEXTURE,
										atlasURL: aa.Z.GAMEPLAY.EFFECTS.ZH_JSON
									});
									break;
								case "tr":
									this.load.atlas({
										key: aa.Z.GAMEPLAY.EFFECTS.KEY,
										textureURL: aa.Z.GAMEPLAY.EFFECTS.TR_TEXTURE,
										atlasURL: aa.Z.GAMEPLAY.EFFECTS.TR_JSON
									});
									break;
								default:
									this.load.atlas({
										key: aa.Z.GAMEPLAY.EFFECTS.KEY,
										textureURL: aa.Z.GAMEPLAY.EFFECTS.TEXTURE,
										atlasURL: aa.Z.GAMEPLAY.EFFECTS.JSON
									})
							}
						}, t
					}(Phaser.Scene),
					uD = hD,
					dD = i(72119),
					pD = i.n(dD),
					mD = {
						targets: [],
						duration: 300,
						ease: Phaser.Math.Easing.Quadratic.Out,
						props: {
							x: 100
						}
					},
					fD = function(e) {
						function t(t) {
							return e.call(this, mD, t) || this
						}
						return (0, l.Z)(t, e), t.prototype.buildConfig = function(t, i) {
							if (null != i && i.props) {
								var n = i.props.x;
								i.props.x = function(e) {
									return e.x + n
								}
							}
							e.prototype.buildConfig.call(this, t, i)
						}, t
					}(Kn.Z),
					gD = aa.Z.DEFAULT,
					vD = gD.KEY,
					yD = gD.FRAME,
					bD = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).avatar = void 0, n.button = void 0, n.payload = void 0, n.payload = i, n.createAvatar(), n.createButton(), n.scene.add.existing((0, Un.Z)(n)), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createAvatar = function() {
							var e = this.payload,
								t = e.playerId,
								i = e.playerPhoto;
							this.avatar = new Eo(this.scene, {
								id: t,
								url: i,
								key: vD,
								frame: yD.AVATAR_FRAME_PURPLE_BIG,
								background: yD.AVATAR_BG,
								width: 58,
								height: 58,
								radius: 34
							}), this.avatar.photo.setWorldSize(48, 48), this.add(this.avatar), this.avatar.setPosition(0, -15)
						}, i.createButton = function() {
							var e = this.payload.buttonText;
							this.button = new ea.Z(this.scene, vD, yD.BUTTON_GREEN_SHORT, 61.5, 32), this.button.setName("Challenge");
							var t = this.scene.make.text({
								text: e,
								style: {
									color: "#ffffff",
									fontFamily: _a.Z.FONT_FAMILY,
									fontSize: "10px",
									stroke: "#000000",
									strokeThickness: 2
								}
							});
							t.setHighQuality(), this.button.add(t), this.add(this.button), Phaser.Display.Align.In.Center(t, this.button, 0, -1), this.button.setPosition(0, 32)
						}, (0, V.Z)(t, [{
							key: "onClick",
							set: function(e) {
								this.button.setInteractive({
									useHandCursor: !0
								}), this.button.on(Phaser.Input.Events.GAMEOBJECT_POINTER_DOWN, e)
							}
						}]), t
					}(Phaser.GameObjects.Container),
					ED = bD,
					TD = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t) || this).currentPlayerId = void 0, a.maskGraphics = void 0, a.group = void 0, a.onChallenge = void 0, a.setSize(i, n), a.group = a.scene.add.group(), a.currentPlayerId = a.scene.player.getPlayerId(), a.createMask(), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.updateData = function(e) {
							var t = this;
							this.group.clear(!0, !0);
							var i = function(i) {
								if (!GameCore.Utils.Object.hasOwn(e, i)) return "continue";
								var n = e[i],
									a = n.playerId,
									s = n.photo;
								if (t.currentPlayerId === a) return "continue";
								var o = new ED(t.scene, {
									playerId: a,
									playerPhoto: s,
									buttonText: "Challenge"
								});
								t.onChallenge && (o.onClick = function() {
									t.onChallenge(a)
								}), t.add(o), t.group.add(o)
							};
							for (var n in e) i(n);
							this.group.setX(-99, 66), this.updateMaskPosition()
						}, i.createMask = function() {
							this.maskGraphics = this.scene.make.graphics({
								fillStyle: {
									color: 255,
									alpha: 1
								},
								visible: !0
							});
							var e = this.width,
								t = this.height;
							this.maskGraphics.fillRect(-e / 2, -t / 2, e, t), this.setMask(this.maskGraphics.createGeometryMask()), this.updateMaskPosition()
						}, i.updateMaskPosition = function() {
							var e = this.getWorldPosition(),
								t = e.x,
								i = e.y;
							this.maskGraphics.setPosition(t, i)
						}, t
					}(Phaser.GameObjects.Container),
					AD = TD,
					SD = aa.Z.DEFAULT,
					_D = SD.KEY,
					CD = SD.FRAME,
					wD = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).moveIndex = void 0, i.currentPlayerId = void 0, i.linesGroup = void 0, i.background = void 0, i.loading = void 0, i.leftArrow = void 0, i.rightArrow = void 0, i.matchingBlock = void 0, i.friendList = void 0, i.nextAnim = void 0, i.prevAnim = void 0, i.handlePrevList = function() {
								var e, t, n;
								null != (e = i.prevAnim) && null != (t = e.tween) && t.isPlaying() && i.prevAnim.tween.complete(), null == (n = i.prevAnim) || n.remove();
								var a = i.friendList.group.getChildren();
								i.prevAnim = new fD({
									targets: a,
									duration: 300,
									props: {
										x: 66
									},
									onStart: function() {
										i.leftArrow.setVisible(i.moveIndex > 0)
									},
									onComplete: function() {
										i.rightArrow.setVisible(i.moveIndex < a.length - 4)
									}
								}), i.moveIndex--, i.prevAnim.play()
							}, i.handleNextList = function() {
								var e, t, n;
								null != (e = i.nextAnim) && null != (t = e.tween) && t.isPlaying() && i.nextAnim.tween.complete(), null == (n = i.nextAnim) || n.remove();
								var a = i.friendList.group.getChildren();
								i.nextAnim = new fD({
									targets: a,
									duration: 300,
									props: {
										x: -66
									},
									onStart: function() {
										i.rightArrow.setVisible(i.moveIndex < a.length - 4)
									},
									onComplete: function() {
										i.leftArrow.setVisible(i.moveIndex > 0)
									}
								}), i.moveIndex++, i.nextAnim.play()
							}, i.currentPlayerId = i.scene.player.getPlayerId(), i.createBackground(), i.createLines(), i.createFriendList(), i.createMatchingBlock(), i.createLeftArrow(), i.createRightArrow(), i.createLoading(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.updateFriends = function(e) {
							this.loading.setVisible(!1);
							var t = 0;
							for (var i in e)
								if (GameCore.Utils.Object.hasOwn(e, i)) {
									var n = e[i].playerId;
									this.currentPlayerId !== n && t++
								} if (t < 1) this.matchingBlock.revive();
							else {
								this.matchingBlock.kill();
								var a = t > 4;
								this.rightArrow.setVisible(a), this.linesGroup.setVisible(!0), this.moveIndex = 0, this.friendList.updateData(e)
							}
						}, i.createBackground = function() {
							this.background = new ro(this.scene, 0, 0, 306, 130), this.add(this.background)
						}, i.createLines = function() {
							this.linesGroup = this.scene.make.group({
								key: _D,
								frame: CD.LINE_VER,
								repeat: 2
							}), this.linesGroup.children.each((function(e) {
								var t = e;
								t.setAlpha(.6), t.setWorldSize(2, 106)
							})), this.linesGroup.setX(-66, 66), this.linesGroup.setVisible(!1), this.add(pD()(this.linesGroup.children))
						}, i.createLeftArrow = function() {
							this.leftArrow = new ea.Z(this.scene, _D, CD.ICON_ARROW_BIG, 18.5, 33.5), this.leftArrow.setName("Left"), this.leftArrow.setVisible(!1), this.leftArrow.setPosition(-150, 0), this.leftArrow.onClick = this.handlePrevList, this.add(this.leftArrow)
						}, i.createRightArrow = function() {
							this.rightArrow = new ea.Z(this.scene, _D, CD.ICON_ARROW_BIG, 18.5, 33.5), this.rightArrow.setName("Right"), this.rightArrow.setVisible(!1), this.rightArrow.setPosition(150, 0), this.rightArrow.button.setFlipX(!0), this.rightArrow.onClick = this.handleNextList, this.add(this.rightArrow)
						}, i.createLoading = function() {
							this.loading = new yo.Z(this.scene), this.loading.setDisplaySize(80, 80), this.add(this.loading)
						}, i.createFriendList = function() {
							var e = this.background,
								t = e.width,
								i = e.height;
							this.friendList = new AD(this.scene, t - 27, i), this.add(this.friendList)
						}, i.createMatchingBlock = function() {
							this.matchingBlock = new ED(this.scene, {
								playerId: Yn.Z.ICON_EARTH.KEY,
								playerPhoto: Yn.Z.ICON_EARTH.FILE,
								buttonText: "Random"
							}), this.matchingBlock.button.setName("JoinGroup"), this.matchingBlock.kill(), this.add(this.matchingBlock)
						}, t
					}(Phaser.GameObjects.Container),
					BD = wD,
					ID = aa.Z.DEFAULT,
					PD = ID.KEY,
					xD = ID.FRAME,
					OD = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, {
								key: PD,
								frame: xD.AVATAR_FRAME_BLUE_BIG,
								background: xD.AVATAR_BG_BIG,
								width: 104.5,
								height: 109.5,
								loadDelay: 100
							}) || this).glow = void 0, i.crown = void 0, i.glowAnimation = void 0, i.createGlow(), i.createCrown(), i.createGlowAnimation(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.updateData = function(e) {
							var t = e.isWin,
								i = e.id,
								n = e.photo;
							this.glow.setVisible(t), this.crown.setVisible(t), t ? this.avtFrame.setFrame(xD.AVATAR_FRAME_BLUE_BIG) : this.avtFrame.setFrame(xD.AVATAR_FRAME_PURPLE_BIG), this.loadPhoto(i, n), this.moveBelow(this.glow, this.background)
						}, i.setPhoto = function(t) {
							e.prototype.setPhoto.call(this, t);
							var i = this.payload,
								n = i.width,
								a = i.height,
								s = Math.min(n, a) - 24;
							this.photo.setWorldSize(s, s)
						}, i.createGlow = function() {
							var e = aa.Z.EFFECTS,
								t = e.KEY,
								i = e.FRAME;
							this.glow = this.scene.make.image({
								key: t,
								frame: i.FX_GLOW_LIGHT
							}), this.glow.setVisible(!1), this.glow.setWorldSize(206, 199.5), this.add(this.glow)
						}, i.createCrown = function() {
							this.crown = this.scene.make.image({
								key: PD,
								frame: xD.ICON_CROWN
							}), this.crown.setVisible(!1), this.crown.setPosition(-40, -50), this.crown.setWorldSize(57, 57.5), this.add(this.crown)
						}, i.createGlowAnimation = function() {
							this.glowAnimation = new Qr.Z({
								targets: [this.glow],
								repeat: -1,
								duration: 6e3
							}), this.glowAnimation.play()
						}, t
					}(Eo),
					kD = OD,
					RD = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).avatarLeft = void 0, i.avatarRight = void 0, i.scoreLeft = void 0, i.scoreRight = void 0, i.scene = t, i.createVsText(), i.createAvatarLeft(), i.createAvatarRight(), i.createScoreLeft(), i.createScoreRight(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createVsText = function() {
							var e = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(50),
								text: "VS",
								origin: {
									x: .5,
									y: .5
								}
							});
							this.add(e)
						}, i.createAvatarLeft = function() {
							this.avatarLeft = new kD(this.scene), this.avatarLeft.setPosition(-100, 0), this.add(this.avatarLeft)
						}, i.createAvatarRight = function() {
							this.avatarRight = new kD(this.scene), this.avatarRight.setPosition(100, 0), this.add(this.avatarRight)
						}, i.createScoreLeft = function() {
							this.scoreLeft = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(25),
								origin: {
									x: .5,
									y: .5
								}
							}), Phaser.Display.Align.In.BottomCenter(this.scoreLeft, this.avatarLeft, 0, 20), this.add(this.scoreLeft)
						}, i.createScoreRight = function() {
							this.scoreRight = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(25),
								origin: {
									x: .5,
									y: .5
								}
							}), Phaser.Display.Align.In.BottomCenter(this.scoreRight, this.avatarRight, 0, 20), this.add(this.scoreRight)
						}, t
					}(Phaser.GameObjects.Container),
					MD = RD,
					LD = aa.Z.DEFAULT.FRAME,
					GD = (GameCore.Configs.LeadersBoard, function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).result = void 0, i.dinoTitle = void 0, i.friendList = void 0, i.footerButtons = void 0, i.scaleAnimation = void 0, i.counterScoreTimer = void 0, i.counterPlayerScore = void 0, i.counterOpponentScore = void 0, i.confettiEffect = void 0, i.run = function() {
								i.loadFriendList(), i.updateResultInfo()
							}, i.handleChallengeFriend = function(e) {
								i.storage.dispatch((0, Ua.Xp)(e))
							}, i.handlePlayWithFriend = (0, r.Z)(h().mark((function e() {
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											i.storage.dispatch((0, Ua.H)());
										case 1:
										case "end":
											return e.stop()
									}
								}), e)
							}))), i.handleHomeClick = function() {
								i.scene.switch(In.C.DASHBOARD_SCENE)
							}, i.handleShareMatchResult = function() {
								i.storage.dispatch((0, Zl.Im)())
							}, i.handleMatchingGroup = (0, r.Z)(h().mark((function e() {
								var t, n, a, s, o, r, l, c, u;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return t = (0, Un.Z)(i), n = t.player, a = t.storage, s = t.game, o = t.facebook, e.prev = 1, s.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
												message: "Matching...",
												loading: !0
											}), r = n.getPlayer(), l = "global", "en" === (c = rp(r.locale)) && (l = "en"), "in" === c && (l = "in"), e.next = 10, o.matchPlayerAsync(l, !0, !0);
										case 10:
											if (u = e.sent, s.globalScene.screen.close(Wn.o4.NOTIFY_SCREEN), u) {
												e.next = 14;
												break
											}
											return e.abrupt("return");
										case 14:
											a.dispatch((0, Ua.b6)()), e.next = 21;
											break;
										case 17:
											e.prev = 17, e.t0 = e.catch(1), s.globalScene.screen.close(Wn.o4.NOTIFY_SCREEN);
										case 21:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[1, 17]
								])
							}))), i.runConfettiEffect = function() {
								i.confettiEffect.run(0, 675, 380, 675)
							}, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.preload = function() {
							this.events.on("wake", this.run), this.events.on("create", this.run)
						}, i.updateResultScreen = function(e, t, i, n) {
							this.updateTitle(e, t, i, n), this.updateAvatar(e, t, i, n), this.updateSoundEffect(e, t, i, n)
						}, i.updateResultInfo = function() {
							var e = this.storage.getState(),
								t = (0, sp.fQ)(e),
								i = (0, Ya.Jy)(e),
								n = this.player.getPlayer(),
								a = n.playerId,
								s = n.photo,
								o = (0, Bf.oN)(e),
								r = o.playerId,
								l = o.photo,
								c = (i[a] || {}).score,
								h = void 0 === c ? 0 : c,
								u = (i[r] || {}).score,
								d = void 0 === u ? 0 : u,
								p = (0, Bf.pP)(e, {
									playerId: a
								}),
								m = (0, Bf.zQ)(e, {
									opponentId: r
								});
							t === Wl.ey && (p = !0, m = !0), p && m ? this.runScoreCounter(p, m, h, d) : (this.setPlayerScore(h), this.setOpponentScore(d), this.updateResultScreen(p, m, h, d)), this.result.avatarLeft.updateData({
								id: a,
								photo: s,
								isWin: !1
							}), this.result.avatarRight.updateData({
								id: r,
								photo: l,
								isWin: !1
							})
						}, i.updateSoundEffect = function(e, t, i, n) {}, i.updateAvatar = function(e, t, i, n) {
							var a = this.storage.getState(),
								s = this.player.getPlayer(),
								o = s.playerId,
								r = s.photo,
								l = (0, Bf.oN)(a),
								c = l.playerId,
								h = l.photo,
								u = e && t;
							if (this.result.avatarLeft.updateData({
									id: o,
									photo: r,
									isWin: u && i > n
								}), this.result.avatarRight.updateData({
									id: c,
									photo: h,
									isWin: u && n > i
								}), u) {
								var d = i > n ? this.result.avatarLeft : this.result.avatarRight;
								this.runScaleAnimation(d)
							}
						}, i.updateTitle = function(e, t, i, n) {
							e && t ? i === n ? (this.dinoTitle.isDinoSad(!1), this.dinoTitle.title.setText("Draw")) : i > n ? (this.trumpetFire(), this.runConfettiEffect(), this.dinoTitle.isDinoSad(!1), this.dinoTitle.setTitle("You Win!")) : i < n && (this.dinoTitle.isDinoSad(!0), this.dinoTitle.setTitle("You Lose")) : (this.dinoTitle.isDinoSad(!1), this.dinoTitle.setTitle("Waiting"))
						}, i.loadFriendList = function() {
							var e = this.storage.getState(),
								t = rt(e);
							this.friendList.updateFriends(t)
						}, i.create = function() {
							e.prototype.create.call(this), this.createBackground(Yn.Z.OTHER_BACKGROUND.KEY), this.createDinoTitle(), this.createResultMatch(), this.createFriendList(), this.createFooter(), this.createConfettiEffect()
						}, i.createDinoTitle = function() {
							this.dinoTitle = new io(this, {
								title: "Result"
							}), this.dinoTitle.changeBackground(LD.BLANK, 278.5, 82), this.dinoTitle.background.y += 20, Phaser.Display.Align.In.TopCenter(this.dinoTitle, this.gameZone, 0, -90)
						}, i.createResultMatch = function() {
							this.result = new MD(this), Phaser.Display.Align.In.Center(this.result, this.gameZone, 0, -50)
						}, i.createFriendList = function() {
							this.friendList = new BD(this), this.friendList.friendList.onChallenge = this.handleChallengeFriend, this.friendList.matchingBlock.onClick = this.handleMatchingGroup, Phaser.Display.Align.In.Center(this.friendList, this.gameZone, 0, 120)
						}, i.createFooter = function() {
							this.footerButtons = new Fp(this), Phaser.Display.Align.In.BottomCenter(this.footerButtons, this.gameZone, 0, -80), this.footerButtons.homeButton.onClick = this.handleHomeClick, this.footerButtons.playButton.onClick = this.handlePlayWithFriend, this.footerButtons.shareButton.onClick = this.handleShareMatchResult
						}, i.setPlayerScore = function(e) {
							this.result.scoreLeft.setText("" + e)
						}, i.setOpponentScore = function(e) {
							this.result.scoreRight.setText("" + e)
						}, i.runScoreCounter = function(e, t, i, n) {
							var a, s, o, r = this;
							null == (a = this.counterScoreTimer) || a.remove(), null == (s = this.counterPlayerScore) || s.remove(), null == (o = this.counterOpponentScore) || o.remove(), this.counterScoreTimer = this.time.delayedCall(2800, (function() {
								r.setPlayerScore(i), r.setOpponentScore(n), r.updateResultScreen(e, t, i, n)
							})), this.counterPlayerScore = this.tweens.addCounter({
								from: 0,
								to: i,
								delay: 500,
								duration: 2e3,
								onUpdate: function(e) {
									var t = Math.floor(e.getValue());
									r.setPlayerScore(t)
								}
							}), this.counterOpponentScore = this.tweens.addCounter({
								from: 0,
								to: n,
								delay: 500,
								duration: 2e3,
								onUpdate: function(e) {
									var t = Math.floor(e.getValue());
									r.setOpponentScore(t)
								}
							})
						}, i.runScaleAnimation = function(e) {
							this.scaleAnimation || (this.scaleAnimation = new $r.Z({
								targets: [e],
								delay: 0,
								duration: 500,
								ease: Phaser.Math.Easing.Elastic.Out,
								easeParams: [.1, .45],
								props: {
									scale: 1.1
								}
							}), this.scaleAnimation.play())
						}, i.createConfettiEffect = function() {
							this.confettiEffect = new np.Z(this), this.confettiEffect.setDepth(jn.Z.EFFECT)
						}, i.trumpetFire = function() {
							if (this.dinoTitle.background && this.dinoTitle.background.active) {
								var e = this.dinoTitle.background.scale,
									t = new $r.Z({
										targets: [this.dinoTitle.background],
										yoyo: !0,
										duration: 200,
										ease: Phaser.Math.Easing.Back.InOut,
										easeParams: [.1, .45],
										props: {
											scale: 1.15 * e
										},
										onComplete: function() {
											t.remove()
										}
									});
								t.play()
							}
						}, t
					}(En.Z));
				var DD = GD,
					FD = i(75102),
					ND = aa.Z.DEFAULT,
					ZD = ND.KEY,
					UD = ND.FRAME,
					jD = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).dinoPulsateAnimation = void 0, n.bigStarExplosive = void 0, n.starTwinkleUp = void 0, n.runBigStarExplosive = function() {
								Phaser.Display.Align.In.Center(n.bigStarExplosive, n.dino), n.bigStarExplosive.run()
							}, n.setLeavesPosition(), n.createStarAnimations(), n.createBigStarExplosive(), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.updateCongratsTitle = function() {
							this.updateCongratsBackground(), this.updateCongratsDino(), this.updateCongratsRibbonText(), this.trumpetFire(), this.runBigStarExplosive()
						}, i.updateDefaultTitle = function() {
							this.isDinoSad(!0), this.updateDefaultRibbonText(), this.removeBackground(), this.stopStarsAnimations(), this.runBigStarExplosive()
						}, i.updateCongratsDino = function() {
							this.isDinoSad(!1), this.runStarsAnimations()
						}, i.removeBackground = function() {
							this.background.kill()
						}, i.createDino = function() {
							this.dino = this.scene.make.image({
								key: ZD,
								frame: UD.BLANK,
								origin: {
									x: .5,
									y: .5
								}
							}), this.dino.setY(5), this.leaves.setWorldSize(272, 60), this.dino.setWorldSize(98, 94.5), this.add(this.dino), Phaser.Display.Align.In.TopCenter(this.dino, this, 0, 85)
						}, i.setLeavesPosition = function() {
							Phaser.Display.Align.In.TopCenter(this.leaves, this, 10, 30)
						}, i.updateCongratsRibbonText = function() {
							this.title.setText("you win!")
						}, i.updateDefaultRibbonText = function() {
							this.title.setText("result")
						}, i.updateCongratsBackground = function() {
							this.background.revive(), this.background.setPosition(0, -30)
						}, i.createRibbon = function() {
							this.ribbon = this.scene.make.image({
								key: ZD,
								frame: UD.RIBBON_RED
							}), this.ribbon.setPosition(0, 30), this.ribbon.setWorldSize(276.5, 68.5), this.add(this.ribbon)
						}, i.runAnimations = function() {
							e.prototype.runAnimations.call(this), this.runDinoPulsateAnimation()
						}, i.createBigStarExplosive = function() {
							this.bigStarExplosive = new $p.Z(this.scene), this.add(this.bigStarExplosive)
						}, i.runDinoPulsateAnimation = function() {
							this.dinoPulsateAnimation || (this.dinoPulsateAnimation = new Vn({
								targets: [this.dino],
								duration: 1400,
								repeatDelay: 200,
								props: {
									scale: "+=0.04"
								}
							})), this.dinoPulsateAnimation.play()
						}, i.runStarsAnimations = function() {
							var e = this.x,
								t = this.y;
							this.starTwinkleUp.revive(), this.starTwinkleUp.run(2, e, t, 300, 200)
						}, i.stopStarsAnimations = function() {
							this.starTwinkleUp.kill()
						}, i.createStarAnimations = function() {
							this.starTwinkleUp = new wa.Z(this.scene), this.add(this.starTwinkleUp)
						}, i.createTitle = function() {
							e.prototype.createTitle.call(this), Phaser.Display.Align.In.Center(this.title, this.ribbon, 0, 0)
						}, i.trumpetFire = function() {
							if (this.background && this.background.active) {
								var e = this.background.scale,
									t = new $r.Z({
										targets: [this.background],
										delay: 500,
										duration: 200,
										yoyo: !0,
										ease: Phaser.Math.Easing.Back.InOut,
										easeParams: [.1, .45],
										props: {
											scale: 1.15 * e
										},
										onComplete: function() {
											t.remove()
										}
									});
								t.play()
							}
						}, t
					}(io),
					YD = jD,
					WD = {
						targets: [],
						duration: 600,
						ease: Phaser.Math.Easing.Back.Out,
						props: {
							alpha: {
								from: 0,
								to: 1
							},
							scale: {
								from: 3,
								to: 1
							}
						}
					},
					KD = function(e) {
						function t(t) {
							return e.call(this, WD, t) || this
						}
						return (0, l.Z)(t, e), t
					}(Kn.Z),
					HD = aa.Z.DEFAULT,
					zD = HD.KEY,
					XD = HD.FRAME,
					VD = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).scene = void 0, n.avatar = void 0, n.rankIcon = void 0, n.username = void 0, n.score = void 0, n.background = void 0, n.showPopUp = void 0, n.showSlideIn = void 0, n.scene = t, n.setSize(320, 50), n.setDataEnabled(), n.setData(i), n.createBackground(), n.createAvatar(), n.createRank(), n.createUsername(), n.createScore(), n.updatePosition(), n.scene.add.existing(n.setDepth(jn.Z.POPUP)), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.updatePosition = function() {
							this.getData("scoreRight") && Phaser.Display.Align.In.Center(this.score, this, 60)
						}, i.createBackground = function() {
							this.background = this.scene.make.image({
								key: zD,
								frame: XD.LEADERBOARD_BG_DARK
							});
							var e = this.width,
								t = this.height;
							this.background.setWorldSize(e, t), this.add(this.background)
						}, i.updateHighLightBackground = function() {
							var e = this.background.getWorldPosition();
							this.background.setFrame(XD.LEADERBOARD_BG_LIGHT);
							var t = this.width,
								i = this.height;
							this.background.setWorldSize(t, i), this.add(this.background), this.background.setPosition(e.x, e.y)
						}, i.createAvatar = function() {
							var e = this.getData("playerId"),
								t = this.getData("photo");
							this.avatar = new Eo(this.scene, {
								id: e,
								url: t,
								key: zD,
								frame: XD.LEADERBOARD_BG_DARK,
								background: XD.AVATAR_BG,
								width: 46,
								height: 46,
								radius: 34,
								loadDelay: 100
							}), this.add(this.avatar), Phaser.Display.Align.In.LeftCenter(this.avatar, this, -45)
						}, i.createRank = function() {
							var e = this.getData("rank");
							this.createRankIcon(e), this.createRankText(e)
						}, i.createRankIcon = function(e) {
							var t = "";
							switch (e) {
								case 1:
								case 2:
								case 3:
									t = XD.BLANK
							}
							this.rankIcon = this.scene.make.image({
								key: zD,
								frame: t
							}), "" != t ? this.rankIcon.setWorldSize(40, 48) : this.rankIcon.setVisible(!1), this.add(this.rankIcon);
							var i = new Phaser.GameObjects.Zone(this.scene, 0, 0, 45, 50);
							Phaser.Display.Align.In.LeftCenter(i, this), Phaser.Display.Align.In.Center(this.rankIcon, i, 0, 0)
						}, i.createRankText = function(e) {
							if (!(e < 4)) {
								var t = this.scene.make.bitmapText({
									font: _a.Z.PRIMARY.KEY,
									size: this.scene.fontSize(24),
									text: "" + e,
									origin: {
										x: .5,
										y: .5
									}
								});
								this.add(t), Phaser.Display.Align.In.Center(t, this.rankIcon, 0, 0)
							}
						}, i.getShortName = function(e) {
							var t = e.substring(0, 7);
							return t.split(" ")[0] || t
						}, i.createUsername = function() {
							var e = this.getData("name"),
								t = GameCore.Utils.String.removeDiacritics(this.getShortName(e));
							this.username = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(20),
								text: t,
								origin: {
									x: 0,
									y: .5
								}
							}), this.username.setTint(13882337), Phaser.Display.Align.To.RightCenter(this.username, this.avatar, 8), this.add(this.username)
						}, i.createScore = function() {
							var e = this.getData("score"),
								t = this.getData("rank");
							this.score = this.scene.add.container();
							var i = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(24),
								text: GameCore.Utils.Number.toAbbreviatedString(e, {
									startAbbreviate: 1e8
								}),
								origin: {
									x: 1,
									y: .5
								}
							});
							switch (t) {
								case 1:
									i.setTint(16766720);
									break;
								case 2:
									i.setTint(13882337);
									break;
								case 3:
									i.setTint(13467442)
							}
							this.score.add([i]), this.add(this.score), Phaser.Display.Align.In.RightCenter(this.score, this, -16)
						}, i.showPopUpAnimations = function(e, t) {
							void 0 === e && (e = 0), void 0 === t && (t = 300);
							var i = 100 * e;
							this.runShowPopUpAnimation(i, t)
						}, i.showSlideInBackAnimations = function(e, t) {
							void 0 === e && (e = 100), void 0 === t && (t = 500), this.runShowSlideInBackAnimation(e, t)
						}, i.runShowPopUpAnimation = function(e, t) {
							this.scene.tweens.killTweensOf(this), this.showPopUp = new vo({
								targets: [this],
								delay: e,
								duration: t,
								props: {
									y: {
										start: this.y + 70,
										to: this.y
									}
								}
							}), this.showPopUp.play()
						}, i.runShowSlideInBackAnimation = function(e, t) {
							this.scene.tweens.killTweensOf(this), this.showSlideIn = new KD({
								targets: [this],
								delay: e,
								duration: t,
								props: {
									y: {
										start: this.y + 70,
										to: this.y
									}
								}
							}), this.showSlideIn.play()
						}, t
					}(Phaser.GameObjects.Container),
					JD = VD;

				function qD(e, t) {
					var i = "undefined" !== typeof uo() && mo()(e) || e["@@iterator"];
					if (i) return (i = i.call(e)).next.bind(i);
					if (Array.isArray(e) || (i = function(e, t) {
							var i;
							if (!e) return;
							if ("string" === typeof e) return QD(e, t);
							var n = tt()(i = Object.prototype.toString.call(e)).call(i, 8, -1);
							"Object" === n && e.constructor && (n = e.constructor.name);
							if ("Map" === n || "Set" === n) return co()(e);
							if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return QD(e, t)
						}(e)) || t && e && "number" === typeof e.length) {
						i && (e = i);
						var n = 0;
						return function() {
							return n >= e.length ? {
								done: !0
							} : {
								done: !1,
								value: e[n++]
							}
						}
					}
					throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
				}

				function QD(e, t) {
					(null == t || t > e.length) && (t = e.length);
					for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
					return n
				}
				var $D = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).scene = void 0, n.currentPlayerId = void 0, n.leaders = void 0, n.currentPlayerLeader = void 0, n.scene = t, n.currentPlayerId = i.playerId, n.scene.add.existing((0, Un.Z)(n)), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.updateData = function(e) {
							var t, i = Zi()(e) || [];
							this.leaders && _()(t = this.leaders).call(t, (function(e) {
								return e.kill()
							})), this.currentPlayerLeader && this.currentPlayerLeader.kill(), this.leaders = [];
							for (var n, a = qD(tt()(i).call(i, 0, 3)); !(n = a()).done;) {
								var s = n.value,
									o = s.playerId,
									r = s.photo,
									l = s.score,
									c = s.name,
									h = s.rank;
								if (o) {
									var u = {
											playerId: o,
											photo: r,
											score: l || 0,
											rank: h,
											name: c
										},
										d = new JD(this.scene, u);
									this.leaders.push(d), o === this.currentPlayerId && d.updateHighLightBackground()
								}
							}
							this.showLeaders(), this.currentPlayerLeader && this.currentPlayerLeader.active || this.getCurrentPlayerLeader(i), this.showCurrentPlayerLeaders()
						}, i.updateAnimations = function() {
							this.leaders.forEach((function(e, t) {
								e.showPopUpAnimations(t, 500)
							})), this.currentPlayerLeader && this.currentPlayerLeader.showSlideInBackAnimations(500, 500)
						}, i.getCurrentPlayerLeader = function(e) {
							var t = this,
								i = ye()(e).call(e, (function(e) {
									return e.playerId === t.currentPlayerId
								}));
							if (i) {
								var n = i.playerId,
									a = i.photo,
									s = i.score,
									o = i.name,
									r = i.rank;
								if (!(r < 4)) {
									var l = {
											playerId: n,
											photo: a,
											score: s || 0,
											rank: r,
											name: o
										},
										c = new JD(this.scene, l);
									this.currentPlayerLeader = c, this.currentPlayerLeader.revive(), c.updateHighLightBackground()
								}
							}
						}, i.showLeaders = function() {
							var e = this.leaders,
								t = e.length > 3 ? 3 : e.length;
							_()(e).call(e, (function(e) {
								return e.setVisible(!1)
							}));
							for (var i = 0; i < t; i++) {
								var n = e[i];
								if (!n) return;
								Phaser.Display.Align.In.Center(n, this.scene.content, 0, 55 * i - 40), n.setVisible(!0)
							}
						}, i.showCurrentPlayerLeaders = function() {
							var e = this.currentPlayerLeader;
							e && Phaser.Display.Align.In.Center(e, this.scene.content, 0, 125)
						}, t
					}(Phaser.GameObjects.Container),
					eF = $D,
					tF = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).leadersBar = void 0, n.scene = void 0, n.payload = void 0, n.contentShowUpAnimation = void 0, n.scene = t, n.payload = i, n.createLeadersBar(), n.scene.add.existing((0, Un.Z)(n)), n.runPopupContentEntrancesAnimation(50, 100), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createLeadersBar = function() {
							this.leadersBar = new eF(this.scene, this.payload), Phaser.Display.Align.In.Center(this.leadersBar, this)
						}, i.updateLeadersBar = function(e) {
							var t = e.leaders;
							this.leadersBar.updateData(t)
						}, i.runPopupContentEntrancesAnimation = function(e, t) {
							var i;
							null == (i = this.contentShowUpAnimation) || i.remove(), this.contentShowUpAnimation = new Qn.Z({
								targets: this.getAll(),
								duration: t,
								delay: this.scene.tweens.stagger(100, {
									start: e
								}),
								props: {
									scale: {
										getStart: function(e) {
											return e.scale - .3
										},
										getEnd: function(e) {
											return e.scale
										}
									},
									alpha: {
										start: 0,
										from: 0,
										to: 1
									}
								}
							}), this.contentShowUpAnimation.play()
						}, t
					}(Phaser.GameObjects.Container),
					iF = tF,
					nF = aa.Z.DEFAULT,
					aF = nF.KEY,
					sF = nF.FRAME,
					oF = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, aF, sF.BUTTON_BLUE_LONG, 62, 62) || this).scene = void 0, i.setName("Home"), i.scene = t, i.createIcon(), i
						}
						return (0, l.Z)(t, e), t.prototype.createIcon = function() {
							var e = this.scene.make.image({
								key: aF,
								frame: sF.ICON_HOME
							});
							e.setWorldSize(30, 30), Phaser.Display.Align.In.Center(e, this.button, 0, -2), this.add(e)
						}, t
					}(ea.Z),
					rF = oF,
					lF = aa.Z.DEFAULT,
					cF = lF.KEY,
					hF = lF.FRAME,
					uF = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, cF, hF.BLANK, 154, 62) || this).scene = void 0, i.setName("PlayWithFriends"), i.scene = t, i.createLabel(), i
						}
						return (0, l.Z)(t, e), t.prototype.createLabel = function() {
							var e = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(18),
								text: "PLAY WITH"
							});
							Phaser.Display.Align.In.Center(e, this.button, 0, -11);
							var t = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(18),
								text: "FRIENDS"
							});
							Phaser.Display.Align.In.Center(t, this.button, 0, 7), this.add([e, t])
						}, t
					}(ea.Z),
					dF = uF,
					pF = aa.Z.DEFAULT,
					mF = pF.KEY,
					fF = pF.FRAME,
					gF = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t, mF, fF.BUTTON_BLUE_LONG, 62, 62) || this).scene = void 0, i.setName("Share"), i.scene = t, i.createIcon(), i
						}
						return (0, l.Z)(t, e), t.prototype.createIcon = function() {
							var e = this.scene.make.image({
								key: mF,
								frame: fF.BLANK
							});
							e.setSize(30, 30).setDisplaySize(30, 30), Phaser.Display.Align.In.Center(e, this.button, 0, -2), this.add(e)
						}, t
					}(ea.Z),
					vF = gF,
					yF = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.homeButton = void 0, i.shareButton = void 0, i.pwfButton = void 0, i.entrancesAnimation = void 0, i.runAnimation = function() {
								i.entrancesAnimation.play()
							}, i.scene = t, i.setName("FooterBar"), i.createHomeButton(), i.createShareButton(), i.createPlayWithFriendsButton(), i.createEntrancesAnimation(), i.alignIcons(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createEntrancesAnimation = function() {
							this.entrancesAnimation = new op.Z({
								targets: [this],
								delay: 800,
								props: {
									y: "-=5",
									alpha: {
										start: 0,
										from: 0,
										to: 1
									}
								}
							})
						}, i.alignIcons = function() {
							Phaser.Display.Align.In.Center(this.homeButton, this, -120, -6), Phaser.Display.Align.In.Center(this.pwfButton, this, 0, -6), Phaser.Display.Align.In.Center(this.shareButton, this, 120, -6)
						}, i.createHomeButton = function() {
							this.homeButton = new rF(this.scene), this.add(this.homeButton)
						}, i.createShareButton = function() {
							this.shareButton = new vF(this.scene), this.add(this.shareButton)
						}, i.createPlayWithFriendsButton = function() {
							this.pwfButton = new dF(this.scene), this.add(this.pwfButton)
						}, t
					}(Phaser.GameObjects.Container),
					bF = yF,
					EF = aa.Z.DEFAULT.FRAME,
					TF = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).content = void 0, i.dinoTitle = void 0, i.footerButtons = void 0, i.currentPlayer = void 0, i.confetti1Effect = void 0, i.confetti2Effect = void 0, i.confetti3Effect = void 0, i.confetti4Effect = void 0, i.run = function() {
								i.updateResultInfo(), i.content.leadersBar.updateAnimations(), i.handleShowCongratsTitle()
							}, i.handlePlayWithFriend = function() {
								i.storage.dispatch((0, Ua.hJ)())
							}, i.handleHomeClick = function() {
								i.scene.switch(In.C.DASHBOARD_SCENE)
							}, i.handleShareScore = function() {
								i.storage.dispatch((0, Zl.uF)())
							}, i.explodeConfettiEffect = function() {
								i.confetti1Effect.stop(), i.confetti2Effect.stop(), i.confetti3Effect.stop(), i.confetti4Effect.stop(), i.children.bringToTop(i.confetti1Effect), i.children.bringToTop(i.confetti2Effect), i.children.bringToTop(i.confetti3Effect), i.children.bringToTop(i.confetti4Effect), i.confetti1Effect.run(1, 110, 83), i.confetti2Effect.run(1, 281, 82), i.confetti3Effect.run(1, 73, 121), i.confetti4Effect.run(1, 316, 120), i.tweens.addCounter({
									duration: 500,
									onStart: function() {
										i.confetti1Effect.explode(12, 110, 83), i.confetti2Effect.explode(12, 281, 82), i.confetti3Effect.explode(12, 73, 121), i.confetti4Effect.explode(12, 316, 120)
									}
								})
							}, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.preload = function() {
							this.events.on("wake", this.run), this.events.on("create", this.run)
						}, i.handleShowCongratsTitle = function() {
							var e = this;
							this.currentPlayer && (this.currentPlayer.rank < 4 ? this.scene.scene.time.delayedCall(800, (function() {
								e.dinoTitle.updateCongratsTitle(), e.explodeConfettiEffect()
							})) : this.dinoTitle.updateDefaultTitle())
						}, i.updateResultInfo = function() {
							var e = this,
								t = this.storage.getState(),
								i = this.player.getPlayerId(),
								n = (0, Ya.Vb)(t).score,
								a = void 0 === n ? 0 : n,
								s = (0, Bf.Ez)(t),
								o = Zi()(s) || [],
								r = (0, Ya.Jy)(t),
								l = Zi()(r) || [],
								c = [];
							o.forEach((function(t, n) {
								var s = l[n].score;
								t.playerId === i && (s = a);
								var o = {
									playerId: t.playerId,
									photo: t.photo,
									score: s || 0,
									rank: 1,
									name: t.name
								};
								c.push(o), t.playerId === i && (e.currentPlayer = o)
							}));
							var h = ji()(c).call(c, (function(e, t) {
								return t.score - e.score
							}));
							_()(h).call(h, (function(e, t) {
								return e.rank = t + 1
							}));
							var u = {
								playerId: i,
								leaders: h
							};
							this.content.updateLeadersBar(u)
						}, i.create = function() {
							e.prototype.create.call(this), this.createBackground(Yn.Z.OTHER_BACKGROUND.KEY), this.createDinoTitle(), this.createContent(), this.createConfettiSmallAnimation(), this.createFooter()
						}, i.createDinoTitle = function() {
							this.dinoTitle = new YD(this, {
								title: "Result",
								background: EF.BLANK,
								titleSize: 28
							}), this.dinoTitle.background.setWorldSize(278.5, 82), Phaser.Display.Align.In.Center(this.dinoTitle, this.gameZone, 0, -180)
						}, i.createContent = function() {
							var e = {
								playerId: this.player.getPlayerId(),
								leaders: []
							};
							this.content = new iF(this, e), Phaser.Display.Align.In.Center(this.content, this.gameZone, 0, -40)
						}, i.createFooter = function() {
							this.footerButtons = new bF(this), Phaser.Display.Align.In.BottomCenter(this.footerButtons, this.gameZone, 0, -70), this.footerButtons.homeButton.onClick = this.handleHomeClick, this.footerButtons.pwfButton.onClick = this.handlePlayWithFriend, this.footerButtons.shareButton.onClick = this.handleShareScore
						}, i.createConfettiSmallAnimation = function() {
							this.confetti1Effect = new FD.Z(this, {
								speedX: {
									min: -13.3,
									max: -66.5
								},
								speedY: {
									min: -13.3,
									max: -66.5
								},
								rotate: {
									start: -1080,
									end: 0
								},
								angle: {
									min: 210,
									max: 245
								}
							}), this.confetti2Effect = new FD.Z(this, {
								speedX: {
									min: 13.3,
									max: 66.5
								},
								speedY: {
									min: -13.3,
									max: -66.5
								},
								rotate: {
									start: 0,
									end: 1080
								},
								angle: {
									min: 320,
									max: 355
								}
							}), this.confetti3Effect = new FD.Z(this, {
								speedX: {
									min: -13.3,
									max: -66.5
								},
								speedY: {
									min: 0,
									max: -53.2
								},
								rotate: {
									start: -1080,
									end: 0
								},
								angle: {
									min: 120,
									max: 155
								}
							}), this.confetti4Effect = new FD.Z(this, {
								speedX: {
									min: 13.3,
									max: 66.5
								},
								speedY: {
									min: 0,
									max: -53.2
								},
								rotate: {
									start: 0,
									end: 1080
								},
								angle: {
									min: 30,
									max: 65
								}
							}), this.confetti1Effect.setDepth(jn.Z.EFFECT), this.confetti2Effect.setDepth(jn.Z.EFFECT)
						}, t
					}(En.Z),
					AF = TF,
					SF = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).name = "ContinueTournamentFail", n.message = t || "Can't continue this tournament", n.payload = i, n
						}
						return (0, l.Z)(t, e), t
					}((0, P.Z)(Error)),
					_F = (GameCore.Configs.Tournament.UseLeaderboard, function(e) {
						return {
							type: Gi,
							payload: {
								tournamentId: e
							}
						}
					}),
					CF = function(e) {
						return function() {
							var t = (0, r.Z)(h().mark((function t(i) {
								var n, s, o, r, l, c, u, d, p;
								return h().wrap((function(t) {
									for (;;) switch (t.prev = t.next) {
										case 0:
											return t.prev = 0, n = window.game.facebook, s = e.playerId, o = e.playerName, r = e.score, l = e.autoStartGame, c = o + "'s Tournament", u = GameCore.Utils.String.generateObjectId(), t.next = 7, n.tournament.createAsync({
												initialScore: r,
												config: {
													title: c,
													tournamentTitle: c
												},
												data: {
													playerId: s,
													playerName: o,
													leaderboardId: u
												}
											});
										case 7:
											return d = t.sent, p = d.getID(), l && (i(_F(p)), i((0, Ua.li)())), t.next = 12, Rf({
												_id: u,
												createdBy: s,
												name: p,
												description: c,
												expireTime: 6048e5
											});
										case 12:
											if (t.sent._id !== u) {
												t.next = 16;
												break
											}
											return t.next = 16, Lf(u, s, r);
										case 16:
											t.next = 23;
											break;
										case 18:
											if (t.prev = 18, t.t0 = t.catch(0), "INVALID_OPERATION" !== (null == t.t0 ? void 0 : t.t0.code)) {
												t.next = 22;
												break
											}
											throw new Error("Tournament is not available");
										case 22:
											(0, a.tO)(t.t0);
										case 23:
										case "end":
											return t.stop()
									}
								}), t, null, [
									[0, 18]
								])
							})));
							return function(e) {
								return t.apply(this, arguments)
							}
						}()
					},
					wF = (function() {
						var e = (0, r.Z)(h().mark((function e() {
							var t, i, n;
							return h().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return e.prev = 0, t = window.game.facebook, e.next = 4, t.getTournamentAsync();
									case 4:
										return i = e.sent, n = JSON.parse(i.getPayload() || "{}"), e.abrupt("return", n.leaderboardId);
									case 9:
										return e.prev = 9, e.t0 = e.catch(0), e.abrupt("return", null);
									case 12:
									case "end":
										return e.stop()
								}
							}), e, null, [
								[0, 9]
							])
						})))
					}(), function() {
						var e = (0, r.Z)(h().mark((function e() {
							var t;
							return h().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return e.prev = 0, t = window.game.facebook, e.next = 4, t.getTournamentAsync();
									case 4:
										return e.abrupt("return", e.sent);
									case 7:
										return e.prev = 7, e.t0 = e.catch(0), e.abrupt("return", null);
									case 10:
									case "end":
										return e.stop()
								}
							}), e, null, [
								[0, 7]
							])
						})))
					}(), aa.Z.DEFAULT),
					BF = wF.KEY,
					IF = wF.FRAME,
					PF = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t) || this).rank = void 0, n.avatar = void 0, n.rankIcon = void 0, n.cupIcon = void 0, n.username = void 0, n.score = void 0, n.background = void 0, n.showPopUp = void 0, n.scene = t, n.rank = i, n.createBackground(), n.updateSize(), n.createAvatar(), n.createRankIcon(), n.createCupIcon(), n.createUsername(), n.createScore(), n.scene.add.existing(n.setDepth(jn.Z.POPUP)), n
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createBackground = function() {
							this.background = this.scene.make.image({
								key: BF,
								frame: IF.LEADERBOARD_BG_DARK
							}), this.background.setWorldSize(270, 44), this.add(this.background)
						}, i.updateSize = function() {
							var e = this.background,
								t = e.width,
								i = e.height;
							this.setSize(t, i)
						}, i.createAvatar = function() {
							this.avatar = new Eo(this.scene, {
								key: BF,
								frame: IF.AVATAR_FRAME_PURPLE,
								background: IF.AVATAR_BG,
								width: 38,
								height: 40,
								loadDelay: 100
							}), this.avatar.update(), this.add(this.avatar), Phaser.Display.Align.In.LeftCenter(this.avatar, this, -40, -2)
						}, i.createRankIcon = function() {
							var e = this.rank;
							this.rankIcon = this.scene.make.image({
								key: BF,
								frame: ""
							}), this.add(this.rankIcon), this.updateRankIcon(e)
						}, i.updateRankIcon = function(e) {
							var t = "";
							switch (e) {
								case 1:
								case 2:
								case 3:
								case 0:
									t = IF.BLANK
							}
							this.rankIcon.setFrame(t), 0 === e ? (this.rankIcon.setWorldSize(11, 16), Phaser.Display.Align.In.LeftCenter(this.rankIcon, this.avatar, 25, 3)) : (this.rankIcon.setWorldSize(38, 49), Phaser.Display.Align.In.LeftCenter(this.rankIcon, this.avatar, 38, 2))
						}, i.createCupIcon = function() {
							this.cupIcon = this.scene.make.image({
								key: BF,
								frame: IF.BLANK
							}), this.cupIcon.setWorldSize(26, 24.5), this.cupIcon.scale -= .1, Phaser.Display.Align.To.RightCenter(this.cupIcon, this.avatar, 97, 2), this.add(this.cupIcon)
						}, i.createUsername = function() {
							this.username = this.scene.make.text({
								style: {
									fontFamily: _a.Z.FONT_FAMILY
								},
								origin: {
									x: 0,
									y: .5
								}
							}), this.username.setTint(13221313), this.username.setHighQuality(), this.username.setFontSize(16), Phaser.Display.Align.To.RightCenter(this.username, this.avatar, 6, 3), this.add(this.username)
						}, i.createScore = function() {
							this.score = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(18),
								origin: {
									x: 1,
									y: .5
								}
							}), this.score.setTint(13221313), Phaser.Display.Align.To.RightCenter(this.score, this.avatar, 180, 2), this.add(this.score), this.setScore(0)
						}, i.setScore = function(e) {
							var t = GameCore.Utils.Number.toAbbreviatedString(+e, {
								startAbbreviate: 1e6
							});
							this.score.setText("" + t)
						}, i.setUsername = function(e) {
							var t = GameCore.Utils.String.getShortName(e, 12),
								i = GameCore.Utils.String.removeDiacritics(t);
							this.username.setText(i)
						}, i.updateData = function(e) {
							var t = e || {},
								i = t.playerId,
								n = void 0 === i ? "10" : i,
								a = t.name,
								s = void 0 === a ? "???" : a,
								o = t.photo,
								r = void 0 === o ? "" : o,
								l = t.score,
								c = void 0 === l ? 0 : l,
								h = t.rank,
								u = void 0 === h ? 0 : h;
							this.setScore(c), this.setUsername(s), this.updateRankIcon(u), this.avatar.loadPhoto(n, r)
						}, i.runShowPopUpAnimation = function(e, t) {
							this.scene.tweens.killTweensOf(this), this.showPopUp = new vo({
								targets: [this],
								delay: e,
								duration: t,
								props: {
									y: {
										start: this.y + 70,
										to: this.y
									}
								}
							}), this.showPopUp.play()
						}, t
					}(Phaser.GameObjects.Container),
					xF = PF,
					OF = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).leaders = void 0, i.maxLeaders = void 0, i.scene = t, i.setSize(320, 200), i.maxLeaders = 3, i.leaders = i.scene.make.group({
								maxSize: i.maxLeaders
							}), i.createLeaders(), i.alignLeaders(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createLeaders = function() {
							for (var e = 0; e < this.maxLeaders; e++) {
								var t = new xF(this.scene, e + 1);
								this.add(t), this.leaders.add(t)
							}
						}, i.alignLeaders = function() {
							this.leaders.incY(15, 45)
						}, i.updateLeaders = function(e) {
							var t = 0;
							pD()(this.leaders.children).forEach((function(i) {
								i instanceof xF && (i.updateData((0, o.Z)({}, e[t], {
									rank: t + 1
								})), t++)
							}))
						}, t
					}(Phaser.GameObjects.Container),
					kF = OF,
					RF = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).title = void 0, i.prize = void 0, i.createTitle(), i.createPrize(), i.setSize(320, 60), t.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createTitle = function() {
							this.title = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(22),
								origin: {
									x: .5,
									y: .2
								}
							}), this.title.setCenterAlign(), this.title.setMaxWidth(300), this.title.kill(), this.add(this.title)
						}, i.createPrize = function() {
							this.prize = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(18),
								origin: {
									x: .5,
									y: .5
								}
							}), this.prize.kill(), this.add(this.prize)
						}, i.setTitle = function(e) {
							this.title.revive();
							var t = GameCore.Utils.String.removeDiacritics(e);
							this.title.setText(t)
						}, i.setPrize = function(e) {
							this.prize.revive(), this.prize.setText("Total: " + e)
						}, t
					}(Phaser.GameObjects.Container),
					MF = RF,
					LF = aa.Z.DEFAULT,
					GF = LF.KEY,
					DF = LF.FRAME,
					FF = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).endTime = void 0, i.countdownTimer = void 0, i.timerContainer = void 0, i.timerText = void 0, i.timerIcon = void 0, i.rightButton = void 0, i.rightButtonLabel = void 0, i.updateCountdown = (0, r.Z)(h().mark((function e() {
								var t, n, a;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											t = Date.now(), n = 1e3 * i.endTime - t, a = Math.floor(Math.abs(n) / 864e5), n < 0 && (n = 0), i.timerText.setText("End time: " + a + ":" + (0, xo.F0)(Math.abs(n), !0));
										case 5:
										case "end":
											return e.stop()
									}
								}), e)
							}))), i.setSize(320, 60), i.createLeftContainer(), i.createJoinButton(), i.createCountdownTimer(), t.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createLeftContainer = function() {
							this.createTimerContainer()
						}, i.createTimerContainer = function() {
							this.timerContainer = this.scene.add.container(0, 0), this.timerContainer.setSize(180, 60), this.add(this.timerContainer), this.timerText = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(15),
								origin: {
									x: 0,
									y: .5
								}
							}), this.timerIcon = this.scene.make.image({
								key: GF,
								frame: DF.BLANK
							}), this.timerIcon.setPosition(-12, 0), this.timerIcon.setWorldSize(18, 20.5), this.timerContainer.add([this.timerText, this.timerIcon]), Phaser.Display.Align.In.LeftCenter(this.timerContainer, this, 45, 0)
						}, i.createJoinButton = function() {
							this.rightButton = new ea.Z(this.scene, GF, DF.TOURNAMENT_GREEN_BUTTON, 80, 38), this.rightButtonLabel = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(17),
								text: "Join",
								origin: {
									x: .5,
									y: .5
								}
							}), this.rightButton.setName("Join"), this.rightButton.add(this.rightButtonLabel), this.add(this.rightButton), Phaser.Display.Align.In.RightCenter(this.rightButton, this, -20, 0)
						}, i.createCountdownTimer = function() {
							var e;
							this.endTime && (null == (e = this.countdownTimer) || e.destroy(), this.countdownTimer = this.scene.time.addEvent({
								loop: !0,
								delay: 1e3,
								startAt: 1e3,
								callback: this.updateCountdown
							}))
						}, i.setCountdown = function(e) {
							this.endTime = e, this.createCountdownTimer()
						}, t
					}(Phaser.GameObjects.Container),
					NF = FF,
					ZF = function(e) {
						function t(t, i, n) {
							var a;
							return (a = e.call(this, t, i, n) || this).scene = void 0, a.id = void 0, a.payload = void 0, a.popup = void 0, a.topBar = void 0, a.leaders = void 0, a.bottomBar = void 0, a.loading = void 0, a.isNeedUpdate = void 0, a.isRequesting = void 0, a.handleJoinTournament = function() {
								var e = a.payload,
									t = e.id,
									i = e.contextID;
								a.scene.handleJoinTournament("" + t, i)
							}, a.scene = t, a.setSize(320, 245), a.createPopup(), a.createTopBar(), a.createLeaders(), a.createLoading(), a.createBottomBar(), a.scene.add.existing((0, Un.Z)(a)), a
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createPopup = function() {
							var e = this.width,
								t = this.height;
							this.popup = new ro(this.scene, 0, 0, e, t), this.add(this.popup)
						}, i.createTopBar = function() {
							this.topBar = new MF(this.scene), this.popup.add(this.topBar), Phaser.Display.Align.In.TopCenter(this.topBar, this.popup, 0, 0)
						}, i.createLeaders = function() {
							this.leaders = new kF(this.scene), this.leaders.kill(), this.popup.add(this.leaders), Phaser.Display.Align.In.Center(this.leaders, this.topBar, 0, 30)
						}, i.createLoading = function() {
							this.loading = new yo.Z(this.scene), this.loading.setTint(5982858), this.loading.kill(), this.add(this.loading), Phaser.Display.Align.In.Center(this.loading, this, 0, 0)
						}, i.createBottomBar = function() {
							this.bottomBar = new NF(this.scene), this.bottomBar.rightButton.onClick = this.handleJoinTournament, this.popup.add(this.bottomBar), Phaser.Display.Align.In.BottomCenter(this.bottomBar, this.popup, 0, -5)
						}, i.updateData = function(e) {
							this.id = e.id, this.payload = e, this.isNeedUpdate = !0, this.topBar.setTitle("" + e.title), this.bottomBar.setCountdown(e.endTime)
						}, i.fetchLeaderboardData = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, i, n, a, s, o, r, l, c, u, d;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (!this.isRequesting) {
												e.next = 2;
												break
											}
											return e.abrupt("return");
										case 2:
											if (this.isNeedUpdate) {
												e.next = 4;
												break
											}
											return e.abrupt("return");
										case 4:
											if (!this.loading.active) {
												e.next = 6;
												break
											}
											return e.abrupt("return");
										case 6:
											if (e.prev = 6, this.isRequesting = !0, this.payload.payload) {
												e.next = 10;
												break
											}
											throw new Error("Payload is empty");
										case 10:
											if (t = this.payload.payload.leaderboardId) {
												e.next = 13;
												break
											}
											throw new Error("Leaderboard ID is not defined");
										case 13:
											return !this.leaders.active && this.loading.revive(), e.next = 16, Mf(t, {
												limit: 5
											});
										case 16:
											if (!((i = e.sent).length > 0)) {
												e.next = 30;
												break
											}
											return n = _()(i).call(i, (function(e) {
												return e.playerId
											})), e.next = 21, this.scene.profile.requestProfiles(n);
										case 21:
											if (a = this.scene.profile.getProfiles(), s = _()(i).call(i, (function(e) {
													var t = e.playerId,
														i = e.score,
														n = e.rank,
														s = a[t];
													if (!s) return null;
													var o = s.name;
													return {
														playerId: t,
														photo: s.photo,
														score: i,
														rank: n,
														name: o
													}
												})), !((o = A()(s).call(s, (function(e) {
													return null !== e
												}))).length < 1)) {
												e.next = 26;
												break
											}
											throw new Error("Leaderboard is empty");
										case 26:
											this.leaders.revive(), this.leaders.updateLeaders(o), e.next = 40;
											break;
										case 30:
											return r = this.payload.payload.playerId, e.next = 33, this.scene.profile.requestProfiles([r]);
										case 33:
											if (l = this.scene.profile.getProfiles(), c = l[r] || this.scene.player.getPlayer()) {
												e.next = 37;
												break
											}
											throw new Error("Tournament owner profile is not defined");
										case 37:
											u = c.name, d = c.photo, this.leaders.revive(), this.leaders.updateLeaders([{
												playerId: r,
												name: u,
												photo: d,
												score: 0,
												rank: 1
											}]);
										case 40:
											this.isNeedUpdate = !1, e.next = 48;
											break;
										case 43:
											e.prev = 43, e.t0 = e.catch(6), this.kill(), this.scene.alignObjects();
										case 48:
											return e.prev = 48, this.loading.kill(), this.isRequesting = !1, e.finish(48);
										case 52:
										case "end":
											return e.stop()
									}
								}), e, this, [
									[6, 43, 48, 52]
								])
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), t
					}(Phaser.GameObjects.Container),
					UF = ZF,
					jF = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.payload = void 0, i.popup = void 0, i.topBar = void 0, i.leader = void 0, i.bottomBar = void 0, i.handleJoinTournament = function() {
								var e = i.payload,
									t = e.id,
									n = e.contextID;
								i.scene.handleJoinTournament("" + t, n)
							}, i.scene = t, i.setSize(320, 120), i.createPopup(), i.createTopBar(), i.createBottomBar(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createPopup = function() {
							var e = this.width,
								t = this.height;
							this.popup = new ro(this.scene, 0, 0, e, t), this.add(this.popup)
						}, i.createTopBar = function() {
							this.topBar = new MF(this.scene), this.popup.add(this.topBar), Phaser.Display.Align.In.TopCenter(this.topBar, this.popup, 0, 0)
						}, i.createLeaders = function() {
							this.leader = new xF(this.scene, 1), this.popup.add(this.leader);
							var e = -this.leader.height / 2 + 8;
							Phaser.Display.Align.To.BottomCenter(this.leader, this.topBar, 0, e)
						}, i.createBottomBar = function() {
							this.bottomBar = new NF(this.scene), this.bottomBar.rightButton.onClick = this.handleJoinTournament, this.popup.add(this.bottomBar), Phaser.Display.Align.To.BottomCenter(this.bottomBar, this.popup, 0, -60)
						}, i.updateData = function(e) {
							this.payload = e, this.topBar.setTitle(e.title), this.bottomBar.setCountdown(e.endTime)
						}, t
					}(Phaser.GameObjects.Container),
					YF = jF,
					WF = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).title = void 0, i.createTitle(), i.setSize(320, 80), t.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createTitle = function() {
							this.title = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(20),
								origin: {
									x: .5,
									y: .5
								},
								y: -10,
								x: 0
							}), this.add(this.title)
						}, i.setTitle = function(e) {
							this.title.setText(e)
						}, t
					}(Phaser.GameObjects.Container),
					KF = WF,
					HF = aa.Z.DEFAULT,
					zF = HF.KEY,
					XF = HF.FRAME,
					VF = function(e) {
						function t(t) {
							var i;
							return (i = e.call(this, t) || this).scene = void 0, i.popup = void 0, i.topBar = void 0, i.player = void 0, i.button = void 0, i.handleCreateTournament = function() {
								i.scene.handleCreateTournament()
							}, i.scene = t, i.setSize(320, 160), i.createPopup(), i.createTopBar(), i.createPlayerInfo(), i.createButton(), i.updatePlayerData(), i.scene.add.existing((0, Un.Z)(i)), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createPopup = function() {
							var e = this.width,
								t = this.height;
							this.popup = new ro(this.scene, 0, 0, e, t), this.add(this.popup)
						}, i.createTopBar = function() {
							this.topBar = new KF(this.scene), this.topBar.setTitle("Create Your Tournament"), this.popup.add(this.topBar), Phaser.Display.Align.In.TopCenter(this.topBar, this.popup, 0, -2)
						}, i.createPlayerInfo = function() {
							this.player = new xF(this.scene, 1), this.player.score.setTint(14002497), this.player.score.setOrigin(1, .45);
							var e = this.scene.fontSize(22);
							this.player.score.setFontSize(e), this.player.cupIcon.x -= 8, this.popup.add(this.player), Phaser.Display.Align.In.Center(this.player, this.topBar, 0, 30)
						}, i.createButton = function() {
							this.button = new ea.Z(this.scene, zF, XF.TOURNAMENT_GREEN_BUTTON, 80, 38);
							var e = this.scene.make.bitmapText({
								font: _a.Z.PRIMARY.KEY,
								size: this.scene.fontSize(17),
								text: "Create",
								origin: {
									x: .5,
									y: .5
								}
							});
							this.button.setName("Create"), this.button.add(e), this.button.onClick = this.handleCreateTournament, this.add(this.button), Phaser.Display.Align.In.BottomRight(this.button, this, -20, -15)
						}, i.updatePlayerData = function() {
							var e = this.scene.player.getPlayer(),
								t = e.playerId,
								i = e.name,
								n = e.photo,
								a = e.data.score;
							this.player.updateData({
								playerId: t,
								name: i,
								photo: n,
								score: a,
								rank: 1
							})
						}, t
					}(Phaser.GameObjects.Container),
					JF = VF,
					qF = function(e) {
						function t(t) {
							var i;
							(i = e.call(this, t) || this).handleContinueTournament = function() {
								if (i.payload) {
									var e = i.payload.id;
									i.scene.handleContinueTournament("" + e)
								}
							}, i.bottomBar.rightButton.setName("Continue"), i.bottomBar.rightButton.onClick = i.handleContinueTournament, i.bottomBar.rightButtonLabel.setText("Continue");
							var n = i.scene.fontSize(15);
							return i.bottomBar.rightButtonLabel.setFontSize(n), i
						}
						return (0, l.Z)(t, e), t.prototype.updateData = function(t) {
							e.prototype.updateData.call(this, t), this.topBar.setTitle("Current Tournament"), this.fetchLeaderboardData()
						}, t
					}(UF),
					QF = qF,
					$F = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).name = "TournamentPayloadInvalid", n.message = t || "The tournament payload invalid", n.payload = i, n
						}
						return (0, l.Z)(t, e), t
					}((0, P.Z)(Error)),
					eN = aa.Z.DEFAULT,
					tN = eN.KEY,
					iN = eN.FRAME,
					nN = GameCore.Configs.Tournament,
					aN = nN.UseGlobalTournament,
					sN = nN.GlobalTournaments,
					oN = function(e) {
						function t(t) {
							var i, n = t.gameZone,
								a = n.width,
								s = n.height,
								o = {
									width: a,
									height: s + 80,
									marginTop: 40,
									marginBottom: 0,
									acceleration: 1400,
									maxScrollOver: .15,
									scrollSmooth: 40,
									scrollingBackRate: 5
								};
							return (i = e.call(this, t, o) || this).scene = void 0, i.currentTournamentId = null, i.dinoTitle = void 0, i.createTournamentBlock = void 0, i.continueTournamentBlock = void 0, i.listObjects = void 0, i.listTournamentBlocks = void 0, i.listMainTournamentBlocks = void 0, i.updateObjectVisible = (0, Te.D)((function() {
								for (var e = i.objects.getChildren(), t = 0; t < e.length; t++) {
									var n = e[t];
									n.y + n.height < -i.height || n.y - n.height > i.height ? n.setVisible(!1) : n.active && (n.setVisible(!0), n instanceof UF && n.fetchLeaderboardData())
								}
							}), 100, {
								maxWait: 100
							}), i.scene = t, i.createObjects(), i.alignObjects(), i.setPosition(187.5, s / 2 - 40), i.setEnable(!0), i.createMask(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.createObjects = function() {
							this.listObjects = this.scene.add.group(), this.listTournamentBlocks = this.scene.add.group(), this.listMainTournamentBlocks = this.scene.add.group(), this.createDinoTitle(), this.createCreateTournamentBlock(), this.createContinueTournamentBlock()
						}, i.createDinoTitle = function() {
							this.dinoTitle = this.scene.add.image(0, 0, tN, iN.TOURNAMENT_TITLE_LOGO), this.dinoTitle.setWorldSize(215, 176.5), this.addItem(this.dinoTitle), this.listObjects.add(this.dinoTitle)
						}, i.createCreateTournamentBlock = function() {
							this.createTournamentBlock = new JF(this.scene), this.addItem(this.createTournamentBlock), this.listObjects.add(this.createTournamentBlock)
						}, i.createContinueTournamentBlock = function() {
							this.continueTournamentBlock = new QF(this.scene), this.continueTournamentBlock.kill(), this.addItem(this.continueTournamentBlock), this.listObjects.add(this.continueTournamentBlock)
						}, i.addMainTournamentBlock = function() {
							var e = new YF(this.scene);
							return this.addItem(e), this.listObjects.add(e), this.listMainTournamentBlocks.add(e), e
						}, i.addTournamentBlock = function() {
							var e = new UF(this.scene);
							return this.addItem(e), this.listObjects.add(e), this.listTournamentBlocks.add(e), e
						}, i.alignObjects = function() {
							var e;
							this.reset(), this.setEnable(!0);
							var t = A()(e = pD()(this.listObjects.children)).call(e, (function(e) {
								return e.active
							}));
							if (0 !== t.length) {
								var i = t[0];
								i.setY(-180), tt()(t).call(t, 1).forEach((function(e) {
									var t = i.y + i.height / 2 + 10 + e.height / 2;
									e.setY(t), i = e
								}));
								var n = t[t.length - 1],
									a = n.y + .5 * n.height + this.marginBottom - this.height / 2;
								this.maxValue = Math.max(a, 0)
							}
						}, i.updateContinueTournamentBlock = function(e) {
							try {
								if (!e) throw new Error("Current tournament is null");
								var t = e.getID(),
									i = e.getPayload();
								if (!i) throw new Error("Current tournament payload is null");
								var n = JSON.parse(i),
									a = n.playerName;
								if (!n.leaderboardId) throw new Error("Current tournament payload leaderboardId is null");
								this.currentTournamentId = t;
								var s = {
									id: t,
									title: e.getTitle() || a + "'s Tournament",
									payload: n,
									endTime: e.getEndTime(),
									contextID: e.getContextID()
								};
								this.continueTournamentBlock.revive(), this.continueTournamentBlock.updateData(s)
							} catch (o) {
								this.continueTournamentBlock.kill()
							}
						}, i.updateData = function() {
							var e = (0, r.Z)(h().mark((function e(t, i) {
								var n, a, s = this;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (i ? (this.createTournamentBlock.kill(), this.updateContinueTournamentBlock(i)) : (this.continueTournamentBlock.kill(), this.createTournamentBlock.revive(), this.createTournamentBlock.updatePlayerData()), !(t.length < 1)) {
												e.next = 6;
												break
											}
											return this.setScrollerState(!1), e.abrupt("return");
										case 6:
											this.setScrollerState(!0);
										case 7:
											aN && sN.length > 0 && (n = pD()(this.listMainTournamentBlocks.children), this.listMainTournamentBlocks.setVisible(!1), this.listMainTournamentBlocks.setActive(!1), sN.forEach((function(e, t) {
												if (t >= n.length) {
													s.addMainTournamentBlock().updateData(e)
												} else {
													var i = n[t];
													i.revive(), i.updateData(e)
												}
											}))), this.listTournamentBlocks.children.each((function(e) {
												e instanceof UF && e.kill()
											})), a = pD()(this.listTournamentBlocks.children), t.forEach((function(e) {
												try {
													var t = e.getID();
													if (t === s.currentTournamentId) return;
													var i = e.getPayload();
													if (!i) return;
													var n = JSON.parse(i),
														o = n.playerName;
													if (!n.leaderboardId) throw new $F(null, n);
													var r = e.getTitle() || o + "'s Tournament",
														l = {
															id: t,
															title: r,
															payload: n,
															endTime: e.getEndTime(),
															contextID: e.getContextID()
														},
														c = ye()(a).call(a, (function(e) {
															return e instanceof UF && e.id === t
														}));
													if (c) {
														if (c.id === s.currentTournamentId) return;
														c.revive(), c.updateData(l)
													} else {
														s.addTournamentBlock().updateData(l)
													}
												} catch (h) {}
											})), this.alignObjects();
										case 12:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t, i) {
								return e.apply(this, arguments)
							}
						}(), i.setScrollerState = function(e) {
							this.isEnable !== e && (e ? (this.setEnable(!0), this.addItem(this.dinoTitle), this.dinoTitle.setPosition(0, 0)) : (this.setEnable(!1), this.remove(this.dinoTitle), Phaser.Display.Align.In.TopCenter(this.dinoTitle, this.scene.gameZone, 0, -30)))
						}, t
					}(hr.Z),
					rN = oN,
					lN = aa.Z.DEFAULT,
					cN = (lN.KEY, lN.FRAME, aa.Z.THEME),
					hN = cN.KEY,
					uN = cN.FRAME,
					dN = function(e) {
						function t() {
							for (var t, i, n = arguments.length, s = new Array(n), o = 0; o < n; o++) s[o] = arguments[o];
							return (i = e.call.apply(e, y()(t = [this]).call(t, s)) || this).closeButton = void 0, i.tournamentScroller = void 0, i.run = function() {
								i.loadTournament()
							}, i.handleHomeClick = function() {
								i.scene.switch(In.C.DASHBOARD_SCENE)
							}, i.handleCreateTournament = (0, r.Z)(h().mark((function e() {
								var t, n, a, s;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.prev = 0, t = i.player.getPlayer(), n = t.playerId, a = t.name, s = {
												playerId: n,
												playerName: a,
												score: 1e4,
												autoStartGame: !0
											}, e.next = 5, i.storage.dispatch(CF(s));
										case 5:
											e.next = 11;
											break;
										case 7:
											e.prev = 7, e.t0 = e.catch(0), i.game.globalScene.screen.open(Wn.o4.NOTIFY_SCREEN, {
												message: "Oops!\n You are not able to create\ntournaments right now.\n\nPlease try again later.",
												duration: 5e3,
												loading: !1
											});
										case 11:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[0, 7]
								])
							}))), i.handleJoinTournament = function() {
								var e = (0, r.Z)(h().mark((function e(t, n) {
									return h().wrap((function(e) {
										for (;;) switch (e.prev = e.next) {
											case 0:
												return e.prev = 0, e.prev = 1, e.next = 4, i.facebook.tournament.joinAsync(t);
											case 4:
												e.next = 10;
												break;
											case 6:
												return e.prev = 6, e.t0 = e.catch(1), e.next = 10, i.facebook.switchAsync(n);
											case 10:
												i.storage.dispatch(_F(t)), i.storage.dispatch((0, Ua.li)()), e.next = 17;
												break;
											case 14:
												e.prev = 14, e.t1 = e.catch(0), (0, a.tO)(e.t1);
											case 17:
											case "end":
												return e.stop()
										}
									}), e, null, [
										[0, 14],
										[1, 6]
									])
								})));
								return function(t, i) {
									return e.apply(this, arguments)
								}
							}(), i.handleContinueTournament = function() {
								var e = (0, r.Z)(h().mark((function e(t) {
									var n;
									return h().wrap((function(e) {
										for (;;) switch (e.prev = e.next) {
											case 0:
												return e.prev = 0, e.next = 3, i.facebook.getTournamentAsync();
											case 3:
												if (n = e.sent) {
													e.next = 6;
													break
												}
												return e.abrupt("return");
											case 6:
												if (t === "" + n.getID()) {
													e.next = 8;
													break
												}
												return e.abrupt("return");
											case 8:
												i.storage.dispatch(_F(t)), i.storage.dispatch((0, Ua.li)()), e.next = 15;
												break;
											case 12:
												e.prev = 12, e.t0 = e.catch(0), (0, a.tO)(new SF(null, {
													tournamentID: t,
													error: e.t0
												}));
											case 15:
											case "end":
												return e.stop()
										}
									}), e, null, [
										[0, 12]
									])
								})));
								return function(t) {
									return e.apply(this, arguments)
								}
							}(), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.loadTournament = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, i;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.next = 2, this.getCurrentTournament();
										case 2:
											return t = e.sent, e.prev = 3, e.next = 6, this.facebook.tournament.getTournamentsAsync();
										case 6:
											i = e.sent, this.tournamentScroller.updateData(i, t), e.next = 13;
											break;
										case 10:
											e.prev = 10, e.t0 = e.catch(3), this.tournamentScroller.updateData([], t);
										case 13:
										case "end":
											return e.stop()
									}
								}), e, this, [
									[3, 10]
								])
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.getCurrentTournament = function() {
							var e = (0, r.Z)(h().mark((function e() {
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.prev = 0, e.next = 3, this.facebook.getTournamentAsync();
										case 3:
											return e.abrupt("return", e.sent);
										case 6:
											return e.prev = 6, e.t0 = e.catch(0), e.abrupt("return", null);
										case 9:
										case "end":
											return e.stop()
									}
								}), e, this, [
									[0, 6]
								])
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.preload = function() {
							this.events.on("wake", this.run), this.events.on("create", this.run)
						}, i.create = function() {
							e.prototype.create.call(this), this.createBackground(Yn.Z.OTHER_BACKGROUND.KEY), this.createTournamentScroller(), this.createCloseButton()
						}, i.createCloseButton = function() {
							this.closeButton = new Ia.Z(this, {
								key: hN,
								frame: uN.BUTTON_CLOSE,
								width: 48.5,
								height: 43,
								paddingZone: 20
							}), this.closeButton.setName("Close"), this.closeButton.onClick = this.handleHomeClick, Phaser.Display.Align.In.TopLeft(this.closeButton, this.gameZone, -5, -5)
						}, i.createTournamentScroller = function() {
							this.tournamentScroller = new rN(this)
						}, i.alignObjects = function() {
							this.tournamentScroller.alignObjects()
						}, t
					}(En.Z),
					pN = dN;
				var mN = i(54903),
					fN = i.n(mN),
					gN = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).level = 1, i.maxLevel = 1, i.promisePreloadLevel = {}, i.loadedLevel = {}, i.levelConfigMap = [], i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.getLevel = function() {
							return this.level
						}, i.getMaxLevel = function() {
							return this.maxLevel
						}, i.setLevel = function(e) {
							this.level = e, this.maxLevel = Math.max(this.maxLevel, e)
						}, i.setMaxLevel = function(e) {
							this.maxLevel = e, this.game.player.updatePlayerLevel(e)
						}, i.setLevelCustom = function(e) {
							this.loadedLevel[this.getKeyLevel(this.level)] = e
						}, i.nextLevel = function() {
							this.level += 1, this.maxLevel = Math.max(this.level, this.maxLevel), this.preloadLevelDataAsync(this.level), this.preloadLevelDataAsync(this.level + 1)
						}, i.getKeyLevel = function(e) {
							var t;
							return "level_" + fN()(t = GameCore.Utils.Number).call(t, e, 6)
						}, i.preloadLevelDataAsync = function() {
							var e = (0, r.Z)(h().mark((function e(t) {
								var i, n, a;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return t = t || this.level, n = this.getKeyLevel(t), (!ue()(i = K()(this.promisePreloadLevel)).call(i, n) || GameCore.Configs.Level.alwaysLoadNew) && (this.promisePreloadLevel[n] = this.preloadLevel(t)), e.next = 6, this.promisePreloadLevel[n];
										case 6:
											if (a = e.sent) {
												e.next = 13;
												break
											}
											return delete this.promisePreloadLevel[n], this.promisePreloadLevel[n] = this.preloadLevel(t), e.abrupt("return", this.promisePreloadLevel[n]);
										case 13:
											return this.loadedLevel[n] = a, e.abrupt("return", a);
										case 15:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), i.preloadLevel = function() {
							var e = (0, r.Z)(h().mark((function e(t) {
								var i, n, a, s, o;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.prev = 0, n = (0, pn.B)(), a = this.getKeyLevel(t), s = GameCore.Configs.Level.url, e.next = 6, 
                                            new Promise(function (resolve, reject) {
                                                var xhttp = new XMLHttpRequest();
                                                xhttp.onreadystatechange = function() {
                                                    if (this.readyState == 4 && this.status == 200) {
                                                        resolve(xhttp.response);
                                                    // Typical action to be performed when the document is ready:
                                                    }
                                                };
                                                xhttp.responseType = "json";
                                                xhttp.open("GET",  n + s + a + ".json", true);
                                                xhttp.send();
                                            }).then((response) => {
                                                return response
                                            });
                                            // fetch("" + n + s + a + ".json", {
											// 	method: "GET"
											// });
										case 6:
											return o = e.sent, e.next = 9, o;
										case 9:
											i = e.sent, e.next = 15;
											break;
										case 12:
											return e.prev = 12, e.t0 = e.catch(0), e.abrupt("return", void 0);
										case 15:
											return e.abrupt("return", i);
										case 16:
										case "end":
											return e.stop()
									}
								}), e, this, [
									[0, 12]
								])
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), i.getLevelDataAsync = function() {
							var e = (0, r.Z)(h().mark((function e(t) {
								var i;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.prev = 0, e.next = 3, this.preloadLevelDataAsync(t || this.level);
										case 3:
											return i = e.sent, e.abrupt("return", i);
										case 7:
											return e.prev = 7, e.t0 = e.catch(0), e.abrupt("return");
										case 10:
										case "end":
											return e.stop()
									}
								}), e, this, [
									[0, 7]
								])
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), i.getLevelData = function(e) {
							var t = this.getKeyLevel(e || this.level);
							return this.loadedLevel[t]
						}, i.preloadLevelConfigMapAsync = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, i, n, a;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.prev = 0, t = (0, pn.B)(), i = GameCore.Configs.Level.url, e.next = 5, 
                                            new Promise(function (resolve, reject) {
                                                var xhttp = new XMLHttpRequest();
                                                xhttp.onreadystatechange = function() {
                                                    if (this.readyState == 4 && this.status == 200) {
                                                        resolve(xhttp.response);
                                                    // Typical action to be performed when the document is ready:
                                                    }
                                                };
                                                xhttp.responseType = "json";
                                                xhttp.open("GET", t + i + "level_map_config.json", true);
                                                xhttp.send();
                                            }).then((response) => {
                                                return response
                                            })
                                            fetch("" + t + i + "level_map_config.json", {
												method: "GET"
											});
										case 5:
											return n = e.sent, e.next = 8, n;
										case 8:
											return (a = e.sent) || (a = {
												levelMap: []
											}), this.levelConfigMap = a.levelMap, e.abrupt("return", a.levelMap);
										case 14:
											return e.prev = 14, e.t0 = e.catch(0), this.levelConfigMap = [], e.abrupt("return");
										case 18:
										case "end":
											return e.stop()
									}
								}), e, this, [
									[0, 14]
								])
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.getLevelConfigMap = function() {
							return this.levelConfigMap
						}, t
					}(Phaser.Plugins.BasePlugin),
					vN = gN,
					yN = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).events = void 0, i.EVENTS = void 0, i.themes = void 0, i.themesByKeys = void 0, i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.configure = function() {
							this.themes = [], this.themesByKeys = {}, this.initEvents()
						}, i.addTheme = function(e) {
							if (0 !== e.themes.length) {
								var t = this.getThemeConfig(e);
								this.themes.push(t), this.themesByKeys[e.key] = t;
								var i = document.createElement("img"),
									n = this.game.textures.create(e.key, i, 10, 10);
								this.assignTexture(e.key, e.themes[0].textureKey), this.events.emit(this.EVENTS.THEME_ADD, n)
							}
						}, i.changeTheme = function(e, t) {
							var i = this.themesByKeys[e];
							if (i && i.themes[t]) {
								i.currentTheme = i.themes[t], this.assignTexture(e, t);
								var n = this.game.textures.get(e),
									a = this.game.textures.get(t);
								this.events.emit(this.EVENTS.THEME_CHANGE, n, a), this.events.emit(this.EVENTS.THEME_CHANGE + "-" + e, n, a)
							}
						}, i.getCurrentTheme = function(e) {
							return this.themesByKeys[e].currentTheme
						}, i.assignTexture = function(e, t) {
							if (this.game.textures.exists(e) && this.game.textures.exists(t)) {
								var i = this.game.textures.get(e),
									n = this.game.textures.get(t);
								i.copy(n)
							}
						}, i.initEvents = function() {
							this.EVENTS = {
								THEME_ADD: "theme-add",
								THEME_CHANGE: "theme-change"
							}, this.events = new Phaser.Events.EventEmitter
						}, i.getThemeConfig = function(e) {
							var t, i = oP()(t = e.themes).call(t, (function(e, t) {
								var i;
								return (0, o.Z)({}, e, ((i = {})[t.textureKey] = t, i))
							}), {});
							return {
								key: e.key,
								currentTheme: e.themes[0],
								themes: i
							}
						}, t
					}(Phaser.Plugins.BasePlugin),
					bN = yN,
					EN = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).isEnable = !1, i.events = void 0, i.config = void 0, i.mockPurchases = [], i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.configure = function(e) {
							this.config = e, this.initEvents(), this.initPayment()
						}, i.openStore = function() {
							this.game.globalScene.screen.open("STORE_SCREEN")
						}, i.closeStore = function() {
							this.game.globalScene.screen.close("STORE_SCREEN")
						}, i.getCatalogAsync = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, i, n;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (!this.config.showMock) {
												e.next = 3;
												break
											}
											return i = _()(t = this.config.mockProducts).call(t, (function(e) {
												return (0, o.Z)({}, e, {
													price: e.priceAmount.toFixed(2),
													priceCurrencyCode: "USD"
												})
											})), e.abrupt("return", oe().resolve(i));
										case 3:
											return n = [], e.prev = 4, e.next = 7, FBInstant.payments.getCatalogAsync();
										case 7:
											n = e.sent, e.next = 12;
											break;
										case 10:
											e.prev = 10, e.t0 = e.catch(4);
										case 12:
											return e.abrupt("return", n);
										case 13:
										case "end":
											return e.stop()
									}
								}), e, this, [
									[4, 10]
								])
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.getPurchasesAsync = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (!this.config.showMock) {
												e.next = 2;
												break
											}
											return e.abrupt("return", this.mockPurchases);
										case 2:
											return t = [], e.prev = 3, e.next = 6, FBInstant.payments.getPurchasesAsync();
										case 6:
											t = e.sent, e.next = 11;
											break;
										case 9:
											e.prev = 9, e.t0 = e.catch(3);
										case 11:
											return e.abrupt("return", t);
										case 12:
										case "end":
											return e.stop()
									}
								}), e, this, [
									[3, 9]
								])
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), i.purchaseAsync = function() {
							var e = (0, r.Z)(h().mark((function e(t, i) {
								var n, a;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (this.isEnable) {
												e.next = 2;
												break
											}
											return e.abrupt("return", oe().resolve(!1));
										case 2:
											if (!this.config.showMock) {
												e.next = 7;
												break
											}
											return n = {
												developerPayload: "",
												paymentID: t + GameCore.Utils.String.random(10),
												productID: t,
												purchaseTime: "1663841515",
												purchaseToken: GameCore.Utils.String.random(10),
												signedRequest: ""
											}, this.mockPurchases.push(n), this.game.player.buyProduct(n.paymentID, t), e.abrupt("return", oe().resolve(n));
										case 7:
											return e.prev = 7, e.next = 10, FBInstant.payments.purchaseAsync({
												productID: t,
												developerPayload: i
											});
										case 10:
											return a = e.sent, this.events.emit("purchase-success-" + t, a), this.game.player.buyProduct(a.paymentID, t), e.abrupt("return", a);
										case 16:
											return e.prev = 16, e.t0 = e.catch(7), this.events.emit("purchase-fail-" + t, e.t0), e.abrupt("return", oe().resolve(!1));
										case 20:
										case "end":
											return e.stop()
									}
								}), e, this, [
									[7, 16]
								])
							})));
							return function(t, i) {
								return e.apply(this, arguments)
							}
						}(), i.consumePurchaseAsync = function() {
							var e = (0, r.Z)(h().mark((function e(t) {
								var i, n, a, s;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (i = t.purchaseToken, this.isEnable) {
												e.next = 3;
												break
											}
											return e.abrupt("return", oe().resolve(!1));
										case 3:
											if (!this.config.showMock) {
												e.next = 10;
												break
											}
											if (s = ye()(n = this.mockPurchases).call(n, (function(e) {
													return e.purchaseToken === i
												}))) {
												e.next = 7;
												break
											}
											return e.abrupt("return", oe().resolve(!1));
										case 7:
											return this.mockPurchases = A()(a = this.mockPurchases).call(a, (function(e) {
												return e.purchaseToken != i
											})), this.game.player.buyProduct(s.paymentID, s.productID), e.abrupt("return", oe().resolve(!0));
										case 10:
											return e.prev = 10, e.next = 13, FBInstant.payments.consumePurchaseAsync(i);
										case 13:
											return this.game.player.buyProduct(t.paymentID, t.productID), this.events.emit("purchase-success-" + i), e.abrupt("return", !0);
										case 18:
											return e.prev = 18, e.t0 = e.catch(10), this.events.emit("purchase-fail-" + i, e.t0), e.abrupt("return", oe().resolve(!1));
										case 22:
										case "end":
											return e.stop()
									}
								}), e, this, [
									[10, 18]
								])
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}(), i.isConsumableProduct = function(e) {
							var t;
							return !ue()(t = this.config.nonConsumableProductID).call(t, e)
						}, i.initPayment = function() {
							var e = this;
							this.config.showMock ? (this.events.emit("ready"), this.isEnable = !0) : this.config.enable && FBInstant.payments.onReady((function() {
								e.events.emit("ready"), e.isEnable = !0
							}))
						}, i.initEvents = function() {
							this.events = new Phaser.Events.EventEmitter
						}, i.getPaymentEnable = function() {
							return this.isEnable
						}, t
					}(Phaser.Plugins.BasePlugin),
					TN = EN,
					AN = i(1998),
					SN = aa.Z.DEFAULT,
					_N = SN.KEY,
					CN = SN.FRAME,
					wN = function(e) {
						function t() {
							for (var t, i, n = arguments.length, a = new Array(n), s = 0; s < n; s++) a[s] = arguments[s];
							return (i = e.call.apply(e, y()(t = [this]).call(t, a)) || this).errorText = void 0, i.retryButton = void 0, i.maskBackground = void 0, i.run = function() {
								i.retryButton.setDisabled(!1)
							}, i.create = function() {
								e.prototype.create.call((0, Un.Z)(i)), i.createBackground(Yn.Z.GAME_BACKGROUND_THEME.KEY), i.createText(), i.createRetryButton(), i.createMaskGraphics(), i.alignObjects()
							}, i.handleRetry = (0, r.Z)(h().mark((function e() {
								var t;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return t = i.level.getLevel(), i.level.setLevel(t), i.retryButton.setDisabled(!0), e.next = 5, i.level.preloadLevelDataAsync(t);
										case 5:
											i.storage.dispatch((0, Ua.rq)()), i.retryButton.setDisabled(!1);
										case 7:
										case "end":
											return e.stop()
									}
								}), e)
							}))), i
						}(0, l.Z)(t, e);
						var i = t.prototype;
						return i.preload = function() {
							this.events.on(Phaser.Scenes.Events.WAKE, this.run), this.events.on(Phaser.Scenes.Events.CREATE, this.run)
						}, i.createText = function() {
							this.errorText = ia.Z.addText(this, {
								font: _a.Z.PRIMARY.KEY,
								size: this.fontSize(24),
								text: this.lang.getText("there_was_an_error_while_loading_level_please_try_again_later")
							}), this.errorText.setDepth(jn.Z.TEXT)
						}, i.createRetryButton = function() {
							this.retryButton = new ea.Z(this, _N, CN.BUTTON_GREEN, 153.5, 58.5), this.retryButton.setName("Retry");
							var e = ia.Z.addText(this, {
								font: _a.Z.PRIMARY.KEY,
								text: this.lang.getText("retry"),
								size: this.fontSize(26),
								origin: {
									x: .5,
									y: .5
								},
								maxWidth: 130,
								maxHeight: 40
							});
							this.retryButton.add(e), this.retryButton.onClick = this.handleRetry, Phaser.Display.Align.In.Center(e, this.retryButton, 0, -2)
						}, i.createMaskGraphics = function() {
							this.maskBackground = this.make.image({
								key: aa.Z.DEFAULT.KEY,
								frame: aa.Z.DEFAULT.FRAME.BLANK
							}), this.input.setTopOnly(!1), this.maskBackground.setTint(0), this.maskBackground.setAlpha(.5), this.maskBackground.setDepth(jn.Z.BACKGROUND);
							var e = this.gameZone,
								t = e.displayWidth + 100,
								i = e.displayHeight + 100;
							this.maskBackground.setDisplaySize(t, i)
						}, i.alignObjects = function() {
							Phaser.Display.Align.In.Center(this.maskBackground, this.gameZone), Phaser.Display.Align.In.Center(this.errorText, this.gameZone), Phaser.Display.Align.To.BottomCenter(this.retryButton, this.errorText, 0, 30)
						}, t
					}(En.Z),
					BN = wN,
					IN = ["Enable"],
					PN = function(e) {
						function t(t) {
							return e.call(this, t) || this
						}(0, l.Z)(t, e);
						var n = t.prototype;
						return n.boot = function() {
							var t = (0, r.Z)(h().mark((function t() {
								return h().wrap((function(t) {
									for (;;) switch (t.prev = t.next) {
										case 0:
											return e.prototype.boot.call(this), this.addExtraGameObjectMethods(), this.addExtraFBInstantFunctions(), this.addPlugins(), t.next = 6, this.addDevPlugins();
										case 6:
											return t.next = 8, this.initAdsAsync();
										case 8:
											this.addScenes(), this.addDevScenes(), this.initWorld(), this.initStorage(), this.initPayment(), this.initTheme(), this.initLanguage(), this.initUtils(), this.initLanguage(), this.initUtils(), this.initRollbar(), this.initConsole(), this.initDebugger(), this.initStatistics(), this.initParticleEditor(), this.initProfilerPlugin(), this.initAdaptivePerformance(), this.handleShowInterAdWhenStartGame();
										case 26:
										case "end":
											return t.stop()
									}
								}), t, this)
							})));
							return function() {
								return t.apply(this, arguments)
							}
						}(), n.start = function() {
							e.prototype.start.call(this)
						}, n.addExtraGameObjectMethods = function() {
							var e = new g(this);
							e.addKillRevive(), e.addKillReviveGroup(), e.addDrawDebugBox(), e.addSetWorldSize(), e.addSetWorldSizeForContainer(), e.addGetWorldPosition(), e.addHighQuality()
						}, n.addExtraFBInstantFunctions = function() {
							var e = new u.Z(this.facebook);
							this.facebook.getLocale = e.getLocale, this.facebook.shareAsync = e.shareAsync, this.facebook.inviteAsync = e.inviteAsync, this.facebook.switchAsync = e.switchAsync, this.facebook.chooseAsync = e.chooseAsync, this.facebook.createAsync = e.createAsync, this.facebook.sendMessage = e.sendMessage, this.facebook.getContextID = e.getContextID, this.facebook.getPlayerToken = e.getPlayerToken, this.facebook.matchPlayerAsync = e.matchPlayerAsync, this.facebook.getContextPlayers = e.getContextPlayers, this.facebook.setLoadingProgress = e.setLoadingProgress, this.facebook.getTournamentAsync = e.getTournamentAsync, this.facebook.attemptToAddShortcut = e.attemptToAddShortcut, this.facebook.attemptToSubscribeBot = e.attemptToSubscribeBot, this.facebook.postSessionScoreAsync = e.postSessionScoreAsync, this.facebook.getRewardedVideoAsync = e.getRewardedVideoAsync, this.facebook.sendNotificationAsync = e.sendNotificationAsync, this.facebook.getInterstitialAdAsync = e.getInterstitialAdAsync, e.injectTournament(), this.facebook.progressLoading = new m(this)
						}, n.addPlugins = function() {
							this.plugins.install("Storage", dn, !0, "storage"), this.plugins.install("AdsManager", G, !0, "ads"), this.plugins.install("Payment", TN, !0, "payment"), this.plugins.install("AuthManager", ae, !0, "auth"), this.plugins.install("AudioManager", X, !0, "audio"), this.plugins.install("WorldManager", An, !0, "world"), this.plugins.install("ThemeManager", bN, !0, "theme"), this.plugins.install("PlayerManager", Dt, !0, "player"), this.plugins.install("LanguageManager", kn, !0, "lang"), this.plugins.install("ProfileManager", Kt, !0, "profile"), this.plugins.install("AnalyticsManager", U, !0, "analytics"), this.plugins.install("AdaptivePerformance", ge, !0, "performance"), this.plugins.install("LevelManager", vN, !0, "level"), this.plugins.install("LanguageManager", kn, !0, "lang"), this.plugins.installScenePlugin("textStyler", bn, "textStyler"), this.plugins.installScenePlugin("ScreenManager", $t, "screen"), this.plugins.installScenePlugin("FrameCapture", ce, "frameCapture"), window.SpinePlugin && this.plugins.installScenePlugin("SpinePlugin", SpinePlugin, "spine"), this.storage = this.plugins.get("Storage"), this.payment = this.plugins.get("Payment"), this.ads = this.plugins.get("AdsManager"), this.auth = this.plugins.get("AuthManager"), this.audio = this.plugins.get("AudioManager"), this.world = this.plugins.get("WorldManager"), this.theme = this.plugins.get("ThemeManager"), this.player = this.plugins.get("PlayerManager"), this.lang = this.plugins.get("LanguageManager"), this.profile = this.plugins.get("ProfileManager"), this.analytics = this.plugins.get("AnalyticsManager"), this.performance = this.plugins.get("AdaptivePerformance"), this.level = this.plugins.get("LevelManager"), this.lang = this.plugins.get("LanguageManager")
						}, n.addDevPlugins = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, n, a, s, o;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (GameCore.Utils.Valid.isDebugger()) {
												e.next = 2;
												break
											}
											return e.abrupt("return");
										case 2:
											return e.next = 4, Promise.all([i.e(7), i.e(716)]).then(i.bind(i, 15716));
										case 4:
											return t = e.sent.default, e.next = 7, Promise.all([i.e(498), i.e(114), i.e(227)]).then(i.bind(i, 19227));
										case 7:
											return n = e.sent.default, e.next = 10, i.e(315).then(i.bind(i, 79315));
										case 10:
											return a = e.sent.default, e.next = 13, Promise.all([i.e(498), i.e(883)]).then(i.bind(i, 59883));
										case 13:
											return s = e.sent.default, e.next = 16, Promise.all([i.e(498), i.e(516)]).then(i.bind(i, 76516));
										case 16:
											o = e.sent.default, this.plugins.install("Console", t, !0, "console"), this.plugins.install("Debugger", n, !0, "debugger"), this.plugins.install("Statistics", a, !0, "statistics"), this.plugins.install("Profiler", s, !0, "profiler"), this.plugins.install("ParticleEditor", o, !0, "particle-editor"), this.eruda = this.plugins.get("Console"), this.debugger = this.plugins.get("Debugger"), this.statistics = this.plugins.get("Statistics"), this.profiler = this.plugins.get("Profiler"), this.particleEditor = this.plugins.get("ParticleEditor");
										case 27:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), n.addScenes = function() {
							this.scene.add(In.C.BOOT_SCENE, Zn, !0), this.scene.add(In.C.LOAD_SCENE, uD, !1), this.scene.add(In.C.GAME_SCENE, _G, !1), this.scene.add(In.C.GAME_OVER_SCENE, hm, !1), this.scene.add(In.C.DASHBOARD_SCENE, qd, !1), this.scene.add(In.C.LEADERBOARD_SCENE, QG, !1), this.scene.add(In.C.TOURNAMENT_SCENE, pN, !1), this.scene.add(In.C.RESULT_MATCH_SCENE, DD, !1), this.scene.add(In.C.RESULT_ONLINE_SCENE, AF), this.scene.add(In.C.ERROR_SCENE, BN, !1), this.scene.add(In.C.GLOBAL_SCENE, oD.Z, !1)
						}, n.addDevScenes = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, n, a;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (GameCore.Utils.Valid.isDebugger()) {
												e.next = 2;
												break
											}
											return e.abrupt("return");
										case 2:
											return e.next = 4, i.e(817).then(i.bind(i, 3817));
										case 4:
											return t = e.sent.default, e.next = 7, i.e(729).then(i.bind(i, 53729));
										case 7:
											return n = e.sent.default, e.next = 10, Promise.all([i.e(498), i.e(583)]).then(i.bind(i, 71583));
										case 10:
											a = e.sent.default, this.scene.add(In.C.TEST_SCENE, t, !1), this.scene.add(In.C.ANIMATIONS_SCENE, n, !1), this.scene.add(In.C.LEVEL_EDITOR_SCENE, a, !1), this.globalScene.listenScenesEvents();
										case 15:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), n.initAdsAsync = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t, n, a, s;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (t = GameCore.Configs.Ads, AN.Z.setGame(this), n = AN.Z, !t.Mockup.Enable) {
												e.next = 8;
												break
											}
											return e.next = 6, i.e(658).then(i.bind(i, 17658));
										case 6:
											a = e.sent.default, n = a;
										case 8:
											(s = (0, o.Z)({}, t.InterstitialAdOptions)).showWhenStartGame && (s.secondsFirstTime = 0), this.ads.configure(n, (0, o.Z)({}, t, {
												InterstitialAdOptions: s
											}));
										case 11:
										case "end":
											return e.stop()
									}
								}), e, this)
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), n.initWorld = function() {
							var e = GameCore.Configs.Game,
								t = e.AutoResize,
								i = e.PortraitRatio,
								n = e.PortraitWidth,
								a = e.PortraitHeight,
								s = e.LandscapeRatio,
								o = e.LandscapeWidth,
								r = e.LandscapeHeight,
								l = t,
								c = e.DisableLandscape,
								h = e.FullSizeOnLandscape,
								u = i,
								d = n,
								p = a,
								m = s,
								f = o,
								g = r;
							this.world.configure({
								autoResize: l,
								portraitRatio: u,
								portraitWidth: d,
								portraitHeight: p,
								landscapeRatio: m,
								landscapeWidth: f,
								landscapeHeight: g,
								disableLandscape: c,
								fullSizeOnLandscape: h
							}), this.world.resize(e.ForcePixelRatio)
						}, n.initStorage = function() {
							var e = new Bn(this);
							this.storage.setInitiator(e)
						}, n.initTheme = function() {
							this.theme.configure()
						}, n.initLanguage = function() {
							var e = this.facebook.getLocale();
							this.lang.configure({
								locale: e,
								upperCaseText: !1
							})
						}, n.initUtils = function() {
							this.handlePauseAudio()
						}, n.initPayment = function() {
							this.payment.configure(GameCore.Configs.Payment)
						}, n.initConsole = function() {
							GameCore.Utils.Valid.isDebugger() && (GameCore.Configs.Debugger.ShowConsole && this.eruda.configure({
								tool: ["console", "info"],
								defaults: {
									theme: "Dark"
								}
							}))
						}, n.initDebugger = function() {
							if (GameCore.Utils.Valid.isDebugger()) {
								var e = GameCore.Configs.Debugger,
									t = e.ShowInspector,
									i = e.ShowMonitoring;
								(t || i) && this.debugger.configure(GameCore.Configs.Debugger)
							}
						}, n.initStatistics = function() {
							GameCore.Utils.Valid.isDebugger() && (GameCore.Configs.Statistics.Enable && this.statistics.configure(GameCore.Configs.Statistics))
						}, n.initParticleEditor = function() {
							GameCore.Utils.Valid.isDebugger() && (GameCore.Configs.ParticleEditor.Enable && this.particleEditor.configure(GameCore.Configs.ParticleEditor))
						}, n.initProfilerPlugin = function() {
							GameCore.Utils.Valid.isDebugger() && (GameCore.Configs.ProfilerPlugin.Enable && this.profiler.configure())
						}, n.initAdaptivePerformance = function() {
							var e = GameCore.Configs.Performance,
								t = e.Enable,
								i = (0, s.Z)(e, IN);
							if (t) {
								var n = this.world.getPixelRatio();
								this.performance.configure((0, o.Z)({
									pixelRatio: n
								}, i)), this.performance.active()
							}
						}, n.initRollbar = function() {
							GameCore.Configs.Rollbar.Enable && this.rollbar.setup()
						}, n.handlePauseAudio = function() {
							var e = this;
							this.sound.pauseOnBlur = !1, document.addEventListener("visibilitychange", (function() {
								if (document.hidden) return e.audio.pauseMusic(), void e.audio.muteAllSound();
								e.audio.playMusic(), e.audio.unmuteAllSound()
							}))
						}, n.removeUnusedPipelines = function() {
							var e = this.renderer;
							if (e instanceof Phaser.Renderer.WebGL.WebGLRenderer) {
								var t = e.pipelines,
									i = Phaser.Renderer.WebGL.Pipelines;
								if (i)[i.LIGHT_PIPELINE, i.POSTFX_PIPELINE, i.POINTLIGHT_PIPELINE, i.BITMAPMASK_PIPELINE].forEach((function(e) {
									var i;
									null == (i = t.get(e)) || i.destroy(), t.remove(e)
								}))
							}
						}, n.handleShowInterAdWhenStartGame = function() {
							var e = (0, r.Z)(h().mark((function e() {
								var t;
								return h().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (t = GameCore.Configs.Ads.InterstitialAdOptions, this.ads.showBannerAdAsync(), t.showWhenStartGame) {
												e.next = 4;
												break
											}
											return e.abrupt("return");
										case 4:
											return e.prev = 4, this.audio.setMusicVolume(1e-5), this.audio.stopMusic(), this.audio.muteAllSound(), e.next = 10, this.ads.preloadPreRollAdAsync();
										case 10:
											return e.next = 12, this.ads.showPreRollAdAsync();
										case 12:
											e.next = 17;
											break;
										case 14:
											e.prev = 14, e.t0 = e.catch(4), (0, a.tO)(e.t0);
										case 17:
											return e.prev = 17, this.audio.setMusicVolume(.2), this.audio.unmuteAllSound(), this.audio.playMusic(), e.finish(17);
										case 22:
										case "end":
											return e.stop()
									}
								}), e, this, [
									[4, 14, 17, 22]
								])
							})));
							return function() {
								return e.apply(this, arguments)
							}
						}(), t
					}(Phaser.Game),
					xN = PN,
					ON = GameCore.Utils.Valid.isDebugger(),
					kN = (0, pn.B)(),
					RN = {
						parent: "app",
						type: Phaser.WEBGL,
						scale: {
							autoRound: !1
						},
						dom: {
							createContainer: !1
						},
						loader: {
							maxParallelDownloads: 6,
							crossOrigin: "no-cros",
							baseURL: kN
						},
						audio: {
							noAudio: !1,
							disableWebAudio: !1
						},
						input: {
							gamepad: !1,
							keyboard: ON,
							touch: {
								capture: !0
							},
							smoothFactor: 1,
							activePointers: 1,
							windowEvents: !1
						},
						disableContextMenu: !0,
						render: {
							antialias: !0,
							antialiasGL: !0,
							transparent: !0,
							desynchronized: !1,
							powerPreference: "high-performance",
							clearBeforeRender: !1,
							roundPixels: !1
						},
						plugins: {
							global: []
						}
					};
				(0, a.j6)();
				var MN = setInterval((function() {
					window.__analyticsInitiated && (window.__fbGameReady = !1, clearInterval(MN), clearInterval(window.__fbInstantLoadingTimer), GameSDK.setLoadingProgress(30), gtag("event", "app_initialize", {
						send_to: ["GA"]
					}), function() {
						try {
							var e = new xN(RN);
							window.game = e
						} catch (t) {
							(0, a.tO)(t)
						}
					}())
				}), 50)
			},
			99599: function(e, t) {
				"use strict";
				t.Z = {
					COLLECT_EGGS: {
						ID: "collect-eggs",
						EVENTS: {
							COLLECT_EGGS: "collect-eggs"
						}
					},
					SHOOT_FLYING_EGG: {
						ID: "shoot-flying-eggs",
						EVENTS: {
							SHOOT_FLYING_EGG: "shoot-flying-eggs"
						}
					},
					REACH_TARGET_POINTS: {
						ID: "reach-target-points",
						EVENTS: {
							REACH_TARGET_POINTS: "reach-target-points"
						}
					},
					GET_DINOMITE_COMBO: {
						ID: "get-dinomite-combo",
						EVENTS: {
							GET_DINOMITE_COMBO: "get-dinomite-combo"
						}
					},
					USE_RESCUE: {
						ID: "use-rescue",
						EVENTS: {
							USE_RESCUE: "use-rescue"
						}
					},
					INVITE_FRIENDS: {
						ID: "invite-friends",
						EVENTS: {
							INVITED_FRIEND: "INVITED_FRIEND"
						}
					},
					COMPLETE_GAMES: {
						ID: "complete-games",
						EVENTS: {
							COMPLETE_GAME: "complete-game"
						}
					},
					EVENTS: {
						TASKS_RESET: "tasks-reset",
						NOTICE_UPDATE: "notice-update"
					}
				}
			},
			35285: function(e, t, i) {
				"use strict";
				i.d(t, {
					H$: function() {
						return A
					},
					tu: function() {
						return C
					},
					GA: function() {
						return I
					}
				});
				var n = i(73126),
					a = i(33938),
					s = i(63109),
					o = i.n(s),
					r = i(2991),
					l = i.n(r),
					c = i(32926),
					h = i(62262),
					u = GameCore.Configs,
					d = u.ApiHost,
					p = u.OtherHost,
					m = u.LeadersBoard,
					f = m.Prefix,
					g = m.LeaderboardId,
					v = m.Name,
					y = f + "/" + g + "/leaders",
					b = f + "/" + g + "/players",
					E = function(e) {
						var t = "";
						return g ? (e === h.C ? t = y : e === h.n && (t = b), t) : t
					},
					T = function() {
						var e = (0, a.Z)(o().mark((function e(t) {
							var i, a, s, r, h, u;
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return a = l()(t).call(t, (function(e) {
											return e.playerId
										})), s = GameCore.Utils.Object.keyBy(t, "playerId"), r = GameCore.Utils.String.params({
											playerIds: a
										}), e.next = 5, (0, c.U)("players?" + r, {}, d);
									case 5:
										return h = e.sent, u = l()(i = h.data).call(i, (function(e) {
											var t = s[e.playerId];
											return (0, n.Z)({}, e, {
												score: t.score,
												rank: t.rank,
												getScore: function() {
													return t.score
												},
												getFormattedScore: function() {
													return ""
												},
												getTimestamp: function() {
													return (new Date).valueOf()
												},
												getRank: function() {
													return t.rank
												},
												getExtraData: function() {
													return t.extraData
												},
												getPlayer: function() {
													return {
														getName: function() {
															return e.name
														},
														getPhoto: function() {
															return e.photo
														},
														getID: function() {
															return e.playerId
														}
													}
												}
											})
										})), e.abrupt("return", u);
									case 8:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}(),
					A = function() {
						var e = (0, a.Z)(o().mark((function e(t) {
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										if (void 0 === t && (t = {}), null == g) {
											e.next = 3;
											break
										}
										return e.abrupt("return", S(t));
									case 3:
										return e.abrupt("return", _(t));
									case 4:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}(),
					S = function() {
						var e = (0, a.Z)(o().mark((function e(t) {
							var i, n, a, s, r;
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										if (void 0 === t && (t = {}), i = [], n = E(h.C)) {
											e.next = 5;
											break
										}
										return e.abrupt("return", i);
									case 5:
										return a = GameCore.Utils.String.params(t), e.next = 8, (0, c.U)(n + "?" + a, {}, p);
									case 8:
										if (s = e.sent, !((r = (null == s ? void 0 : s.data) || []).length < 1)) {
											e.next = 12;
											break
										}
										return e.abrupt("return", i);
									case 12:
										return i = r, e.abrupt("return", T(i));
									case 14:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}(),
					_ = function() {
						var e = (0, a.Z)(o().mark((function e(t) {
							var i, n, a, s, r;
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return void 0 === t && (t = {}), n = (i = t).limit, a = i.offset, e.next = 4, window.GameSDK.getLeaderboardAsync(v);
									case 4:
										return s = e.sent, e.next = 7, s.getEntriesAsync(n, a);
									case 7:
										return r = e.sent, e.abrupt("return", r);
									case 9:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}(),
					C = function() {
						var e = (0, a.Z)(o().mark((function e(t) {
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										if (void 0 === t && (t = {}), null == g) {
											e.next = 3;
											break
										}
										return e.abrupt("return", w(t));
									case 3:
										return e.abrupt("return", B(t));
									case 4:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}(),
					w = function() {
						var e = (0, a.Z)(o().mark((function e(t) {
							var i, n, a, s, r;
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										if (void 0 === t && (t = {}), i = [], n = E(h.n)) {
											e.next = 5;
											break
										}
										return e.abrupt("return", i);
									case 5:
										return a = GameCore.Utils.String.params(t), e.next = 8, (0, c.U)(n + "?" + a, {}, p);
									case 8:
										if (s = e.sent, !((r = (null == s ? void 0 : s.data) || []).length < 1)) {
											e.next = 12;
											break
										}
										return e.abrupt("return", i);
									case 12:
										return i = r, e.abrupt("return", T(i));
									case 14:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}(),
					B = function() {
						var e = (0, a.Z)(o().mark((function e(t) {
							var i, n, a, s, r;
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return void 0 === t && (t = {}), n = (i = t).limit, a = i.offset, e.next = 4, window.GameSDK.getLeaderboardAsync(v);
									case 4:
										return s = e.sent, e.next = 7, s.getConnectedPlayerEntriesAsync(n, a);
									case 7:
										return r = e.sent, e.abrupt("return", r);
									case 9:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}(),
					I = function() {
						var e = (0, a.Z)(o().mark((function e(t) {
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										if (null == g) {
											e.next = 2;
											break
										}
										return e.abrupt("return", P(t));
									case 2:
										return e.abrupt("return", x());
									case 3:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}(),
					P = function() {
						var e = (0, a.Z)(o().mark((function e(t) {
							var i, n, a, s, r;
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										if (i = null, t) {
											e.next = 3;
											break
										}
										return e.abrupt("return", i);
									case 3:
										if (n = E(h.n)) {
											e.next = 6;
											break
										}
										return e.abrupt("return", i);
									case 6:
										return a = GameCore.Utils.String.params({
											playerIds: t
										}), e.next = 9, (0, c.U)(n + "?" + a, {}, p);
									case 9:
										if (s = e.sent, !((r = (null == s ? void 0 : s.data) || []).length < 1)) {
											e.next = 13;
											break
										}
										return e.abrupt("return", i);
									case 13:
										return i = T(r)[0], e.abrupt("return", i);
									case 15:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}(),
					x = function() {
						var e = (0, a.Z)(o().mark((function e() {
							var t, i;
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return e.next = 2, window.GameSDK.getLeaderboardAsync(v);
									case 2:
										return t = e.sent, e.next = 5, t.getPlayerEntryAsync();
									case 5:
										return i = e.sent, e.abrupt("return", i);
									case 7:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function() {
							return e.apply(this, arguments)
						}
					}(),
					O = (function() {
						var e = (0, a.Z)(o().mark((function e(t, i) {
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										if (null == g) {
											e.next = 2;
											break
										}
										return e.abrupt("return", O(t, i));
									case 2:
										return e.abrupt("return", k(i));
									case 3:
									case "end":
										return e.stop()
								}
							}), e)
						})))
					}(), function() {
						var e = (0, a.Z)(o().mark((function e(t, i) {
							var n;
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return e.next = 2, (0, c.v)("leaderboards/" + g + "/players/" + t, {
											score: i
										}, {}, p);
									case 2:
										return n = e.sent, e.abrupt("return", (null == n ? void 0 : n.data) || {});
									case 4:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t, i) {
							return e.apply(this, arguments)
						}
					}()),
					k = function() {
						var e = (0, a.Z)(o().mark((function e(t) {
							var i;
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return e.next = 2, window.GameSDK.getLeaderboardAsync(v);
									case 2:
										return i = e.sent, e.next = 5, i.setScoreAsync(t);
									case 5:
										return e.abrupt("return", e.sent);
									case 6:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}()
			},
			62262: function(e, t, i) {
				"use strict";
				i.d(t, {
					C: function() {
						return n
					},
					n: function() {
						return a
					}
				});
				var n = "global",
					a = "friend"
			},
			60732: function(e, t, i) {
				"use strict";
				i.d(t, {
					Xp: function() {
						return oe
					},
					PB: function() {
						return se
					},
					RM: function() {
						return ue
					},
					b6: function() {
						return ce
					},
					hJ: function() {
						return re
					},
					H: function() {
						return le
					},
					Ds: function() {
						return he
					},
					rq: function() {
						return ae
					},
					li: function() {
						return ne
					},
					Wv: function() {
						return fe
					}
				});
				var n = i(33938),
					a = i(63109),
					s = i.n(a),
					o = i(78580),
					r = i.n(o),
					l = i(20116),
					c = i.n(l),
					h = i(81643),
					u = i.n(h),
					d = i(98297),
					p = i(71944),
					m = i(28936),
					f = i(41819),
					g = i(53082),
					v = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).name = "InvalidContextId", n.message = t || "This contextId is not valid", n.payload = i, n
						}
						return (0, f.Z)(t, e), t
					}((0, g.Z)(Error)),
					y = i(58123),
					b = i(58644),
					E = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).name = "NewScoreIsBad", n.message = t || "The new score is bad", n.payload = i, n
						}
						return (0, f.Z)(t, e), t
					}((0, g.Z)(Error)),
					T = i(55998),
					A = i(20494),
					S = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).name = "InvalidOpponentId", n.message = t || "This opponentId is not valid", n.payload = i, n
						}
						return (0, f.Z)(t, e), t
					}((0, g.Z)(Error)),
					_ = i(47909),
					C = i(99599),
					w = i(88986),
					B = i(19208),
					I = i(9247),
					P = i(20573),
					x = (0, P.P1)([function(e) {
						return e.messages.data
					}], (function(e) {
						return e
					})),
					O = (0, P.P1)([x, function(e, t) {
						return t.opponentId
					}], (function(e, t) {
						return !!GameCore.Utils.Valid.isString(t) && (!!GameCore.Utils.Object.hasOwn(e, t) && e[t].sent)
					})),
					k = i(4175),
					R = i(93397),
					M = i(75318),
					L = function(e) {
						var t = e.contextId;
						if ("" === t || "string" !== typeof t) throw new v(null, {
							contextId: t
						})
					},
					G = function(e) {
						var t = e.opponentId,
							i = e.contextId;
						if ("" === t || "string" !== typeof t) throw new S(null, {
							opponentId: t
						});
						if ("" === i || "string" !== typeof i) throw new v(null, {
							contextId: i
						})
					},
					D = function(e) {
						if (null === e.imageShare) throw new _.Z
					},
					F = function(e, t) {
						return void 0 === t && (t = !0),
							function(i, n) {
								var a, s = n(),
									o = x(s);
								if (t) {
									var r;
									if (null != (r = o[e]) && r.sent) return;
									i(N(e))
								}
								null != (a = o[e]) && a.sent && i(Z(e))
							}
					},
					N = function(e) {
						return {
							type: d.qj,
							payload: {
								opponentId: e
							}
						}
					},
					Z = function(e) {
						return {
							type: d.rh,
							payload: {
								opponentId: e
							}
						}
					},
					U = function() {
						var e = (0, n.Z)(s().mark((function e(t, i) {
							var n, a;
							return s().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										if (e.prev = 0, n = window.game.facebook, G({
												opponentId: t,
												contextId: i
											}), (a = FBInstant.context.getID()) !== i || "" === i) {
											e.next = 6;
											break
										}
										return e.abrupt("return", a);
									case 6:
										if ("10" !== t || "" === i) {
											e.next = 8;
											break
										}
										return e.abrupt("return", i);
									case 8:
										if (!i) {
											e.next = 12;
											break
										}
										return e.next = 11, n.switchAsync(i);
									case 11:
										return e.abrupt("return", FBInstant.context.getID());
									case 12:
										e.next = 17;
										break;
									case 14:
										e.prev = 14, e.t0 = e.catch(0), (0, R.tO)(e.t0);
									case 17:
										return e.abrupt("return", "");
									case 18:
									case "end":
										return e.stop()
								}
							}), e, null, [
								[0, 14]
							])
						})));
						return function(t, i) {
							return e.apply(this, arguments)
						}
					}(),
					j = function(e, t) {
						return function() {
							var i = (0, n.Z)(s().mark((function i(n, a) {
								var o, r, l, c, h, u, d, m, f, g, v, y;
								return s().wrap((function(i) {
									for (;;) switch (i.prev = i.next) {
										case 0:
											return o = window.game, r = o.player, l = o.analytics, c = o.facebook, i.prev = 1, h = t.matchId, u = t.contextId, i.next = 5, U(e, u);
										case 5:
											return d = i.sent, L({
												contextId: d
											}), m = a(), i.next = 10, (0, M.b1)(m);
										case 10:
											return f = i.sent, D({
												imageShare: f
											}), g = r.getPlayer(), v = g.name, y = g.playerId, i.next = 15, c.sendMessage({
												cta: {
													default: "Play",
													localizations: {
														en_US: "Play",
														vi_VN: "Ch\u01a1i ngay"
													}
												},
												text: {
													default: v + " challenges you",
													localizations: {
														en_US: v + " challenges you",
														vi_VN: v + " th\u1eed th\xe1ch b\u1ea1n trong tr\u1eadn \u0111\u1ea5u n\xe0y. Ch\u01a1i ngay!"
													}
												},
												image: f || "",
												template: "challenge",
												data: {
													type: A.Sb,
													matchId: h,
													playerId: y,
													opponentId: e,
													status: w.kR
												}
											});
										case 15:
											n(F(e)), l.event(p._.MESSAGE, {
												message_content_type: "Invite",
												success: !0
											}), k.Z.emit(C.Z.INVITE_FRIENDS.EVENTS.INVITED_FRIEND, {
												type: "friend",
												value: 1,
												opponentId: e
											}), i.next = 24;
											break;
										case 20:
											i.prev = 20, i.t0 = i.catch(1), l.event(p._.MESSAGE, {
												message_content_type: "Invite",
												success: !1
											}), (0, R.tO)(i.t0);
										case 24:
										case "end":
											return i.stop()
									}
								}), i, null, [
									[1, 20]
								])
							})));
							return function(e, t) {
								return i.apply(this, arguments)
							}
						}()
					},
					Y = function(e, t) {
						return function() {
							var i = (0, n.Z)(s().mark((function i(n, a) {
								var o, r, l, c, h, u, d, m, f, g, v, y;
								return s().wrap((function(i) {
									for (;;) switch (i.prev = i.next) {
										case 0:
											return o = window.game, r = o.player, l = o.analytics, c = o.facebook, i.prev = 1, h = t.matchId, u = t.contextId, i.next = 5, U(e, u);
										case 5:
											return d = i.sent, L({
												contextId: d
											}), m = a(), i.next = 10, (0, M.b1)(m);
										case 10:
											return f = i.sent, D({
												imageShare: f
											}), g = r.getPlayer(), v = g.name, y = g.playerId, i.next = 15, c.sendMessage({
												cta: {
													default: "See result",
													localizations: {
														en_US: "See result",
														vi_VN: "Xem k\u1ebft qu\u1ea3"
													}
												},
												text: {
													default: v + " just finished. Check them now.",
													localizations: {
														en_US: v + " just finished. Check them now.",
														vi_VN: v + " v\u1eeba ho\xe0n th\xe0nh m\xe0n ch\u01a1i. Nh\u1ea5n \u0111\u1ec3 xem k\u1ebft qu\u1ea3 tr\u1eadn \u0111\u1ea5u."
													}
												},
												image: f || "",
												template: "finished",
												data: {
													type: A.Sb,
													matchId: h,
													playerId: y,
													opponentId: e,
													status: w.o3
												}
											});
										case 15:
											n(F(e)), l.event(p._.MESSAGE, {
												message_content_type: "FinishMatch",
												success: !0
											}), i.next = 23;
											break;
										case 19:
											i.prev = 19, i.t0 = i.catch(1), l.event(p._.MESSAGE, {
												message_content_type: "FinishMatch",
												success: !1
											}), (0, R.tO)(i.t0);
										case 23:
										case "end":
											return i.stop()
									}
								}), i, null, [
									[1, 19]
								])
							})));
							return function(e, t) {
								return i.apply(this, arguments)
							}
						}()
					},
					W = function(e, t) {
						return function() {
							var i = (0, n.Z)(s().mark((function i(n, a) {
								var o, r, l, c, h, u, d, m, f, g, v, y, b, E, T, S;
								return s().wrap((function(i) {
									for (;;) switch (i.prev = i.next) {
										case 0:
											return o = window.game, r = o.player, l = o.analytics, c = o.facebook, i.prev = 1, h = t.matchId, u = t.contextId, i.next = 5, U(e, u);
										case 5:
											return d = i.sent, L({
												contextId: d
											}), m = a(), i.next = 10, (0, M.b1)(m);
										case 10:
											return f = i.sent, D({
												imageShare: f
											}), g = r.getPlayer(), v = g.name, y = g.playerId, b = (0, I.Jy)(m), E = b[y] || {}, T = E.score, S = void 0 === T ? 0 : T, i.next = 17, c.sendMessage({
												cta: {
													default: "See result",
													localizations: {
														en_US: "See result",
														vi_VN: "Xem k\u1ebft qu\u1ea3"
													}
												},
												text: {
													default: v + " beat your high score. Their score: " + S,
													localizations: {
														en_US: v + " beat your high score. Their score: " + S,
														vi_VN: v + " \u0111\xe3 v\u01b0\u1ee3t qua \u0111i\u1ec3m s\u1ed1 c\u1ee7a b\u1ea1n, v\u1edbi " + S + " \u0111i\u1ec3m!"
													}
												},
												image: f || "",
												template: "pass_score",
												data: {
													type: A.Sb,
													matchId: h,
													playerId: y,
													opponentId: e,
													status: w.o3
												}
											});
										case 17:
											n(F(e)), l.event(p._.MESSAGE, {
												message_content_type: "BestScore",
												success: !0
											}), i.next = 25;
											break;
										case 21:
											i.prev = 21, i.t0 = i.catch(1), l.event(p._.MESSAGE, {
												message_content_type: "BestScore",
												success: !1
											}), (0, R.tO)(i.t0);
										case 25:
										case "end":
											return i.stop()
									}
								}), i, null, [
									[1, 21]
								])
							})));
							return function(e, t) {
								return i.apply(this, arguments)
							}
						}()
					},
					K = function(e, t) {
						return function() {
							var i = (0, n.Z)(s().mark((function i(n, a) {
								var o, r, l, c, h, u, d, m, f, g, y, b, E;
								return s().wrap((function(i) {
									for (;;) switch (i.prev = i.next) {
										case 0:
											return o = window.game, r = o.player, l = o.analytics, c = o.facebook, i.prev = 1, h = t.matchId, u = t.contextId, d = t.score, i.next = 5, U(e, u);
										case 5:
											return m = i.sent, L({
												contextId: m
											}), f = a(), i.next = 10, (0, M.b1)(f);
										case 10:
											return g = i.sent, D({
												imageShare: g
											}), y = r.getPlayer(), b = y.name, E = y.playerId, i.next = 15, c.sendMessage({
												cta: {
													default: "Play",
													localizations: {
														en_US: "Play",
														vi_VN: "Ch\u01a1i ngay"
													}
												},
												text: {
													default: b + " got " + d + " scores. So easy! Can you?",
													localizations: {
														en_US: b + " got " + d + " scores. So easy! Can you?",
														vi_VN: b + " \u0111\xe3 \u0111\u1ea1t " + d + " \u0111i\u1ec3m! Nh\u1ea5n Ch\u01a1i \u0111\u1ec3 so t\xe0i!"
													}
												},
												image: g || "",
												template: "play_turn",
												data: {
													type: A.Sb,
													matchId: h,
													playerId: E,
													opponentId: e,
													status: w.kR
												}
											});
										case 15:
											n(F(e)), l.event(p._.MESSAGE, {
												message_content_type: "FinishTurn",
												success: !0
											}), i.next = 25;
											break;
										case 19:
											if (i.prev = 19, i.t0 = i.catch(1), l.event(p._.MESSAGE, {
													message_content_type: "FinishTurn",
													success: !1
												}), !(i.t0 instanceof v)) {
												i.next = 24;
												break
											}
											return i.abrupt("return");
										case 24:
											(0, R.tO)(i.t0);
										case 25:
										case "end":
											return i.stop()
									}
								}), i, null, [
									[1, 19]
								])
							})));
							return function(e, t) {
								return i.apply(this, arguments)
							}
						}()
					},
					H = function() {
						var e = (0, n.Z)(s().mark((function e(t, i) {
							var n, a, o, r, l, c, h, u, d, p;
							return s().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return e.prev = 0, n = window.game, a = n.player, o = n.facebook, r = a.getPlayer(), l = r.playerId, c = r.name, h = r.photo, u = (0, I.Vb)(i), d = u.score, p = {
											type: A.lB,
											playerId: l,
											playerName: c,
											playerPhoto: h,
											playerScore: d
										}, e.next = 7, o.sendMessage({
											cta: {
												default: "Play",
												localizations: {
													en_US: "Play",
													vi_VN: "Ch\u01a1i"
												}
											},
											text: {
												default: c + " beats your high score. Their score: " + d + ".",
												localizations: {
													en_US: c + " beats your high score. Their score: " + d + ".",
													vi_VN: c + " v\u1eeba v\u01b0\u1ee3t \u0111i\u1ec3m s\u1ed1 cao nh\u1ea5t c\u1ee7a b\u1ea1n! Ch\u01a1i l\u1ea7n n\u1eefa ch\u1ee9?"
												}
											},
											image: t || "",
											template: "play_turn",
											data: p
										});
									case 7:
										e.next = 12;
										break;
									case 9:
										e.prev = 9, e.t0 = e.catch(0), (0, R.tO)(e.t0);
									case 12:
									case "end":
										return e.stop()
								}
							}), e, null, [
								[0, 9]
							])
						})));
						return function(t, i) {
							return e.apply(this, arguments)
						}
					}(),
					z = function() {
						var e = (0, n.Z)(s().mark((function e(t, i) {
							var n, a, o, r, l, c, h, u, d, p;
							return s().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return n = window.game, a = n.player, o = n.facebook, e.prev = 1, r = a.getPlayer(), l = r.playerId, c = r.name, h = r.photo, u = (0, I.Vb)(i), d = u.score, p = {
											type: A.lB,
											playerId: l,
											playerName: c,
											playerPhoto: h,
											playerScore: d
										}, e.next = 7, o.sendMessage({
											cta: {
												default: "Play",
												localizations: {
													en_US: "Play",
													vi_VN: "Ch\u01a1i ngay"
												}
											},
											text: {
												default: c + " got " + d + " scores. So easy! Can you?",
												localizations: {
													en_US: c + " got " + d + " scores. So easy! Can you?",
													vi_VN: c + " \u0111\xe3 \u0111\u1ea1t " + d + " \u0111i\u1ec3m! Qu\xe1 d\u1ec5 lu\xf4n. Ch\u01a1i l\u1ea1i n\xe0o!"
												}
											},
											image: t || "",
											template: "play_turn",
											data: p
										});
									case 7:
										e.next = 12;
										break;
									case 9:
										e.prev = 9, e.t0 = e.catch(1), (0, R.tO)(e.t0);
									case 12:
									case "end":
										return e.stop()
								}
							}), e, null, [
								[1, 9]
							])
						})));
						return function(t, i) {
							return e.apply(this, arguments)
						}
					}(),
					X = (0, P.P1)([function(e) {
						return e.friendChallenge.friendListChallenged
					}], (function(e) {
						return e
					})),
					V = i(23400),
					J = i(67239),
					q = i(96772),
					Q = i(93307),
					$ = i(97172),
					ee = function(e) {
						var t = e.contextId;
						if ("" === t || "string" !== typeof t) throw new v(null, {
							contextId: t
						})
					},
					te = null,
					ie = function(e) {
						clearTimeout(te), te = setTimeout((function() {
							window.game.globalScene.screen.close(b.o4.NOTIFY_SCREEN)
						}), e)
					},
					ne = function() {
						return function(e) {
							try {
								e((0, Q.Tb)()), e(pe(J.kC))
							} catch (t) {
								(0, R.tO)(t)
							}
						}
					},
					ae = function() {
						return function(e) {
							try {
								e((0, Q.Tb)()), e(pe(J.oN))
							} catch (t) {
								(0, R.tO)(t)
							}
						}
					},
					se = function() {
						return function() {
							var e = (0, n.Z)(s().mark((function e(t, i) {
								var n, a, o, l, c;
								return s().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.prev = 0, a = window.game.globalScene, o = i(), l = (0, q.fQ)(o), r()(n = [J.oN, J.kC]).call(n, l) && (t((0, Q.Tb)()), t((0, Q.z$)())), c = null, l === J.jt && (a.screen.open(b.o4.NOTIFY_SCREEN, {
												message: "Loading...",
												loading: !0
											}), c = (0, B.oN)(o), t((0, Q.Ii)())), t((0, $.$4)()), e.next = 10, t(pe(l, c));
										case 10:
											e.next = 15;
											break;
										case 12:
											e.prev = 12, e.t0 = e.catch(0), (0, R.tO)(e.t0);
										case 15:
											return e.prev = 15, ie(300), e.finish(15);
										case 18:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[0, 12, 15, 18]
								])
							})));
							return function(t, i) {
								return e.apply(this, arguments)
							}
						}()
					},
					oe = function(e, t, i) {
						return void 0 === e && (e = "10"), void 0 === t && (t = !1), void 0 === i && (i = !1),
							function(n) {
								try {
									n(re("reset", e, t, i))
								} catch (a) {
									(0, R.tO)(a)
								}
							}
					},
					re = function(e, t, i, a) {
						return void 0 === t && (t = "10"), void 0 === i && (i = !1), void 0 === a && (a = !1),
							function() {
								var o = (0, n.Z)(s().mark((function n(o, r) {
									var l, c, h, u, d, p, f, g, E, A, S, _, C, w, I, P, x, O, k;
									return s().wrap((function(n) {
										for (;;) switch (n.prev = n.next) {
											case 0:
												return n.prev = 0, l = window.game, c = l.player, h = l.facebook, u = l.globalScene, a ? u.events.emit(y.K.SWITCH, y.C.GAME_SCENE) : u.screen.open(b.o4.NOTIFY_SCREEN, {
													message: "Requesting...",
													loading: !0
												}), n.next = 5, GameCore.Utils.Valid.isValueChangeAsync(window.__fbGameReady, !0);
											case 5:
												if (d = e, p = h.contextType, t || (f = GameCore.Configs.PlayerIdMock, g = GameCore.Configs.PlayerIdMock2, t = c.getPlayerId() === f ? g : f), E = r(), A = (0, B.mY)(E), e) {
													n.next = 24;
													break
												}
												return n.next = 13, h.chooseAsync();
											case 13:
												if (!1 !== (d = n.sent)) {
													n.next = 22;
													break
												}
												if (!i) {
													n.next = 18;
													break
												}
												return u.events.emit(y.K.SWITCH, y.C.DASHBOARD_SCENE), n.abrupt("return");
											case 18:
												if (!A) {
													n.next = 21;
													break
												}
												return o(ae()), n.abrupt("return");
											case 21:
												return n.abrupt("return");
											case 22:
												n.next = 37;
												break;
											case 24:
												if (!t || t === m.U.playerId) {
													n.next = 35;
													break
												}
												return n.next = 27, h.createAsync(t);
											case 27:
												if (!1 !== (d = n.sent)) {
													n.next = 31;
													break
												}
												return i && u.events.emit(y.K.SWITCH, y.C.DASHBOARD_SCENE), n.abrupt("return");
											case 31:
												if (!A) {
													n.next = 34;
													break
												}
												return o(ae()), n.abrupt("return");
											case 34:
												d || "reset" === e || (d = e);
											case 35:
												p = h.contextType, o((0, T._K)(d, p));
											case 37:
												return ee({
													contextId: d
												}), S = c.getPlayerId(), _ = c.getConnectedPlayers(), n.next = 42, h.getContextPlayers(S);
											case 42:
												return C = n.sent, w = m.U, t !== w.playerId && _[t] ? w = _[t] : 1 === C.length && (w = C[0]), o((0, $.$4)()), P = (I = w).playerId, x = I.name, O = I.photo, k = {
													playerId: P,
													name: x,
													photo: O
												}, n.next = 50, o(pe(J.jt, k));
											case 50:
												o((0, T._K)(d, p)), n.next = 62;
												break;
											case 53:
												if (n.prev = 53, n.t0 = n.catch(0), !(n.t0 instanceof v)) {
													n.next = 57;
													break
												}
												return n.abrupt("return");
											case 57:
												if ("USER_INPUT" !== (null == n.t0 ? void 0 : n.t0.code)) {
													n.next = 59;
													break
												}
												return n.abrupt("return");
											case 59:
												if ("INVALID_OPERATION" !== (null == n.t0 ? void 0 : n.t0.code)) {
													n.next = 61;
													break
												}
												return n.abrupt("return");
											case 61:
												(0, R.tO)(n.t0);
											case 62:
												return n.prev = 62, ie(1e3), n.finish(62);
											case 65:
											case "end":
												return n.stop()
										}
									}), n, null, [
										[0, 53, 62, 65]
									])
								})));
								return function(e, t) {
									return o.apply(this, arguments)
								}
							}()
					},
					le = function() {
						return function() {
							var e = (0, n.Z)(s().mark((function e(t, i) {
								var n, a, o, r, l, h, p, m, f, g, y, E, A, S, _, C, w, B;
								return s().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											if (e.prev = 0, n = window.game, a = n.player, o = n.facebook, n.globalScene.screen.open(b.o4.NOTIFY_SCREEN, {
													message: "Loading...",
													loading: !0
												}), r = a.getPlayerId(), l = a.getConnectedPlayerIds(100, 0), h = a.getConnectedPlayers(100, 0), p = i(), m = X(p) || [], f = c()(l).call(l, (function(e) {
													return u()(m).call(m, e) < 0 && e != r
												})), g = "", y = "", E = o.contextType, A = null, f.length > 0 && (S = Phaser.Math.RND.between(0, f.length - 1), g = f[S], h[g] && (A = h[g], t({
													type: d.x2,
													payload: {
														opponentId: g
													}
												}))), !g || "string" !== typeof g) {
												e.next = 18;
												break
											}
											return e.next = 17, o.createAsync(g);
										case 17:
											y = e.sent;
										case 18:
											if (A && y) {
												e.next = 25;
												break
											}
											return e.next = 21, t((0, Q.Es)(!0));
										case 21:
											return t(re()), e.next = 24, t((0, Q.Es)(!1));
										case 24:
											return e.abrupt("return");
										case 25:
											return ee({
												contextId: y
											}), t((0, $.$4)()), C = (_ = A).name, w = _.photo, B = {
												playerId: g,
												name: C,
												photo: w
											}, e.next = 31, t(pe(J.jt, B));
										case 31:
											t((0, T._K)(y, E)), ie(1e3), e.next = 41;
											break;
										case 35:
											if (e.prev = 35, e.t0 = e.catch(0), ie(1e3), !(e.t0 instanceof v)) {
												e.next = 40;
												break
											}
											return e.abrupt("return");
										case 40:
											(0, R.tO)(e.t0);
										case 41:
											return e.prev = 41, e.finish(41);
										case 43:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[0, 35, 41, 43]
								])
							})));
							return function(t, i) {
								return e.apply(this, arguments)
							}
						}()
					},
					ce = function(e) {
						return function() {
							var t = (0, n.Z)(s().mark((function t(i) {
								var n, a, o, r, l;
								return s().wrap((function(t) {
									for (;;) switch (t.prev = t.next) {
										case 0:
											return t.prev = 0, n = window.game, a = n.facebook, o = n.globalScene, r = n.analytics, o.screen.open(b.o4.NOTIFY_SCREEN, {
												message: "Loading...",
												loading: !0
											}), l = a.getContextID(), ee({
												contextId: l
											}), r.event(p._.JOIN_GROUP, {
												group_id: l
											}), t.next = 8, i(pe(J.ey, e));
										case 8:
											t.next = 17;
											break;
										case 10:
											if (t.prev = 10, t.t0 = t.catch(0), !(t.t0 instanceof v)) {
												t.next = 14;
												break
											}
											return t.abrupt("return");
										case 14:
											if ("INVALID_OPERATION" !== (null == t.t0 ? void 0 : t.t0.code)) {
												t.next = 16;
												break
											}
											return t.abrupt("return");
										case 16:
											(0, R.tO)(t.t0);
										case 17:
											return t.prev = 17, ie(1e3), t.finish(17);
										case 20:
										case "end":
											return t.stop()
									}
								}), t, null, [
									[0, 10, 17, 20]
								])
							})));
							return function(e) {
								return t.apply(this, arguments)
							}
						}()
					},
					he = function() {
						return function(e) {
							try {
								e((0, Q.A)()), e(pe(J.RK))
							} catch (t) {
								(0, R.tO)(t)
							}
						}
					},
					ue = function() {
						return function() {
							var e = (0, n.Z)(s().mark((function e(t, i) {
								var a, o, r, l, c, h, u, d, f, g, v, y, b, E, T, A, S, _, C, w, P, x, O, k;
								return s().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return e.prev = 0, a = window.game, o = a.analytics, r = a.facebook, a.globalScene, l = i(), c = (0, q.fQ)(l), h = (0, I.Vb)(l), u = h.score, d = void 0 === u ? 0 : u, f = h.level, g = void 0 === f ? 0 : f, GameCore.Configs.Tournament.RequestTournamentBeforeInterstitialAd, t(de(d)), e.next = 9, t(me(c, {
												score: d
											}));
										case 9:
											if (l = i(), v = (0, q.MQ)(l), y = (0, q.qr)(l), b = Math.floor((y - v) / 1e3), o.event(p._.MATCH_END, {
													game_mode: GameCore.Utils.String.toUpperCamelCase(c),
													level: g,
													level_name: "level_" + g,
													time_played: b
												}), E = r.getContextID(), c === J.ey && E && t(function() {
													var e = (0, n.Z)(s().mark((function e(t, i) {
														var n, a, o, r, l, c, h, u, d;
														return s().wrap((function(e) {
															for (;;) switch (e.prev = e.next) {
																case 0:
																	if (n = window.game.analytics, e.prev = 1, a = FBInstant.context.getID(), L({
																			contextId: a
																		}), o = i(), r = (0, B.Me)(o), l = r.playerId, c = r.score, h = (0, I.Vb)(o), u = h.score, !l || l === m.U.playerId) {
																		e.next = 25;
																		break
																	}
																	if (!(u > c)) {
																		e.next = 18;
																		break
																	}
																	return e.next = 13, (0, M.BJ)(o);
																case 13:
																	return d = e.sent, e.next = 16, H(d, o);
																case 16:
																	e.next = 23;
																	break;
																case 18:
																	return e.next = 20, (0, M.Q_)(o);
																case 20:
																	return d = e.sent, e.next = 23, z(d, o);
																case 23:
																	e.next = 30;
																	break;
																case 25:
																	return e.next = 27, (0, M.Q_)(o);
																case 27:
																	return d = e.sent, e.next = 30, z(d, o);
																case 30:
																	D({
																		imageShare: d
																	}), n.event(p._.MESSAGE, {
																		message_content_type: "InviteGroup",
																		success: !0
																	}), e.next = 38;
																	break;
																case 34:
																	e.prev = 34, e.t0 = e.catch(1), n.event(p._.MESSAGE, {
																		message_content_type: "InviteGroup",
																		success: !0
																	}), (0, R.tO)(e.t0);
																case 38:
																case "end":
																	return e.stop()
															}
														}), e, null, [
															[1, 34]
														])
													})));
													return function(t, i) {
														return e.apply(this, arguments)
													}
												}()), !E || c !== J.jt) {
												e.next = 25;
												break
											}
											if (T = (0, B.oN)(l), (A = T.playerId) && A !== m.U.playerId) {
												e.next = 20;
												break
											}
											return e.abrupt("return");
										case 20:
											S = (0, I.Jy)(l), _ = S[A] || {}, C = _.score, w = void 0 === C ? 0 : C, P = (0, B.iq)(l), x = P._id, O = P.whitePlayerFinish, k = P.blackPlayerFinish, t(O && k ? d > w ? W(A, {
												matchId: x,
												contextId: E
											}) : Y(A, {
												matchId: x,
												contextId: E
											}) : K(A, {
												matchId: x,
												contextId: E,
												score: d
											}));
										case 25:
											e.next = 30;
											break;
										case 27:
											e.prev = 27, e.t0 = e.catch(0), (0, R.tO)(e.t0);
										case 30:
											return e.prev = 30, e.finish(30);
										case 32:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[0, 27, 30, 32]
								])
							})));
							return function(t, i) {
								return e.apply(this, arguments)
							}
						}()
					},
					de = function(e) {
						return function(t) {
							try {
								var i = window.game.player,
									n = i.getPlayerId(),
									a = i.getPlayerData(),
									s = a.score,
									o = void 0 === s ? 0 : s,
									r = a.level;
								o < e && i.setScore(e);
								var l = {
									score: e,
									level: r
								};
								t((0, $.Q0)(n, l)), t((0, $.eG)(l))
							} catch (c) {
								if (c instanceof E) return;
								(0, R.tO)(c)
							}
						}
					},
					pe = function(e, t) {
						return void 0 === t && (t = null),
							function() {
								var i = (0, n.Z)(s().mark((function i(n, a) {
									var o, l, c, h, u, m, f, g, v, E, A, S, _, C, w, I, P;
									return s().wrap((function(i) {
										for (;;) switch (i.prev = i.next) {
											case 0:
												if (o = window.game, l = o.analytics, c = o.player, h = o.facebook, u = o.globalScene, m = o.level, m.getLevelData()) {
													i.next = 12;
													break
												}
												return u.screen.open(b.o4.NOTIFY_SCREEN, {
													message: u.lang.getText("loading"),
													loading: !0
												}), i.prev = 4, i.next = 7, m.preloadLevelDataAsync();
											case 7:
												i.next = 11;
												break;
											case 9:
												i.prev = 9, i.t0 = i.catch(4);
											case 11:
												window.game.globalScene.screen.close(b.o4.NOTIFY_SCREEN);
											case 12:
												if (m.getLevelData()) {
													i.next = 16;
													break
												}
												return u.events.emit(y.K.SWITCH, y.C.ERROR_SCENE), i.abrupt("return");
											case 16:
												if (i.prev = 16, g = h.getContextID(), v = 0, E = a(), n({
														type: V.Er,
														payload: {}
													}), !r()(f = [J.oN, J.kC]).call(f, e)) {
													i.next = 30;
													break
												}
												return i.next = 24, n((0, Q.tS)());
											case 24:
												if (E = a(), (0, B.L7)(E)) {
													i.next = 29;
													break
												}
												return i.next = 29, n((0, Q.z$)());
											case 29:
												v = (0, B.z3)(E);
											case 30:
												if (e === J.ey && n((0, Q.Y5)(t)), e !== J.jt) {
													i.next = 39;
													break
												}
												return i.next = 34, n((0, Q.rd)(t));
											case 34:
												E = a(), A = (0, B.rl)(E), S = (0, B.oN)(E), _ = S.playerId, C = O(E, {
													opponentId: _
												}), g && _ && !C && (n({
													type: d.x2,
													payload: {
														opponentId: _
													}
												}), n(j(_, {
													contextId: g,
													matchId: A
												})));
											case 39:
												e === J.RK && n((0, Q.j9)()), w = c.getPlayerData(E), I = w.score, P = void 0 === I ? 0 : I, n((0, $.eG)({
													score: v,
													bestScore: P
												})), n({
													type: V.tk,
													payload: {
														mode: e,
														contextId: g
													}
												}), n((0, T.qL)(e)), u.events.emit(y.K.SWITCH, y.C.GAME_SCENE), l.event(p._.MATCH_START, {
													game_mode: GameCore.Utils.String.toUpperCamelCase(e),
													level: 1,
													level_name: "level_1"
												}), i.next = 52;
												break;
											case 48:
												i.prev = 48, i.t1 = i.catch(16), u.events.emit(y.K.SWITCH, y.C.DASHBOARD_SCENE), (0, R.tO)(i.t1);
											case 52:
											case "end":
												return i.stop()
										}
									}), i, null, [
										[4, 9],
										[16, 48]
									])
								})));
								return function(e, t) {
									return i.apply(this, arguments)
								}
							}()
					},
					me = function(e, t) {
						return function() {
							var i = (0, n.Z)(s().mark((function i(n, a) {
								var o, l, c, h, u, d, p, m, f, g, v, y;
								return s().wrap((function(i) {
									for (;;) switch (i.prev = i.next) {
										case 0:
											if (l = window.game, c = l.player, l.globalScene, h = t.score, u = void 0 === h ? 0 : h, d = t.level, p = void 0 === d ? 0 : d, m = a(), !r()(o = [J.oN, J.kC]).call(o, e)) {
												i.next = 7;
												break
											}
											return f = (0, B.L7)(m), i.next = 7, n((0, Q.M$)(f));
										case 7:
											if (e === J.ey && (n((0, Q._O)()), g = c.getPlayerId(), n((0, $.Q0)(g, t))), e !== J.jt) {
												i.next = 12;
												break
											}
											return v = (0, B.rl)(m), i.next = 12, n((0, Q.QU)(v, u, {
												level: p
											}));
										case 12:
											if (e !== J.RK) {
												i.next = 16;
												break
											}
											return y = (0, B.L7)(m), i.next = 16, n((0, Q.uA)(y));
										case 16:
											n({
												type: V.Mg,
												payload: {
													mode: e
												}
											});
										case 17:
										case "end":
											return i.stop()
									}
								}), i)
							})));
							return function(e, t) {
								return i.apply(this, arguments)
							}
						}()
					},
					fe = function() {
						return function(e, t) {
							e({
								type: V.XW,
								payload: {}
							});
							var i = t(),
								n = (0, I.Vb)(i).level,
								a = void 0 === n ? 0 : n,
								s = (0, q.fQ)(i);
							window.game.analytics.event(p._.MATCH_RESCUE, {
								game_mode: GameCore.Utils.String.toUpperCamelCase(s),
								level: a,
								level_name: "level_" + a
							})
						}
					}
			},
			93307: function(e, t, i) {
				"use strict";
				i.d(t, {
					A: function() {
						return $
					},
					Ii: function() {
						return X
					},
					Tb: function() {
						return W
					},
					rd: function() {
						return K
					},
					Y5: function() {
						return V
					},
					j9: function() {
						return q
					},
					z$: function() {
						return Z
					},
					QU: function() {
						return H
					},
					_O: function() {
						return J
					},
					uA: function() {
						return ee
					},
					M$: function() {
						return j
					},
					tS: function() {
						return U
					},
					Es: function() {
						return te
					}
				});
				var n = i(73126),
					a = i(33938),
					s = i(63109),
					o = i.n(s),
					r = i(59340),
					l = i.n(r),
					c = i(2991),
					h = i.n(c),
					u = i(44494),
					d = i.n(u),
					p = i(58644),
					m = i(36308),
					f = i(87339),
					g = i(93397),
					v = i(32926),
					y = GameCore.Configs.ApiHost,
					b = (function() {
						var e = (0, a.Z)(o().mark((function e(t) {
							var i;
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return "single-matches", e.next = 3, (0, v.v)("single-matches", t, {}, y);
									case 3:
										return i = e.sent, e.abrupt("return", (null == i ? void 0 : i.data) || {});
									case 5:
									case "end":
										return e.stop()
								}
							}), e)
						})))
					}(), function() {
						var e = (0, a.Z)(o().mark((function e() {
							var t;
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return "single-matches/active", e.next = 3, (0, v.U)("single-matches/active", {}, y);
									case 3:
										return t = e.sent, e.abrupt("return", (null == t ? void 0 : t.data) || {});
									case 5:
									case "end":
										return e.stop()
								}
							}), e)
						})))
					}(), function() {
						var e = (0, a.Z)(o().mark((function e(t, i) {
							var n, a;
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return n = "single-matches/" + t + "/move", e.next = 3, (0, v.v)(n, i, {}, y);
									case 3:
										return a = e.sent, e.abrupt("return", (null == a ? void 0 : a.data) || {});
									case 5:
									case "end":
										return e.stop()
								}
							}), e)
						})))
					}(), function() {
						var e = (0, a.Z)(o().mark((function e(t) {
							var i, n;
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return i = "single-matches/" + t + "/finish", e.next = 3, (0, v.v)(i, {}, {}, y);
									case 3:
										return n = e.sent, e.abrupt("return", (null == n ? void 0 : n.data) || {});
									case 5:
									case "end":
										return e.stop()
								}
							}), e)
						})))
					}(), function() {
						var e = (0, a.Z)(o().mark((function e(t) {
							var i;
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return "matches", e.next = 3, (0, v.v)("matches", {
											opponentPlayerId: t
										}, {}, y);
									case 3:
										return i = e.sent, e.abrupt("return", (null == i ? void 0 : i.data) || {});
									case 5:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}()),
					E = (function() {
						var e = (0, a.Z)(o().mark((function e(t) {
							var i, n;
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return i = "matches/" + t + "/join", e.next = 3, (0, v.v)(i, {}, {}, y);
									case 3:
										return n = e.sent, e.abrupt("return", (null == n ? void 0 : n.data) || {});
									case 5:
									case "end":
										return e.stop()
								}
							}), e)
						})))
					}(), function() {
						var e = (0, a.Z)(o().mark((function e(t) {
							var i, n;
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return i = "matches/" + t, e.next = 3, (0, v.U)(i, {}, y);
									case 3:
										return n = e.sent, e.abrupt("return", (null == n ? void 0 : n.data) || {});
									case 5:
									case "end":
										return e.stop()
								}
							}), e)
						})))
					}(), function() {
						var e = (0, a.Z)(o().mark((function e(t, i, n, a) {
							var s, r;
							return o().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return s = "matches/" + t + "/finish", e.next = 3, (0, v.v)(s, {
											matchId: t,
											score: i,
											level: n,
											extraData: a
										}, {}, y);
									case 3:
										return r = e.sent, e.abrupt("return", (null == r ? void 0 : r.data) || {});
									case 5:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t, i, n, a) {
							return e.apply(this, arguments)
						}
					}()),
					T = i(23400),
					A = i(41819),
					S = i(53082),
					_ = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).name = "InvalidMatchId", n.message = t || "Invalid match id", n.payload = i, n
						}
						return (0, A.Z)(t, e), t
					}((0, S.Z)(Error)),
					C = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).name = "InvalidMatchStatus", n.message = t || "The match status is not valid", n.payload = i, n
						}
						return (0, A.Z)(t, e), t
					}((0, S.Z)(Error)),
					w = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).name = "InvalidOpponentId", n.message = t || "Invalid opponent id", n.payload = i, n
						}
						return (0, A.Z)(t, e), t
					}((0, S.Z)(Error)),
					B = i(51710),
					I = i(19208),
					P = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).name = "InvalidBlackPlayerId", n.message = t || "Invalid black player id", n.payload = i, n
						}
						return (0, A.Z)(t, e), t
					}((0, S.Z)(Error)),
					x = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).name = "InvalidRequestedMatchId", n.message = t || "The matchId in match data not matched with requested matchId", n.payload = i, n
						}
						return (0, A.Z)(t, e), t
					}((0, S.Z)(Error)),
					O = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).name = "InvalidWhitePlayerId", n.message = t || "Invalid white player id", n.payload = i, n
						}
						return (0, A.Z)(t, e), t
					}((0, S.Z)(Error)),
					k = function(e) {
						var t = e.matchId,
							i = e.currentMatchId;
						if ("" === t || "string" !== typeof t) throw new _(null, {
							matchId: t
						});
						if ("" === i || "string" !== typeof i) throw new _(null, {
							currentMatchId: i
						});
						if (t !== i) throw new x(null, {
							matchId: t,
							currentMatchId: i
						})
					},
					R = function(e) {
						var t = e.playerId,
							i = e.match,
							n = i._id,
							a = i.playerId,
							s = i.status;
						if ("" === n || "string" !== typeof n) throw new _(null, {
							matchId: n
						});
						if ("finished" === s || "string" !== typeof s) throw new C("This match is finished", {
							status: s
						});
						if (a !== t) throw new B.Z(null, {
							playerId: a,
							currentPlayerId: t
						})
					},
					M = function(e) {
						var t = e.opponentId;
						if ("" === t || "string" !== typeof t) throw new w(null, {
							opponentId: t
						})
					},
					L = function(e) {
						var t = e.matchId;
						if ("" === t || "string" !== typeof t) throw new _(null, {
							matchId: t
						})
					},
					G = function(e) {
						var t = e.match,
							i = t._id,
							n = t.whitePlayerId,
							a = t.blackPlayerId;
						if ("" === i || "string" !== typeof i) throw new _(null, {
							matchId: i
						});
						if ("" === n || "string" !== typeof n) throw new O(null, {
							whitePlayerId: n
						});
						if ("" === a || "string" !== typeof a) throw new P(null, {
							blackPlayerId: a
						})
					},
					D = GameCore.Configs.Match,
					F = function(e) {
						try {
							return GameCore.Utils.Hash.stringToHash(l()(e))
						} catch (t) {
							return ""
						}
					},
					N = function(e) {
						try {
							return JSON.parse(GameCore.Utils.Hash.hashToString(e))
						} catch (t) {
							return ""
						}
					},
					Z = function() {
						return function() {
							var e = (0, a.Z)(o().mark((function e(t) {
								var i, a, s;
								return o().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											e.prev = 0, i = window.game.player, t({
												type: T.xm,
												payload: {}
											}), a = i.getPlayerId(), s = (0, n.Z)({}, D.LocalSingleMatchDefault, {
												status: "active",
												playerId: a,
												startedAt: Date.now()
											}), R({
												playerId: a,
												match: s
											}), t(Y(s)), (0, f.vk)(D.SingleMatchStore, s), e.next = 18;
											break;
										case 10:
											if (e.prev = 10, e.t0 = e.catch(0), t(Y(null)), !(e.t0 instanceof _)) {
												e.next = 15;
												break
											}
											return e.abrupt("return");
										case 15:
											if (!(e.t0 instanceof C)) {
												e.next = 17;
												break
											}
											return e.abrupt("return");
										case 17:
											(0, g.tO)(e.t0);
										case 18:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[0, 10]
								])
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}()
					},
					U = function() {
						return function(e) {
							try {
								var t = window.game.player;
								e({
									type: T.AJ,
									payload: {}
								});
								var i = t.getPlayerId(),
									n = (0, f.Th)(D.SingleMatchStore) || {},
									a = n.data;
								n.data = N(a), R({
									playerId: i,
									match: n
								}), e(Y(n))
							} catch (s) {
								if (e(Y(null)), s instanceof _) return;
								if (s instanceof B.Z) return;
								if (s instanceof C) return;
								(0, g.tO)(s)
							}
						}
					},
					j = function(e) {
						return function() {
							var t = (0, a.Z)(o().mark((function t(i, a) {
								var s, r, l, c, h, u, d, p;
								return o().wrap((function(t) {
									for (;;) switch (t.prev = t.next) {
										case 0:
											t.prev = 0, s = window.game.player, L({
												matchId: e
											}), r = a(), l = (0, I.L7)(r), c = s.getPlayerId(), k({
												matchId: e,
												currentMatchId: l
											}), i({
												type: T.v7,
												payload: {
													matchId: e
												}
											}), h = (0, I.gd)(r), R({
												playerId: c,
												match: h
											}), u = (0, n.Z)({}, D.LocalSingleMatchDefault, h, {
												_id: e,
												status: "finished",
												playerId: c,
												finishAt: Date.now()
											}), i(Y(u)), d = u.data, (p = (0, n.Z)({}, u)).data = F(d), (0, f.vk)(D.SingleMatchStore, p), t.next = 26;
											break;
										case 18:
											if (t.prev = 18, t.t0 = t.catch(0), i(Y(null)), !(t.t0 instanceof _)) {
												t.next = 23;
												break
											}
											return t.abrupt("return");
										case 23:
											if (!(t.t0 instanceof C)) {
												t.next = 25;
												break
											}
											return t.abrupt("return");
										case 25:
											(0, g.tO)(t.t0);
										case 26:
										case "end":
											return t.stop()
									}
								}), t, null, [
									[0, 18]
								])
							})));
							return function(e, i) {
								return t.apply(this, arguments)
							}
						}()
					},
					Y = function(e) {
						return {
							type: T.Uo,
							payload: {
								match: e
							}
						}
					},
					W = function() {
						return {
							type: T.zu,
							payload: {}
						}
					},
					K = function(e) {
						return function() {
							var t = (0, a.Z)(o().mark((function t(i) {
								var n, a, s, r;
								return o().wrap((function(t) {
									for (;;) switch (t.prev = t.next) {
										case 0:
											return t.prev = 0, n = window.game, a = n.profile, n.globalScene.screen.open(p.o4.NOTIFY_SCREEN, {
												message: "Loading...",
												loading: !0
											}), s = e.playerId, M({
												opponentId: s
											}), i({
												type: T.tU,
												payload: {
													opponentInfo: e
												}
											}), t.next = 8, b(s);
										case 8:
											return r = t.sent, G({
												match: r
											}), t.next = 12, a.requestProfiles([s]);
										case 12:
											i(z(r)), t.next = 23;
											break;
										case 15:
											if (t.prev = 15, t.t0 = t.catch(0), i(z(null)), !(t.t0 instanceof _)) {
												t.next = 20;
												break
											}
											return t.abrupt("return");
										case 20:
											if (!(t.t0 instanceof w)) {
												t.next = 22;
												break
											}
											return t.abrupt("return");
										case 22:
											(0, g.tO)(t.t0);
										case 23:
										case "end":
											return t.stop()
									}
								}), t, null, [
									[0, 15]
								])
							})));
							return function(e) {
								return t.apply(this, arguments)
							}
						}()
					},
					H = function(e, t, i) {
						return function() {
							var n = (0, a.Z)(o().mark((function n(a) {
								var s, r;
								return o().wrap((function(n) {
									for (;;) switch (n.prev = n.next) {
										case 0:
											return n.prev = 0, window.game.globalScene.screen.open(p.o4.NOTIFY_SCREEN, {
												message: "Loading...",
												loading: !0
											}), L({
												matchId: e
											}), a({
												type: T.DI,
												payload: {
													matchId: e,
													score: t,
													extraData: i
												}
											}), s = i.level, n.next = 8, E(e, t, s, i);
										case 8:
											return r = n.sent, G({
												match: r
											}), n.next = 12, a(z(r));
										case 12:
											n.next = 20;
											break;
										case 14:
											if (n.prev = 14, n.t0 = n.catch(0), a(z(null)), !(n.t0 instanceof _)) {
												n.next = 19;
												break
											}
											return n.abrupt("return");
										case 19:
											(0, g.tO)(n.t0);
										case 20:
										case "end":
											return n.stop()
									}
								}), n, null, [
									[0, 14]
								])
							})));
							return function(e) {
								return n.apply(this, arguments)
							}
						}()
					},
					z = function(e, t, i) {
						return void 0 === i && (i = null), {
							type: T.AO,
							payload: {
								match: e,
								opponentInfo: t,
								current: i
							}
						}
					},
					X = function() {
						return {
							type: T.Un,
							payload: {}
						}
					},
					V = function(e) {
						return {
							type: T.Vj,
							payload: {
								opponentInfo: e
							}
						}
					},
					J = function() {
						return {
							type: T.Sl,
							payload: {}
						}
					},
					q = function() {
						return function() {
							var e = (0, a.Z)(o().mark((function e(t) {
								var i, n, a, s, r, l, c, u;
								return o().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											a = window.game.player, s = a.getPlayer(), r = s.playerId, l = s.name, c = s.photo, t({
												type: T.ar,
												payload: {
													playerId: r
												}
											}), u = {}, GameCore.Utils.Array.shuffle(m), h()(i = d()(n = new Array(20)).call(n, null)).call(i, (function(e, t) {
												var i = m[t],
													n = i.playerId,
													a = i.name,
													s = i.gender,
													o = +n;
												u[n] = {
													playerId: n,
													name: a,
													photo: "./assets/images/people/" + s + "/" + s + "-" + (o < 10 ? "0" + o : o) + ".jpg"
												}
											})), u[r] = {
												playerId: r,
												name: l,
												photo: c
											}, t(Q("mock", u));
										case 8:
										case "end":
											return e.stop()
									}
								}), e)
							})));
							return function(t) {
								return e.apply(this, arguments)
							}
						}()
					},
					Q = function(e, t) {
						return {
							type: T.li,
							payload: {
								matchId: e,
								players: t
							}
						}
					},
					$ = function() {
						return {
							type: T.UK,
							payload: {}
						}
					},
					ee = function() {
						return {
							type: T.NW,
							payload: {}
						}
					},
					te = function(e) {
						return {
							type: T.n_,
							payload: {
								enable: e
							}
						}
					}
			},
			97172: function(e, t, i) {
				"use strict";
				i.d(t, {
					$4: function() {
						return a
					},
					Q0: function() {
						return s
					},
					eG: function() {
						return o
					},
					DU: function() {
						return r
					}
				});
				var n = i(23400),
					a = function(e) {
						return {
							type: n.VY,
							payload: {
								playerId: e
							}
						}
					},
					s = function(e, t) {
						return {
							type: n.HV,
							payload: {
								playerId: e,
								stats: t
							}
						}
					},
					o = function(e) {
						return {
							type: n.DP,
							payload: {
								stats: e
							}
						}
					},
					r = function(e) {
						return {
							type: n.Ly,
							payload: {
								leaders: e
							}
						}
					}
			},
			23400: function(e, t, i) {
				"use strict";
				i.d(t, {
					Er: function() {
						return n
					},
					tk: function() {
						return a
					},
					Mg: function() {
						return s
					},
					qm: function() {
						return o
					},
					XW: function() {
						return r
					},
					VY: function() {
						return l
					},
					HV: function() {
						return c
					},
					DP: function() {
						return h
					},
					go: function() {
						return u
					},
					PM: function() {
						return d
					},
					xm: function() {
						return p
					},
					AJ: function() {
						return m
					},
					v7: function() {
						return f
					},
					T7: function() {
						return g
					},
					Uo: function() {
						return v
					},
					zu: function() {
						return y
					},
					Qi: function() {
						return b
					},
					tU: function() {
						return E
					},
					DI: function() {
						return T
					},
					f3: function() {
						return A
					},
					AO: function() {
						return S
					},
					Un: function() {
						return _
					},
					Vj: function() {
						return C
					},
					Sl: function() {
						return w
					},
					ar: function() {
						return B
					},
					li: function() {
						return I
					},
					Ly: function() {
						return P
					},
					NW: function() {
						return x
					},
					UK: function() {
						return O
					},
					n_: function() {
						return k
					}
				});
				var n = "MATCH_GAMEPLAY_INITIALIZE",
					a = "MATCH_GAMEPLAY_START",
					s = "MATCH_GAMEPLAY_FINISH",
					o = "MATCH_GAMEPLAY_UPDATE",
					r = "MATCH_GAMEPLAY_RESCUE",
					l = "MATCH_STATS_DATA_CLEAR",
					c = "MATCH_STATS_DATA_UPDATE",
					h = "MATCH_STATS_CURRENT_UPDATE",
					u = "MATCH_STATS_CONTEXT_REQUEST",
					d = "MATCH_STATS_CONTEXT_RECEIVED",
					p = "MATCH_SINGLE_CREATE_REQUEST",
					m = "MATCH_SINGLE_DETAIL_REQUEST",
					f = "MATCH_SINGLE_FINISH_REQUEST",
					g = "MATCH_SINGLE_MOVE_UPDATED",
					v = "MATCH_SINGLE_DATA_RECEIVED",
					y = "MATCH_SINGLE_DATA_CLEAR",
					b = "MATCH_CHALLENGE_JOIN_REQUEST",
					E = "MATCH_CHALLENGE_CREATE_REQUEST",
					T = "MATCH_CHALLENGE_FINISH_REQUEST",
					A = "MATCH_CHALLENGE_CONTINUE_REQUEST",
					S = "MATCH_CHALLENGE_DATA_RECEIVED",
					_ = "MATCH_CHALLENGE_DATA_CLEAR",
					C = "MATCH_GROUP_CREATE_REQUEST",
					w = "MATCH_GROUP_FINISH_REQUEST",
					B = "MATCH_ONLINE_CREATE_REQUEST",
					I = "MATCH_ONLINE_DATA_RECEIVED",
					P = "MATCH_ONLINE_STATS_UPDATE",
					x = "MATCH_ONLINE_FINISH_REQUEST",
					O = "MATCH_ONLINE_DATA_CLEAR",
					k = "MATCH_AUTO_PLAY_SINGLE"
			},
			67239: function(e, t, i) {
				"use strict";
				i.d(t, {
					oN: function() {
						return n
					},
					jt: function() {
						return a
					},
					ey: function() {
						return s
					},
					kC: function() {
						return o
					},
					RK: function() {
						return r
					}
				});
				var n = "single",
					a = "challenge-friends",
					s = "matching-group",
					o = "tournaments",
					r = "online"
			},
			88986: function(e, t, i) {
				"use strict";
				i.d(t, {
					ys: function() {
						return n
					},
					kR: function() {
						return a
					},
					o3: function() {
						return s
					}
				});
				var n = "open",
					a = "active",
					s = "finished"
			},
			84228: function(e, t, i) {
				"use strict";
				i.d(t, {
					L: function() {
						return n
					}
				});
				var n = "match"
			},
			51710: function(e, t, i) {
				"use strict";
				var n = i(41819),
					a = function(e) {
						function t(t, i) {
							var n;
							return (n = e.call(this, t, i) || this).name = "InvalidPlayerId", n.message = t || "The playerId is not valid", n.payload = i, n
						}
						return (0, n.Z)(t, e), t
					}((0, i(53082).Z)(Error));
				t.Z = a
			},
			96772: function(e, t, i) {
				"use strict";
				i.d(t, {
					fQ: function() {
						return s
					},
					MQ: function() {
						return o
					},
					qr: function() {
						return r
					}
				});
				var n = i(20573),
					a = i(52354),
					s = (0, n.P1)([function(e) {
						return (0, a.y)(e).gameplay.mode
					}], (function(e) {
						return e
					})),
					o = ((0, n.P1)([function(e) {
						return (0, a.y)(e).gameplay.status
					}], (function(e) {
						return e
					})), (0, n.P1)([function(e) {
						return (0, a.y)(e).gameplay.rescued
					}], (function(e) {
						return e
					})), (0, n.P1)([function(e) {
						return (0, a.y)(e).gameplay.startAt
					}], (function(e) {
						return e
					}))),
					r = (0, n.P1)([function(e) {
						return (0, a.y)(e).gameplay.finishAt
					}], (function(e) {
						return e
					}))
			},
			52354: function(e, t, i) {
				"use strict";
				i.d(t, {
					y: function() {
						return a
					}
				});
				var n = i(84228),
					a = function(e) {
						return e[n.L]
					}
			},
			19208: function(e, t, i) {
				"use strict";
				i.d(t, {
					mY: function() {
						return r
					},
					gd: function() {
						return l
					},
					L7: function() {
						return c
					},
					z3: function() {
						return h
					},
					iq: function() {
						return u
					},
					rl: function() {
						return d
					},
					oN: function() {
						return p
					},
					pP: function() {
						return m
					},
					zQ: function() {
						return f
					},
					Me: function() {
						return g
					},
					Ez: function() {
						return v
					}
				});
				var n = i(28936),
					a = i(20573),
					s = i(52354),
					o = function(e, t) {
						return t.playerId
					},
					r = (0, a.P1)([function(e) {
						return (0, s.y)(e).match.isAutoStartSingleMode
					}], (function(e) {
						return e
					})),
					l = ((0, a.P1)([function(e) {
						return (0, s.y)(e).match.isRequesting
					}], (function(e) {
						return e
					})), (0, a.P1)([function(e) {
						return (0, s.y)(e).match.single
					}], (function(e) {
						return e
					}))),
					c = (0, a.P1)([function(e) {
						return (0, s.y)(e).match.single._id
					}], (function(e) {
						return e
					})),
					h = (0, a.P1)([function(e) {
						return (0, s.y)(e).match.single.score
					}], (function(e) {
						return e || 0
					})),
					u = ((0, a.P1)([function(e) {
						return (0, s.y)(e).match.single.level
					}], (function(e) {
						return e || 0
					})), (0, a.P1)([function(e) {
						var t;
						return null == (t = (0, s.y)(e).match.single.data) ? void 0 : t.diamond
					}], (function(e) {
						return e || 0
					})), (0, a.P1)([function(e) {
						var t;
						return null == (t = (0, s.y)(e).match.single.data) ? void 0 : t.fen
					}], (function(e) {
						return e || null
					})), (0, a.P1)([function(e) {
						return (0, s.y)(e).match.single.status
					}], (function(e) {
						return e
					})), (0, a.P1)([function(e) {
						return (0, s.y)(e).match.single.playerId
					}], (function(e) {
						return e
					})), (0, a.P1)([function(e) {
						return (0, s.y)(e).match.challenge
					}], (function(e) {
						return e
					}))),
					d = (0, a.P1)([function(e) {
						return (0, s.y)(e).match.challenge._id
					}], (function(e) {
						return e
					})),
					p = ((0, a.P1)([function(e) {
						return (0, s.y)(e).match.challenge.status
					}], (function(e) {
						return e
					})), (0, a.P1)([function(e) {
						return (0, s.y)(e).match.challenge.opponentInfo
					}], (function(e) {
						return e
					}))),
					m = ((0, a.P1)([function(e) {
						return (0, s.y)(e).match.challenge.whitePlayerId
					}], (function(e) {
						return e
					})), (0, a.P1)([function(e) {
						return (0, s.y)(e).match.challenge.blackPlayerId
					}], (function(e) {
						return e
					})), (0, a.P1)([u, o], (function(e, t) {
						var i = e.whitePlayerId,
							n = e.blackPlayerId;
						return i !== t && n === t ? i : n !== t && i === t ? n : ""
					})), (0, a.P1)([u, o], (function(e, t) {
						var i = e.whitePlayerId,
							a = e.blackPlayerId;
						return i === t ? i : a === t ? a : n.U.playerId
					})), (0, a.P1)([u, o], (function(e, t) {
						var i = e.whitePlayerId,
							n = e.blackPlayerId,
							a = e.whitePlayerFinish,
							s = e.blackPlayerFinish;
						return t && i === t ? a : !(!t || n !== t) && s
					}))),
					f = (0, a.P1)([u, function(e, t) {
						return t.opponentId
					}], (function(e, t) {
						var i = e.whitePlayerId,
							n = e.blackPlayerId,
							a = e.whitePlayerFinish,
							s = e.blackPlayerFinish;
						return t && i === t ? a : !(!t || n !== t) && s
					})),
					g = (0, a.P1)([function(e) {
						return (0, s.y)(e).match.group.opponentInfo
					}], (function(e) {
						return e
					})),
					v = (0, a.P1)([function(e) {
						return (0, s.y)(e).match.online.players
					}], (function(e) {
						return e
					}))
			},
			9247: function(e, t, i) {
				"use strict";
				i.d(t, {
					Jy: function() {
						return s
					},
					Vb: function() {
						return o
					}
				});
				var n = i(20573),
					a = i(52354),
					s = (0, n.P1)([function(e) {
						return (0, a.y)(e).stats.data
					}], (function(e) {
						return e
					})),
					o = (0, n.P1)([function(e) {
						return (0, a.y)(e).stats.current
					}], (function(e) {
						return e
					}));
				(0, n.P1)([function(e) {
					return (0, a.y)(e).stats.isRequesting
				}], (function(e) {
					return e
				}))
			},
			71944: function(e, t, i) {
				"use strict";
				i.d(t, {
					_: function() {
						return n
					}
				});
				var n = {
					BUTTON_CLICK: "button_click",
					SCREEN_OPEN: "screen_open",
					LOAD_START: "load_start",
					LOAD_COMPLETE: "load_complete",
					APP_READY: "app_ready",
					TUTORIAL_SHOW: "tutorial_show",
					TUTORIAL_CLOSE: "tutorial_close",
					MATCH_START: "match_start",
					MATCH_RESCUE: "match_rescue",
					MATCH_END: "match_end",
					LEVEL_START: "level_start",
					LEVEL_RESCUE: "level_rescue",
					LEVEL_END: "level_end",
					LEVEL_RETRY: "level_retry",
					SHARE: "share",
					INVITE: "invite",
					MESSAGE: "message",
					SHORTCUT_CREATE: "shortcut_create",
					SHORTCUT_CREATE_POPUP: "shortcut_create_popup",
					BOT_SUBSCRIBE: "bot_subscribe",
					BOT_SUBSCRIBE_POPUP: "bot_subscribe_popup",
					AD_SHOW: "ad_show",
					AD_SHOW_FAILED: "ad_show_failed",
					NEW_USER: "new_user",
					AD_IMPRESSION: "ad_impression",
					JOIN_GROUP: "join_group",
					TOURNAMENT_SHARE: "tournament_share",
					TOURNAMENT_CREATE: "tournament_create",
					TOURNAMENT_POST_SCORE: "tournament_post_score",
					GET_FREE_ITEM: "get_free_item",
					USE_ITEM: "use_item",
					EARN_VIRTUAL_CURRENCY: "earn_virtual_currency",
					SPEND_VIRTUAL_CURRENCY: "spend_virtual_currency",
					EARN_ITEM: "earn_item",
					BUBBLE_MATCH: "bubble_match",
					BUBBLE_MATCH_FAILED: "bubble_match_failed"
				}
			},
			46352: function(e, t, i) {
				"use strict";
				var n = i(90143),
					a = function() {
						function e(e, t, i, a) {
							this.playerId = void 0, this.name = void 0, this.photo = void 0, this.locale = void 0, this.playerId = e, this.name = t, this.photo = i || n.Z.AVATAR.FILE, this.locale = a || "en_US"
						}
						return e.prototype.toObject = function() {
							return {
								playerId: this.playerId,
								name: this.name,
								photo: this.photo,
								locale: this.locale
							}
						}, e
					}();
				t.Z = a
			},
			55998: function(e, t, i) {
				"use strict";
				i.d(t, {
					U1: function() {
						return u
					},
					_K: function() {
						return d
					},
					qF: function() {
						return p
					},
					qL: function() {
						return m
					}
				});
				var n = i(78580),
					a = i.n(n),
					s = i(98297),
					o = i(20494),
					r = i(28936),
					l = i(67239),
					c = i(93397),
					h = i(75252),
					u = function(e, t, i) {
						return {
							type: s.kL,
							payload: {
								contextId: e,
								contextType: t,
								entryPointData: i
							}
						}
					},
					d = function(e, t) {
						return {
							type: s.fJ,
							payload: {
								contextId: e,
								contextType: t
							}
						}
					},
					p = function() {
						return function(e, t) {
							var i, n = t(),
								s = (0, h.f)(n),
								c = window.game.player.getPlayerId(),
								u = s.contextId,
								d = s.entryPointData || {},
								p = d.type,
								f = d.matchId,
								g = d.playerId,
								v = d.opponentId,
								y = void 0 === v ? r.U.playerId : v,
								b = d.tournamentContextId,
								E = c === g,
								T = y === r.U.playerId || a()(i = [y, g]).call(i, c),
								A = l.oN;
							!u || void 0 !== p && p !== o.nx || (A = l.kC), p === o.nx && b && (A = l.kC), u && p === o.W6 && !E && (A = l.jt), f && u && T && p === o.Sb && (A = l.jt), u && p === o.lB && (A = l.ey), e(m(A))
						}
					},
					m = function(e) {
						return function(t) {
							t({
								type: s.EH,
								payload: {
									gameMode: e
								}
							}), (0, c.sw)("game-mode", e)
						}
					}
			},
			55481: function(e, t, i) {
				"use strict";
				i.d(t, {
					I: function() {
						return a
					}
				});
				var n = i(98297),
					a = function(e) {
						return {
							type: n.DW,
							payload: {
								sceneKey: e
							}
						}
					}
			},
			75318: function(e, t, i) {
				"use strict";
				i.d(t, {
					uF: function() {
						return y
					},
					mH: function() {
						return b
					},
					Q_: function() {
						return E
					},
					mi: function() {
						return A
					},
					Im: function() {
						return C
					},
					b1: function() {
						return w
					},
					BJ: function() {
						return B
					}
				});
				var n = i(33938),
					a = i(69301),
					s = i.n(a),
					o = i(63109),
					r = i.n(o),
					l = i(71944),
					c = i(20494),
					h = i(47909),
					u = i(90143),
					d = i(58644),
					p = i(35285),
					m = i(19208),
					f = i(9247),
					g = i(93397),
					v = function(e) {
						if ("string" !== typeof e || !e) throw new h.Z(null, {
							imageShare: e
						})
					},
					y = function() {
						return (0, n.Z)(r().mark((function e() {
							var t, i, n, a, s, o, h, u, p, m;
							return r().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return t = window.game, i = t.player, n = t.analytics, a = t.facebook, s = t.globalScene, e.prev = 1, s.screen.open(d.o4.NOTIFY_SCREEN, {
											message: "Loading...",
											loading: !0
										}), e.next = 5, b();
									case 5:
										return o = e.sent, v(o), h = i.getPlayer(), u = h.playerId, p = h.name, m = h.photo, e.next = 10, a.shareAsync({
											text: "Great! I have a best score!",
											intent: "SHARE",
											image: o || "",
											data: {
												playerId: u,
												playerName: p,
												playerPhoto: m,
												type: c.W6
											}
										});
									case 10:
										n.event(l._.SHARE, {
											share_content_type: "BestScore",
											success: !0
										}), e.next = 17;
										break;
									case 13:
										e.prev = 13, e.t0 = e.catch(1), n.event(l._.SHARE, {
											share_content_type: "BestScore",
											success: !1
										}), (0, g.tO)(e.t0);
									case 17:
										return e.prev = 17, s.screen.close(d.o4.NOTIFY_SCREEN), e.finish(17);
									case 20:
									case "end":
										return e.stop()
								}
							}), e, null, [
								[1, 13, 17, 20]
							])
						})))
					},
					b = function() {
						var e = (0, n.Z)(r().mark((function e() {
							var t, i, n, a, s, o, l, c, h;
							return r().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										if (t = window.game, i = t.player, n = t.globalScene, a = i.getPlayer(), s = a.playerId, o = a.photo, a.data, l = i.getLevel() || 1, c = T({
												playerId: s,
												playerPhoto: o,
												playerScore: l
											})) {
											e.next = 7;
											break
										}
										return e.abrupt("return");
									case 7:
										return h = {
											name: "share-best-score",
											width: 952,
											height: 492,
											renderOptions: c
										}, e.next = 10, n.frameCapture.capture(h);
									case 10:
										return e.abrupt("return", e.sent);
									case 11:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function() {
							return e.apply(this, arguments)
						}
					}(),
					E = function() {
						var e = (0, n.Z)(r().mark((function e(t) {
							var i, n, a, s, o, l, c, h, u;
							return r().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										if (i = window.game, n = i.player, a = i.globalScene, (0, f.Jy)(t), s = n.getPlayer(), o = s.playerId, l = s.photo, c = n.getLevel() || 11, h = T({
												playerId: o,
												playerPhoto: l,
												playerScore: c
											})) {
											e.next = 8;
											break
										}
										return e.abrupt("return");
									case 8:
										return u = {
											name: "share-current-score",
											width: 952,
											height: 492,
											renderOptions: h
										}, e.next = 11, a.frameCapture.capture(u);
									case 11:
										return e.abrupt("return", e.sent);
									case 12:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}(),
					T = function(e) {
						var t = e.playerId,
							i = void 0 === t ? "10" : t,
							n = e.playerPhoto,
							a = void 0 === n ? "" : n,
							s = e.playerScore,
							o = void 0 === s ? 0 : s;
						return "string" !== typeof i || "string" !== typeof a || "number" !== typeof o ? null : {
							avatar: {
								name: "" + i,
								type: "image",
								x: 622,
								y: 117,
								image: a,
								width: 204,
								height: 204,
								fallbackWithImage: u.Z.AVATAR.KEY
							},
							wideFrame: {
								name: "wide-frame-message-win",
								type: "image",
								x: 0,
								y: 0,
								image: "./assets/wideframes/wide-frame-message-win.png",
								width: 952,
								height: 492
							},
							playerScore: {
								type: "text",
								x: 720,
								y: 425,
								font: "600 70px",
								fillStyle: "#ffffff",
								text: "Level " + o,
								textAlign: "center"
							}
						}
					},
					A = function() {
						return (0, n.Z)(r().mark((function e() {
							var t, i, n, a, s, o, h, u, p, m;
							return r().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return t = window.game, i = t.player, n = t.analytics, a = t.facebook, s = t.globalScene, e.prev = 1, s.screen.open(d.o4.NOTIFY_SCREEN, {
											message: "Loading...",
											loading: !0
										}), e.next = 5, S();
									case 5:
										return o = e.sent, v(o), h = i.getPlayer(), u = h.playerId, p = h.name, m = h.photo, e.next = 10, a.shareAsync({
											text: "A ha, I'm the best!",
											intent: "CHALLENGE",
											image: o || "",
											data: {
												playerId: u,
												playerName: p,
												playerPhoto: m,
												type: c.W6
											}
										});
									case 10:
										n.event(l._.SHARE, {
											share_content_type: "Leaderboard",
											success: !0
										}), e.next = 17;
										break;
									case 13:
										e.prev = 13, e.t0 = e.catch(1), n.event(l._.SHARE, {
											share_content_type: "Leaderboard",
											success: !1
										}), (0, g.tO)(e.t0);
									case 17:
										return e.prev = 17, s.screen.close(d.o4.NOTIFY_SCREEN), e.finish(17);
									case 20:
									case "end":
										return e.stop()
								}
							}), e, null, [
								[1, 13, 17, 20]
							])
						})))
					},
					S = function() {
						var e = (0, n.Z)(r().mark((function e() {
							var t, i, n, a, o, l, c, h, u, d, m, f, g, v, y, b, E, T, A, S;
							return r().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										return t = window.game, i = t.player, n = t.profile, a = t.globalScene, o = i.getPlayer(), l = o.playerId, c = o.name, h = o.photo, (u = i.getConnectedPlayerIds(99, 0)).push(l), d = [], e.next = 7, (0, p.tu)({
											playerIds: GameCore.Utils.Array.unique(u),
											limit: u.length
										});
									case 7:
										m = e.sent, f = GameCore.Utils.Object.keyBy(m, "playerId"), g = {
											playerId: l,
											name: c,
											photo: h,
											score: 0
										}, GameCore.Utils.Object.hasOwn(f, l) && (g = f[l]), d.push(g), e.t0 = s()(r()).call(r(), f);
									case 14:
										if ((e.t1 = e.t0()).done) {
											e.next = 27;
											break
										}
										if (v = e.t1.value, !GameCore.Utils.Object.hasOwn(f, v)) {
											e.next = 25;
											break
										}
										if (y = f[v], 3 !== d.length) {
											e.next = 20;
											break
										}
										return e.abrupt("break", 27);
									case 20:
										if (y.playerId !== l) {
											e.next = 22;
											break
										}
										return e.abrupt("continue", 14);
									case 22:
										if (!(Number(y.score) > Number(g.score))) {
											e.next = 24;
											break
										}
										return e.abrupt("continue", 14);
									case 24:
										d.push(y);
									case 25:
										e.next = 14;
										break;
									case 27:
										return b = GameCore.Utils.Array.unique(u), e.next = 30, n.requestProfiles(b);
									case 30:
										if (E = n.getProfiles(), d.forEach((function(e, t) {
												var i = e.playerId;
												if (GameCore.Utils.Object.hasOwn(E, i)) {
													var n = E[i],
														a = n.name,
														s = n.photo;
													d[t].name = a, d[t].photo = s
												}
											})), d.length < 3)
											for (T = 0; T <= 3 - d.length;) d.push({
												playerId: "bot" + T,
												name: "???",
												score: 0,
												photo: "./assets/images/others/avatar.jpg"
											}), T++;
										if (A = _({
												playerId: l,
												playerName: c,
												playerPhoto: h,
												listLeaders: d
											})) {
											e.next = 37;
											break
										}
										return e.abrupt("return");
									case 37:
										return S = {
											name: "share-leaderboard",
											width: 1500,
											height: 2e3,
											renderOptions: A
										}, e.next = 40, a.frameCapture.capture(S);
									case 40:
										return e.abrupt("return", e.sent);
									case 41:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function() {
							return e.apply(this, arguments)
						}
					}(),
					_ = function(e) {
						var t = e.playerId,
							i = void 0 === t ? "10" : t,
							n = e.playerPhoto,
							a = void 0 === n ? "" : n,
							s = e.listLeaders,
							o = void 0 === s ? [] : s;
						if (!Array.isArray(o)) return null;
						if ("string" !== typeof i) return null;
						if ("string" !== typeof a) return null;
						var r = {
							avatar: {
								name: "" + i,
								type: "image",
								x: 530,
								y: 310,
								image: a,
								width: 440,
								height: 440,
								fallbackWithImage: u.Z.AVATAR.KEY
							}
						};
						return o.forEach((function(e, t) {
							var i = e.playerId,
								n = e.photo;
							r["photo_" + i] = {
								name: "" + i,
								type: "image",
								x: 430,
								y: 1232 + 192 * t,
								image: n,
								width: 115,
								height: 115,
								fallbackWithImage: u.Z.AVATAR.KEY
							}
						})), r.wideFrame = {
							name: "wide-frame-share",
							type: "image",
							x: 0,
							y: 0,
							image: "./assets/wideframes/wide-frame-share.png",
							width: 1500,
							height: 2e3
						}, o.forEach((function(e, t) {
							var i = e.playerId,
								n = e.name,
								a = e.score;
							r["name_" + i] = {
								type: "text",
								x: 620,
								y: 1320 + 193 * t,
								font: "600 65px",
								text: n,
								fillStyle: "#b18151"
							}, r["score_" + i] = {
								type: "text",
								x: 1e3,
								y: 1320 + 193 * t,
								font: "600 65px",
								text: a,
								fillStyle: "#b18151"
							}
						})), r
					},
					C = function() {
						return function() {
							var e = (0, n.Z)(r().mark((function e(t, i) {
								var n, a, s, o, h, u, p, m, f, y, b;
								return r().wrap((function(e) {
									for (;;) switch (e.prev = e.next) {
										case 0:
											return n = window.game, a = n.player, s = n.analytics, o = n.facebook, h = n.globalScene, e.prev = 1, h.screen.open(d.o4.NOTIFY_SCREEN, {
												message: "Loading...",
												loading: !0
											}), u = i(), e.next = 6, w(u);
										case 6:
											return p = e.sent, v(p), m = a.getPlayer(), f = m.playerId, y = m.name, b = m.photo, e.next = 11, o.shareAsync({
												text: "Pheww, a great match!",
												intent: "SHARE",
												image: p || "",
												data: {
													playerId: f,
													playerName: y,
													playerPhoto: b,
													type: c.W6
												}
											});
										case 11:
											s.event(l._.SHARE, {
												share_content_type: "MatchResult",
												success: !0
											}), e.next = 18;
											break;
										case 14:
											e.prev = 14, e.t0 = e.catch(1), s.event(l._.SHARE, {
												share_content_type: "MatchResult",
												success: !1
											}), (0, g.tO)(e.t0);
										case 18:
											return e.prev = 18, h.screen.close(d.o4.NOTIFY_SCREEN), e.finish(18);
										case 21:
										case "end":
											return e.stop()
									}
								}), e, null, [
									[1, 14, 18, 21]
								])
							})));
							return function(t, i) {
								return e.apply(this, arguments)
							}
						}()
					},
					w = function() {
						var e = (0, n.Z)(r().mark((function e(t) {
							var i, n, a, s, o, l, c, h, u, d, p, g, v, y, b, E, T, A;
							return r().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										if (i = window.game, n = i.player, a = i.globalScene, s = (0, f.Jy)(t), o = n.getPlayer(), l = o.photo, c = o.playerId, h = (0, m.oN)(t), u = h.playerId, d = h.photo, p = (0, m.pP)(t, {
												playerId: c
											}), g = (0, m.zQ)(t, {
												opponentId: u
											}), v = s[c] || {}, y = v.score, b = s[u] || {}, E = b.score, T = P({
												playerId: c,
												playerPhoto: l,
												playerScore: y,
												opponentId: u,
												opponentPhoto: d,
												opponentScore: E,
												isPlayerFinished: p,
												isOpponentFinished: g
											})) {
											e.next = 12;
											break
										}
										return e.abrupt("return");
									case 12:
										return A = {
											name: "share-game-result",
											width: 952,
											height: 492,
											renderOptions: T
										}, e.next = 15, a.frameCapture.capture(A);
									case 15:
										return e.abrupt("return", e.sent);
									case 16:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}(),
					B = function() {
						var e = (0, n.Z)(r().mark((function e(t) {
							var i, n, a, s, o, l, c, h, u, d, p, g, v, y, b;
							return r().wrap((function(e) {
								for (;;) switch (e.prev = e.next) {
									case 0:
										if (i = window.game, n = i.player, a = i.globalScene, s = (0, f.Jy)(t), o = n.getPlayer(), l = o.photo, c = o.playerId, h = (0, m.Me)(t), u = h.playerId, d = h.photo, p = h.score, g = s[c] || {}, v = g.score, y = I({
												playerId: c,
												playerPhoto: l,
												playerScore: v,
												opponentId: u,
												opponentPhoto: d,
												opponentScore: p
											})) {
											e.next = 9;
											break
										}
										return e.abrupt("return");
									case 9:
										return b = {
											name: "share-group-match-result",
											width: 952,
											height: 492,
											renderOptions: y
										}, e.next = 12, a.frameCapture.capture(b);
									case 12:
										return e.abrupt("return", e.sent);
									case 13:
									case "end":
										return e.stop()
								}
							}), e)
						})));
						return function(t) {
							return e.apply(this, arguments)
						}
					}(),
					I = function(e) {
						var t = e.playerId,
							i = void 0 === t ? "10" : t,
							n = e.playerPhoto,
							a = void 0 === n ? "" : n,
							s = e.playerScore,
							o = void 0 === s ? 0 : s,
							r = e.opponentId,
							l = void 0 === r ? "20" : r,
							c = e.opponentPhoto,
							h = void 0 === c ? "" : c,
							d = e.opponentScore,
							p = void 0 === d ? 0 : d;
						if ("string" !== typeof i) return null;
						if ("string" !== typeof a) return null;
						if ("number" !== typeof o) return null;
						if ("string" !== typeof l) return null;
						if ("string" !== typeof h) return null;
						if ("number" !== typeof p) return null;
						var m = {
							leftPhoto: {
								name: "" + i,
								type: "image",
								x: 74,
								y: 149,
								image: a,
								width: 151,
								height: 151,
								fallbackWithImage: u.Z.AVATAR.KEY
							},
							rightPhoto: {
								name: "" + l,
								type: "image",
								x: 728,
								y: 152,
								image: h,
								width: 151,
								height: 151,
								fallbackWithImage: u.Z.AVATAR.KEY
							},
							wideFrame: {
								name: "wide-frame-game-result",
								type: "image",
								x: 0,
								y: 0,
								image: "./assets/wideframes/wide-frame-game-result.png",
								width: 952,
								height: 492
							},
							crown: {
								name: "crown-icon",
								type: "image",
								x: 18,
								y: 72,
								image: "./assets/images/others/crown-icon.png",
								width: 114,
								height: 115
							}
						};
						return m.leftPhoto = {
							name: "" + i,
							type: "image",
							x: 74,
							y: 149,
							image: a,
							width: 151,
							height: 151,
							fallbackWithImage: u.Z.AVATAR.KEY
						}, m.rightPhoto = {
							name: "" + l,
							type: "image",
							x: 728,
							y: 153,
							image: h,
							width: 151,
							height: 151,
							fallbackWithImage: u.Z.AVATAR.KEY
						}, m.leftScoreShadow = {
							type: "text",
							x: 153,
							y: 444,
							font: "600 70px",
							fillStyle: "#c4683f",
							text: "" + o,
							textAlign: "center"
						}, m.leftScore = {
							type: "text",
							x: 153,
							y: 440,
							font: "600 70px",
							fillStyle: "#f2a62e",
							text: "" + o,
							textAlign: "center"
						}, m.rightScoreShadow = {
							type: "text",
							x: 803,
							y: 444,
							font: "600 70px",
							fillStyle: "#c4683f",
							text: "" + p,
							textAlign: "center"
						}, m.rightScore = {
							type: "text",
							x: 803,
							y: 440,
							font: "600 70px",
							fillStyle: "#f2a62e",
							text: "" + p,
							textAlign: "center"
						}, m
					},
					P = function(e) {
						var t = e.playerId,
							i = void 0 === t ? "10" : t,
							n = e.playerPhoto,
							a = void 0 === n ? "" : n,
							s = e.playerScore,
							o = void 0 === s ? 0 : s,
							r = e.opponentId,
							l = void 0 === r ? "20" : r,
							c = e.opponentPhoto,
							h = void 0 === c ? "" : c,
							d = e.opponentScore,
							p = void 0 === d ? 0 : d,
							m = e.isPlayerFinished,
							f = e.isOpponentFinished;
						if ("string" !== typeof i) return null;
						if ("string" !== typeof a) return null;
						if ("number" !== typeof o) return null;
						if ("string" !== typeof l) return null;
						if ("string" !== typeof h) return null;
						if ("number" !== typeof p) return null;
						if ("boolean" !== typeof m) return null;
						if ("boolean" !== typeof f) return null;
						var g = o === p,
							v = o > p ? i : l,
							y = o > p ? a : h,
							b = o > p ? l : i,
							E = o > p ? h : a,
							T = m || f,
							A = m && f,
							S = {
								leftPhoto: {
									name: "" + i,
									type: "image",
									x: 74,
									y: 149,
									image: a,
									width: 151,
									height: 151,
									fallbackWithImage: u.Z.AVATAR.KEY
								},
								rightPhoto: {
									name: "" + l,
									type: "image",
									x: 728,
									y: 152,
									image: h,
									width: 151,
									height: 151,
									fallbackWithImage: u.Z.AVATAR.KEY
								},
								wideFrame: {
									name: "wide-frame-game-result",
									type: "image",
									x: 0,
									y: 0,
									image: "./assets/wideframes/wide-frame-game-result.png",
									width: 952,
									height: 492
								}
							};
						return T && (S.leftScoreShadow = {
							type: "text",
							x: 153,
							y: 444,
							font: "600 70px",
							fillStyle: "#c4683f",
							text: m ? "" + o : "???",
							textAlign: "center"
						}, S.leftScore = {
							type: "text",
							x: 153,
							y: 440,
							font: "600 70px",
							fillStyle: "#f2a62e",
							text: m ? "" + o : "???",
							textAlign: "center"
						}, S.rightScoreShadow = {
							type: "text",
							x: 803,
							y: 444,
							font: "600 70px",
							fillStyle: "#c4683f",
							text: f ? "" + p : "???",
							textAlign: "center"
						}, S.rightScore = {
							type: "text",
							x: 803,
							y: 440,
							font: "600 70px",
							fillStyle: "#f2a62e",
							text: f ? "" + p : "???",
							textAlign: "center"
						}), A && (g || (S.crown = {
							name: "crown-icon",
							type: "image",
							x: 18,
							y: 72,
							image: "./assets/images/others/crown-icon.png",
							width: 114,
							height: 115
						}), S.leftPhoto = {
							name: "" + v,
							type: "image",
							x: 74,
							y: 149,
							image: y,
							width: 151,
							height: 151,
							fallbackWithImage: u.Z.AVATAR.KEY
						}, S.rightPhoto = {
							name: "" + b,
							type: "image",
							x: 728,
							y: 155,
							image: E,
							width: 151,
							height: 151,
							fallbackWithImage: u.Z.AVATAR.KEY
						}, S.leftScoreShadow = {
							type: "text",
							x: 155,
							y: 444,
							font: "600 70px",
							fillStyle: "#c4683f",
							text: "" + (o > p ? o : p),
							textAlign: "center"
						}, S.leftScore = {
							type: "text",
							x: 153,
							y: 440,
							font: "600 70px",
							fillStyle: "#f2a62e",
							text: "" + (o > p ? o : p),
							textAlign: "center"
						}, S.rightScoreShadow = {
							type: "text",
							x: 803,
							y: 444,
							font: "600 70px",
							fillStyle: "#c4683f",
							text: "" + (o > p ? p : o),
							textAlign: "center"
						}, S.rightScore = {
							type: "text",
							x: 803,
							y: 440,
							font: "600 70px",
							fillStyle: "#f2a62e",
							text: "" + (o > p ? p : o),
							textAlign: "center"
						}), S
					}
			},
			75252: function(e, t, i) {
				"use strict";
				i.d(t, {
					f: function() {
						return a
					},
					F: function() {
						return s
					}
				});
				var n = i(20573),
					a = (0, n.P1)([function(e) {
						return e.context
					}], (function(e) {
						return e
					})),
					s = (0, n.P1)([function(e) {
						return e.context.currentGameMode
					}], (function(e) {
						return e
					}))
			},
			39482: function(e, t, i) {
				"use strict";
				i.d(t, {
					qZ: function() {
						return r
					},
					Gm: function() {
						return l
					},
					F0: function() {
						return c
					}
				});
				var n = i(93476),
					a = i.n(n),
					s = i(3649),
					o = i.n(s),
					r = function(e) {
						return new(a())((function(t) {
							return setTimeout(t, e)
						}))
					},
					l = function(e) {
						var t = new Date(e),
							i = new Date;
						return t.getDate() === i.getDate() && t.getMonth() === i.getMonth() && t.getFullYear() === i.getFullYear()
					},
					c = function(e, t) {
						void 0 === t && (t = !0);
						var i = new Date(e).toISOString();
						return t ? o()(i).call(i, 11, -5) : o()(i).call(i, 14, -5)
					}
			},
			93397: function(e, t, i) {
				"use strict";
				i.d(t, {
					j6: function() {
						return v
					},
					sw: function() {
						return b
					},
					Tv: function() {
						return E
					},
					R0: function() {
						return A
					},
					tO: function() {
						return S
					}
				});
				var n = i(70268),
					a = i(89400),
					s = i.n(a),
					o = (i(59340), i(81643)),
					r = i.n(o),
					l = ["player", "match"],
					c = "https://142ba5db21bd489bb4053a17b1115a68@o4504054503964672.ingest.sentry.io/4504054505144320",
					h = function(e, t) {
						try {
							if (m(e, t)) return null;
							if (u(), p(t)) {
								var i = d(e, t);
								if (i) return i
							}
							return e
						} catch (n) {
							return null
						}
					},
					u = function() {
						try {
							if (!GameCore.Utils.Object.hasOwn(window, "game")) return;
							if (!GameCore.Utils.Object.hasOwn(window.game, "storage")) return;
							if (!GameCore.Utils.Object.hasOwn(window.game.storage, "getState")) return;
							var e = (0, window.game.storage.getState)() || {},
								t = e.player,
								i = e.match,
								a = (0, n.Z)(e, l);
							window.Sentry.setExtra("player", t), window.Sentry.setExtra("match", i), window.Sentry.setExtra("other", a)
						} catch (s) {}
					},
					d = function(e, t) {
						var i;
						if (!t) return null;
						var n = Phaser.Utils.Objects.DeepCopy(e),
							a = ((null == (i = n.exception) ? void 0 : s()(i)) || [])[0];
						if (!a) return null;
						var o = t.originalException.code;
						return o ? (a.type = o, n) : null
					},
					p = function(e) {
						if (!e) return !1;
						if (!e.originalException) return !1;
						return "Non-Error promise rejection captured with keys: code, message" === e.originalException.message
					},
					m = function(e, t) {
						try {
							if (!t) return !1;
							var i = !1,
								n = t.originalException;
							return n instanceof Object && (i = f(n) || g(n)), i
						} catch (a) {
							return !1
						}
					},
					f = function(e) {
						try {
							if (GameCore.Utils.Object.hasOwn(e, "code")) {
								var t = e.code,
									i = GameCore.Configs.Sentry.errorCodes,
									n = i.accepted,
									a = i.ignored;
								if ("string" === typeof t) {
									if (r()(n).call(n, t) >= 0) return !1;
									if (r()(a).call(a, t) >= 0) return !0
								}
							}
							return !1
						} catch (s) {
							return !1
						}
					},
					g = function(e) {
						try {
							if (GameCore.Utils.Object.hasOwn(e, "message")) {
								var t = e.message,
									i = GameCore.Configs.Sentry.errorMessages,
									n = i.accepted,
									a = i.ignored;
								if ("string" === typeof t) {
									if (r()(n).call(n, t) >= 0) return !1;
									if (r()(a).call(a, t) >= 0) return !0
								}
							}
							return !1
						} catch (s) {
							return !1
						}
					},
					v = function() {
						var e = setInterval((function() {
							if (window.Sentry) {
								clearInterval(e);
								var t = {
									debug: !0,
									dsn: c,
									environment: "production",
									release: "24",
									sampleRate: 1,
									beforeSend: h,
									ignoreErrors: y(),
									beforeBreadcrumb: function(e) {
										return "ui.click" === e.category ? null : e
									}
								};
								window.Sentry.init(t)
							}
						}), 100)
					},
					y = function() {
						return []
					},
					b = function(e, t) {
						window.Sentry && window.Sentry.addBreadcrumb({
							category: e,
							message: t
						})
					},
					E = function(e) {
						window.Sentry && window.Sentry.setUser(e)
					},
					T = function(e) {
						window.Sentry && window.Sentry.captureException(e)
					},
					A = function(e, t) {
						e && window.Sentry.withScope((function(i) {
							i.setExtras(t), T(e)
						}))
					},
					S = function(e) {
						e && T(e)
					}
			},
			4175: function(e, t, i) {
				"use strict";
				var n = i(26729),
					a = new(i.n(n)());
				t.Z = a
			},
			97325: function(e, t, i) {
				"use strict";
				i.d(t, {
					t: function() {
						return n
					},
					B: function() {
						return a
					}
				});
				var n = function() {
						return GameCore.Configs.Game.ForcePixelRatio ? GameCore.Configs.Game.ForcePixelRatio : GameCore.Utils.Device.isDesktop() || GameCore.Utils.Device.pixelRatio() > 1 ? 2 : 1
					},
					a = function() {
						return "./resource/v24/"
					}
			},
			36308: function(e) {
				"use strict";
				e.exports = JSON.parse('[{"playerId":"38","gender":"female","name":"Loretta Cooper","difficult":1.5},{"playerId":"10","gender":"female","name":"Alice Wilson","difficult":1.1},{"playerId":"42","gender":"female","name":"Myrtie Mathis","difficult":1.2},{"playerId":"15","gender":"female","name":"Rosa Estrada","difficult":1.3},{"playerId":"9","gender":"male","name":"Dylan Riley","difficult":0.8},{"playerId":"29","gender":"male","name":"Joe Robinson","difficult":1.4},{"playerId":"5","gender":"male","name":"Roger McBride","difficult":0.7},{"playerId":"22","gender":"male","name":"Lester Reeves","difficult":0.3},{"playerId":"21","gender":"female","name":"Eva Guzman","difficult":1.2},{"playerId":"6","gender":"female","name":"Lelia Erickson","difficult":1.3},{"playerId":"47","gender":"male","name":"Dean Holloway","difficult":0.8},{"playerId":"4","gender":"female","name":"Amelia Freeman","difficult":1.1},{"playerId":"11","gender":"female","name":"Viola Ferguson","difficult":1},{"playerId":"72","gender":"male","name":"Todd Garner","difficult":0.7},{"playerId":"28","gender":"female","name":"Matilda Harris","difficult":0.6},{"playerId":"14","gender":"male","name":"Alex Hart","difficult":0.3},{"playerId":"64","gender":"male","name":"Ethan Gilbert","difficult":1.3},{"playerId":"67","gender":"male","name":"Gordon Craig","difficult":1.2},{"playerId":"25","gender":"female","name":"Nora Munoz","difficult":1.1},{"playerId":"36","gender":"female","name":"Dora Herrera","difficult":0.6},{"playerId":"43","gender":"female","name":"Lida Roberts","difficult":0.6},{"playerId":"71","gender":"male","name":"Kenneth Holland","difficult":0.3},{"playerId":"38","gender":"male","name":"Russell McGee","difficult":0.7},{"playerId":"27","gender":"female","name":"Etta Miller","difficult":0.6},{"playerId":"45","gender":"female","name":"Abbie Weber","difficult":1.5},{"playerId":"47","gender":"female","name":"Etta Ryan","difficult":0.9},{"playerId":"69","gender":"male","name":"Christian Tran","difficult":0.5},{"playerId":"20","gender":"female","name":"Victoria Rivera","difficult":0.6},{"playerId":"48","gender":"female","name":"Blanche Bowen","difficult":0.9},{"playerId":"50","gender":"female","name":"Stella Montgomery","difficult":0.5},{"playerId":"46","gender":"male","name":"James Buchanan","difficult":1.3},{"playerId":"26","gender":"female","name":"Lola Massey","difficult":1.4},{"playerId":"28","gender":"male","name":"Fred Sutton","difficult":0.7},{"playerId":"60","gender":"female","name":"Victoria Munoz","difficult":0.7},{"playerId":"13","gender":"female","name":"Lois Powell","difficult":1.6},{"playerId":"10","gender":"male","name":"Oscar Houston","difficult":1.6},{"playerId":"61","gender":"male","name":"Alfred Ramos","difficult":1.3},{"playerId":"55","gender":"female","name":"Jean Johnson","difficult":1.1},{"playerId":"4","gender":"male","name":"Alejandro Hernandez","difficult":0.6},{"playerId":"44","gender":"male","name":"Tony Powers","difficult":1.5},{"playerId":"21","gender":"male","name":"Jesus Norton","difficult":0.7},{"playerId":"70","gender":"male","name":"Clyde Wagner","difficult":1.2},{"playerId":"8","gender":"male","name":"Connor Santiago","difficult":1},{"playerId":"17","gender":"male","name":"Douglas Miller","difficult":1.5},{"playerId":"46","gender":"female","name":"Bernice Pearson","difficult":1.3},{"playerId":"23","gender":"male","name":"Christopher Ortiz","difficult":1.3},{"playerId":"50","gender":"male","name":"Travis Buchanan","difficult":0.5},{"playerId":"20","gender":"male","name":"Fred Cannon","difficult":0.3},{"playerId":"16","gender":"male","name":"Charles Perry","difficult":0.9},{"playerId":"23","gender":"female","name":"Etta Herrera","difficult":1.5},{"playerId":"40","gender":"male","name":"Sean Salazar","difficult":1.3},{"playerId":"57","gender":"female","name":"Lura Hammond","difficult":1.3},{"playerId":"39","gender":"female","name":"Adelaide Douglas","difficult":0.4},{"playerId":"5","gender":"female","name":"Alma Stephens","difficult":1.2},{"playerId":"37","gender":"male","name":"Luke Thornton","difficult":0.7},{"playerId":"6","gender":"male","name":"Isaac Hansen","difficult":1.2},{"playerId":"24","gender":"male","name":"Antonio Massey","difficult":0.5},{"playerId":"29","gender":"female","name":"Caroline McKinney","difficult":1.3},{"playerId":"34","gender":"male","name":"Bobby Stevenson","difficult":0.9},{"playerId":"16","gender":"female","name":"Mildred King","difficult":0.5},{"playerId":"7","gender":"male","name":"Bradley Malone","difficult":0.5},{"playerId":"2","gender":"male","name":"Calvin Patton","difficult":1.5},{"playerId":"45","gender":"male","name":"Edgar Vargas","difficult":1.5},{"playerId":"42","gender":"male","name":"Alfred Wheeler","difficult":1.7},{"playerId":"48","gender":"male","name":"Anthony Watson","difficult":0.4},{"playerId":"27","gender":"male","name":"Harry Reese","difficult":1.6},{"playerId":"33","gender":"female","name":"Rosetta Reyes","difficult":1},{"playerId":"63","gender":"male","name":"Russell Murphy","difficult":0.7},{"playerId":"59","gender":"female","name":"Louisa Hall","difficult":0.8},{"playerId":"56","gender":"female","name":"Christina Hawkins","difficult":1.4},{"playerId":"52","gender":"male","name":"Jeremy Wilkins","difficult":1.3},{"playerId":"41","gender":"male","name":"Tyler Owens","difficult":0.6},{"playerId":"39","gender":"male","name":"Christopher Baldwin","difficult":0.6},{"playerId":"18","gender":"male","name":"Clayton Sanchez","difficult":0.5},{"playerId":"13","gender":"male","name":"Thomas Strickland","difficult":1.2},{"playerId":"68","gender":"male","name":"Herbert Hayes","difficult":0.5},{"playerId":"24","gender":"female","name":"Christine Beck","difficult":1.5},{"playerId":"31","gender":"male","name":"Alan McCarthy","difficult":0.6},{"playerId":"19","gender":"female","name":"Georgie Logan","difficult":0.6},{"playerId":"62","gender":"male","name":"Herbert Bass","difficult":0.9},{"playerId":"56","gender":"male","name":"Danny Drake","difficult":1.4},{"playerId":"12","gender":"male","name":"Mike Burton","difficult":1.5},{"playerId":"60","gender":"male","name":"Lester Thomas","difficult":0.4},{"playerId":"44","gender":"female","name":"Lina Matthews","difficult":1.1},{"playerId":"31","gender":"female","name":"Myrtie Holloway","difficult":1.8},{"playerId":"49","gender":"female","name":"Nell Burns","difficult":1},{"playerId":"33","gender":"male","name":"Trevor Gonzalez","difficult":0.6},{"playerId":"58","gender":"male","name":"Harvey Munoz","difficult":1.7},{"playerId":"37","gender":"female","name":"Eula Griffin","difficult":1.2},{"playerId":"8","gender":"female","name":"Hattie Becker","difficult":1.5},{"playerId":"54","gender":"female","name":"Alma Howard","difficult":1.2},{"playerId":"19","gender":"male","name":"Mitchell Bishop","difficult":1.1},{"playerId":"58","gender":"female","name":"Maude Burgess","difficult":1.4},{"playerId":"34","gender":"female","name":"Eula Copeland","difficult":1.3},{"playerId":"32","gender":"male","name":"Carl Wolfe","difficult":1},{"playerId":"35","gender":"male","name":"Kenneth McKinney","difficult":0.9},{"playerId":"41","gender":"female","name":"Caroline Morris","difficult":1},{"playerId":"1","gender":"male","name":"Bill Silva","difficult":1.3},{"playerId":"57","gender":"male","name":"Lawrence Hanson","difficult":0.4},{"playerId":"17","gender":"female","name":"Sallie Stevens","difficult":0.9},{"playerId":"74","gender":"male","name":"Christopher Bishop","difficult":0.4},{"playerId":"35","gender":"female","name":"Julia Gibbs","difficult":0.5},{"playerId":"2","gender":"female","name":"Frances Boyd","difficult":0.4},{"playerId":"65","gender":"male","name":"Eric Howell","difficult":0.7},{"playerId":"54","gender":"male","name":"Jeremiah Ruiz","difficult":1.6},{"playerId":"1","gender":"female","name":"Essie Tate","difficult":0.3},{"playerId":"53","gender":"female","name":"Jeanette Williamson","difficult":0.5},{"playerId":"55","gender":"male","name":"Thomas Holmes","difficult":0.6},{"playerId":"49","gender":"male","name":"Erik Barber","difficult":0.8},{"playerId":"14","gender":"female","name":"Myrtie Valdez","difficult":1.5},{"playerId":"3","gender":"female","name":"Madge Bates","difficult":1.7},{"playerId":"7","gender":"female","name":"Marion Conner","difficult":1.8},{"playerId":"25","gender":"male","name":"Chester Johnson","difficult":1.2},{"playerId":"59","gender":"male","name":"Jerry Ray","difficult":0.3},{"playerId":"32","gender":"female","name":"Ophelia Hardy","difficult":0.9},{"playerId":"52","gender":"female","name":"Jessie Morris","difficult":1.4},{"playerId":"51","gender":"male","name":"Nathan Hopkins","difficult":1.7},{"playerId":"51","gender":"female","name":"Nell Higgins","difficult":0.9},{"playerId":"66","gender":"male","name":"Lester Strickland","difficult":1.2},{"playerId":"73","gender":"male","name":"Blake Park","difficult":0.7},{"playerId":"75","gender":"male","name":"Wesley Colon","difficult":1.5},{"playerId":"22","gender":"female","name":"Augusta Barker","difficult":1.4},{"playerId":"36","gender":"male","name":"Ivan Lamb","difficult":1.3},{"playerId":"40","gender":"female","name":"Sylvia Neal","difficult":0.9},{"playerId":"11","gender":"male","name":"Ethan Herrera","difficult":0.6},{"playerId":"15","gender":"male","name":"Jeffrey Jackson","difficult":0.3},{"playerId":"26","gender":"male","name":"Cory Tucker","difficult":1.2},{"playerId":"12","gender":"female","name":"Sophia Rios","difficult":0.3},{"playerId":"18","gender":"female","name":"Verna Cooper","difficult":0.9},{"playerId":"9","gender":"female","name":"Lily Copeland","difficult":1.7},{"playerId":"30","gender":"female","name":"Lillian Murray","difficult":0.3},{"playerId":"43","gender":"male","name":"Gordon Manning","difficult":0.9},{"playerId":"53","gender":"male","name":"Julian Simmons","difficult":1.1},{"playerId":"30","gender":"male","name":"Johnny Fernandez","difficult":0.3},{"playerId":"3","gender":"male","name":"Daniel Reed","difficult":0.9}]')
			}
		},
		t = {};

	function i(n) {
		var a = t[n];
		if (void 0 !== a) return a.exports;
		var s = t[n] = {
			id: n,
			loaded: !1,
			exports: {}
		};
		return e[n].call(s.exports, s, s.exports, i), s.loaded = !0, s.exports
	}
	i.m = e, i.amdO = {},
		function() {
			var e = [];
			i.O = function(t, n, a, s) {
				if (!n) {
					var o = 1 / 0;
					for (h = 0; h < e.length; h++) {
						n = e[h][0], a = e[h][1], s = e[h][2];
						for (var r = !0, l = 0; l < n.length; l++)(!1 & s || o >= s) && Object.keys(i.O).every((function(e) {
							return i.O[e](n[l])
						})) ? n.splice(l--, 1) : (r = !1, s < o && (o = s));
						if (r) {
							e.splice(h--, 1);
							var c = a();
							void 0 !== c && (t = c)
						}
					}
					return t
				}
				s = s || 0;
				for (var h = e.length; h > 0 && e[h - 1][2] > s; h--) e[h] = e[h - 1];
				e[h] = [n, a, s]
			}
		}(), i.n = function(e) {
			var t = e && e.__esModule ? function() {
				return e.default
			} : function() {
				return e
			};
			return i.d(t, {
				a: t
			}), t
		}, i.d = function(e, t) {
			for (var n in t) i.o(t, n) && !i.o(e, n) && Object.defineProperty(e, n, {
				enumerable: !0,
				get: t[n]
			})
		}, i.f = {}, i.e = function(e) {
			return Promise.all(Object.keys(i.f).reduce((function(t, n) {
				return i.f[n](e, t), t
			}), []))
		}, i.u = function(e) {
			return e + "." + {
				7: "349bfff1a2d9c0d58697",
				8: "699508d44728e93fbf75",
				114: "a3883121d6bda12065ce",
				227: "c7ee792b5a7e0c61c765",
				311: "fa638406759306b35e28",
				315: "7964705cd00e9c8068bf",
				357: "c860b0b11bf510386bd8",
				498: "1e74b09664e3284aac4e",
				516: "eb755cb17900961fb4ef",
				583: "772890e4054c7c7ca776",
				658: "a85df9dbd0013b8ded67",
				716: "771091a5e3c284ba9cd3",
				729: "02a320af540101a1d0e7",
				817: "9f15d2ac817ffefe3ea2",
				883: "123fd30324fb332c4532"
			} [e] + ".js"
		}, i.g = function() {
			if ("object" === typeof globalThis) return globalThis;
			try {
				return this || new Function("return this")()
			} catch (e) {
				if ("object" === typeof window) return window
			}
		}(), i.hmd = function(e) {
			return (e = Object.create(e)).children || (e.children = []), Object.defineProperty(e, "exports", {
				enumerable: !0,
				set: function() {
					throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: " + e.id)
				}
			}), e
		}, i.o = function(e, t) {
			return Object.prototype.hasOwnProperty.call(e, t)
		},
		function() {
			var e = {},
				t = "game-core:";
			i.l = function(n, a, s, o) {
				if (e[n]) e[n].push(a);
				else {
					var r, l;
					if (void 0 !== s)
						for (var c = document.getElementsByTagName("script"), h = 0; h < c.length; h++) {
							var u = c[h];
							if (u.getAttribute("src") == n || u.getAttribute("data-webpack") == t + s) {
								r = u;
								break
							}
						}
					r || (l = !0, (r = document.createElement("script")).charset = "utf-8", r.timeout = 120, i.nc && r.setAttribute("nonce", i.nc), r.setAttribute("data-webpack", t + s), r.src = n), e[n] = [a];
					var d = function(t, i) {
							r.onerror = r.onload = null, clearTimeout(p);
							var a = e[n];
							if (delete e[n], r.parentNode && r.parentNode.removeChild(r), a && a.forEach((function(e) {
									return e(i)
								})), t) return t(i)
						},
						p = setTimeout(d.bind(null, void 0, {
							type: "timeout",
							target: r
						}), 12e4);
					r.onerror = d.bind(null, r.onerror), r.onload = d.bind(null, r.onload), l && document.head.appendChild(r)
				}
			}
		}(), i.r = function(e) {
			"undefined" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
				value: "Module"
			}), Object.defineProperty(e, "__esModule", {
				value: !0
			})
		},
		function() {
			var e;
			i.g.importScripts && (e = i.g.location + "");
			var t = i.g.document;
			if (!e && t && (t.currentScript && (e = t.currentScript.src), !e)) {
				var n = t.getElementsByTagName("script");
				n.length && (e = n[n.length - 1].src)
			}
			if (!e) throw new Error("Automatic publicPath is not supported in this browser");
			e = e.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/"), i.p = e
		}(),
		function() {
			var e = {
				757: 0
			};
			i.f.j = function(t, n) {
				var a = i.o(e, t) ? e[t] : void 0;
				if (0 !== a)
					if (a) n.push(a[2]);
					else {
						var s = new Promise((function(i, n) {
							a = e[t] = [i, n]
						}));
						n.push(a[2] = s);
						var o = i.p + i.u(t),
							r = new Error;
						i.l(o, (function(n) {
							if (i.o(e, t) && (0 !== (a = e[t]) && (e[t] = void 0), a)) {
								var s = n && ("load" === n.type ? "missing" : n.type),
									o = n && n.target && n.target.src;
								r.message = "Loading chunk " + t + " failed.\n(" + s + ": " + o + ")", r.name = "ChunkLoadError", r.type = s, r.request = o, a[1](r)
							}
						}), "chunk-" + t, t)
					}
			}, i.O.j = function(t) {
				return 0 === e[t]
			};
			var t = function(t, n) {
					var a, s, o = n[0],
						r = n[1],
						l = n[2],
						c = 0;
					if (o.some((function(t) {
							return 0 !== e[t]
						}))) {
						for (a in r) i.o(r, a) && (i.m[a] = r[a]);
						if (l) var h = l(i)
					}
					for (t && t(n); c < o.length; c++) s = o[c], i.o(e, s) && e[s] && e[s][0](), e[s] = 0;
					return i.O(h)
				},
				n = self.webpackChunkgame_core = self.webpackChunkgame_core || [];
			n.forEach(t.bind(null, 0)), n.push = t.bind(null, n.push.bind(n))
		}(), i.O(void 0, [216, 630, 542], (function() {
			return i(57147)
		})), i.O(void 0, [216, 630, 542], (function() {
			return i(63367)
		})), i.O(void 0, [216, 630, 542], (function() {
			return i(16977)
		})), i.O(void 0, [216, 630, 542], (function() {
			return i(47136)
		})), i.O(void 0, [216, 630, 542], (function() {
			return i(6649)
		})), i.O(void 0, [216, 630, 542], (function() {
			return i(64413)
		}));
	var n = i.O(void 0, [216, 630, 542], (function() {
		return i(33262)
	}));
	n = i.O(n)
})();